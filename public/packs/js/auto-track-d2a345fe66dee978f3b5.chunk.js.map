{"version":3,"sources":["webpack:///./node_modules/@june-so/analytics-next/dist/pkg/core/auto-track.js"],"names":["link","links","event","properties","_this","this","Element","toArray","forEach","el","addEventListener","elementEvent","_a","_b","ev","Function","props","href","getAttribute","getAttributeNS","getElementsByTagName","trackEvent","track","settings","timeout","element","target","linkNewTab","typedEvent","ctrlKey","shiftKey","metaKey","button","userNewTab","preventDefault","returnValue","catch","console","error","then","window","location","form","forms","HTMLFormElement","TypeError","handler","submit","$","jQuery","Zepto"],"mappings":"0FAAA,8FAqBO,SAASA,EAAKC,EAAOC,EAAOC,GACjC,IAAIC,EAAQC,KAIZ,OAAKJ,IAIDA,aAAiBK,QACR,CAACL,GACH,YAAaA,EACXA,EAAMM,UAENN,GAGJO,SAAQ,SAAUC,GACzBA,EAAGC,iBAAiB,SAAS,SAAUC,GACrC,IAAIC,EAAIC,EAEJC,EAAKZ,aAAiBa,SAAWb,EAAMO,GAAMP,EAC7Cc,EAAQb,aAAsBY,SAAWZ,EAAWM,GAAMN,EAC1Dc,EAAOR,EAAGS,aAAa,SAAWT,EAAGU,eAAe,+BAAgC,SAAWV,EAAGS,aAAa,gBAA6D,QAA1CN,EAAKH,EAAGW,qBAAqB,KAAK,UAAuB,IAAPR,OAAgB,EAASA,EAAGM,aAAa,SAC7NG,EAAa,YAASjB,EAAMkB,MAAMR,EAAIE,GAA0C,QAAjCH,EAAKT,EAAMmB,SAASC,eAA4B,IAAPX,EAAgBA,EAAK,MAhCvH,SAAoBY,EAASR,GAC3B,QAAuB,WAAnBQ,EAAQC,SAAuBT,IAiC1BU,CAAWlB,EAAIQ,IA7C1B,SAAoBf,GAClB,IAAI0B,EAAa1B,EAEjB,SAAI0B,EAAWC,SAAWD,EAAWE,UAAYF,EAAWG,SAAWH,EAAWI,QAA+B,GAArBJ,EAAWI,QA0CrEC,CAAWtB,IACnCM,IACFN,EAAauB,eAAiBvB,EAAauB,iBAAmBvB,EAAawB,aAAc,EACzFd,EAAWe,MAAMC,QAAQC,OAAOC,MAAK,WACnCC,OAAOC,SAASxB,KAAOA,KACtBmB,MAAMC,QAAQC,WAGpB,MAEEjC,MA9BEA,KAgCJ,SAASqC,EAAKC,EAAOzC,EAAOC,GACjC,IAAIC,EAAQC,KAGZ,OAAKsC,GACDA,aAAiBC,kBAAiBD,EAAQ,CAACA,IAChCA,EACNnC,SAAQ,SAAUC,GACzB,KAAMA,aAAcH,SAAU,MAAM,IAAIuC,UAAU,mDAElD,IAAIC,EAAU,SAAiBnC,GAC7B,IAAIC,EAEJD,EAAauB,eAAiBvB,EAAauB,iBAAmBvB,EAAawB,aAAc,EACzF,IAAIrB,EAAKZ,aAAiBa,SAAWb,EAAMO,GAAMP,EAC7Cc,EAAQb,aAAsBY,SAAWZ,EAAWM,GAAMN,EAC7C,YAASC,EAAMkB,MAAMR,EAAIE,GAA0C,QAAjCJ,EAAKR,EAAMmB,SAASC,eAA4B,IAAPZ,EAAgBA,EAAK,KACtGwB,MAAMC,QAAQC,OAAOC,MAAK,WACnC9B,EAAGsC,YACFX,MAAMC,QAAQC,QAKfU,EAAIR,OAAOS,QAAUT,OAAOU,MAE5BF,EACFA,EAAEvC,GAAIsC,OAAOD,GAGbrC,EAAGC,iBAAiB,SAAUoC,GAAS,MAGpCzC,MA7BYA","file":"js/auto-track-d2a345fe66dee978f3b5.chunk.js","sourcesContent":["import { pTimeout } from './callback'; // Check if a user is opening the link in a new tab\n\nfunction userNewTab(event) {\n  var typedEvent = event;\n\n  if (typedEvent.ctrlKey || typedEvent.shiftKey || typedEvent.metaKey || typedEvent.button && typedEvent.button == 1) {\n    return true;\n  }\n\n  return false;\n} // Check if the link opens in new tab\n\n\nfunction linkNewTab(element, href) {\n  if (element.target === '_blank' && href) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function link(links, event, properties) {\n  var _this = this;\n\n  var elements = []; // always arrays, handles jquery\n\n  if (!links) {\n    return this;\n  }\n\n  if (links instanceof Element) {\n    elements = [links];\n  } else if ('toArray' in links) {\n    elements = links.toArray();\n  } else {\n    elements = links;\n  }\n\n  elements.forEach(function (el) {\n    el.addEventListener('click', function (elementEvent) {\n      var _a, _b;\n\n      var ev = event instanceof Function ? event(el) : event;\n      var props = properties instanceof Function ? properties(el) : properties;\n      var href = el.getAttribute('href') || el.getAttributeNS('http://www.w3.org/1999/xlink', 'href') || el.getAttribute('xlink:href') || ((_a = el.getElementsByTagName('a')[0]) === null || _a === void 0 ? void 0 : _a.getAttribute('href'));\n      var trackEvent = pTimeout(_this.track(ev, props), (_b = _this.settings.timeout) !== null && _b !== void 0 ? _b : 500);\n\n      if (!linkNewTab(el, href) && !userNewTab(elementEvent)) {\n        if (href) {\n          elementEvent.preventDefault ? elementEvent.preventDefault() : elementEvent.returnValue = false;\n          trackEvent.catch(console.error).then(function () {\n            window.location.href = href;\n          }).catch(console.error);\n        }\n      }\n    }, false);\n  });\n  return this;\n}\nexport function form(forms, event, properties) {\n  var _this = this; // always arrays, handles jquery\n\n\n  if (!forms) return this;\n  if (forms instanceof HTMLFormElement) forms = [forms];\n  var elements = forms;\n  elements.forEach(function (el) {\n    if (!(el instanceof Element)) throw new TypeError('Must pass HTMLElement to trackForm/trackSubmit.');\n\n    var handler = function handler(elementEvent) {\n      var _a;\n\n      elementEvent.preventDefault ? elementEvent.preventDefault() : elementEvent.returnValue = false;\n      var ev = event instanceof Function ? event(el) : event;\n      var props = properties instanceof Function ? properties(el) : properties;\n      var trackEvent = pTimeout(_this.track(ev, props), (_a = _this.settings.timeout) !== null && _a !== void 0 ? _a : 500);\n      trackEvent.catch(console.error).then(function () {\n        el.submit();\n      }).catch(console.error);\n    }; // Support the events happening through jQuery or Zepto instead of through\n    // the normal DOM API, because `el.submit` doesn't bubble up events...\n\n\n    var $ = window.jQuery || window.Zepto;\n\n    if ($) {\n      $(el).submit(handler);\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      el.addEventListener('submit', handler, false);\n    }\n  });\n  return this;\n}"],"sourceRoot":""}