{"version":3,"sources":["webpack:///./node_modules/@chatwoot/utils/dist/utils.esm.js","webpack:///./app/javascript/widget/components/PreChat/Form.vue?6727","webpack:///./app/javascript/widget/components/PreChat/Form.vue?e3ef","webpack:///./app/javascript/widget/components/PreChat/Form.vue?2abc","webpack:///./app/javascript/widget/views/PreChatForm.vue?912e","webpack:///app/javascript/widget/components/PreChat/Form.vue","webpack:///./app/javascript/widget/components/PreChat/Form.vue?3f24","webpack:///app/javascript/widget/views/PreChatForm.vue","webpack:///./app/javascript/widget/views/PreChatForm.vue?fc86","webpack:///./app/javascript/widget/components/PreChat/Form.vue","webpack:///./app/javascript/widget/components/PreChat/Form.vue?a786","webpack:///./app/javascript/widget/views/PreChatForm.vue","webpack:///./app/javascript/shared/components/Button.vue?23f7","webpack:///./app/javascript/shared/components/Button.vue?26c2","webpack:///app/javascript/shared/components/Button.vue","webpack:///./app/javascript/shared/components/Button.vue"],"names":["debounce","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","window","setTimeout","getContrastingTextColor","bgColor","color","replace","parseInt","slice","formatTime","timeInSeconds","formattedTime","minutes","Math","floor","seconds","hours","_minutes","days","_hours","trimContent","content","maxLength","ellipsis","trimmedContent","length","substring","api","__esModule","default","module","i","options","exports","locals","___CSS_LOADER_API_IMPORT___","push","_vm","this","_h","$createElement","_c","_self","staticClass","on","onSubmit","model","value","callback","$$v","formValues","expression","class","$dm","_v","_s","headerMessage","_e","_l","item","key","name","attrs","type","getLabel","getPlaceHolder","getValidation","getOptions","labelClass","inputClass","isPhoneE164OrEmpty","$t","email","required","getRequiredErrorMessage","hasActiveCampaign","widgetColor","textColor","isCreating","preChatFormOptions","disableContactFields","component","buttonClassName","style","disabled","onClick","_t"],"mappings":"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","file":"js/30-2ccf0463c890cce81c0c.chunk.js","sourcesContent":["import isToday from 'date-fns/isToday';\nimport isYesterday from 'date-fns/isYesterday'; // Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\n\n/**\r\n * @func Callback function to be called after delay\r\n * @delay Delay for debounce in ms\r\n * @immediate should execute immediately\r\n * @returns debounced callaback function\r\n */\n\nvar debounce = function debounce(func, wait, immediate) {\n  var timeout;\n  return function () {\n    var context = null;\n    var args = arguments;\n\n    var later = function later() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = window.setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n};\n/**\r\n * @name Get contrasting text color\r\n * @description Get contrasting text color from a text color\r\n * @param bgColor  Background color of text.\r\n * @returns contrasting text color\r\n */\n\n\nvar getContrastingTextColor = function getContrastingTextColor(bgColor) {\n  var color = bgColor.replace('#', '');\n  var r = parseInt(color.slice(0, 2), 16);\n  var g = parseInt(color.slice(2, 4), 16);\n  var b = parseInt(color.slice(4, 6), 16); // http://stackoverflow.com/a/3943023/112731\n\n  return r * 0.299 + g * 0.587 + b * 0.114 > 186 ? '#000000' : '#FFFFFF';\n};\n/**\r\n * @name Get formatted date\r\n * @description Get date in today, yesterday or any other date format\r\n * @param date  date\r\n * @param todayText  Today text\r\n * @param yesterdayText  Yesterday text\r\n * @returns formatted date\r\n */\n\n\nvar formatDate = function formatDate(_ref) {\n  var date = _ref.date,\n      todayText = _ref.todayText,\n      yesterdayText = _ref.yesterdayText;\n  var dateValue = new Date(date);\n  if (isToday(dateValue)) return todayText;\n  if (isYesterday(dateValue)) return yesterdayText;\n  return date;\n};\n/**\r\n * @name formatTime\r\n * @description Format time to Hour, Minute and Second\r\n * @param timeInSeconds  number\r\n * @returns formatted time\r\n */\n\n\nvar formatTime = function formatTime(timeInSeconds) {\n  var formattedTime = '';\n\n  if (timeInSeconds >= 60 && timeInSeconds < 3600) {\n    var minutes = Math.floor(timeInSeconds / 60);\n    formattedTime = minutes + \" Min\";\n    var seconds = minutes === 60 ? 0 : Math.floor(timeInSeconds % 60);\n    return formattedTime + (\"\" + (seconds > 0 ? ' ' + seconds + ' Sec' : ''));\n  }\n\n  if (timeInSeconds >= 3600 && timeInSeconds < 86400) {\n    var hours = Math.floor(timeInSeconds / 3600);\n    formattedTime = hours + \" Hr\";\n\n    var _minutes = timeInSeconds % 3600 < 60 || hours === 24 ? 0 : Math.floor(timeInSeconds % 3600 / 60);\n\n    return formattedTime + (\"\" + (_minutes > 0 ? ' ' + _minutes + ' Min' : ''));\n  }\n\n  if (timeInSeconds >= 86400) {\n    var days = Math.floor(timeInSeconds / 86400);\n    formattedTime = days + \" Day\";\n\n    var _hours = timeInSeconds % 86400 < 3600 || days >= 364 ? 0 : Math.floor(timeInSeconds % 86400 / 3600);\n\n    return formattedTime + (\"\" + (_hours > 0 ? ' ' + _hours + ' Hr' : ''));\n  }\n\n  return Math.floor(timeInSeconds) + \" Sec\";\n};\n/**\r\n * @name trimContent\r\n * @description Trim a string to max length\r\n * @param content String to trim\r\n * @param maxLength Length of the string to trim, default 1024\r\n * @param ellipsis Boolean to add dots at the end of the string, default false\r\n * @returns trimmed string\r\n */\n\n\nvar trimContent = function trimContent(content, maxLength, ellipsis) {\n  if (content === void 0) {\n    content = '';\n  }\n\n  if (maxLength === void 0) {\n    maxLength = 1024;\n  }\n\n  if (ellipsis === void 0) {\n    ellipsis = false;\n  }\n\n  var trimmedContent = content;\n\n  if (content.length > maxLength) {\n    trimmedContent = content.substring(0, maxLength);\n  }\n\n  if (ellipsis) {\n    trimmedContent = trimmedContent + '...';\n  }\n\n  return trimmedContent;\n};\n\nexport { debounce, formatDate, formatTime, getContrastingTextColor, trimContent };","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--3-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--3-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--3-3!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=style&index=0&id=3e67f0a4&lang=scss&scoped=true&\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","export * from \"-!../../../../../node_modules/style-loader/dist/cjs.js!../../../../../node_modules/css-loader/dist/cjs.js??ref--3-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--3-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--3-3!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=style&index=0&id=3e67f0a4&lang=scss&scoped=true&\"","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \"[data-v-3e67f0a4] .wrapper[data-type=checkbox] .formulate-input-wrapper{\\n  display:flex;\\n  align-items:center\\n}\\n[data-v-3e67f0a4] .wrapper[data-type=checkbox] .formulate-input-wrapper label{\\n  margin-left:.2rem\\n}\\n@media(prefers-color-scheme: dark){\\n[data-v-3e67f0a4] .wrapper .formulate-input-element--date input,[data-v-3e67f0a4] .wrapper .formulate-input-element--checkbox input{\\n    color-scheme:dark\\n}\\n}\\n[data-v-3e67f0a4] .wrapper[data-type=textarea] .formulate-input-element--textarea textarea{\\n  min-height:8rem\\n}\", \"\",{\"version\":3,\"sources\":[\"/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/widget/components/PreChat/Form.vue\"],\"names\":[],\"mappings\":\"AA2SI;EACE,YAAA;EACA;AAAA;AAEA;EACE;AAAA;AAIN;AAIM;IACE;AAAA;AAAA;AAOJ;EACE;AAAA\",\"file\":\"Form.vue\",\"sourcesContent\":[\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n::v-deep {\\n  .wrapper[data-type='checkbox'] {\\n    .formulate-input-wrapper {\\n      display: flex;\\n      align-items: center;\\n\\n      label {\\n        margin-left: 0.2rem;\\n      }\\n    }\\n  }\\n  @media (prefers-color-scheme: dark) {\\n    .wrapper {\\n      .formulate-input-element--date,\\n      .formulate-input-element--checkbox {\\n        input {\\n          color-scheme: dark;\\n        }\\n      }\\n    }\\n  }\\n  .wrapper[data-type='textarea'] {\\n    .formulate-input-element--textarea {\\n      textarea {\\n        min-height: 8rem;\\n      }\\n    }\\n  }\\n}\\n\"]}]);\n// Exports\nmodule.exports = exports;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"flex flex-1 overflow-auto\"},[_c('pre-chat-form',{attrs:{\"options\":_vm.preChatFormOptions,\"disable-contact-fields\":_vm.disableContactFields},on:{\"submit\":_vm.onSubmit}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <FormulateForm\n    v-model=\"formValues\"\n    class=\"flex flex-1 flex-col p-6 overflow-y-auto\"\n    @submit=\"onSubmit\"\n  >\n    <div\n      v-if=\"shouldShowHeaderMessage\"\n      class=\"mb-4 text-sm leading-5\"\n      :class=\"$dm('text-black-800', 'dark:text-slate-50')\"\n    >\n      {{ headerMessage }}\n    </div>\n    <FormulateInput\n      v-for=\"item in enabledPreChatFields\"\n      :key=\"item.name\"\n      :name=\"item.name\"\n      :type=\"item.type\"\n      :label=\"getLabel(item)\"\n      :placeholder=\"getPlaceHolder(item)\"\n      :validation=\"getValidation(item)\"\n      :options=\"getOptions(item)\"\n      :label-class=\"context => labelClass(context)\"\n      :input-class=\"context => inputClass(context)\"\n      :validation-messages=\"{\n        isPhoneE164OrEmpty: $t('PRE_CHAT_FORM.FIELDS.PHONE_NUMBER.VALID_ERROR'),\n        email: $t('PRE_CHAT_FORM.FIELDS.EMAIL_ADDRESS.VALID_ERROR'),\n        required: getRequiredErrorMessage(item),\n      }\"\n    />\n    <FormulateInput\n      v-if=\"!hasActiveCampaign\"\n      name=\"message\"\n      type=\"textarea\"\n      :label-class=\"context => labelClass(context)\"\n      :input-class=\"context => inputClass(context)\"\n      :label=\"$t('PRE_CHAT_FORM.FIELDS.MESSAGE.LABEL')\"\n      :placeholder=\"$t('PRE_CHAT_FORM.FIELDS.MESSAGE.PLACEHOLDER')\"\n      validation=\"required\"\n    />\n\n    <custom-button\n      class=\"font-medium my-5\"\n      block\n      :bg-color=\"widgetColor\"\n      :text-color=\"textColor\"\n      :disabled=\"isCreating\"\n    >\n      <spinner v-if=\"isCreating\" class=\"p-0\" />\n      {{ $t('START_CONVERSATION') }}\n    </custom-button>\n  </FormulateForm>\n</template>\n\n<script>\nimport CustomButton from 'shared/components/Button';\nimport Spinner from 'shared/components/Spinner';\nimport { mapGetters } from 'vuex';\nimport { getContrastingTextColor } from '@chatwoot/utils';\n\nimport { isEmptyObject } from 'widget/helpers/utils';\nimport routerMixin from 'widget/mixins/routerMixin';\nimport darkModeMixin from 'widget/mixins/darkModeMixin';\nexport default {\n  components: {\n    CustomButton,\n    Spinner,\n  },\n  mixins: [routerMixin, darkModeMixin],\n  props: {\n    options: {\n      type: Object,\n      default: () => {},\n    },\n    disableContactFields: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      locale: this.$root.$i18n.locale,\n      message: '',\n      formValues: {},\n      labels: {\n        emailAddress: 'EMAIL_ADDRESS',\n        fullName: 'FULL_NAME',\n        phoneNumber: 'PHONE_NUMBER',\n      },\n    };\n  },\n  computed: {\n    ...mapGetters({\n      widgetColor: 'appConfig/getWidgetColor',\n      isCreating: 'conversation/getIsCreating',\n      activeCampaign: 'campaign/getActiveCampaign',\n      currentUser: 'contacts/getCurrentUser',\n    }),\n    textColor() {\n      return getContrastingTextColor(this.widgetColor);\n    },\n    hasActiveCampaign() {\n      return !isEmptyObject(this.activeCampaign);\n    },\n    shouldShowHeaderMessage() {\n      return this.hasActiveCampaign || this.options.preChatMessage;\n    },\n    headerMessage() {\n      if (this.hasActiveCampaign) {\n        return this.$t('PRE_CHAT_FORM.CAMPAIGN_HEADER');\n      }\n      return this.options.preChatMessage;\n    },\n    preChatFields() {\n      return this.disableContactFields ? [] : this.options.preChatFields;\n    },\n    filteredPreChatFields() {\n      const isUserEmailAvailable = !!this.currentUser.email;\n      const isUserPhoneNumberAvailable = !!this.currentUser.phone_number;\n      const isUserIdentifierAvailable = !!this.currentUser.identifier;\n      const isUserNameAvailable = !!(\n        isUserIdentifierAvailable ||\n        isUserEmailAvailable ||\n        isUserPhoneNumberAvailable\n      );\n      return this.preChatFields.filter(field => {\n        if (isUserEmailAvailable && field.name === 'emailAddress') {\n          return false;\n        }\n        if (isUserPhoneNumberAvailable && field.name === 'phoneNumber') {\n          return false;\n        }\n        if (isUserNameAvailable && field.name === 'fullName') {\n          return false;\n        }\n        return true;\n      });\n    },\n    enabledPreChatFields() {\n      return this.filteredPreChatFields\n        .filter(field => field.enabled)\n        .map(field => ({\n          ...field,\n          type: this.findFieldType(field.type),\n        }));\n    },\n    conversationCustomAttributes() {\n      let conversationAttributes = {};\n      this.enabledPreChatFields.forEach(field => {\n        if (field.field_type === 'conversation_attribute') {\n          conversationAttributes = {\n            ...conversationAttributes,\n            [field.name]: this.getValue(field),\n          };\n        }\n      });\n      return conversationAttributes;\n    },\n    contactCustomAttributes() {\n      let contactAttributes = {};\n      this.enabledPreChatFields.forEach(field => {\n        if (field.field_type === 'contact_attribute') {\n          contactAttributes = {\n            ...contactAttributes,\n            [field.name]: this.getValue(field),\n          };\n        }\n      });\n      return contactAttributes;\n    },\n    inputStyles() {\n      return `mt-2 border rounded w-full py-2 px-3 text-slate-700 outline-none`;\n    },\n    isInputDarkOrLightMode() {\n      return `${this.$dm('bg-white', 'dark:bg-slate-600')} ${this.$dm(\n        'text-slate-700',\n        'dark:text-slate-50'\n      )}`;\n    },\n    inputBorderColor() {\n      return `${this.$dm('border-black-200', 'dark:border-black-500')}`;\n    },\n  },\n  methods: {\n    labelClass(context) {\n      const { hasErrors } = context;\n      if (!hasErrors) {\n        return `text-xs font-medium ${this.$dm(\n          'text-black-800',\n          'dark:text-slate-50'\n        )}`;\n      }\n      return `text-xs font-medium ${this.$dm(\n        'text-red-400',\n        'dark:text-red-400'\n      )}`;\n    },\n    inputClass(context) {\n      const { hasErrors, classification, type } = context;\n      if (classification === 'box' && type === 'checkbox') {\n        return '';\n      }\n      if (!hasErrors) {\n        return `${this.inputStyles} hover:border-black-300 focus:border-black-300 ${this.isInputDarkOrLightMode} ${this.inputBorderColor}`;\n      }\n      return `${this.inputStyles} border-red-200 hover:border-red-300 focus:border-red-300 ${this.isInputDarkOrLightMode}`;\n    },\n    isContactFieldRequired(field) {\n      return this.preChatFields.find(option => option.name === field).required;\n    },\n    getLabel({ name, label }) {\n      if (this.labels[name])\n        return this.$t(`PRE_CHAT_FORM.FIELDS.${this.labels[name]}.LABEL`);\n      return label;\n    },\n    getPlaceHolder({ name, placeholder }) {\n      if (this.labels[name])\n        return this.$t(`PRE_CHAT_FORM.FIELDS.${this.labels[name]}.PLACEHOLDER`);\n      return placeholder;\n    },\n    getValue({ name, type }) {\n      if (type === 'select') {\n        return this.enabledPreChatFields.find(option => option.name === name)\n          .values[this.formValues[name]];\n      }\n      return this.formValues[name] || null;\n    },\n\n    getRequiredErrorMessage({ name, label }) {\n      if (this.labels[name])\n        return this.$t(\n          `PRE_CHAT_FORM.FIELDS.${this.labels[name]}.REQUIRED_ERROR`\n        );\n      return `${label} ${this.$t('PRE_CHAT_FORM.IS_REQUIRED')}`;\n    },\n    getValidation({ type, name }) {\n      if (!this.isContactFieldRequired(name)) {\n        return '';\n      }\n      const validations = {\n        emailAddress: 'email',\n        phoneNumber: 'isPhoneE164OrEmpty',\n        url: 'url',\n        date: 'date',\n        text: null,\n        select: null,\n        number: null,\n        checkbox: false,\n      };\n      const validationKeys = Object.keys(validations);\n      const validation = 'bail|required';\n      if (validationKeys.includes(name) || validationKeys.includes(type)) {\n        const validationType = validations[type] || validations[name];\n        return validationType ? `${validation}|${validationType}` : validation;\n      }\n      return '';\n    },\n    findFieldType(type) {\n      if (type === 'link') {\n        return 'url';\n      }\n      if (type === 'list') {\n        return 'select';\n      }\n\n      return type;\n    },\n    getOptions(item) {\n      if (item.type === 'select') {\n        let values = {};\n        item.values.forEach((value, index) => {\n          values = {\n            ...values,\n            [index]: value,\n          };\n        });\n        return values;\n      }\n      return null;\n    },\n    onSubmit() {\n      const { emailAddress, fullName, phoneNumber, message } = this.formValues;\n      const { email } = this.currentUser;\n      this.$emit('submit', {\n        fullName,\n        phoneNumber,\n        emailAddress: emailAddress || email,\n        message,\n        activeCampaignId: this.activeCampaign.id,\n        conversationCustomAttributes: this.conversationCustomAttributes,\n        contactCustomAttributes: this.contactCustomAttributes,\n      });\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n::v-deep {\n  .wrapper[data-type='checkbox'] {\n    .formulate-input-wrapper {\n      display: flex;\n      align-items: center;\n\n      label {\n        margin-left: 0.2rem;\n      }\n    }\n  }\n  @media (prefers-color-scheme: dark) {\n    .wrapper {\n      .formulate-input-element--date,\n      .formulate-input-element--checkbox {\n        input {\n          color-scheme: dark;\n        }\n      }\n    }\n  }\n  .wrapper[data-type='textarea'] {\n    .formulate-input-element--textarea {\n      textarea {\n        min-height: 8rem;\n      }\n    }\n  }\n}\n</style>\n","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--7-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--7-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=script&lang=js&\"","<template>\n  <div class=\"flex flex-1 overflow-auto\">\n    <pre-chat-form\n      :options=\"preChatFormOptions\"\n      :disable-contact-fields=\"disableContactFields\"\n      @submit=\"onSubmit\"\n    />\n  </div>\n</template>\n<script>\nimport { mapGetters } from 'vuex';\nimport PreChatForm from '../components/PreChat/Form';\nimport configMixin from '../mixins/configMixin';\nimport routerMixin from '../mixins/routerMixin';\nimport { isEmptyObject } from 'widget/helpers/utils';\n\nexport default {\n  components: {\n    PreChatForm,\n  },\n  mixins: [configMixin, routerMixin],\n  computed: {\n    ...mapGetters({\n      conversationSize: 'conversation/getConversationSize',\n    }),\n    disableContactFields() {\n      const { disableContactFields = false } = this.$route.params || {};\n      return disableContactFields;\n    },\n  },\n  watch: {\n    conversationSize(newSize, oldSize) {\n      if (!oldSize && newSize > oldSize) {\n        this.replaceRoute('messages');\n      }\n    },\n  },\n  methods: {\n    onSubmit({\n      fullName,\n      emailAddress,\n      message,\n      activeCampaignId,\n      phoneNumber,\n      contactCustomAttributes,\n      conversationCustomAttributes,\n    }) {\n      if (activeCampaignId) {\n        bus.$emit('execute-campaign', {\n          campaignId: activeCampaignId,\n          customAttributes: conversationCustomAttributes,\n        });\n        this.$store.dispatch('contacts/update', {\n          user: {\n            email: emailAddress,\n            name: fullName,\n            phone_number: phoneNumber,\n          },\n        });\n      } else {\n        this.$store.dispatch('conversation/createConversation', {\n          fullName: fullName,\n          emailAddress: emailAddress,\n          message: message,\n          phoneNumber: phoneNumber,\n          customAttributes: conversationCustomAttributes,\n        });\n      }\n      if (!isEmptyObject(contactCustomAttributes)) {\n        this.$store.dispatch(\n          'contacts/setCustomAttributes',\n          contactCustomAttributes\n        );\n      }\n    },\n  },\n};\n</script>\n","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--7-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PreChatForm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--7-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PreChatForm.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Form.vue?vue&type=template&id=3e67f0a4&scoped=true&\"\nimport script from \"./Form.vue?vue&type=script&lang=js&\"\nexport * from \"./Form.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Form.vue?vue&type=style&index=0&id=3e67f0a4&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3e67f0a4\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('FormulateForm',{staticClass:\"flex flex-1 flex-col p-6 overflow-y-auto\",on:{\"submit\":_vm.onSubmit},model:{value:(_vm.formValues),callback:function ($$v) {_vm.formValues=$$v},expression:\"formValues\"}},[(_vm.shouldShowHeaderMessage)?_c('div',{staticClass:\"mb-4 text-sm leading-5\",class:_vm.$dm('text-black-800', 'dark:text-slate-50')},[_vm._v(\"\\n    \"+_vm._s(_vm.headerMessage)+\"\\n  \")]):_vm._e(),_vm._v(\" \"),_vm._l((_vm.enabledPreChatFields),function(item){return _c('FormulateInput',{key:item.name,attrs:{\"name\":item.name,\"type\":item.type,\"label\":_vm.getLabel(item),\"placeholder\":_vm.getPlaceHolder(item),\"validation\":_vm.getValidation(item),\"options\":_vm.getOptions(item),\"label-class\":function (context) { return _vm.labelClass(context); },\"input-class\":function (context) { return _vm.inputClass(context); },\"validation-messages\":{\n      isPhoneE164OrEmpty: _vm.$t('PRE_CHAT_FORM.FIELDS.PHONE_NUMBER.VALID_ERROR'),\n      email: _vm.$t('PRE_CHAT_FORM.FIELDS.EMAIL_ADDRESS.VALID_ERROR'),\n      required: _vm.getRequiredErrorMessage(item),\n    }}})}),_vm._v(\" \"),(!_vm.hasActiveCampaign)?_c('FormulateInput',{attrs:{\"name\":\"message\",\"type\":\"textarea\",\"label-class\":function (context) { return _vm.labelClass(context); },\"input-class\":function (context) { return _vm.inputClass(context); },\"label\":_vm.$t('PRE_CHAT_FORM.FIELDS.MESSAGE.LABEL'),\"placeholder\":_vm.$t('PRE_CHAT_FORM.FIELDS.MESSAGE.PLACEHOLDER'),\"validation\":\"required\"}}):_vm._e(),_vm._v(\" \"),_c('custom-button',{staticClass:\"font-medium my-5\",attrs:{\"block\":\"\",\"bg-color\":_vm.widgetColor,\"text-color\":_vm.textColor,\"disabled\":_vm.isCreating}},[(_vm.isCreating)?_c('spinner',{staticClass:\"p-0\"}):_vm._e(),_vm._v(\"\\n    \"+_vm._s(_vm.$t('START_CONVERSATION'))+\"\\n  \")],1)],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./PreChatForm.vue?vue&type=template&id=bcccf02a&\"\nimport script from \"./PreChatForm.vue?vue&type=script&lang=js&\"\nexport * from \"./PreChatForm.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('button',{class:_vm.buttonClassName,style:(_vm.buttonStyles),attrs:{\"disabled\":_vm.disabled},on:{\"click\":_vm.onClick}},[_vm._t(\"default\")],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--7-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Button.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--7-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Button.vue?vue&type=script&lang=js&\"","<template>\n  <button\n    :class=\"buttonClassName\"\n    :style=\"buttonStyles\"\n    :disabled=\"disabled\"\n    @click=\"onClick\"\n  >\n    <slot />\n  </button>\n</template>\n<script>\nexport default {\n  props: {\n    block: {\n      type: Boolean,\n      default: false,\n    },\n    type: {\n      type: String,\n      default: 'blue',\n    },\n    bgColor: {\n      type: String,\n      default: '',\n    },\n    textColor: {\n      type: String,\n      default: '',\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  computed: {\n    buttonClassName() {\n      let className = 'text-white py-3 px-4 rounded shadow-sm';\n      if (this.type === 'clear') {\n        className = 'flex mx-auto mt-4 text-xs w-auto text-black-600';\n      }\n\n      if (this.type === 'blue' && !Object.keys(this.buttonStyles).length) {\n        className = `${className} bg-woot-500 hover:bg-woot-700`;\n      }\n      if (this.block) {\n        className = `${className} w-full`;\n      }\n      return className;\n    },\n    buttonStyles() {\n      const styles = {};\n      if (this.bgColor) {\n        styles.backgroundColor = this.bgColor;\n      }\n      if (this.textColor) {\n        styles.color = this.textColor;\n      }\n      return styles;\n    },\n  },\n  methods: {\n    onClick(e) {\n      this.$emit('click', e);\n    },\n  },\n};\n</script>\n","import { render, staticRenderFns } from \"./Button.vue?vue&type=template&id=4f2eb420&\"\nimport script from \"./Button.vue?vue&type=script&lang=js&\"\nexport * from \"./Button.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}