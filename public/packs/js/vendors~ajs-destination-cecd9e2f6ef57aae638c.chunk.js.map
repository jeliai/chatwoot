{"version":3,"sources":["webpack:///./node_modules/@june-so/analytics-next/dist/pkg/plugins/middleware/index.js","webpack:///./node_modules/@stdlib/utils-native-class/lib/index.js","webpack:///./node_modules/dlv/dist/dlv.umd.js","webpack:///./node_modules/@stdlib/array-uint32/lib/index.js","webpack:///./node_modules/@stdlib/array-float64/lib/index.js","webpack:///./node_modules/@stdlib/assert-is-little-endian/lib/index.js","webpack:///./node_modules/@stdlib/constants-float64-pinf/lib/index.js","webpack:///./node_modules/@stdlib/constants-float64-ninf/lib/index.js","webpack:///./node_modules/@stdlib/constants-float64-exponent-bias/lib/index.js","webpack:///./node_modules/@stdlib/math-base-assert-is-nan/lib/index.js","webpack:///./node_modules/@stdlib/math-base-assert-is-infinite/lib/index.js","webpack:///./node_modules/@stdlib/number-float64-base-to-words/lib/index.js","webpack:///./node_modules/@stdlib/utils-define-nonenumerable-read-only-property/lib/index.js","webpack:///./node_modules/@stdlib/number-float64-base-to-words/lib/assign.js","webpack:///./node_modules/@stdlib/utils-native-class/lib/tostring.js","webpack:///./node_modules/@stdlib/number-float64-base-get-high-word/lib/index.js","webpack:///./node_modules/@stdlib/number-float64-base-from-words/lib/index.js","webpack:///./node_modules/@stdlib/number-float64-base-normalize/lib/assign.js","webpack:///./node_modules/@june-so/analytics-next/dist/pkg/plugins/ajs-destination/loader.js","webpack:///./node_modules/@segment/tsub/dist/index.js","webpack:///./node_modules/@segment/tsub/dist/transformers.js","webpack:///./node_modules/tiny-hashes/md5/index.mjs","webpack:///./node_modules/@stdlib/math-base-special-ldexp/lib/index.js","webpack:///./node_modules/@stdlib/math-base-special-ldexp/lib/ldexp.js","webpack:///./node_modules/@stdlib/number-ctor/lib/index.js","webpack:///./node_modules/@stdlib/number-ctor/lib/number.js","webpack:///./node_modules/@stdlib/constants-float64-max-base2-exponent/lib/index.js","webpack:///./node_modules/@stdlib/constants-float64-max-base2-exponent-subnormal/lib/index.js","webpack:///./node_modules/@stdlib/constants-float64-min-base2-exponent-subnormal/lib/index.js","webpack:///./node_modules/@stdlib/math-base-assert-is-nan/lib/main.js","webpack:///./node_modules/@stdlib/math-base-assert-is-infinite/lib/main.js","webpack:///./node_modules/@stdlib/math-base-special-copysign/lib/index.js","webpack:///./node_modules/@stdlib/math-base-special-copysign/lib/main.js","webpack:///./node_modules/@stdlib/constants-float64-high-word-sign-mask/lib/index.js","webpack:///./node_modules/@stdlib/constants-float64-high-word-abs-mask/lib/index.js","webpack:///./node_modules/@stdlib/utils-define-nonenumerable-read-only-property/lib/main.js","webpack:///./node_modules/@stdlib/utils-define-property/lib/index.js","webpack:///./node_modules/@stdlib/utils-define-property/lib/has_define_property_support.js","webpack:///./node_modules/@stdlib/utils-define-property/lib/define_property.js","webpack:///./node_modules/@stdlib/utils-define-property/lib/builtin.js","webpack:///./node_modules/@stdlib/utils-define-property/lib/polyfill.js","webpack:///./node_modules/@stdlib/number-float64-base-to-words/lib/main.js","webpack:///./node_modules/@stdlib/assert-has-uint32array-support/lib/index.js","webpack:///./node_modules/@stdlib/assert-has-uint32array-support/lib/main.js","webpack:///./node_modules/@stdlib/assert-is-uint32array/lib/index.js","webpack:///./node_modules/@stdlib/assert-is-uint32array/lib/main.js","webpack:///./node_modules/@stdlib/assert-has-tostringtag-support/lib/index.js","webpack:///./node_modules/@stdlib/assert-has-tostringtag-support/lib/main.js","webpack:///./node_modules/@stdlib/assert-has-symbol-support/lib/index.js","webpack:///./node_modules/@stdlib/assert-has-symbol-support/lib/main.js","webpack:///./node_modules/@stdlib/utils-native-class/lib/native_class.js","webpack:///./node_modules/@stdlib/utils-native-class/lib/polyfill.js","webpack:///./node_modules/@stdlib/assert-has-own-property/lib/index.js","webpack:///./node_modules/@stdlib/assert-has-own-property/lib/main.js","webpack:///./node_modules/@stdlib/utils-native-class/lib/tostringtag.js","webpack:///./node_modules/@stdlib/constants-uint32-max/lib/index.js","webpack:///./node_modules/@stdlib/assert-has-uint32array-support/lib/uint32array.js","webpack:///./node_modules/@stdlib/array-uint32/lib/uint32array.js","webpack:///./node_modules/@stdlib/array-uint32/lib/polyfill.js","webpack:///./node_modules/@stdlib/assert-has-float64array-support/lib/index.js","webpack:///./node_modules/@stdlib/assert-has-float64array-support/lib/main.js","webpack:///./node_modules/@stdlib/assert-is-float64array/lib/index.js","webpack:///./node_modules/@stdlib/assert-is-float64array/lib/main.js","webpack:///./node_modules/@stdlib/assert-has-float64array-support/lib/float64array.js","webpack:///./node_modules/@stdlib/array-float64/lib/float64array.js","webpack:///./node_modules/@stdlib/array-float64/lib/polyfill.js","webpack:///./node_modules/@stdlib/number-float64-base-to-words/lib/indices.js","webpack:///./node_modules/@stdlib/assert-is-little-endian/lib/main.js","webpack:///./node_modules/@stdlib/assert-is-little-endian/lib/ctors.js","webpack:///./node_modules/@stdlib/array-uint8/lib/index.js","webpack:///./node_modules/@stdlib/assert-has-uint8array-support/lib/index.js","webpack:///./node_modules/@stdlib/assert-has-uint8array-support/lib/main.js","webpack:///./node_modules/@stdlib/assert-is-uint8array/lib/index.js","webpack:///./node_modules/@stdlib/assert-is-uint8array/lib/main.js","webpack:///./node_modules/@stdlib/constants-uint8-max/lib/index.js","webpack:///./node_modules/@stdlib/assert-has-uint8array-support/lib/uint8array.js","webpack:///./node_modules/@stdlib/array-uint8/lib/uint8array.js","webpack:///./node_modules/@stdlib/array-uint8/lib/polyfill.js","webpack:///./node_modules/@stdlib/array-uint16/lib/index.js","webpack:///./node_modules/@stdlib/assert-has-uint16array-support/lib/index.js","webpack:///./node_modules/@stdlib/assert-has-uint16array-support/lib/main.js","webpack:///./node_modules/@stdlib/assert-is-uint16array/lib/index.js","webpack:///./node_modules/@stdlib/assert-is-uint16array/lib/main.js","webpack:///./node_modules/@stdlib/constants-uint16-max/lib/index.js","webpack:///./node_modules/@stdlib/assert-has-uint16array-support/lib/uint16array.js","webpack:///./node_modules/@stdlib/array-uint16/lib/uint16array.js","webpack:///./node_modules/@stdlib/array-uint16/lib/polyfill.js","webpack:///./node_modules/@stdlib/number-float64-base-get-high-word/lib/main.js","webpack:///./node_modules/@stdlib/number-float64-base-get-high-word/lib/high.js","webpack:///./node_modules/@stdlib/number-float64-base-from-words/lib/main.js","webpack:///./node_modules/@stdlib/number-float64-base-from-words/lib/indices.js","webpack:///./node_modules/@stdlib/number-float64-base-normalize/lib/index.js","webpack:///./node_modules/@stdlib/number-float64-base-normalize/lib/main.js","webpack:///./node_modules/@stdlib/constants-float64-smallest-normal/lib/index.js","webpack:///./node_modules/@stdlib/math-base-special-abs/lib/index.js","webpack:///./node_modules/@stdlib/math-base-special-abs/lib/main.js","webpack:///./node_modules/@stdlib/number-float64-base-exponent/lib/index.js","webpack:///./node_modules/@stdlib/number-float64-base-exponent/lib/main.js","webpack:///./node_modules/@stdlib/constants-float64-high-word-exponent-mask/lib/index.js","webpack:///./node_modules/@segment/tsub/dist/unset.js","webpack:///./node_modules/@segment/tsub/dist/matchers.js","webpack:///./node_modules/@segment/tsub/dist/store.js","webpack:///./node_modules/@june-so/analytics-next/dist/pkg/plugins/ajs-destination/index.js","webpack:///./node_modules/@june-so/analytics-next/dist/pkg/plugins/routing-middleware/index.js"],"names":["applyDestinationMiddleware","destination","evt","middleware","this","applyMiddleware","event","fn","nextCalled","returnedEvent","_a","_b","label","payload","clone","traverse","integration","next","obj","sent","integrations","_i","middleware_1","md","result","length","sourceMiddlewarePlugin","apply","ctx","retry","type","reason","name","version","isLoaded","load","Promise","resolve","track","page","identify","alias","group","nativeClass","hasToStringTag","builtin","polyfill","module","exports","_typeof","Symbol","iterator","constructor","prototype","t","n","e","i","o","split","ctor","hasUint32ArraySupport","hasFloat64ArraySupport","IS_LITTLE_ENDIAN","FLOAT64_PINF","Number","POSITIVE_INFINITY","FLOAT64_NINF","NEGATIVE_INFINITY","isnan","isInfinite","setReadOnly","main","setNonEnumerableReadOnly","Uint32Array","Float64Array","indices","FLOAT64_VIEW","UINT32_VIEW","buffer","HIGH","LOW","x","out","stride","offset","toStr","Object","toString","getHighWord","fromWords","FLOAT64_SMALLEST_NORMAL","abs","path","window","analytics","_cdn","normalizeName","toLowerCase","replace","loadIntegration","analyticsInstance","settings","pathName","fullPath","err_1","deps","integrationBuilder","trys","push","_c","metric","global","performance","getEntriesByName","stats","gauge","Math","round","duration","_","recordLoadMetrics","all","map","dep","Integration","user","addIntegration","unloadIntegration","resolveVersion","_d","versionSettings","override","__importDefault","mod","__esModule","defineProperty","value","Store","matches","transform","transformers_1","enumerable","get","default","matchers_1","store_1","md5_1","dlv_1","math_base_special_ldexp_1","dset_1","unset_1","dropProperties","config","key","drop","hasOwnProperty","field","allowProperties","allow","k","indexOf","mapProperties","initialPayload","JSON","parse","stringify","actionMap","splitKey","parent_1","pop","join","copy","valueToCopy","undefined","dset","move","valueToMove","unset","set","to_string","valueToString","sampleEvent","sample","percent","digest","exponent","significand","consumeDigest","slice","leadingZeros","val","splice","concat","parseInt","sampleConsistentPercent","random","arr","remainder","binary","transformers","transformedPayload","transformer","Error","r","sin","PI","f","a","c","h","unescape","encodeURI","u","charCodeAt","ldexp","PINF","NINF","BIAS","MAX_EXPONENT","MAX_SUBNORMAL_EXPONENT","MIN_SUBNORMAL_EXPONENT","copysign","normalize","floatExp","toWords","FRAC","WORDS","frac","exp","high","m","SIGN_MASK","ABS_MASK","y","hx","hy","assign","prop","hasDefinePropertySupport","err","objectProtoype","defineGetter","__defineGetter__","defineSetter","__defineSetter__","lookupGetter","__lookupGetter__","lookupSetter","__lookupSetter__","descriptor","hasValue","hasGet","hasSet","call","TypeError","__proto__","fcn","isUint32Array","UINT32_MAX","GlobalUint32Array","bool","hasUint32Array","hasToStringTagSupport","FLG","hasSymbols","toStringTag","hasSymbolSupport","v","hasOwnProp","isOwn","tag","has","property","toStrTag","isFloat64Array","GlobalFloat64Array","NaN","hasFloat64Array","uint16view","ctors","Uint8Array","hasUint8ArraySupport","isUint8Array","UINT8_MAX","GlobalUint8Array","hasUint8Array","hasUint16ArraySupport","isUint16Array","UINT16_MAX","GlobalUint16Array","hasUint16Array","Uint16Array","low","EXP_MASK","segs","last","shift","fqlEvaluate","ir","Array","isArray","getValue","item","first","second","operator","isIR","compareItems","compareNumbers","contains","str","glob","pattern","Pattern","star","chunk","scanChunk","matchChunk","ok","globMatches","match","target","inRange","Scan","char","notNegated","foundMatch","nRange","lo","hi","getEsc","newChunk","matcher","fql","rules","getRulesByDestinationName","destinationName","rule","flushQueue","xt","queue","failedQueue","_this","failed","pushWithBackoff","LegacyDestination","options","_ready","_initialized","flushing","scheduleFlush","ready","onReady","once","onInitialize","on","increment","initialize","error","unload","_ctx","_analyticsInstance","addMiddleware","arguments","shouldBuffer","send","clz","eventType","plan","ev","planEvent","afterMiddleware","enabled","updateEvent","All","cancel","invoke","_assumesPageview","then","setTimeout","todo","ajsDestinations","globalIntegrations","routingRules","routingMiddleware","integrationOptions","middlewareSettings","forEach","matchers","entries","integrationSettings","startsWith","allDisableAndNotDefined","bundlingStatus","componentTypes","includes","filter"],"mappings":"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","file":"js/vendors~ajs-destination-cecd9e2f6ef57aae638c.chunk.js","sourcesContent":["import { __assign, __awaiter, __generator } from \"tslib\";\nimport { ContextCancelation } from '../../core/context';\nimport { asPromise } from '../../lib/as-promise';\nimport { toFacade } from '../../lib/to-facade';\nexport function applyDestinationMiddleware(destination, evt, middleware) {\n  return __awaiter(this, void 0, void 0, function () {\n    function applyMiddleware(event, fn) {\n      return __awaiter(this, void 0, void 0, function () {\n        var nextCalled, returnedEvent;\n\n        var _a;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              nextCalled = false;\n              returnedEvent = null;\n              return [4\n              /*yield*/\n              , asPromise(fn({\n                payload: toFacade(event, {\n                  clone: true,\n                  traverse: false\n                }),\n                integration: destination,\n                next: function next(evt) {\n                  nextCalled = true;\n\n                  if (evt === null) {\n                    returnedEvent = null;\n                  }\n\n                  if (evt) {\n                    returnedEvent = evt.obj;\n                  }\n                }\n              }))];\n\n            case 1:\n              _b.sent();\n\n              if (!nextCalled && returnedEvent !== null) {\n                returnedEvent = returnedEvent;\n                returnedEvent.integrations = __assign(__assign({}, event.integrations), (_a = {}, _a[destination] = false, _a));\n              }\n\n              return [2\n              /*return*/\n              , returnedEvent];\n          }\n        });\n      });\n    }\n\n    var _i, middleware_1, md, result;\n\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _i = 0, middleware_1 = middleware;\n          _a.label = 1;\n\n        case 1:\n          if (!(_i < middleware_1.length)) return [3\n          /*break*/\n          , 4];\n          md = middleware_1[_i];\n          return [4\n          /*yield*/\n          , applyMiddleware(evt, md)];\n\n        case 2:\n          result = _a.sent();\n\n          if (result === null) {\n            return [2\n            /*return*/\n            , null];\n          }\n\n          evt = result;\n          _a.label = 3;\n\n        case 3:\n          _i++;\n          return [3\n          /*break*/\n          , 1];\n\n        case 4:\n          return [2\n          /*return*/\n          , evt];\n      }\n    });\n  });\n}\nexport function sourceMiddlewarePlugin(fn, integrations) {\n  function apply(ctx) {\n    return __awaiter(this, void 0, void 0, function () {\n      var nextCalled;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            nextCalled = false;\n            return [4\n            /*yield*/\n            , asPromise(fn({\n              payload: toFacade(ctx.event, {\n                clone: true,\n                traverse: false\n              }),\n              integrations: integrations !== null && integrations !== void 0 ? integrations : {},\n              next: function next(evt) {\n                nextCalled = true;\n\n                if (evt) {\n                  ctx.event = evt.obj;\n                }\n              }\n            }))];\n\n          case 1:\n            _a.sent();\n\n            if (!nextCalled) {\n              throw new ContextCancelation({\n                retry: false,\n                type: 'middleware_cancellation',\n                reason: 'Middleware `next` function skipped'\n              });\n            }\n\n            return [2\n            /*return*/\n            , ctx];\n        }\n      });\n    });\n  }\n\n  return {\n    name: \"Source Middleware \" + fn.name,\n    type: 'before',\n    version: '0.1.0',\n    isLoaded: function isLoaded() {\n      return true;\n    },\n    load: function load(ctx) {\n      return Promise.resolve(ctx);\n    },\n    track: apply,\n    page: apply,\n    identify: apply,\n    alias: apply,\n    group: apply\n  };\n}","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Return a string value indicating a specification defined classification of an object.\n*\n* @module @stdlib/utils-native-class\n*\n* @example\n* var nativeClass = require( '@stdlib/utils-native-class' );\n*\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* function Beep() {\n*     return this;\n* }\n* str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\n// MODULES //\n\nvar hasToStringTag = require('@stdlib/assert-has-tostringtag-support');\n\nvar builtin = require('./native_class.js');\n\nvar polyfill = require('./polyfill.js'); // MAIN //\n\n\nvar nativeClass;\n\nif (hasToStringTag()) {\n  nativeClass = polyfill;\n} else {\n  nativeClass = builtin;\n} // EXPORTS //\n\n\nmodule.exports = nativeClass;","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n!function (t, n) {\n  \"object\" == (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) && \"undefined\" != typeof module ? module.exports = function (t, n, e, i, o) {\n    for (n = n.split ? n.split(\".\") : n, i = 0; i < n.length; i++) {\n      t = t ? t[n[i]] : o;\n    }\n\n    return t === o ? e : t;\n  } : \"function\" == typeof define && define.amd ? define(function () {\n    return function (t, n, e, i, o) {\n      for (n = n.split ? n.split(\".\") : n, i = 0; i < n.length; i++) {\n        t = t ? t[n[i]] : o;\n      }\n\n      return t === o ? e : t;\n    };\n  }) : t.dlv = function (t, n, e, i, o) {\n    for (n = n.split ? n.split(\".\") : n, i = 0; i < n.length; i++) {\n      t = t ? t[n[i]] : o;\n    }\n\n    return t === o ? e : t;\n  };\n}(this);","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Typed array constructor which returns a typed array representing an array of 32-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array-uint32\n*\n* @example\n* var ctor = require( '@stdlib/array-uint32' );\n*\n* var arr = new ctor( 10 );\n* // returns <Uint32Array>\n*/\n// MODULES //\n\nvar hasUint32ArraySupport = require('@stdlib/assert-has-uint32array-support');\n\nvar builtin = require('./uint32array.js');\n\nvar polyfill = require('./polyfill.js'); // MAIN //\n\n\nvar ctor;\n\nif (hasUint32ArraySupport()) {\n  ctor = builtin;\n} else {\n  ctor = polyfill;\n} // EXPORTS //\n\n\nmodule.exports = ctor;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Typed array constructor which returns a typed array representing an array of double-precision floating-point numbers in the platform byte order.\n*\n* @module @stdlib/array-float64\n*\n* @example\n* var ctor = require( '@stdlib/array-float64' );\n*\n* var arr = new ctor( 10 );\n* // returns <Float64Array>\n*/\n// MODULES //\n\nvar hasFloat64ArraySupport = require('@stdlib/assert-has-float64array-support');\n\nvar builtin = require('./float64array.js');\n\nvar polyfill = require('./polyfill.js'); // MAIN //\n\n\nvar ctor;\n\nif (hasFloat64ArraySupport()) {\n  ctor = builtin;\n} else {\n  ctor = polyfill;\n} // EXPORTS //\n\n\nmodule.exports = ctor;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Return a boolean indicating if an environment is little endian.\n*\n* @module @stdlib/assert-is-little-endian\n*\n* @example\n* var IS_LITTLE_ENDIAN = require( '@stdlib/assert-is-little-endian' );\n*\n* var bool = IS_LITTLE_ENDIAN;\n* // returns <boolean>\n*/\n// MODULES //\n\nvar IS_LITTLE_ENDIAN = require('./main.js'); // EXPORTS //\n\n\nmodule.exports = IS_LITTLE_ENDIAN;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Double-precision floating-point positive infinity.\n*\n* @module @stdlib/constants-float64-pinf\n* @type {number}\n*\n* @example\n* var FLOAT64_PINF = require( '@stdlib/constants-float64-pinf' );\n* // returns Infinity\n*/\n// MAIN //\n\n/**\n* Double-precision floating-point positive infinity.\n*\n* ## Notes\n*\n* Double-precision floating-point positive infinity has the bit sequence\n*\n* ```binarystring\n* 0 11111111111 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default Number.POSITIVE_INFINITY\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\n\nvar FLOAT64_PINF = Number.POSITIVE_INFINITY; // eslint-disable-line stdlib/require-globals\n// EXPORTS //\n\nmodule.exports = FLOAT64_PINF;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Double-precision floating-point negative infinity.\n*\n* @module @stdlib/constants-float64-ninf\n* @type {number}\n*\n* @example\n* var FLOAT64_NINF = require( '@stdlib/constants-float64-ninf' );\n* // returns -Infinity\n*/\n// MODULES //\n\nvar Number = require('@stdlib/number-ctor'); // MAIN //\n\n/**\n* Double-precision floating-point negative infinity.\n*\n* ## Notes\n*\n* Double-precision floating-point negative infinity has the bit sequence\n*\n* ```binarystring\n* 1 11111111111 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default Number.NEGATIVE_INFINITY\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\n\n\nvar FLOAT64_NINF = Number.NEGATIVE_INFINITY; // EXPORTS //\n\nmodule.exports = FLOAT64_NINF;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* The bias of a double-precision floating-point number's exponent.\n*\n* @module @stdlib/constants-float64-exponent-bias\n* @type {integer32}\n*\n* @example\n* var FLOAT64_EXPONENT_BIAS = require( '@stdlib/constants-float64-exponent-bias' );\n* // returns 1023\n*/\n// MAIN //\n\n/**\n* Bias of a double-precision floating-point number's exponent.\n*\n* ## Notes\n*\n* The bias can be computed via\n*\n* ```tex\n* \\mathrm{bias} = 2^{k-1} - 1\n* ```\n*\n* where \\\\(k\\\\) is the number of bits in the exponent; here, \\\\(k = 11\\\\).\n*\n* @constant\n* @type {integer32}\n* @default 1023\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\n\nvar FLOAT64_EXPONENT_BIAS = 1023 | 0; // asm type annotation\n// EXPORTS //\n\nmodule.exports = FLOAT64_EXPONENT_BIAS;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Test if a double-precision floating-point numeric value is `NaN`.\n*\n* @module @stdlib/math-base-assert-is-nan\n*\n* @example\n* var isnan = require( '@stdlib/math-base-assert-is-nan' );\n*\n* var bool = isnan( NaN );\n* // returns true\n*\n* bool = isnan( 7.0 );\n* // returns false\n*/\n// MODULES //\n\nvar isnan = require('./main.js'); // EXPORTS //\n\n\nmodule.exports = isnan;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Test if a double-precision floating-point numeric value is infinite.\n*\n* @module @stdlib/math-base-assert-is-infinite\n*\n* @example\n* var isInfinite = require( '@stdlib/math-base-assert-is-infinite' );\n*\n* var bool = isInfinite( Infinity );\n* // returns true\n*\n* bool = isInfinite( -Infinity );\n* // returns true\n*\n* bool = isInfinite( 5.0 );\n* // returns false\n*\n* bool = isInfinite( NaN );\n* // returns false\n*/\n// MODULES //\n\nvar isInfinite = require('./main.js'); // EXPORTS //\n\n\nmodule.exports = isInfinite;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Split a double-precision floating-point number into a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* @module @stdlib/number-float64-base-to-words\n*\n* @example\n* var toWords = require( '@stdlib/number-float64-base-to-words' );\n*\n* var w = toWords( 3.14e201 );\n* // returns [ 1774486211, 2479577218 ]\n*\n* @example\n* var Uint32Array = require( '@stdlib/array-uint32' );\n* var toWords = require( '@stdlib/number-float64-base-to-words' );\n*\n* var out = new Uint32Array( 2 );\n*\n* var w = toWords.assign( 3.14e201, out, 1, 0 );\n* // returns <Uint32Array>[ 1774486211, 2479577218 ]\n*\n* var bool = ( w === out );\n* // returns true\n*/\n// MODULES //\n\nvar setReadOnly = require('@stdlib/utils-define-nonenumerable-read-only-property');\n\nvar main = require('./main.js');\n\nvar assign = require('./assign.js'); // MAIN //\n\n\nsetReadOnly(main, 'assign', assign); // EXPORTS //\n\nmodule.exports = main;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Define a non-enumerable read-only property.\n*\n* @module @stdlib/utils-define-nonenumerable-read-only-property\n*\n* @example\n* var setNonEnumerableReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\n*\n* var obj = {};\n*\n* setNonEnumerableReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\n// MODULES //\n\nvar setNonEnumerableReadOnly = require('./main.js'); // EXPORTS //\n\n\nmodule.exports = setNonEnumerableReadOnly;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar Uint32Array = require('@stdlib/array-uint32');\n\nvar Float64Array = require('@stdlib/array-float64');\n\nvar indices = require('./indices.js'); // VARIABLES //\n\n\nvar FLOAT64_VIEW = new Float64Array(1);\nvar UINT32_VIEW = new Uint32Array(FLOAT64_VIEW.buffer);\nvar HIGH = indices.HIGH;\nvar LOW = indices.LOW; // MAIN //\n\n/**\n* Splits a double-precision floating-point number into a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the higher order bits? If little endian, the second; if big endian, the first.\n*\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n*\n* @private\n* @param {number} x - input value\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @returns {Collection} output array\n*\n* @example\n* var Uint32Array = require( '@stdlib/array-uint32' );\n*\n* var out = new Uint32Array( 2 );\n*\n* var w = toWords( 3.14e201, out, 1, 0 );\n* // returns <Uint32Array>[ 1774486211, 2479577218 ]\n*\n* var bool = ( w === out );\n* // returns true\n*/\n\nfunction toWords(x, out, stride, offset) {\n  FLOAT64_VIEW[0] = x;\n  out[offset] = UINT32_VIEW[HIGH];\n  out[offset + stride] = UINT32_VIEW[LOW];\n  return out;\n} // EXPORTS //\n\n\nmodule.exports = toWords;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MAIN //\n\nvar toStr = Object.prototype.toString; // EXPORTS //\n\nmodule.exports = toStr;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Return an unsigned 32-bit integer corresponding to the more significant 32 bits of a double-precision floating-point number.\n*\n* @module @stdlib/number-float64-base-get-high-word\n*\n* @example\n* var getHighWord = require( '@stdlib/number-float64-base-get-high-word' );\n*\n* var w = getHighWord( 3.14e201 ); // => 01101001110001001000001011000011\n* // returns 1774486211\n*/\n// MODULES //\n\nvar getHighWord = require('./main.js'); // EXPORTS //\n\n\nmodule.exports = getHighWord;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Create a double-precision floating-point number from a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* @module @stdlib/number-float64-base-from-words\n*\n* @example\n* var fromWords = require( '@stdlib/number-float64-base-from-words' );\n*\n* var v = fromWords( 1774486211, 2479577218 );\n* // returns 3.14e201\n*\n* v = fromWords( 3221823995, 1413754136 );\n* // returns -3.141592653589793\n*\n* v = fromWords( 0, 0 );\n* // returns 0.0\n*\n* v = fromWords( 2147483648, 0 );\n* // returns -0.0\n*\n* v = fromWords( 2146959360, 0 );\n* // returns NaN\n*\n* v = fromWords( 2146435072, 0 );\n* // returns Infinity\n*\n* v = fromWords( 4293918720, 0 );\n* // returns -Infinity\n*/\n// MODULES //\n\nvar fromWords = require('./main.js'); // EXPORTS //\n\n\nmodule.exports = fromWords;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar FLOAT64_SMALLEST_NORMAL = require('@stdlib/constants-float64-smallest-normal');\n\nvar isInfinite = require('@stdlib/math-base-assert-is-infinite');\n\nvar isnan = require('@stdlib/math-base-assert-is-nan');\n\nvar abs = require('@stdlib/math-base-special-abs'); // VARIABLES //\n// (1<<52)\n\n\nvar SCALAR = 4503599627370496; // MAIN //\n\n/**\n* Returns a normal number `y` and exponent `exp` satisfying \\\\(x = y \\cdot 2^\\mathrm{exp}\\\\) and assigns results to a provided output array.\n*\n* @param {number} x - input value\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array index offset\n* @returns {Collection} output array\n*\n* @example\n* var pow = require( '@stdlib/math-base-special-pow' );\n*\n* var out = normalize( 3.14e-319, [ 0.0, 0 ], 1, 0 );\n* // returns [ 1.4141234400356668e-303, -52 ]\n*\n* var y = out[ 0 ];\n* var exp = out[ 1 ];\n*\n* var bool = ( y*pow(2.0,exp) === 3.14e-319 );\n* // returns true\n*\n* @example\n* var out = normalize( 0.0, [ 0.0, 0 ], 1, 0 );\n* // returns [ 0.0, 0 ];\n*\n* @example\n* var PINF = require( '@stdlib/constants-float64-pinf' );\n*\n* var out = normalize( PINF, [ 0.0, 0 ], 1, 0 );\n* // returns [ Infinity, 0 ]\n*\n* @example\n* var NINF = require( '@stdlib/constants-float64-ninf' );\n*\n* var out = normalize( NINF, [ 0.0, 0 ], 1, 0 );\n* // returns [ -Infinity, 0 ]\n*\n* @example\n* var out = normalize( NaN, [ 0.0, 0 ], 1, 0 );\n* // returns [ NaN, 0 ]\n*/\n\nfunction normalize(x, out, stride, offset) {\n  if (isnan(x) || isInfinite(x)) {\n    out[offset] = x;\n    out[offset + stride] = 0;\n    return out;\n  }\n\n  if (x !== 0.0 && abs(x) < FLOAT64_SMALLEST_NORMAL) {\n    out[offset] = x * SCALAR;\n    out[offset + stride] = -52;\n    return out;\n  }\n\n  out[offset] = x;\n  out[offset + stride] = 0;\n  return out;\n} // EXPORTS //\n\n\nmodule.exports = normalize;","var _a, _b;\n\nimport { __awaiter, __generator, __spreadArrays } from \"tslib\";\nimport { getCDN } from '../../lib/parse-cdn';\nimport { loadScript, unloadScript } from '../../lib/load-script';\nvar cdn = (_b = (_a = window.analytics) === null || _a === void 0 ? void 0 : _a._cdn) !== null && _b !== void 0 ? _b : getCDN();\nvar path = cdn + '/next-integrations';\n\nfunction normalizeName(name) {\n  return name.toLowerCase().replace('.', '').replace(/\\s+/g, '-');\n}\n\nfunction recordLoadMetrics(fullPath, ctx, name) {\n  var _a, _b, _c;\n\n  try {\n    var metric = ((_c = (_b = (_a = global.window) === null || _a === void 0 ? void 0 : _a.performance) === null || _b === void 0 ? void 0 : _b.getEntriesByName(fullPath, 'resource')) !== null && _c !== void 0 ? _c : [])[0]; // we assume everything that took under 100ms is cached\n\n    metric && ctx.stats.gauge('legacy_destination_time', Math.round(metric.duration), __spreadArrays([name], metric.duration < 100 ? ['cached'] : []));\n  } catch (_) {// not available\n  }\n}\n\nexport function loadIntegration(ctx, analyticsInstance, name, version, settings) {\n  return __awaiter(this, void 0, void 0, function () {\n    var pathName, fullPath, err_1, deps, integrationBuilder, analyticsStub, integration;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          pathName = normalizeName(name);\n          fullPath = path + \"/integrations/\" + pathName + \"/\" + version + \"/\" + pathName + \".dynamic.js.gz\";\n          _a.label = 1;\n\n        case 1:\n          _a.trys.push([1, 3,, 4]);\n\n          return [4\n          /*yield*/\n          , loadScript(fullPath)];\n\n        case 2:\n          _a.sent();\n\n          recordLoadMetrics(fullPath, ctx, name);\n          return [3\n          /*break*/\n          , 4];\n\n        case 3:\n          err_1 = _a.sent();\n          ctx.stats.gauge('legacy_destination_time', -1, [\"plugin:\" + name, \"failed\"]);\n          throw err_1;\n\n        case 4:\n          deps = window[pathName + \"Deps\"];\n          return [4\n          /*yield*/\n          , Promise.all(deps.map(function (dep) {\n            return loadScript(path + dep + '.gz');\n          })) // @ts-ignore\n          ];\n\n        case 5:\n          _a.sent(); // @ts-ignore\n\n\n          window[pathName + \"Loader\"]();\n          integrationBuilder = window[pathName + \"Integration\"]; // GA and Appcues use a different interface to instantiating integrations\n\n          if (integrationBuilder.Integration) {\n            analyticsStub = {\n              user: function user() {\n                return analyticsInstance.user();\n              },\n              addIntegration: function addIntegration() {}\n            };\n            integrationBuilder(analyticsStub);\n            integrationBuilder = integrationBuilder.Integration;\n          }\n\n          integration = new integrationBuilder(settings);\n          integration.analytics = analyticsInstance;\n          return [2\n          /*return*/\n          , integration];\n      }\n    });\n  });\n}\nexport function unloadIntegration(name, version) {\n  return __awaiter(this, void 0, void 0, function () {\n    var pathName;\n    return __generator(this, function (_a) {\n      pathName = normalizeName(name);\n      return [2\n      /*return*/\n      , unloadScript(path + \"/integrations/\" + pathName + \"/\" + version + \"/\" + pathName + \".dynamic.js.gz\")];\n    });\n  });\n}\nexport function resolveVersion(settings) {\n  var _a, _b, _c, _d;\n\n  return (_d = (_b = (_a = settings.versionSettings) === null || _a === void 0 ? void 0 : _a.override) !== null && _b !== void 0 ? _b : (_c = settings.versionSettings) === null || _c === void 0 ? void 0 : _c.version) !== null && _d !== void 0 ? _d : 'latest';\n}","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Store = exports.matches = exports.transform = void 0;\n\nvar transformers_1 = require(\"./transformers\");\n\nObject.defineProperty(exports, \"transform\", {\n  enumerable: true,\n  get: function get() {\n    return __importDefault(transformers_1).default;\n  }\n});\n\nvar matchers_1 = require(\"./matchers\");\n\nObject.defineProperty(exports, \"matches\", {\n  enumerable: true,\n  get: function get() {\n    return __importDefault(matchers_1).default;\n  }\n});\n\nvar store_1 = require(\"./store\");\n\nObject.defineProperty(exports, \"Store\", {\n  enumerable: true,\n  get: function get() {\n    return __importDefault(store_1).default;\n  }\n});","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar md5_1 = __importDefault(require(\"tiny-hashes/md5\"));\n\nvar dlv_1 = __importDefault(require(\"dlv\"));\n\nvar math_base_special_ldexp_1 = __importDefault(require(\"@stdlib/math-base-special-ldexp\"));\n\nvar dset_1 = require(\"dset\");\n\nvar unset_1 = require(\"./unset\");\n\nfunction transform(payload, transformers) {\n  var transformedPayload = payload;\n\n  for (var _i = 0, transformers_1 = transformers; _i < transformers_1.length; _i++) {\n    var transformer = transformers_1[_i];\n\n    switch (transformer.type) {\n      case 'drop':\n        return null;\n\n      case 'drop_properties':\n        dropProperties(transformedPayload, transformer.config);\n        break;\n\n      case 'allow_properties':\n        allowProperties(transformedPayload, transformer.config);\n        break;\n\n      case 'sample_event':\n        if (sampleEvent(transformedPayload, transformer.config)) {\n          break;\n        }\n\n        return null;\n\n      case 'map_properties':\n        mapProperties(transformedPayload, transformer.config);\n        break;\n\n      case 'hash_properties':\n        // Not yet supported, but don't throw an error. Just ignore.\n        break;\n\n      default:\n        throw new Error(\"Transformer of type \\\"\".concat(transformer.type, \"\\\" is unsupported.\"));\n    }\n  }\n\n  return transformedPayload;\n}\n\nexports.default = transform; // dropProperties removes all specified props from the object.\n\nfunction dropProperties(payload, config) {\n  for (var key in config.drop) {\n    if (!config.drop.hasOwnProperty(key)) {\n      continue;\n    } // If key is empty, it refers to the top-level object.\n\n\n    var field = key === '' ? payload : (0, dlv_1.default)(payload, key); // Can only drop props off of arrays and objects.\n\n    if (_typeof(field) !== 'object' || field === null) {\n      continue;\n    }\n\n    for (var _i = 0, _a = config.drop[key]; _i < _a.length; _i++) {\n      var target = _a[_i];\n      delete field[target];\n    }\n  }\n} // allowProperties ONLY allows the specific targets within the keys. (e.g. \"a.foo\": [\"bar\", \"baz\"]\n// on {a: {foo: {bar: 1, baz: 2}, other: 3}} will not have any drops, as it only looks inside a.foo\n\n\nfunction allowProperties(payload, config) {\n  for (var key in config.allow) {\n    if (!config.allow.hasOwnProperty(key)) {\n      continue;\n    } // If key is empty, it refers to the top-level object.\n\n\n    var field = key === '' ? payload : (0, dlv_1.default)(payload, key); // Can only drop props off of arrays and objects.\n\n    if (_typeof(field) !== 'object' || field === null) {\n      continue;\n    } // Execution order fortunately doesn't really matter (e.g. if someone filtered off of foo.bar, then foo.bar.baz)\n    // except for micro-optimization.\n\n\n    for (var k in field) {\n      if (!field.hasOwnProperty(k)) {\n        continue;\n      }\n\n      if (config.allow[key].indexOf(k) === -1) {\n        delete field[k];\n      }\n    }\n  }\n}\n\nfunction mapProperties(payload, config) {\n  // Some configs might try to modify or read from a field multiple times. We will only ever read\n  // values as they were before any modifications began. Thus, if you try to override e.g.\n  // {a: {b: 1}} with set(a, 'b', 2) (which results in {a: {b: 2}}) and then try to copy a.b into\n  // a.c, you will get {a: {b: 2, c:1}} and NOT {a: {b:2, c:2}}. This prevents map evaluation\n  // order from mattering, and === what server-side does.\n  // See: https://github.com/segmentio/tsub/blob/661695a63b60b90471796e667458f076af788c19/transformers/map_properties.go#L179-L200\n  var initialPayload = JSON.parse(JSON.stringify(payload));\n\n  for (var key in config.map) {\n    if (!config.map.hasOwnProperty(key)) {\n      continue;\n    }\n\n    var actionMap = config.map[key]; // Can't manipulate non-objects. Check that the parent is one. Strip the last .field\n    // from the string.\n\n    var splitKey = key.split('.');\n    var parent_1 = void 0;\n\n    if (splitKey.length > 1) {\n      splitKey.pop();\n      parent_1 = (0, dlv_1.default)(initialPayload, splitKey.join('.'));\n    } else {\n      parent_1 = payload;\n    }\n\n    if (_typeof(parent_1) !== 'object') {\n      continue;\n    } // These actions are exclusive to each other.\n\n\n    if (actionMap.copy) {\n      var valueToCopy = (0, dlv_1.default)(initialPayload, actionMap.copy);\n\n      if (valueToCopy !== undefined) {\n        (0, dset_1.dset)(payload, key, valueToCopy);\n      }\n    } else if (actionMap.move) {\n      var valueToMove = (0, dlv_1.default)(initialPayload, actionMap.move);\n\n      if (valueToMove !== undefined) {\n        (0, dset_1.dset)(payload, key, valueToMove);\n      }\n\n      (0, unset_1.unset)(payload, actionMap.move);\n    } // Have to check only if property exists, as null, undefined, and other vals could be explicitly set.\n    else if (actionMap.hasOwnProperty('set')) {\n        (0, dset_1.dset)(payload, key, actionMap.set);\n      } // to_string is not exclusive and can be paired with other actions. Final action.\n\n\n    if (actionMap.to_string) {\n      var valueToString = (0, dlv_1.default)(payload, key); // Do not string arrays and objects. Do not double-encode strings.\n\n      if (typeof valueToString === 'string' || _typeof(valueToString) === 'object' && valueToString !== null) {\n        continue;\n      } // TODO: Check stringifier in Golang for parity.\n\n\n      if (valueToString !== undefined) {\n        (0, dset_1.dset)(payload, key, JSON.stringify(valueToString));\n      } else {\n        // TODO: Check this behavior.\n        (0, dset_1.dset)(payload, key, 'undefined');\n      }\n    }\n  }\n}\n\nfunction sampleEvent(payload, config) {\n  if (config.sample.percent <= 0) {\n    return false;\n  } else if (config.sample.percent >= 1) {\n    return true;\n  } // If we're not filtering deterministically, just use raw percentage.\n\n\n  if (!config.sample.path) {\n    return samplePercent(config.sample.percent);\n  } // Otherwise, use a deterministic hash.\n\n\n  return sampleConsistentPercent(payload, config);\n}\n\nfunction samplePercent(percent) {\n  // Math.random returns [0, 1) => 0.0<>0.9999...\n  return Math.random() <= percent;\n} // sampleConsistentPercent converts an input string of bytes into a consistent uniform\n// continuous distribution of [0.0, 1.0]. This is based on\n// http://mumble.net/~campbell/tmp/random_real.c, but using the digest\n// result of the input value as the random information.\n// IMPORTANT - This function needs to === the Golang implementation to ensure that the two return the same vals!\n// See: https://github.com/segmentio/sampler/blob/65cb04132305a04fcd4bcaef67d57fbe40c30241/sampler.go#L13-L38\n// Since AJS supports IE9+ (typed arrays were introduced in IE10) we're doing some manual array math.\n// This could be done directly with strings, but arrays are easier to reason about/have better function support.\n\n\nfunction sampleConsistentPercent(payload, config) {\n  var field = (0, dlv_1.default)(payload, config.sample.path); // Operate off of JSON bytes. TODO: Validate all type behavior, esp. strings.\n\n  var digest = (0, md5_1.default)(JSON.stringify(field));\n  var exponent = -64; // Manually maintain 64-bit int as an array.\n\n  var significand = []; // Left-shift and OR for first 8 bytes of digest. (8 bytes * 8 = 64 bits)\n\n  consumeDigest(digest.slice(0, 8), significand);\n  var leadingZeros = 0;\n\n  for (var i = 0; i < 64; i++) {\n    if (significand[i] === 1) {\n      break;\n    }\n\n    leadingZeros++;\n  }\n\n  if (leadingZeros !== 0) {\n    // Use the last 8 bytes of the digest, same as before.\n    var val = [];\n    consumeDigest(digest.slice(9, 16), val);\n    exponent -= leadingZeros; // Left-shift away leading zeros in significand.\n\n    significand.splice(0, leadingZeros); // Right-shift val by 64 minus leading zeros and push into significand.\n\n    val.splice(64 - leadingZeros);\n    significand = significand.concat(val);\n  } // Flip 64th bit\n\n\n  significand[63] = significand[63] === 0 ? 1 : 0; // Convert our manual binary into a JS num (binary arr => binary string => psuedo-int) and run the ldexp!\n\n  return (0, math_base_special_ldexp_1.default)(parseInt(significand.join(''), 2), exponent) < config.sample.percent;\n} // Array byte filler helper\n\n\nfunction consumeDigest(digest, arr) {\n  for (var i = 0; i < 8; i++) {\n    var remainder = digest[i];\n\n    for (var binary = 128; binary >= 1; binary /= 2) {\n      if (remainder - binary >= 0) {\n        remainder -= binary;\n        arr.push(1);\n      } else {\n        arr.push(0);\n      }\n    }\n  }\n}","for (var r = [], o = 0; o < 64;) {\n  r[o] = 0 | 4294967296 * Math.sin(++o % Math.PI);\n}\n\nexport default function (t) {\n  var e,\n      f,\n      n,\n      a = [e = 1732584193, f = 4023233417, ~e, ~f],\n      c = [],\n      h = unescape(encodeURI(t)) + \"\",\n      u = h.length;\n\n  for (t = --u / 4 + 2 | 15, c[--t] = 8 * u; ~u;) {\n    c[u >> 2] |= h.charCodeAt(u) << 8 * u--;\n  }\n\n  for (o = h = 0; o < t; o += 16) {\n    for (u = a; h < 64; u = [n = u[3], e + ((n = u[0] + [e & f | ~e & n, n & e | ~n & f, e ^ f ^ n, f ^ (e | ~n)][u = h >> 4] + r[h] + ~~c[o | 15 & [h, 5 * h + 1, 3 * h + 5, 7 * h][u]]) << (u = [7, 12, 17, 22, 5, 9, 14, 20, 4, 11, 16, 23, 6, 10, 15, 21][4 * u + h++ % 4]) | n >>> -u), e, f]) {\n      e = 0 | u[1], f = u[2];\n    }\n\n    for (h = 4; h;) {\n      a[--h] += u[h];\n    }\n  }\n\n  for (t = \"\"; h < 32;) {\n    t += (a[h >> 3] >> 4 * (1 ^ h++) & 15).toString(16);\n  }\n\n  return t;\n}","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Multiply a double-precision floating-point number by an integer power of two.\n*\n* @module @stdlib/math-base-special-ldexp\n*\n* @example\n* var ldexp = require( '@stdlib/math-base-special-ldexp' );\n*\n* var x = ldexp( 0.5, 3 ); // => 0.5 * 2^3 = 0.5 * 8\n* // returns 4.0\n*\n* x = ldexp( 4.0, -2 ); // => 4 * 2^(-2) = 4 * (1/4)\n* // returns 1.0\n*\n* x = ldexp( 0.0, 20 );\n* // returns 0.0\n*\n* x = ldexp( -0.0, 39 );\n* // returns -0.0\n*\n* x = ldexp( NaN, -101 );\n* // returns NaN\n*\n* x = ldexp( Infinity, 11 );\n* // returns Infinity\n*\n* x = ldexp( -Infinity, -118 );\n* // returns -Infinity\n*/\n// MODULES //\n\nvar ldexp = require('./ldexp.js'); // EXPORTS //\n\n\nmodule.exports = ldexp;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // NOTES //\n\n/*\n* => ldexp: load exponent (see [The Open Group]{@link http://pubs.opengroup.org/onlinepubs/9699919799/functions/ldexp.html} and [cppreference]{@link http://en.cppreference.com/w/c/numeric/math/ldexp}).\n*/\n// MODULES //\n\nvar PINF = require('@stdlib/constants-float64-pinf');\n\nvar NINF = require('@stdlib/constants-float64-ninf');\n\nvar BIAS = require('@stdlib/constants-float64-exponent-bias');\n\nvar MAX_EXPONENT = require('@stdlib/constants-float64-max-base2-exponent');\n\nvar MAX_SUBNORMAL_EXPONENT = require('@stdlib/constants-float64-max-base2-exponent-subnormal');\n\nvar MIN_SUBNORMAL_EXPONENT = require('@stdlib/constants-float64-min-base2-exponent-subnormal');\n\nvar isnan = require('@stdlib/math-base-assert-is-nan');\n\nvar isInfinite = require('@stdlib/math-base-assert-is-infinite');\n\nvar copysign = require('@stdlib/math-base-special-copysign');\n\nvar normalize = require('@stdlib/number-float64-base-normalize');\n\nvar floatExp = require('@stdlib/number-float64-base-exponent');\n\nvar toWords = require('@stdlib/number-float64-base-to-words');\n\nvar fromWords = require('@stdlib/number-float64-base-from-words'); // VARIABLES //\n// 1/(1<<52) = 1/(2**52) = 1/4503599627370496\n\n\nvar TWO52_INV = 2.220446049250313e-16; // Exponent all 0s: 1 00000000000 11111111111111111111 => 2148532223\n\nvar CLEAR_EXP_MASK = 0x800fffff >>> 0; // asm type annotation\n// Normalization workspace:\n\nvar FRAC = [0.0, 0.0]; // WARNING: not thread safe\n// High/low words workspace:\n\nvar WORDS = [0, 0]; // WARNING: not thread safe\n// MAIN //\n\n/**\n* Multiplies a double-precision floating-point number by an integer power of two.\n*\n* @param {number} frac - fraction\n* @param {integer} exp - exponent\n* @returns {number} double-precision floating-point number\n*\n* @example\n* var x = ldexp( 0.5, 3 ); // => 0.5 * 2^3 = 0.5 * 8\n* // returns 4.0\n*\n* @example\n* var x = ldexp( 4.0, -2 ); // => 4 * 2^(-2) = 4 * (1/4)\n* // returns 1.0\n*\n* @example\n* var x = ldexp( 0.0, 20 );\n* // returns 0.0\n*\n* @example\n* var x = ldexp( -0.0, 39 );\n* // returns -0.0\n*\n* @example\n* var x = ldexp( NaN, -101 );\n* // returns NaN\n*\n* @example\n* var x = ldexp( Infinity, 11 );\n* // returns Infinity\n*\n* @example\n* var x = ldexp( -Infinity, -118 );\n* // returns -Infinity\n*/\n\nfunction ldexp(frac, exp) {\n  var high;\n  var m;\n\n  if (frac === 0.0 || // handles +-0\n  isnan(frac) || isInfinite(frac)) {\n    return frac;\n  } // Normalize the input fraction:\n\n\n  normalize(FRAC, frac);\n  frac = FRAC[0];\n  exp += FRAC[1]; // Extract the exponent from `frac` and add it to `exp`:\n\n  exp += floatExp(frac); // Check for underflow/overflow...\n\n  if (exp < MIN_SUBNORMAL_EXPONENT) {\n    return copysign(0.0, frac);\n  }\n\n  if (exp > MAX_EXPONENT) {\n    if (frac < 0.0) {\n      return NINF;\n    }\n\n    return PINF;\n  } // Check for a subnormal and scale accordingly to retain precision...\n\n\n  if (exp <= MAX_SUBNORMAL_EXPONENT) {\n    exp += 52;\n    m = TWO52_INV;\n  } else {\n    m = 1.0;\n  } // Split the fraction into higher and lower order words:\n\n\n  toWords(WORDS, frac);\n  high = WORDS[0]; // Clear the exponent bits within the higher order word:\n\n  high &= CLEAR_EXP_MASK; // Set the exponent bits to the new exponent:\n\n  high |= exp + BIAS << 20; // Create a new floating-point number:\n\n  return m * fromWords(high, WORDS[1]);\n} // EXPORTS //\n\n\nmodule.exports = ldexp;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Constructor which returns a `Number` object.\n*\n* @module @stdlib/number-ctor\n*\n* @example\n* var Number = require( '@stdlib/number-ctor' );\n*\n* var v = new Number( 10.0 );\n* // returns <Number>\n*/\n// MODULES //\n\nvar Number = require('./number.js'); // EXPORTS //\n\n\nmodule.exports = Number;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // EXPORTS //\n\nmodule.exports = Number; // eslint-disable-line stdlib/require-globals","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* The maximum biased base 2 exponent for a double-precision floating-point number.\n*\n* @module @stdlib/constants-float64-max-base2-exponent\n* @type {integer32}\n*\n* @example\n* var FLOAT64_MAX_BASE2_EXPONENT = require( '@stdlib/constants-float64-max-base2-exponent' );\n* // returns 1023\n*/\n// MAIN //\n\n/**\n* The maximum biased base 2 exponent for a double-precision floating-point number.\n*\n* ```text\n* 11111111110 => 2046 - BIAS = 1023\n* ```\n*\n* where `BIAS = 1023`.\n*\n* @constant\n* @type {integer32}\n* @default 1023\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\n\nvar FLOAT64_MAX_BASE2_EXPONENT = 1023 | 0; // asm type annotation\n// EXPORTS //\n\nmodule.exports = FLOAT64_MAX_BASE2_EXPONENT;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* The maximum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* @module @stdlib/constants-float64-max-base2-exponent-subnormal\n* @type {integer32}\n*\n* @example\n* var FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL = require( '@stdlib/constants-float64-max-base2-exponent-subnormal' );\n* // returns -1023\n*/\n// MAIN //\n\n/**\n* The maximum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* ```text\n* 00000000000 => 0 - BIAS = -1023\n* ```\n*\n* where `BIAS = 1023`.\n*\n* @constant\n* @type {integer32}\n* @default -1023\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\n\nvar FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL = -1023 | 0; // asm type annotation\n// EXPORTS //\n\nmodule.exports = FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* The minimum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* @module @stdlib/constants-float64-min-base2-exponent-subnormal\n* @type {integer32}\n*\n* @example\n* var FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL = require( '@stdlib/constants-float64-min-base2-exponent-subnormal' );\n* // returns -1074\n*/\n// MAIN //\n\n/**\n* The minimum biased base 2 exponent for a subnormal double-precision floating-point number.\n*\n* ```text\n* -(BIAS+(52-1)) = -(1023+51) = -1074\n* ```\n*\n* where `BIAS = 1023` and `52` is the number of digits in the significand.\n*\n* @constant\n* @type {integer32}\n* @default -1074\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\n\nvar FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL = -1074 | 0; // asm type annotation\n// EXPORTS //\n\nmodule.exports = FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MAIN //\n\n/**\n* Tests if a double-precision floating-point numeric value is `NaN`.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( 7.0 );\n* // returns false\n*/\n\nfunction isnan(x) {\n  return x !== x;\n} // EXPORTS //\n\n\nmodule.exports = isnan;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar PINF = require('@stdlib/constants-float64-pinf');\n\nvar NINF = require('@stdlib/constants-float64-ninf'); // MAIN //\n\n/**\n* Tests if a double-precision floating-point numeric value is infinite.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is infinite\n*\n* @example\n* var bool = isInfinite( Infinity );\n* // returns true\n*\n* @example\n* var bool = isInfinite( -Infinity );\n* // returns true\n*\n* @example\n* var bool = isInfinite( 5.0 );\n* // returns false\n*\n* @example\n* var bool = isInfinite( NaN );\n* // returns false\n*/\n\n\nfunction isInfinite(x) {\n  return x === PINF || x === NINF;\n} // EXPORTS //\n\n\nmodule.exports = isInfinite;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Return a double-precision floating-point number with the magnitude of `x` and the sign of `y`.\n*\n* @module @stdlib/math-base-special-copysign\n*\n* @example\n* var copysign = require( '@stdlib/math-base-special-copysign' );\n*\n* var z = copysign( -3.14, 10.0 );\n* // returns 3.14\n*\n* z = copysign( 3.14, -1.0 );\n* // returns -3.14\n*\n* z = copysign( 1.0, -0.0 );\n* // returns -1.0\n*\n* z = copysign( -3.14, -0.0 );\n* // returns -3.14\n*\n* z = copysign( -0.0, 1.0 );\n* // returns 0.0\n*/\n// MODULES //\n\nvar main = require('./main.js'); // EXPORTS //\n\n\nmodule.exports = main;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar SIGN_MASK = require('@stdlib/constants-float64-high-word-sign-mask');\n\nvar ABS_MASK = require('@stdlib/constants-float64-high-word-abs-mask');\n\nvar toWords = require('@stdlib/number-float64-base-to-words');\n\nvar getHighWord = require('@stdlib/number-float64-base-get-high-word');\n\nvar fromWords = require('@stdlib/number-float64-base-from-words'); // VARIABLES //\n// High/low words workspace:\n\n\nvar WORDS = [0, 0]; // MAIN //\n\n/**\n* Returns a double-precision floating-point number with the magnitude of `x` and the sign of `y`.\n*\n* @param {number} x - number from which to derive a magnitude\n* @param {number} y - number from which to derive a sign\n* @returns {number} a double-precision floating-point number\n*\n* @example\n* var z = copysign( -3.14, 10.0 );\n* // returns 3.14\n*\n* @example\n* var z = copysign( 3.14, -1.0 );\n* // returns -3.14\n*\n* @example\n* var z = copysign( 1.0, -0.0 );\n* // returns -1.0\n*\n* @example\n* var z = copysign( -3.14, -0.0 );\n* // returns -3.14\n*\n* @example\n* var z = copysign( -0.0, 1.0 );\n* // returns 0.0\n*/\n\nfunction copysign(x, y) {\n  var hx;\n  var hy; // Split `x` into higher and lower order words:\n\n  toWords.assign(x, WORDS, 1, 0);\n  hx = WORDS[0]; // Turn off the sign bit of `x`:\n\n  hx &= ABS_MASK; // Extract the higher order word from `y`:\n\n  hy = getHighWord(y); // Leave only the sign bit of `y` turned on:\n\n  hy &= SIGN_MASK; // Copy the sign bit of `y` to `x`:\n\n  hx |= hy; // Return a new value having the same magnitude as `x`, but with the sign of `y`:\n\n  return fromWords(hx, WORDS[1]);\n} // EXPORTS //\n\n\nmodule.exports = copysign;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* High word mask for the sign bit of a double-precision floating-point number.\n*\n* @module @stdlib/constants-float64-high-word-sign-mask\n* @type {uinteger32}\n*\n* @example\n* var FLOAT64_HIGH_WORD_SIGN_MASK = require( '@stdlib/constants-float64-high-word-sign-mask' );\n* // returns 2147483648\n*/\n// MAIN //\n\n/**\n* High word mask for the sign bit of a double-precision floating-point number.\n*\n* ## Notes\n*\n* The high word mask for the sign bot of a double-precision floating-point number is an unsigned 32-bit integer with the value \\\\( 2147483648 \\\\), which corresponds to the bit sequence\n*\n* ```binarystring\n* 1 00000000000 00000000000000000000\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 0x80000000\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\n\nvar FLOAT64_HIGH_WORD_SIGN_MASK = 0x80000000 >>> 0; // eslint-disable-line id-length\n// EXPORTS //\n\nmodule.exports = FLOAT64_HIGH_WORD_SIGN_MASK;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* High word mask for excluding the sign bit of a double-precision floating-point number.\n*\n* @module @stdlib/constants-float64-high-word-abs-mask\n* @type {uinteger32}\n*\n* @example\n* var FLOAT64_HIGH_WORD_ABS_MASK = require( '@stdlib/constants-float64-high-word-abs-mask' );\n* // returns 2147483647\n*/\n// MAIN //\n\n/**\n* High word mask for excluding the sign bit of a double-precision floating-point number.\n*\n* ## Notes\n*\n* The high word mask for excluding the sign bit of a double-precision floating-point number is an unsigned 32-bit integer with the value \\\\( 2147483647 \\\\), which corresponds to the bit sequence\n*\n* ```binarystring\n* 0 11111111111 11111111111111111111\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 0x7fffffff\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\n\nvar FLOAT64_HIGH_WORD_ABS_MASK = 0x7fffffff >>> 0; // eslint-disable-line id-length\n// EXPORTS //\n\nmodule.exports = FLOAT64_HIGH_WORD_ABS_MASK;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar defineProperty = require('@stdlib/utils-define-property'); // MAIN //\n\n/**\n* Defines a non-enumerable read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setNonEnumerableReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\n\n\nfunction setNonEnumerableReadOnly(obj, prop, value) {\n  defineProperty(obj, prop, {\n    'configurable': false,\n    'enumerable': false,\n    'writable': false,\n    'value': value\n  });\n} // EXPORTS //\n\n\nmodule.exports = setNonEnumerableReadOnly;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Define (or modify) an object property.\n*\n* @module @stdlib/utils-define-property\n*\n* @example\n* var defineProperty = require( '@stdlib/utils-define-property' );\n*\n* var obj = {};\n* defineProperty( obj, 'foo', {\n*     'value': 'bar',\n*     'writable': false,\n*     'configurable': false,\n*     'enumerable': false\n* });\n* obj.foo = 'boop'; // => throws\n*/\n// MODULES //\n\nvar hasDefinePropertySupport = require('./has_define_property_support.js');\n\nvar builtin = require('./builtin.js');\n\nvar polyfill = require('./polyfill.js'); // MAIN //\n\n\nvar defineProperty;\n\nif (hasDefinePropertySupport()) {\n  defineProperty = builtin;\n} else {\n  defineProperty = polyfill;\n} // EXPORTS //\n\n\nmodule.exports = defineProperty;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar defineProperty = require('./define_property.js'); // MAIN //\n\n/**\n* Tests for `Object.defineProperty` support.\n*\n* @private\n* @returns {boolean} boolean indicating if an environment has `Object.defineProperty` support\n*\n* @example\n* var bool = hasDefinePropertySupport();\n* // returns <boolean>\n*/\n\n\nfunction hasDefinePropertySupport() {\n  // Test basic support...\n  try {\n    defineProperty({}, 'x', {});\n    return true;\n  } catch (err) {\n    // eslint-disable-line no-unused-vars\n    return false;\n  }\n} // EXPORTS //\n\n\nmodule.exports = hasDefinePropertySupport;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MAIN //\n\nvar main = typeof Object.defineProperty === 'function' ? Object.defineProperty : null; // EXPORTS //\n\nmodule.exports = main;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @name defineProperty\n* @type {Function}\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\n\nvar defineProperty = Object.defineProperty; // EXPORTS //\n\nmodule.exports = defineProperty;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle, no-proto */\n'use strict'; // VARIABLES //\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar objectProtoype = Object.prototype;\nvar toStr = objectProtoype.toString;\nvar defineGetter = objectProtoype.__defineGetter__;\nvar defineSetter = objectProtoype.__defineSetter__;\nvar lookupGetter = objectProtoype.__lookupGetter__;\nvar lookupSetter = objectProtoype.__lookupSetter__; // MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @param {Object} obj - object on which to define the property\n* @param {string} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\n\nfunction defineProperty(obj, prop, descriptor) {\n  var prototype;\n  var hasValue;\n  var hasGet;\n  var hasSet;\n\n  if (_typeof(obj) !== 'object' || obj === null || toStr.call(obj) === '[object Array]') {\n    throw new TypeError('invalid argument. First argument must be an object. Value: `' + obj + '`.');\n  }\n\n  if (_typeof(descriptor) !== 'object' || descriptor === null || toStr.call(descriptor) === '[object Array]') {\n    throw new TypeError('invalid argument. Property descriptor must be an object. Value: `' + descriptor + '`.');\n  }\n\n  hasValue = 'value' in descriptor;\n\n  if (hasValue) {\n    if (lookupGetter.call(obj, prop) || lookupSetter.call(obj, prop)) {\n      // Override `__proto__` to avoid touching inherited accessors:\n      prototype = obj.__proto__;\n      obj.__proto__ = objectProtoype; // Delete property as existing getters/setters prevent assigning value to specified property:\n\n      delete obj[prop];\n      obj[prop] = descriptor.value; // Restore original prototype:\n\n      obj.__proto__ = prototype;\n    } else {\n      obj[prop] = descriptor.value;\n    }\n  }\n\n  hasGet = 'get' in descriptor;\n  hasSet = 'set' in descriptor;\n\n  if (hasValue && (hasGet || hasSet)) {\n    throw new Error('invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.');\n  }\n\n  if (hasGet && defineGetter) {\n    defineGetter.call(obj, prop, descriptor.get);\n  }\n\n  if (hasSet && defineSetter) {\n    defineSetter.call(obj, prop, descriptor.set);\n  }\n\n  return obj;\n} // EXPORTS //\n\n\nmodule.exports = defineProperty;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar fcn = require('./assign.js'); // MAIN //\n\n/**\n* Splits a double-precision floating-point number into a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* @param {number} x - input value\n* @returns {Array<number>} output array\n*\n* @example\n* var w = toWords( 3.14e201 );\n* // returns [ 1774486211, 2479577218 ]\n*/\n\n\nfunction toWords(x) {\n  return fcn(x, [0 >>> 0, 0 >>> 0], 1, 0);\n} // EXPORTS //\n\n\nmodule.exports = toWords;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Test for native `Uint32Array` support.\n*\n* @module @stdlib/assert-has-uint32array-support\n*\n* @example\n* var hasUint32ArraySupport = require( '@stdlib/assert-has-uint32array-support' );\n*\n* var bool = hasUint32ArraySupport();\n* // returns <boolean>\n*/\n// MODULES //\n\nvar hasUint32ArraySupport = require('./main.js'); // EXPORTS //\n\n\nmodule.exports = hasUint32ArraySupport;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar isUint32Array = require('@stdlib/assert-is-uint32array');\n\nvar UINT32_MAX = require('@stdlib/constants-uint32-max');\n\nvar GlobalUint32Array = require('./uint32array.js'); // MAIN //\n\n/**\n* Tests for native `Uint32Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint32Array` support\n*\n* @example\n* var bool = hasUint32ArraySupport();\n* // returns <boolean>\n*/\n\n\nfunction hasUint32ArraySupport() {\n  var bool;\n  var arr;\n\n  if (typeof GlobalUint32Array !== 'function') {\n    return false;\n  } // Test basic support...\n\n\n  try {\n    arr = [1, 3.14, -3.14, UINT32_MAX + 1, UINT32_MAX + 2];\n    arr = new GlobalUint32Array(arr);\n    bool = isUint32Array(arr) && arr[0] === 1 && arr[1] === 3 && // truncation\n    arr[2] === UINT32_MAX - 2 && // truncation and wrap around\n    arr[3] === 0 && // wrap around\n    arr[4] === 1 // wrap around\n    ;\n  } catch (err) {\n    // eslint-disable-line no-unused-vars\n    bool = false;\n  }\n\n  return bool;\n} // EXPORTS //\n\n\nmodule.exports = hasUint32ArraySupport;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Test if a value is a Uint32Array.\n*\n* @module @stdlib/assert-is-uint32array\n*\n* @example\n* var isUint32Array = require( '@stdlib/assert-is-uint32array' );\n*\n* var bool = isUint32Array( new Uint32Array( 10 ) );\n* // returns true\n*\n* bool = isUint32Array( [] );\n* // returns false\n*/\n// MODULES //\n\nvar isUint32Array = require('./main.js'); // EXPORTS //\n\n\nmodule.exports = isUint32Array;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar nativeClass = require('@stdlib/utils-native-class'); // VARIABLES //\n\n\nvar hasUint32Array = typeof Uint32Array === 'function'; // eslint-disable-line stdlib/require-globals\n// MAIN //\n\n/**\n* Tests if a value is a Uint32Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint32Array\n*\n* @example\n* var bool = isUint32Array( new Uint32Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint32Array( [] );\n* // returns false\n*/\n\nfunction isUint32Array(value) {\n  return hasUint32Array && value instanceof Uint32Array || // eslint-disable-line stdlib/require-globals\n  nativeClass(value) === '[object Uint32Array]';\n} // EXPORTS //\n\n\nmodule.exports = isUint32Array;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Test for native `toStringTag` support.\n*\n* @module @stdlib/assert-has-tostringtag-support\n*\n* @example\n* var hasToStringTagSupport = require( '@stdlib/assert-has-tostringtag-support' );\n*\n* var bool = hasToStringTagSupport();\n* // returns <boolean>\n*/\n// MODULES //\n\nvar hasToStringTagSupport = require('./main.js'); // EXPORTS //\n\n\nmodule.exports = hasToStringTagSupport;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar hasSymbols = require('@stdlib/assert-has-symbol-support'); // VARIABLES //\n\n\nvar FLG = hasSymbols(); // MAIN //\n\n/**\n* Tests for native `toStringTag` support.\n*\n* @returns {boolean} boolean indicating if an environment has `toStringTag` support\n*\n* @example\n* var bool = hasToStringTagSupport();\n* // returns <boolean>\n*/\n\nfunction hasToStringTagSupport() {\n  return FLG && _typeof(Symbol.toStringTag) === 'symbol';\n} // EXPORTS //\n\n\nmodule.exports = hasToStringTagSupport;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Test for native `Symbol` support.\n*\n* @module @stdlib/assert-has-symbol-support\n*\n* @example\n* var hasSymbolSupport = require( '@stdlib/assert-has-symbol-support' );\n*\n* var bool = hasSymbolSupport();\n* // returns <boolean>\n*/\n// MODULES //\n\nvar hasSymbolSupport = require('./main.js'); // EXPORTS //\n\n\nmodule.exports = hasSymbolSupport;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MAIN //\n\n/**\n* Tests for native `Symbol` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Symbol` support\n*\n* @example\n* var bool = hasSymbolSupport();\n* // returns <boolean>\n*/\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction hasSymbolSupport() {\n  return typeof Symbol === 'function' && _typeof(Symbol('foo')) === 'symbol';\n} // EXPORTS //\n\n\nmodule.exports = hasSymbolSupport;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar toStr = require('./tostring.js'); // MAIN //\n\n/**\n* Returns a string value indicating a specification defined classification (via the internal property `[[Class]]`) of an object.\n*\n* @param {*} v - input value\n* @returns {string} string value indicating a specification defined classification of the input value\n*\n* @example\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* @example\n* var str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* @example\n* function Beep() {\n*     return this;\n* }\n* var str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\n\n\nfunction nativeClass(v) {\n  return toStr.call(v);\n} // EXPORTS //\n\n\nmodule.exports = nativeClass;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar hasOwnProp = require('@stdlib/assert-has-own-property');\n\nvar toStringTag = require('./tostringtag.js');\n\nvar toStr = require('./tostring.js'); // MAIN //\n\n/**\n* Returns a string value indicating a specification defined classification of an object in environments supporting `Symbol.toStringTag`.\n*\n* @param {*} v - input value\n* @returns {string} string value indicating a specification defined classification of the input value\n*\n* @example\n* var str = nativeClass( 'a' );\n* // returns '[object String]'\n*\n* @example\n* var str = nativeClass( 5 );\n* // returns '[object Number]'\n*\n* @example\n* function Beep() {\n*     return this;\n* }\n* var str = nativeClass( new Beep() );\n* // returns '[object Object]'\n*/\n\n\nfunction nativeClass(v) {\n  var isOwn;\n  var tag;\n  var out;\n\n  if (v === null || v === void 0) {\n    return toStr.call(v);\n  }\n\n  tag = v[toStringTag];\n  isOwn = hasOwnProp(v, toStringTag); // Attempt to override the `toStringTag` property. For built-ins having a `Symbol.toStringTag` property (e.g., `JSON`, `Math`, etc), the `Symbol.toStringTag` property is read-only (e.g., , so we need to wrap in a `try/catch`.\n\n  try {\n    v[toStringTag] = void 0;\n  } catch (err) {\n    // eslint-disable-line no-unused-vars\n    return toStr.call(v);\n  }\n\n  out = toStr.call(v);\n\n  if (isOwn) {\n    v[toStringTag] = tag;\n  } else {\n    delete v[toStringTag];\n  }\n\n  return out;\n} // EXPORTS //\n\n\nmodule.exports = nativeClass;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Test whether an object has a specified property.\n*\n* @module @stdlib/assert-has-own-property\n*\n* @example\n* var hasOwnProp = require( '@stdlib/assert-has-own-property' );\n*\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'boop' );\n* // returns true\n*\n* bool = hasOwnProp( beep, 'bop' );\n* // returns false\n*/\n// MODULES //\n\nvar hasOwnProp = require('./main.js'); // EXPORTS //\n\n\nmodule.exports = hasOwnProp;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // FUNCTIONS //\n\nvar has = Object.prototype.hasOwnProperty; // MAIN //\n\n/**\n* Tests if an object has a specified property.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object has a specified property\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'bap' );\n* // returns false\n*/\n\nfunction hasOwnProp(value, property) {\n  if (value === void 0 || value === null) {\n    return false;\n  }\n\n  return has.call(value, property);\n} // EXPORTS //\n\n\nmodule.exports = hasOwnProp;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MAIN //\n\nvar toStrTag = typeof Symbol === 'function' ? Symbol.toStringTag : ''; // EXPORTS //\n\nmodule.exports = toStrTag;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Maximum unsigned 32-bit integer.\n*\n* @module @stdlib/constants-uint32-max\n* @type {uinteger32}\n*\n* @example\n* var UINT32_MAX = require( '@stdlib/constants-uint32-max' );\n* // returns 4294967295\n*/\n// MAIN //\n\n/**\n* Maximum unsigned 32-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{32} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 11111111111111111111111111111111\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 4294967295\n*/\n\nvar UINT32_MAX = 4294967295; // EXPORTS //\n\nmodule.exports = UINT32_MAX;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MAIN //\n\nvar main = typeof Uint32Array === 'function' ? Uint32Array : null; // eslint-disable-line stdlib/require-globals\n// EXPORTS //\n\nmodule.exports = main;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MAIN //\n\nvar ctor = typeof Uint32Array === 'function' ? Uint32Array : void 0; // eslint-disable-line stdlib/require-globals\n// EXPORTS //\n\nmodule.exports = ctor;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // TODO: write polyfill\n// MAIN //\n\n/**\n* Typed array which represents an array of 32-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\n\nfunction polyfill() {\n  throw new Error('not implemented');\n} // EXPORTS //\n\n\nmodule.exports = polyfill;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Test for native `Float64Array` support.\n*\n* @module @stdlib/assert-has-float64array-support\n*\n* @example\n* var hasFloat64ArraySupport = require( '@stdlib/assert-has-float64array-support' );\n*\n* var bool = hasFloat64ArraySupport();\n* // returns <boolean>\n*/\n// MODULES //\n\nvar hasFloat64ArraySupport = require('./main.js'); // EXPORTS //\n\n\nmodule.exports = hasFloat64ArraySupport;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar isFloat64Array = require('@stdlib/assert-is-float64array');\n\nvar GlobalFloat64Array = require('./float64array.js'); // MAIN //\n\n/**\n* Tests for native `Float64Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Float64Array` support\n*\n* @example\n* var bool = hasFloat64ArraySupport();\n* // returns <boolean>\n*/\n\n\nfunction hasFloat64ArraySupport() {\n  var bool;\n  var arr;\n\n  if (typeof GlobalFloat64Array !== 'function') {\n    return false;\n  } // Test basic support...\n\n\n  try {\n    arr = new GlobalFloat64Array([1.0, 3.14, -3.14, NaN]);\n    bool = isFloat64Array(arr) && arr[0] === 1.0 && arr[1] === 3.14 && arr[2] === -3.14 && arr[3] !== arr[3];\n  } catch (err) {\n    // eslint-disable-line no-unused-vars\n    bool = false;\n  }\n\n  return bool;\n} // EXPORTS //\n\n\nmodule.exports = hasFloat64ArraySupport;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Test if a value is a Float64Array.\n*\n* @module @stdlib/assert-is-float64array\n*\n* @example\n* var isFloat64Array = require( '@stdlib/assert-is-float64array' );\n*\n* var bool = isFloat64Array( new Float64Array( 10 ) );\n* // returns true\n*\n* bool = isFloat64Array( [] );\n* // returns false\n*/\n// MODULES //\n\nvar isFloat64Array = require('./main.js'); // EXPORTS //\n\n\nmodule.exports = isFloat64Array;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar nativeClass = require('@stdlib/utils-native-class'); // VARIABLES //\n\n\nvar hasFloat64Array = typeof Float64Array === 'function'; // eslint-disable-line stdlib/require-globals\n// MAIN //\n\n/**\n* Tests if a value is a Float64Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Float64Array\n*\n* @example\n* var bool = isFloat64Array( new Float64Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isFloat64Array( [] );\n* // returns false\n*/\n\nfunction isFloat64Array(value) {\n  return hasFloat64Array && value instanceof Float64Array || // eslint-disable-line stdlib/require-globals\n  nativeClass(value) === '[object Float64Array]';\n} // EXPORTS //\n\n\nmodule.exports = isFloat64Array;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MAIN //\n\nvar main = typeof Float64Array === 'function' ? Float64Array : null; // eslint-disable-line stdlib/require-globals\n// EXPORTS //\n\nmodule.exports = main;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MAIN //\n\nvar ctor = typeof Float64Array === 'function' ? Float64Array : void 0; // eslint-disable-line stdlib/require-globals\n// EXPORTS //\n\nmodule.exports = ctor;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // TODO: write polyfill\n// MAIN //\n\n/**\n* Typed array which represents an array of double-precision floating-point numbers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\n\nfunction polyfill() {\n  throw new Error('not implemented');\n} // EXPORTS //\n\n\nmodule.exports = polyfill;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar isLittleEndian = require('@stdlib/assert-is-little-endian'); // MAIN //\n\n\nvar indices;\nvar HIGH;\nvar LOW;\n\nif (isLittleEndian === true) {\n  HIGH = 1; // second index\n\n  LOW = 0; // first index\n} else {\n  HIGH = 0; // first index\n\n  LOW = 1; // second index\n}\n\nindices = {\n  'HIGH': HIGH,\n  'LOW': LOW\n}; // EXPORTS //\n\nmodule.exports = indices;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar ctors = require('./ctors.js'); // VARIABLES //\n\n\nvar bool; // FUNCTIONS //\n\n/**\n* Returns a boolean indicating if an environment is little endian.\n*\n* @private\n* @returns {boolean} boolean indicating if an environment is little endian\n*\n* @example\n* var bool = isLittleEndian();\n* // returns <boolean>\n*/\n\nfunction isLittleEndian() {\n  var uint16view;\n  var uint8view;\n  uint16view = new ctors['uint16'](1);\n  /*\n  * Set the uint16 view to a value having distinguishable lower and higher order words.\n  *\n  * 4660 => 0x1234 => 0x12 0x34 => '00010010 00110100' => (0x12,0x34) == (18,52)\n  */\n\n  uint16view[0] = 0x1234; // Create a uint8 view on top of the uint16 buffer:\n\n  uint8view = new ctors['uint8'](uint16view.buffer); // If little endian, the least significant byte will be first...\n\n  return uint8view[0] === 0x34;\n} // MAIN //\n\n\nbool = isLittleEndian(); // EXPORTS //\n\nmodule.exports = bool;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar Uint8Array = require('@stdlib/array-uint8');\n\nvar Uint16Array = require('@stdlib/array-uint16'); // MAIN //\n\n\nvar ctors = {\n  'uint16': Uint16Array,\n  'uint8': Uint8Array\n}; // EXPORTS //\n\nmodule.exports = ctors;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Typed array constructor which returns a typed array representing an array of 8-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array-uint8\n*\n* @example\n* var ctor = require( '@stdlib/array-uint8' );\n*\n* var arr = new ctor( 10 );\n* // returns <Uint8Array>\n*/\n// MODULES //\n\nvar hasUint8ArraySupport = require('@stdlib/assert-has-uint8array-support');\n\nvar builtin = require('./uint8array.js');\n\nvar polyfill = require('./polyfill.js'); // MAIN //\n\n\nvar ctor;\n\nif (hasUint8ArraySupport()) {\n  ctor = builtin;\n} else {\n  ctor = polyfill;\n} // EXPORTS //\n\n\nmodule.exports = ctor;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Test for native `Uint8Array` support.\n*\n* @module @stdlib/assert-has-uint8array-support\n*\n* @example\n* var hasUint8ArraySupport = require( '@stdlib/assert-has-uint8array-support' );\n*\n* var bool = hasUint8ArraySupport();\n* // returns <boolean>\n*/\n// MODULES //\n\nvar hasUint8ArraySupport = require('./main.js'); // EXPORTS //\n\n\nmodule.exports = hasUint8ArraySupport;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar isUint8Array = require('@stdlib/assert-is-uint8array');\n\nvar UINT8_MAX = require('@stdlib/constants-uint8-max');\n\nvar GlobalUint8Array = require('./uint8array.js'); // MAIN //\n\n/**\n* Tests for native `Uint8Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint8Array` support\n*\n* @example\n* var bool = hasUint8ArraySupport();\n* // returns <boolean>\n*/\n\n\nfunction hasUint8ArraySupport() {\n  var bool;\n  var arr;\n\n  if (typeof GlobalUint8Array !== 'function') {\n    return false;\n  } // Test basic support...\n\n\n  try {\n    arr = [1, 3.14, -3.14, UINT8_MAX + 1, UINT8_MAX + 2];\n    arr = new GlobalUint8Array(arr);\n    bool = isUint8Array(arr) && arr[0] === 1 && arr[1] === 3 && // truncation\n    arr[2] === UINT8_MAX - 2 && // truncation and wrap around\n    arr[3] === 0 && // wrap around\n    arr[4] === 1 // wrap around\n    ;\n  } catch (err) {\n    // eslint-disable-line no-unused-vars\n    bool = false;\n  }\n\n  return bool;\n} // EXPORTS //\n\n\nmodule.exports = hasUint8ArraySupport;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Test if a value is a Uint8Array.\n*\n* @module @stdlib/assert-is-uint8array\n*\n* @example\n* var isUint8Array = require( '@stdlib/assert-is-uint8array' );\n*\n* var bool = isUint8Array( new Uint8Array( 10 ) );\n* // returns true\n*\n* bool = isUint8Array( [] );\n* // returns false\n*/\n// MODULES //\n\nvar isUint8Array = require('./main.js'); // EXPORTS //\n\n\nmodule.exports = isUint8Array;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar nativeClass = require('@stdlib/utils-native-class'); // VARIABLES //\n\n\nvar hasUint8Array = typeof Uint8Array === 'function'; // eslint-disable-line stdlib/require-globals\n// MAIN //\n\n/**\n* Tests if a value is a Uint8Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint8Array\n*\n* @example\n* var bool = isUint8Array( new Uint8Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint8Array( [] );\n* // returns false\n*/\n\nfunction isUint8Array(value) {\n  return hasUint8Array && value instanceof Uint8Array || // eslint-disable-line stdlib/require-globals\n  nativeClass(value) === '[object Uint8Array]';\n} // EXPORTS //\n\n\nmodule.exports = isUint8Array;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Maximum unsigned 8-bit integer.\n*\n* @module @stdlib/constants-uint8-max\n* @type {integer32}\n*\n* @example\n* var UINT8_MAX = require( '@stdlib/constants-uint8-max' );\n* // returns 255\n*/\n// MAIN //\n\n/**\n* Maximum unsigned 8-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{8} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 11111111\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 255\n*/\n\nvar UINT8_MAX = 255 | 0; // asm type annotation\n// EXPORTS //\n\nmodule.exports = UINT8_MAX;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MAIN //\n\nvar main = typeof Uint8Array === 'function' ? Uint8Array : null; // eslint-disable-line stdlib/require-globals\n// EXPORTS //\n\nmodule.exports = main;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MAIN //\n\nvar ctor = typeof Uint8Array === 'function' ? Uint8Array : void 0; // eslint-disable-line stdlib/require-globals\n// EXPORTS //\n\nmodule.exports = ctor;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // TODO: write polyfill\n// MAIN //\n\n/**\n* Typed array which represents an array of 8-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\n\nfunction polyfill() {\n  throw new Error('not implemented');\n} // EXPORTS //\n\n\nmodule.exports = polyfill;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Typed array constructor which returns a typed array representing an array of 16-bit unsigned integers in the platform byte order.\n*\n* @module @stdlib/array-uint16\n*\n* @example\n* var ctor = require( '@stdlib/array-uint16' );\n*\n* var arr = new ctor( 10 );\n* // returns <Uint16Array>\n*/\n// MODULES //\n\nvar hasUint16ArraySupport = require('@stdlib/assert-has-uint16array-support');\n\nvar builtin = require('./uint16array.js');\n\nvar polyfill = require('./polyfill.js'); // MAIN //\n\n\nvar ctor;\n\nif (hasUint16ArraySupport()) {\n  ctor = builtin;\n} else {\n  ctor = polyfill;\n} // EXPORTS //\n\n\nmodule.exports = ctor;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Test for native `Uint16Array` support.\n*\n* @module @stdlib/assert-has-uint16array-support\n*\n* @example\n* var hasUint16ArraySupport = require( '@stdlib/assert-has-uint16array-support' );\n*\n* var bool = hasUint16ArraySupport();\n* // returns <boolean>\n*/\n// MODULES //\n\nvar hasUint16ArraySupport = require('./main.js'); // EXPORTS //\n\n\nmodule.exports = hasUint16ArraySupport;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar isUint16Array = require('@stdlib/assert-is-uint16array');\n\nvar UINT16_MAX = require('@stdlib/constants-uint16-max');\n\nvar GlobalUint16Array = require('./uint16array.js'); // MAIN //\n\n/**\n* Tests for native `Uint16Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint16Array` support\n*\n* @example\n* var bool = hasUint16ArraySupport();\n* // returns <boolean>\n*/\n\n\nfunction hasUint16ArraySupport() {\n  var bool;\n  var arr;\n\n  if (typeof GlobalUint16Array !== 'function') {\n    return false;\n  } // Test basic support...\n\n\n  try {\n    arr = [1, 3.14, -3.14, UINT16_MAX + 1, UINT16_MAX + 2];\n    arr = new GlobalUint16Array(arr);\n    bool = isUint16Array(arr) && arr[0] === 1 && arr[1] === 3 && // truncation\n    arr[2] === UINT16_MAX - 2 && // truncation and wrap around\n    arr[3] === 0 && // wrap around\n    arr[4] === 1 // wrap around\n    ;\n  } catch (err) {\n    // eslint-disable-line no-unused-vars\n    bool = false;\n  }\n\n  return bool;\n} // EXPORTS //\n\n\nmodule.exports = hasUint16ArraySupport;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Test if a value is a Uint16Array.\n*\n* @module @stdlib/assert-is-uint16array\n*\n* @example\n* var isUint16Array = require( '@stdlib/assert-is-uint16array' );\n*\n* var bool = isUint16Array( new Uint16Array( 10 ) );\n* // returns true\n*\n* bool = isUint16Array( [] );\n* // returns false\n*/\n// MODULES //\n\nvar isUint16Array = require('./main.js'); // EXPORTS //\n\n\nmodule.exports = isUint16Array;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar nativeClass = require('@stdlib/utils-native-class'); // VARIABLES //\n\n\nvar hasUint16Array = typeof Uint16Array === 'function'; // eslint-disable-line stdlib/require-globals\n// MAIN //\n\n/**\n* Tests if a value is a Uint16Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint16Array\n*\n* @example\n* var bool = isUint16Array( new Uint16Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint16Array( [] );\n* // returns false\n*/\n\nfunction isUint16Array(value) {\n  return hasUint16Array && value instanceof Uint16Array || // eslint-disable-line stdlib/require-globals\n  nativeClass(value) === '[object Uint16Array]';\n} // EXPORTS //\n\n\nmodule.exports = isUint16Array;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Maximum unsigned 16-bit integer.\n*\n* @module @stdlib/constants-uint16-max\n* @type {integer32}\n*\n* @example\n* var UINT16_MAX = require( '@stdlib/constants-uint16-max' );\n* // returns 65535\n*/\n// MAIN //\n\n/**\n* Maximum unsigned 16-bit integer.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* 2^{16} - 1\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 1111111111111111\n* ```\n*\n* @constant\n* @type {integer32}\n* @default 65535\n*/\n\nvar UINT16_MAX = 65535 | 0; // asm type annotation\n// EXPORTS //\n\nmodule.exports = UINT16_MAX;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MAIN //\n\nvar main = typeof Uint16Array === 'function' ? Uint16Array : null; // eslint-disable-line stdlib/require-globals\n// EXPORTS //\n\nmodule.exports = main;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MAIN //\n\nvar ctor = typeof Uint16Array === 'function' ? Uint16Array : void 0; // eslint-disable-line stdlib/require-globals\n// EXPORTS //\n\nmodule.exports = ctor;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // TODO: write polyfill\n// MAIN //\n\n/**\n* Typed array which represents an array of 16-bit unsigned integers in the platform byte order.\n*\n* @throws {Error} not implemented\n*/\n\nfunction polyfill() {\n  throw new Error('not implemented');\n} // EXPORTS //\n\n\nmodule.exports = polyfill;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar Uint32Array = require('@stdlib/array-uint32');\n\nvar Float64Array = require('@stdlib/array-float64');\n\nvar HIGH = require('./high.js'); // VARIABLES //\n\n\nvar FLOAT64_VIEW = new Float64Array(1);\nvar UINT32_VIEW = new Uint32Array(FLOAT64_VIEW.buffer); // MAIN //\n\n/**\n* Returns an unsigned 32-bit integer corresponding to the more significant 32 bits of a double-precision floating-point number.\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n* In which Uint32 can we find the higher order bits? If little endian, the second; if big endian, the first.\n*\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {number} x - input value\n* @returns {uinteger32} higher order word\n*\n* @example\n* var w = getHighWord( 3.14e201 ); // => 01101001110001001000001011000011\n* // returns 1774486211\n*/\n\nfunction getHighWord(x) {\n  FLOAT64_VIEW[0] = x;\n  return UINT32_VIEW[HIGH];\n} // EXPORTS //\n\n\nmodule.exports = getHighWord;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar isLittleEndian = require('@stdlib/assert-is-little-endian'); // MAIN //\n\n\nvar HIGH;\n\nif (isLittleEndian === true) {\n  HIGH = 1; // second index\n} else {\n  HIGH = 0; // first index\n} // EXPORTS //\n\n\nmodule.exports = HIGH;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar Uint32Array = require('@stdlib/array-uint32');\n\nvar Float64Array = require('@stdlib/array-float64');\n\nvar indices = require('./indices.js'); // VARIABLES //\n\n\nvar FLOAT64_VIEW = new Float64Array(1);\nvar UINT32_VIEW = new Uint32Array(FLOAT64_VIEW.buffer);\nvar HIGH = indices.HIGH;\nvar LOW = indices.LOW; // MAIN //\n\n/**\n* Creates a double-precision floating-point number from a higher order word (unsigned 32-bit integer) and a lower order word (unsigned 32-bit integer).\n*\n* ## Notes\n*\n* ```text\n* float64 (64 bits)\n* f := fraction (significand/mantissa) (52 bits)\n* e := exponent (11 bits)\n* s := sign bit (1 bit)\n*\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |                                Float64                                |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* |              Uint32               |               Uint32              |\n* |-------- -------- -------- -------- -------- -------- -------- --------|\n* ```\n*\n* If little endian (more significant bits last):\n*\n* ```text\n*                         <-- lower      higher -->\n* |   f7       f6       f5       f4       f3       f2    e2 | f1 |s|  e1  |\n* ```\n*\n* If big endian (more significant bits first):\n*\n* ```text\n*                         <-- higher      lower -->\n* |s| e1    e2 | f1     f2       f3       f4       f5        f6      f7   |\n* ```\n*\n*\n* In which Uint32 should we place the higher order bits? If little endian, the second; if big endian, the first.\n*\n*\n* ## References\n*\n* -   [Open Group][1]\n*\n* [1]: http://pubs.opengroup.org/onlinepubs/9629399/chap14.htm\n*\n* @param {uinteger32} high - higher order word (unsigned 32-bit integer)\n* @param {uinteger32} low - lower order word (unsigned 32-bit integer)\n* @returns {number} floating-point number\n*\n* @example\n* var v = fromWords( 1774486211, 2479577218 );\n* // returns 3.14e201\n*\n* @example\n* var v = fromWords( 3221823995, 1413754136 );\n* // returns -3.141592653589793\n*\n* @example\n* var v = fromWords( 0, 0 );\n* // returns 0.0\n*\n* @example\n* var v = fromWords( 2147483648, 0 );\n* // returns -0.0\n*\n* @example\n* var v = fromWords( 2146959360, 0 );\n* // returns NaN\n*\n* @example\n* var v = fromWords( 2146435072, 0 );\n* // returns Infinity\n*\n* @example\n* var v = fromWords( 4293918720, 0 );\n* // returns -Infinity\n*/\n\nfunction fromWords(high, low) {\n  UINT32_VIEW[HIGH] = high;\n  UINT32_VIEW[LOW] = low;\n  return FLOAT64_VIEW[0];\n} // EXPORTS //\n\n\nmodule.exports = fromWords;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar isLittleEndian = require('@stdlib/assert-is-little-endian'); // MAIN //\n\n\nvar indices;\nvar HIGH;\nvar LOW;\n\nif (isLittleEndian === true) {\n  HIGH = 1; // second index\n\n  LOW = 0; // first index\n} else {\n  HIGH = 0; // first index\n\n  LOW = 1; // second index\n}\n\nindices = {\n  'HIGH': HIGH,\n  'LOW': LOW\n}; // EXPORTS //\n\nmodule.exports = indices;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Return a normal number `y` and exponent `exp` satisfying \\\\(x = y \\cdot 2^\\mathrm{exp}\\\\).\n*\n* @module @stdlib/number-float64-base-normalize\n*\n* @example\n* var normalize = require( '@stdlib/number-float64-base-normalize' );\n* var pow = require( '@stdlib/math-base-special-pow' );\n*\n* var out = normalize( 3.14e-319 );\n* // returns [ 1.4141234400356668e-303, -52 ]\n*\n* var y = out[ 0 ];\n* var exp = out[ 1 ];\n*\n* var bool = ( y*pow(2.0, exp) === 3.14e-319 );\n* // returns true\n*\n* @example\n* var Float64Array = require( '@stdlib/array-float64' );\n* var normalize = require( '@stdlib/number-float64-base-normalize' );\n*\n* var out = new Float64Array( 2 );\n*\n* var v = normalize.assign( 3.14e-319, out, 1, 0 );\n* // returns <Float64Array>[ 1.4141234400356668e-303, -52 ]\n*\n* var bool = ( v === out );\n* // returns true\n*/\n// MODULES //\n\nvar setReadOnly = require('@stdlib/utils-define-nonenumerable-read-only-property');\n\nvar main = require('./main.js');\n\nvar assign = require('./assign.js'); // MAIN //\n\n\nsetReadOnly(main, 'assign', assign); // EXPORTS //\n\nmodule.exports = main;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar fcn = require('./assign.js'); // MAIN //\n\n/**\n* Returns a normal number `y` and exponent `exp` satisfying \\\\(x = y \\cdot 2^\\mathrm{exp}\\\\).\n*\n* @param {number} x - input value\n* @returns {NumberArray} output array\n*\n* @example\n* var pow = require( '@stdlib/math-base-special-pow' );\n*\n* var out = normalize( 3.14e-319 );\n* // returns [ 1.4141234400356668e-303, -52 ]\n*\n* var y = out[ 0 ];\n* var exp = out[ 1 ];\n*\n* var bool = ( y*pow(2.0,exp) === 3.14e-319 );\n* // returns true\n*\n* @example\n* var out = normalize( 0.0 );\n* // returns [ 0.0, 0 ]\n*\n* @example\n* var PINF = require( '@stdlib/constants-float64-pinf' );\n*\n* var out = normalize( PINF );\n* // returns [ Infinity, 0 ]\n*\n* @example\n* var NINF = require( '@stdlib/constants-float64-ninf' );\n*\n* var out = normalize( NINF );\n* // returns [ -Infinity, 0 ]\n*\n* @example\n* var out = normalize( NaN );\n* // returns [ NaN, 0 ]\n*/\n\n\nfunction normalize(x) {\n  return fcn(x, [0.0, 0], 1, 0);\n} // EXPORTS //\n\n\nmodule.exports = normalize;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Smallest positive double-precision floating-point normal number.\n*\n* @module @stdlib/constants-float64-smallest-normal\n* @type {number}\n*\n* @example\n* var FLOAT64_SMALLEST_NORMAL = require( '@stdlib/constants-float64-smallest-normal' );\n* // returns 2.2250738585072014e-308\n*/\n// MAIN //\n\n/**\n* The smallest positive double-precision floating-point normal number.\n*\n* ## Notes\n*\n* The number has the value\n*\n* ```tex\n* \\frac{1}{2^{1023-1}}\n* ```\n*\n* which corresponds to the bit sequence\n*\n* ```binarystring\n* 0 00000000001 00000000000000000000 00000000000000000000000000000000\n* ```\n*\n* @constant\n* @type {number}\n* @default 2.2250738585072014e-308\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\n\nvar FLOAT64_SMALLEST_NORMAL = 2.2250738585072014e-308; // EXPORTS //\n\nmodule.exports = FLOAT64_SMALLEST_NORMAL;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Compute an absolute value of a double-precision floating-point number.\n*\n* @module @stdlib/math-base-special-abs\n*\n* @example\n* var abs = require( '@stdlib/math-base-special-abs' );\n*\n* var v = abs( -1.0 );\n* // returns 1.0\n*\n* v = abs( 2.0 );\n* // returns 2.0\n*\n* v = abs( 0.0 );\n* // returns 0.0\n*\n* v = abs( -0.0 );\n* // returns 0.0\n*\n* v = abs( NaN );\n* // returns NaN\n*/\n// MODULES //\n\nvar abs = require('./main.js'); // EXPORTS //\n\n\nmodule.exports = abs;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MAIN //\n\n/**\n* Computes the absolute value of a double-precision floating-point number `x`.\n*\n* @param {number} x - input value\n* @returns {number} absolute value\n*\n* @example\n* var v = abs( -1.0 );\n* // returns 1.0\n*\n* @example\n* var v = abs( 2.0 );\n* // returns 2.0\n*\n* @example\n* var v = abs( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = abs( -0.0 );\n* // returns 0.0\n*\n* @example\n* var v = abs( NaN );\n* // returns NaN\n*/\n\nfunction abs(x) {\n  return Math.abs(x); // eslint-disable-line stdlib/no-builtin-math\n} // EXPORTS //\n\n\nmodule.exports = abs;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* Return an integer corresponding to the unbiased exponent of a double-precision floating-point number.\n*\n* @module @stdlib/number-float64-base-exponent\n*\n* @example\n* var exponent = require( '@stdlib/number-float64-base-exponent' );\n*\n* var exp = exponent( 3.14e-307 ); // => 2**-1019 ~ 1e-307\n* // returns -1019\n*\n* exp = exponent( -3.14 );\n* // returns 1\n*\n* exp = exponent( 0.0 );\n* // returns -1023\n*\n* exp = exponent( NaN );\n* // returns 1024\n*/\n// MODULES //\n\nvar exponent = require('./main.js'); // EXPORTS //\n\n\nmodule.exports = exponent;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar getHighWord = require('@stdlib/number-float64-base-get-high-word');\n\nvar EXP_MASK = require('@stdlib/constants-float64-high-word-exponent-mask');\n\nvar BIAS = require('@stdlib/constants-float64-exponent-bias'); // MAIN //\n\n/**\n* Returns an integer corresponding to the unbiased exponent of a double-precision floating-point number.\n*\n* @param {number} x - input value\n* @returns {integer32} unbiased exponent\n*\n* @example\n* var exp = exponent( 3.14e-307 ); // => 2**-1019 ~ 1e-307\n* // returns -1019\n*\n* @example\n* var exp = exponent( -3.14 );\n* // returns 1\n*\n* @example\n* var exp = exponent( 0.0 );\n* // returns -1023\n*\n* @example\n* var exp = exponent( NaN );\n* // returns 1024\n*/\n\n\nfunction exponent(x) {\n  // Extract from the input value a higher order word (unsigned 32-bit integer) which contains the exponent:\n  var high = getHighWord(x); // Apply a mask to isolate only the exponent bits and then shift off all bits which are part of the fraction:\n\n  high = (high & EXP_MASK) >>> 20; // Remove the bias and return:\n\n  return high - BIAS | 0; // asm type annotation\n} // EXPORTS //\n\n\nmodule.exports = exponent;","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict';\n/**\n* High word mask for the exponent of a double-precision floating-point number.\n*\n* @module @stdlib/constants-float64-high-word-exponent-mask\n* @type {uinteger32}\n*\n* @example\n* var FLOAT64_HIGH_WORD_EXPONENT_MASK = require( '@stdlib/constants-float64-high-word-exponent-mask' );\n* // returns 2146435072\n*/\n// MAIN //\n\n/**\n* High word mask for the exponent of a double-precision floating-point number.\n*\n* ## Notes\n*\n* The high word mask for the exponent of a double-precision floating-point number is an unsigned 32-bit integer with the value \\\\( 2146435072 \\\\), which corresponds to the bit sequence\n*\n* ```binarystring\n* 0 11111111111 00000000000000000000\n* ```\n*\n* @constant\n* @type {uinteger32}\n* @default 0x7ff00000\n* @see [IEEE 754]{@link https://en.wikipedia.org/wiki/IEEE_754-1985}\n*/\n\nvar FLOAT64_HIGH_WORD_EXPONENT_MASK = 0x7ff00000; // EXPORTS //\n\nmodule.exports = FLOAT64_HIGH_WORD_EXPONENT_MASK;","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unset = void 0;\n\nvar dlv_1 = __importDefault(require(\"dlv\"));\n\nfunction unset(obj, prop) {\n  if ((0, dlv_1.default)(obj, prop)) {\n    var segs = prop.split('.');\n    var last = segs.pop();\n\n    while (segs.length && segs[segs.length - 1].slice(-1) === '\\\\') {\n      last = segs.pop().slice(0, -1) + '.' + last;\n    }\n\n    while (segs.length) {\n      obj = obj[prop = segs.shift()];\n    }\n\n    return delete obj[last];\n  }\n\n  return true;\n}\n\nexports.unset = unset;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar dlv_1 = __importDefault(require(\"dlv\"));\n\nfunction matches(event, matcher) {\n  if (!matcher) {\n    throw new Error('No matcher supplied!');\n  }\n\n  switch (matcher.type) {\n    case 'all':\n      return all();\n\n    case 'fql':\n      return fql(matcher.ir, event);\n\n    default:\n      throw new Error(\"Matcher of type \".concat(matcher.type, \" unsupported.\"));\n  }\n}\n\nexports.default = matches;\n\nfunction all() {\n  return true;\n}\n\nfunction fql(ir, event) {\n  if (!ir) {\n    return false;\n  }\n\n  try {\n    ir = JSON.parse(ir);\n  } catch (e) {\n    throw new Error(\"Failed to JSON.parse FQL intermediate representation \\\"\".concat(ir, \"\\\": \").concat(e));\n  }\n\n  var result = fqlEvaluate(ir, event);\n\n  if (typeof result !== 'boolean') {\n    // An error was returned, or a lowercase, typeof, or similar function was run alone. Nothing to evaluate.\n    return false;\n  }\n\n  return result;\n} // FQL is 100% type strict in Go. Show no mercy to types which do not comply.\n\n\nfunction fqlEvaluate(ir, event) {\n  // If the given ir chunk is not an array, then we should check the single given path or value for literally `true`.\n  if (!Array.isArray(ir)) {\n    return getValue(ir, event) === true;\n  } // Otherwise, it is a sequence of ordered steps to follow to reach our solution!\n\n\n  var item = ir[0];\n\n  switch (item) {\n    /*** Unary cases ***/\n    // '!' => Invert the result\n    case '!':\n      return !fqlEvaluate(ir[1], event);\n\n    /*** Binary cases ***/\n    // 'or' => Any condition being true returns true\n\n    case 'or':\n      for (var i = 1; i < ir.length; i++) {\n        if (fqlEvaluate(ir[i], event)) {\n          return true;\n        }\n      }\n\n      return false;\n    // 'and' => Any condition being false returns false\n\n    case 'and':\n      for (var i = 1; i < ir.length; i++) {\n        if (!fqlEvaluate(ir[i], event)) {\n          return false;\n        }\n      }\n\n      return true;\n    // Equivalence comparisons\n\n    case '=':\n    case '!=':\n      return compareItems(getValue(ir[1], event), getValue(ir[2], event), item, event);\n    // Numerical comparisons\n\n    case '<=':\n    case '<':\n    case '>':\n    case '>=':\n      // Compare the two values with the given operator.\n      return compareNumbers(getValue(ir[1], event), getValue(ir[2], event), item, event);\n\n    /*** Functions ***/\n    // 'contains(str1, str2)' => The first string has a substring of the second string\n\n    case 'contains':\n      return contains(getValue(ir[1], event), getValue(ir[2], event));\n    // 'match(str, match)' => The given string matches the provided glob matcher\n\n    case 'match':\n      return match(getValue(ir[1], event), getValue(ir[2], event));\n    // 'lowercase(str)' => Returns a lowercased string, null if the item is not a string\n\n    case 'lowercase':\n      var target = getValue(ir[1], event);\n\n      if (typeof target !== 'string') {\n        return null;\n      }\n\n      return target.toLowerCase();\n    // 'typeof(val)' => Returns the FQL type of the value\n\n    case 'typeof':\n      // TODO: Do we need mapping to allow for universal comparisons? e.g. Object -> JSON, Array -> List, Floats?\n      return _typeof(getValue(ir[1], event));\n    // 'length(val)' => Returns the length of an array or string, NaN if neither\n\n    case 'length':\n      return length(getValue(ir[1], event));\n    // If nothing hit, we or the IR messed up somewhere.\n\n    default:\n      throw new Error(\"FQL IR could not evaluate for token: \".concat(item));\n  }\n}\n\nfunction getValue(item, event) {\n  // If item is an array, leave it as-is.\n  if (Array.isArray(item)) {\n    return item;\n  } // If item is an object, it has the form of `{\"value\": VAL}`\n\n\n  if (_typeof(item) === 'object') {\n    return item.value;\n  } // Otherwise, it's an event path, e.g. \"properties.email\"\n\n\n  return (0, dlv_1.default)(event, item);\n}\n\nfunction compareNumbers(first, second, operator, event) {\n  // Check if it's more IR (such as a length() function)\n  if (isIR(first)) {\n    first = fqlEvaluate(first, event);\n  }\n\n  if (isIR(second)) {\n    second = fqlEvaluate(second, event);\n  }\n\n  if (typeof first !== 'number' || typeof second !== 'number') {\n    return false;\n  } // Reminder: NaN is not comparable to any other number (including NaN) and will always return false as desired.\n\n\n  switch (operator) {\n    // '<=' => The first number is less than or equal to the second.\n    case '<=':\n      return first <= second;\n    // '>=' => The first number is greater than or equal to the second\n\n    case '>=':\n      return first >= second;\n    // '<' The first number is less than the second.\n\n    case '<':\n      return first < second;\n    // '>' The first number is greater than the second.\n\n    case '>':\n      return first > second;\n\n    default:\n      throw new Error(\"Invalid operator in compareNumbers: \".concat(operator));\n  }\n}\n\nfunction compareItems(first, second, operator, event) {\n  // Check if it's more IR (such as a lowercase() function)\n  if (isIR(first)) {\n    first = fqlEvaluate(first, event);\n  }\n\n  if (isIR(second)) {\n    second = fqlEvaluate(second, event);\n  }\n\n  if (_typeof(first) === 'object' && _typeof(second) === 'object') {\n    first = JSON.stringify(first);\n    second = JSON.stringify(second);\n  } // Objects with the exact same contents AND order ARE considered identical. (Don't compare by reference)\n  // Even in Go, this MUST be the same byte order.\n  // e.g. {a: 1, b:2} === {a: 1, b:2} BUT {a:1, b:2} !== {b:2, a:1}\n  // Maybe later we'll use a stable stringifier, but we're matching server-side behavior for now.\n\n\n  switch (operator) {\n    // '=' => The two following items are exactly identical\n    case '=':\n      return first === second;\n    // '!=' => The two following items are NOT exactly identical.\n\n    case '!=':\n      return first !== second;\n\n    default:\n      throw new Error(\"Invalid operator in compareItems: \".concat(operator));\n  }\n}\n\nfunction contains(first, second) {\n  if (typeof first !== 'string' || typeof second !== 'string') {\n    return false;\n  }\n\n  return first.indexOf(second) !== -1;\n}\n\nfunction match(str, glob) {\n  if (typeof str !== 'string' || typeof glob !== 'string') {\n    return false;\n  }\n\n  return globMatches(glob, str);\n}\n\nfunction length(item) {\n  // Match server-side behavior.\n  if (item === null) {\n    return 0;\n  } // Type-check to avoid returning .length of an object\n\n\n  if (!Array.isArray(item) && typeof item !== 'string') {\n    return NaN;\n  }\n\n  return item.length;\n} // This is a heuristic technically speaking, but should be close enough. The odds of someone trying to test\n// a func with identical IR notation is pretty low.\n\n\nfunction isIR(value) {\n  // TODO: This can be better checked by checking if this is a {\"value\": THIS}\n  if (!Array.isArray(value)) {\n    return false;\n  } // Function checks\n\n\n  if ((value[0] === 'lowercase' || value[0] === 'length' || value[0] === 'typeof') && value.length === 2) {\n    return true;\n  }\n\n  if ((value[0] === 'contains' || value[0] === 'match') && value.length === 3) {\n    return true;\n  }\n\n  return false;\n} // Any reputable glob matcher is designed to work on filesystems and doesn't allow the override of the separator\n// character \"/\". This is problematic since our server-side representation e.g. evaluates \"match('ab/c', 'a*)\"\n// as TRUE, whereas any glob matcher for JS available does false. So we're rewriting it here.\n// See: https://github.com/segmentio/glob/blob/master/glob.go\n\n\nfunction globMatches(pattern, str) {\n  var _a, _b;\n\n  Pattern: while (pattern.length > 0) {\n    var star = void 0;\n    var chunk = void 0;\n    _a = scanChunk(pattern), star = _a.star, chunk = _a.chunk, pattern = _a.pattern;\n\n    if (star && chunk === '') {\n      // Trailing * matches rest of string\n      return true;\n    } // Look for match at current position\n\n\n    var _c = matchChunk(chunk, str),\n        t = _c.t,\n        ok = _c.ok,\n        err = _c.err;\n\n    if (err) {\n      return false;\n    } // If we're the last chunk, make sure we've exhausted the str\n    // otherwise we'll give a false result even if we could still match\n    // using the star\n\n\n    if (ok && (t.length === 0 || pattern.length > 0)) {\n      str = t;\n      continue;\n    }\n\n    if (star) {\n      // Look for match, skipping i+1 bytes.\n      for (var i = 0; i < str.length; i++) {\n        ;\n        _b = matchChunk(chunk, str.slice(i + 1)), t = _b.t, ok = _b.ok, err = _b.err;\n\n        if (ok) {\n          // If we're the last chunk, make sure we exhausted the str.\n          if (pattern.length === 0 && t.length > 0) {\n            continue;\n          }\n\n          str = t;\n          continue Pattern;\n        }\n\n        if (err) {\n          return false;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  return str.length === 0;\n}\n\nfunction scanChunk(pattern) {\n  var result = {\n    star: false,\n    chunk: '',\n    pattern: ''\n  };\n\n  while (pattern.length > 0 && pattern[0] === '*') {\n    pattern = pattern.slice(1);\n    result.star = true;\n  }\n\n  var inRange = false;\n  var i;\n\n  Scan: for (i = 0; i < pattern.length; i++) {\n    switch (pattern[i]) {\n      case '\\\\':\n        // Error check handled in matchChunk: bad pattern.\n        if (i + 1 < pattern.length) {\n          i++;\n        }\n\n        break;\n\n      case '[':\n        inRange = true;\n        break;\n\n      case ']':\n        inRange = false;\n        break;\n\n      case '*':\n        if (!inRange) {\n          break Scan;\n        }\n\n    }\n  }\n\n  result.chunk = pattern.slice(0, i);\n  result.pattern = pattern.slice(i);\n  return result;\n} // matchChunk checks whether chunk matches the beginning of s.\n// If so, it returns the remainder of s (after the match).\n// Chunk is all single-character operators: literals, char classes, and ?.\n\n\nfunction matchChunk(chunk, str) {\n  var _a, _b;\n\n  var result = {\n    t: '',\n    ok: false,\n    err: false\n  };\n\n  while (chunk.length > 0) {\n    if (str.length === 0) {\n      return result;\n    }\n\n    switch (chunk[0]) {\n      case '[':\n        var char = str[0];\n        str = str.slice(1);\n        chunk = chunk.slice(1);\n        var notNegated = true;\n\n        if (chunk.length > 0 && chunk[0] === '^') {\n          notNegated = false;\n          chunk = chunk.slice(1);\n        } // Parse all ranges\n\n\n        var foundMatch = false;\n        var nRange = 0;\n\n        while (true) {\n          if (chunk.length > 0 && chunk[0] === ']' && nRange > 0) {\n            chunk = chunk.slice(1);\n            break;\n          }\n\n          var lo = '';\n          var hi = '';\n          var err = void 0;\n          _a = getEsc(chunk), lo = _a.char, chunk = _a.newChunk, err = _a.err;\n\n          if (err) {\n            return result;\n          }\n\n          hi = lo;\n\n          if (chunk[0] === '-') {\n            ;\n            _b = getEsc(chunk.slice(1)), hi = _b.char, chunk = _b.newChunk, err = _b.err;\n\n            if (err) {\n              return result;\n            }\n          }\n\n          if (lo <= char && char <= hi) {\n            foundMatch = true;\n          }\n\n          nRange++;\n        }\n\n        if (foundMatch !== notNegated) {\n          return result;\n        }\n\n        break;\n\n      case '?':\n        str = str.slice(1);\n        chunk = chunk.slice(1);\n        break;\n\n      case '\\\\':\n        chunk = chunk.slice(1);\n\n        if (chunk.length === 0) {\n          result.err = true;\n          return result;\n        }\n\n      // Fallthrough, missing break intentional.\n\n      default:\n        if (chunk[0] !== str[0]) {\n          return result;\n        }\n\n        str = str.slice(1);\n        chunk = chunk.slice(1);\n    }\n  }\n\n  result.t = str;\n  result.ok = true;\n  result.err = false;\n  return result;\n} // getEsc gets a possibly-escaped character from chunk, for a character class.\n\n\nfunction getEsc(chunk) {\n  var result = {\n    char: '',\n    newChunk: '',\n    err: false\n  };\n\n  if (chunk.length === 0 || chunk[0] === '-' || chunk[0] === ']') {\n    result.err = true;\n    return result;\n  }\n\n  if (chunk[0] === '\\\\') {\n    chunk = chunk.slice(1);\n\n    if (chunk.length === 0) {\n      result.err = true;\n      return result;\n    }\n  } // Unlike Go, JS strings operate on characters instead of bytes.\n  // This is why we aren't copying over the GetRuneFromString stuff.\n\n\n  result.char = chunk[0];\n  result.newChunk = chunk.slice(1);\n\n  if (result.newChunk.length === 0) {\n    result.err = true;\n  }\n\n  return result;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Store =\n/** @class */\nfunction () {\n  function Store(rules) {\n    this.rules = [];\n    this.rules = rules || [];\n  }\n\n  Store.prototype.getRulesByDestinationName = function (destinationName) {\n    var rules = [];\n\n    for (var _i = 0, _a = this.rules; _i < _a.length; _i++) {\n      var rule = _a[_i]; // Rules with no destinationName are global (workspace || workspace::source)\n\n      if (rule.destinationName === destinationName || rule.destinationName === undefined) {\n        rules.push(rule);\n      }\n    }\n\n    return rules;\n  };\n\n  return Store;\n}();\n\nexports.default = Store;","import { __assign, __awaiter, __generator } from \"tslib\";\nimport { Alias, Group, Identify, Page, Track } from '@segment/facade';\nimport { isOffline, isOnline } from '../../core/connection';\nimport { Context, ContextCancelation } from '../../core/context';\nimport { isServer } from '../../core/environment';\nimport { attempt } from '../../core/queue/delivery';\nimport { asPromise } from '../../lib/as-promise';\nimport { mergedOptions } from '../../lib/merged-options';\nimport { pWhile } from '../../lib/p-while';\nimport { PersistedPriorityQueue } from '../../lib/priority-queue/persisted';\nimport { applyDestinationMiddleware } from '../middleware';\nimport { tsubMiddleware } from '../routing-middleware';\nimport { loadIntegration, resolveVersion, unloadIntegration } from './loader';\n\nvar klona = function klona(evt) {\n  return JSON.parse(JSON.stringify(evt));\n};\n\nfunction flushQueue(xt, queue) {\n  return __awaiter(this, void 0, void 0, function () {\n    var failedQueue;\n\n    var _this = this;\n\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          failedQueue = [];\n\n          if (isOffline()) {\n            return [2\n            /*return*/\n            , queue];\n          }\n\n          return [4\n          /*yield*/\n          , pWhile(function () {\n            return queue.length > 0 && isOnline();\n          }, function () {\n            return __awaiter(_this, void 0, void 0, function () {\n              var ctx, result, success;\n              return __generator(this, function (_a) {\n                switch (_a.label) {\n                  case 0:\n                    ctx = queue.pop();\n\n                    if (!ctx) {\n                      return [2\n                      /*return*/\n                      ];\n                    }\n\n                    return [4\n                    /*yield*/\n                    , attempt(ctx, xt)];\n\n                  case 1:\n                    result = _a.sent();\n                    success = result instanceof Context;\n\n                    if (!success) {\n                      failedQueue.push(ctx);\n                    }\n\n                    return [2\n                    /*return*/\n                    ];\n                }\n              });\n            });\n          }) // re-add failed tasks\n          ];\n\n        case 1:\n          _a.sent(); // re-add failed tasks\n\n\n          failedQueue.map(function (failed) {\n            return queue.pushWithBackoff(failed);\n          });\n          return [2\n          /*return*/\n          , queue];\n      }\n    });\n  });\n}\n\nvar LegacyDestination =\n/** @class */\nfunction () {\n  function LegacyDestination(name, version, settings, options) {\n    if (settings === void 0) {\n      settings = {};\n    }\n\n    this.options = {};\n    this.type = 'destination';\n    this.middleware = [];\n    this._ready = false;\n    this._initialized = false;\n    this.flushing = false;\n    this.name = name;\n    this.version = version;\n    this.settings = __assign({}, settings); // AJS-Renderer sets an extraneous `type` setting that clobbers\n    // existing type defaults. We need to remove it if it's present\n\n    if (this.settings['type'] && this.settings['type'] === 'browser') {\n      delete this.settings['type'];\n    }\n\n    this.options = options;\n    this.buffer = new PersistedPriorityQueue(4, \"dest-\" + name);\n    this.scheduleFlush();\n  }\n\n  LegacyDestination.prototype.isLoaded = function () {\n    return this._ready;\n  };\n\n  LegacyDestination.prototype.ready = function () {\n    var _a;\n\n    return (_a = this.onReady) !== null && _a !== void 0 ? _a : Promise.resolve();\n  };\n\n  LegacyDestination.prototype.load = function (ctx, analyticsInstance) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (this._ready || this.onReady !== undefined) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            _a = this;\n            return [4\n            /*yield*/\n            , loadIntegration(ctx, analyticsInstance, this.name, this.version, this.settings)];\n\n          case 1:\n            _a.integration = _b.sent();\n            this.onReady = new Promise(function (resolve) {\n              var onReadyFn = function onReadyFn() {\n                _this._ready = true;\n                resolve(true);\n              };\n\n              _this.integration.once('ready', onReadyFn);\n            });\n            this.onInitialize = new Promise(function (resolve) {\n              var onInit = function onInit() {\n                _this._initialized = true;\n                resolve(true);\n              };\n\n              _this.integration.on('initialize', onInit);\n            });\n\n            try {\n              ctx.stats.increment('analytics_js.integration.invoke', 1, [\"method:initialize\", \"integration_name:\" + this.name]);\n              this.integration.initialize();\n            } catch (error) {\n              ctx.stats.increment('analytics_js.integration.invoke.error', 1, [\"method:initialize\", \"integration_name:\" + this.name]);\n              throw error;\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  LegacyDestination.prototype.unload = function (_ctx, _analyticsInstance) {\n    return unloadIntegration(this.name, this.version);\n  };\n\n  LegacyDestination.prototype.addMiddleware = function () {\n    var _a;\n\n    var fn = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      fn[_i] = arguments[_i];\n    }\n\n    this.middleware = (_a = this.middleware).concat.apply(_a, fn);\n  };\n\n  LegacyDestination.prototype.shouldBuffer = function (ctx) {\n    return (// page events can't be buffered because of destinations that automatically add page views\n      ctx.event.type !== 'page' && (isOffline() || this._ready === false || this._initialized === false)\n    );\n  };\n\n  LegacyDestination.prototype.send = function (ctx, clz, eventType) {\n    var _a, _b;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var plan, ev, planEvent, afterMiddleware, event, err_1;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            if (this.shouldBuffer(ctx)) {\n              this.buffer.push(ctx);\n              this.scheduleFlush();\n              return [2\n              /*return*/\n              , ctx];\n            }\n\n            plan = (_b = (_a = this.options) === null || _a === void 0 ? void 0 : _a.plan) === null || _b === void 0 ? void 0 : _b.track;\n            ev = ctx.event.event;\n\n            if (plan && ev && this.name !== 'Segment.io') {\n              planEvent = plan[ev];\n\n              if ((planEvent === null || planEvent === void 0 ? void 0 : planEvent.enabled) === false) {\n                ctx.updateEvent('integrations', __assign(__assign({}, ctx.event.integrations), {\n                  All: false,\n                  'Segment.io': true\n                }));\n                ctx.cancel(new ContextCancelation({\n                  retry: false,\n                  reason: \"Event \" + ev + \" disabled for integration \" + this.name + \" in tracking plan\",\n                  type: 'Dropped by plan'\n                }));\n                return [2\n                /*return*/\n                , ctx];\n              } else {\n                ctx.updateEvent('integrations', __assign(__assign({}, ctx.event.integrations), planEvent === null || planEvent === void 0 ? void 0 : planEvent.integrations));\n              }\n\n              if ((planEvent === null || planEvent === void 0 ? void 0 : planEvent.enabled) && (planEvent === null || planEvent === void 0 ? void 0 : planEvent.integrations[this.name]) === false) {\n                ctx.cancel(new ContextCancelation({\n                  retry: false,\n                  reason: \"Event \" + ev + \" disabled for integration \" + this.name + \" in tracking plan\",\n                  type: 'Dropped by plan'\n                }));\n                return [2\n                /*return*/\n                , ctx];\n              }\n            }\n\n            return [4\n            /*yield*/\n            , applyDestinationMiddleware(this.name, klona(ctx.event), this.middleware)];\n\n          case 1:\n            afterMiddleware = _c.sent();\n\n            if (afterMiddleware === null) {\n              return [2\n              /*return*/\n              , ctx];\n            }\n\n            event = new clz(afterMiddleware, {});\n            ctx.stats.increment('analytics_js.integration.invoke', 1, [\"method:\" + eventType, \"integration_name:\" + this.name]);\n            _c.label = 2;\n\n          case 2:\n            _c.trys.push([2, 5,, 6]);\n\n            if (!this.integration) return [3\n            /*break*/\n            , 4];\n            return [4\n            /*yield*/\n            , asPromise(this.integration.invoke.call(this.integration, eventType, event))];\n\n          case 3:\n            _c.sent();\n\n            _c.label = 4;\n\n          case 4:\n            return [3\n            /*break*/\n            , 6];\n\n          case 5:\n            err_1 = _c.sent();\n            ctx.stats.increment('analytics_js.integration.invoke.error', 1, [\"method:\" + eventType, \"integration_name:\" + this.name]);\n            throw err_1;\n\n          case 6:\n            return [2\n            /*return*/\n            , ctx];\n        }\n      });\n    });\n  };\n\n  LegacyDestination.prototype.track = function (ctx) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.send(ctx, Track, 'track')];\n      });\n    });\n  };\n\n  LegacyDestination.prototype.page = function (ctx) {\n    var _a;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        if (((_a = this.integration) === null || _a === void 0 ? void 0 : _a._assumesPageview) && !this._initialized) {\n          this.integration.initialize();\n        }\n\n        return [2\n        /*return*/\n        , this.onInitialize.then(function () {\n          return _this.send(ctx, Page, 'page');\n        })];\n      });\n    });\n  };\n\n  LegacyDestination.prototype.identify = function (ctx) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.send(ctx, Identify, 'identify')];\n      });\n    });\n  };\n\n  LegacyDestination.prototype.alias = function (ctx) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.send(ctx, Alias, 'alias')];\n      });\n    });\n  };\n\n  LegacyDestination.prototype.group = function (ctx) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.send(ctx, Group, 'group')];\n      });\n    });\n  };\n\n  LegacyDestination.prototype.scheduleFlush = function () {\n    var _this = this;\n\n    if (this.flushing) {\n      return;\n    } // eslint-disable-next-line @typescript-eslint/no-misused-promises\n\n\n    setTimeout(function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              this.flushing = true;\n              _a = this;\n              return [4\n              /*yield*/\n              , flushQueue(this, this.buffer)];\n\n            case 1:\n              _a.buffer = _b.sent();\n              this.flushing = false;\n\n              if (this.buffer.todo > 0) {\n                this.scheduleFlush();\n              }\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }, Math.random() * 5000);\n  };\n\n  return LegacyDestination;\n}();\n\nexport { LegacyDestination };\nexport function ajsDestinations(settings, globalIntegrations, options) {\n  var _a, _b;\n\n  if (globalIntegrations === void 0) {\n    globalIntegrations = {};\n  }\n\n  return __awaiter(this, void 0, void 0, function () {\n    var routingRules, routingMiddleware, integrationOptions;\n    return __generator(this, function (_c) {\n      if (isServer()) {\n        return [2\n        /*return*/\n        , []];\n      }\n\n      if (settings.plan) {\n        options = options !== null && options !== void 0 ? options : {};\n        options.plan = settings.plan;\n      }\n\n      routingRules = (_b = (_a = settings.middlewareSettings) === null || _a === void 0 ? void 0 : _a.routingRules) !== null && _b !== void 0 ? _b : [];\n      routingMiddleware = tsubMiddleware(routingRules);\n      integrationOptions = mergedOptions(settings, options !== null && options !== void 0 ? options : {});\n      return [2\n      /*return*/\n      , Object.entries(settings.integrations).map(function (_a) {\n        var _b;\n\n        var name = _a[0],\n            integrationSettings = _a[1];\n\n        if (name.startsWith('Segment')) {\n          return;\n        }\n\n        var allDisableAndNotDefined = globalIntegrations.All === false && globalIntegrations[name] === undefined;\n\n        if (globalIntegrations[name] === false || allDisableAndNotDefined) {\n          return;\n        }\n\n        var type = integrationSettings.type,\n            bundlingStatus = integrationSettings.bundlingStatus,\n            versionSettings = integrationSettings.versionSettings; // We use `!== 'unbundled'` (versus `=== 'bundled'`) to be inclusive of\n        // destinations without a defined value for `bundlingStatus`\n\n        var deviceMode = bundlingStatus !== 'unbundled' && (type === 'browser' || ((_b = versionSettings === null || versionSettings === void 0 ? void 0 : versionSettings.componentTypes) === null || _b === void 0 ? void 0 : _b.includes('browser'))); // checking for iterable is a quick fix we need in place to prevent\n        // errors showing Iterable as a failed destiantion. Ideally, we should\n        // fix the Iterable metadata instead, but that's a longer process.\n\n        if (!deviceMode && name !== 'Segment.io' || name === 'Iterable') {\n          return;\n        }\n\n        var version = resolveVersion(integrationSettings);\n        var destination = new LegacyDestination(name, version, integrationOptions[name], options);\n        var routing = routingRules.filter(function (rule) {\n          return rule.destinationName === name;\n        });\n\n        if (routing.length > 0) {\n          destination.addMiddleware(routingMiddleware);\n        }\n\n        return destination;\n      }).filter(function (xt) {\n        return xt !== undefined;\n      })];\n    });\n  });\n}","import * as tsub from '@segment/tsub';\nexport var tsubMiddleware = function tsubMiddleware(rules) {\n  return function (_a) {\n    var payload = _a.payload,\n        integration = _a.integration,\n        next = _a.next;\n    var store = new tsub.Store(rules);\n    var rulesToApply = store.getRulesByDestinationName(integration);\n    rulesToApply.forEach(function (rule) {\n      var matchers = rule.matchers,\n          transformers = rule.transformers;\n\n      for (var i = 0; i < matchers.length; i++) {\n        if (tsub.matches(payload.obj, matchers[i])) {\n          payload.obj = tsub.transform(payload.obj, transformers[i]);\n\n          if (payload.obj === null) {\n            return next(null);\n          }\n        }\n      }\n    });\n    next(payload);\n  };\n};"],"sourceRoot":""}