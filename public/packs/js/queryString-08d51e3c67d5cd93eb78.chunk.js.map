{"version":3,"sources":["webpack:///./node_modules/@june-so/analytics-next/dist/pkg/core/query-string/pickPrefix.js","webpack:///./node_modules/@june-so/analytics-next/dist/pkg/core/query-string/index.js"],"names":["pickPrefix","prefix","object","Object","keys","reduce","acc","key","startsWith","substr","length","queryString","analytics","query","a","document","createElement","href","params","search","slice","split","str","_a","k","v","decodeURI","replace","calls","ajs_uid","ajs_event","ajs_aid","uid","Array","isArray","traits","push","identify","event_1","props","track","anonId","setAnonymousId","Promise","all"],"mappings":"2FAMO,SAASA,EAAWC,EAAQC,GACjC,OAAOC,OAAOC,KAAKF,GAAQG,QAAO,SAAUC,EAAKC,GAC3CA,EAAIC,WAAWP,KAEjBK,EADYC,EAAIE,OAAOR,EAAOS,SACjBR,EAAOK,IAGtB,OAAOD,IACN,ICbE,SAASK,EAAYC,EAAWC,GACrC,IAAIC,EAAIC,SAASC,cAAc,KAC/BF,EAAEG,KAAOJ,EACT,IACIK,EADSJ,EAAEK,OAAOC,MAAM,GACRC,MAAM,KAAKhB,QAAO,SAAUC,EAAKgB,GACnD,IAAIC,EAAKD,EAAID,MAAM,KACfG,EAAID,EAAG,GACPE,EAAIF,EAAG,GAGX,OADAjB,EAAIkB,GAAKE,UAAUD,GAAGE,QAAQ,IAAK,KAC5BrB,IACN,IACCsB,EAAQ,GAGRC,EAAUX,EAAOW,QACjBC,EAAYZ,EAAOY,UACnBC,EAAUb,EAAOa,QAErB,GAAIF,EAAS,CACX,IAAIG,EAAMC,MAAMC,QAAQhB,EAAOW,SAAWX,EAAOW,QAAQ,GAAKX,EAAOW,QACjEM,EAASnC,EAAW,aAAckB,GACtCU,EAAMQ,KAAKxB,EAAUyB,SAASL,EAAKG,IAGrC,GAAIL,EAAW,CACb,IAAIQ,EAAUL,MAAMC,QAAQhB,EAAOY,WAAaZ,EAAOY,UAAU,GAAKZ,EAAOY,UACzES,EAAQvC,EAAW,YAAakB,GACpCU,EAAMQ,KAAKxB,EAAU4B,MAAMF,EAASC,IAGtC,GAAIR,EAAS,CACX,IAAIU,EAASR,MAAMC,QAAQhB,EAAOa,SAAWb,EAAOa,QAAQ,GAAKb,EAAOa,QACxEnB,EAAU8B,eAAeD,GAK3B,OAAOE,QAAQC,IAAIhB,G","file":"js/queryString-08d51e3c67d5cd93eb78.chunk.js","sourcesContent":["/**\n * Returns an object containing only the properties prefixed by the input\n * string.\n * Ex: prefix('ajs_traits_', { ajs_traits_address: '123 St' })\n * will return { address: '123 St' }\n **/\nexport function pickPrefix(prefix, object) {\n  return Object.keys(object).reduce(function (acc, key) {\n    if (key.startsWith(prefix)) {\n      var field = key.substr(prefix.length);\n      acc[field] = object[key];\n    }\n\n    return acc;\n  }, {});\n}","import { pickPrefix } from './pickPrefix';\nexport function queryString(analytics, query) {\n  var a = document.createElement('a');\n  a.href = query;\n  var parsed = a.search.slice(1);\n  var params = parsed.split('&').reduce(function (acc, str) {\n    var _a = str.split('='),\n        k = _a[0],\n        v = _a[1];\n\n    acc[k] = decodeURI(v).replace('+', ' ');\n    return acc;\n  }, {});\n  var calls = [];\n  /* eslint-disable @typescript-eslint/camelcase */\n\n  var ajs_uid = params.ajs_uid,\n      ajs_event = params.ajs_event,\n      ajs_aid = params.ajs_aid;\n\n  if (ajs_uid) {\n    var uid = Array.isArray(params.ajs_uid) ? params.ajs_uid[0] : params.ajs_uid;\n    var traits = pickPrefix('ajs_trait_', params);\n    calls.push(analytics.identify(uid, traits));\n  }\n\n  if (ajs_event) {\n    var event_1 = Array.isArray(params.ajs_event) ? params.ajs_event[0] : params.ajs_event;\n    var props = pickPrefix('ajs_prop_', params);\n    calls.push(analytics.track(event_1, props));\n  }\n\n  if (ajs_aid) {\n    var anonId = Array.isArray(params.ajs_aid) ? params.ajs_aid[0] : params.ajs_aid;\n    analytics.setAnonymousId(anonId);\n  }\n  /* eslint-enable @typescript-eslint/camelcase */\n\n\n  return Promise.all(calls);\n}"],"sourceRoot":""}