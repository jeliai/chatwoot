{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.promise.finally.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport AddLabel from './AddLabel';\nimport EditLabel from './EditLabel';\nimport alertMixin from 'shared/mixins/alertMixin';\nexport default {\n  components: {\n    AddLabel: AddLabel,\n    EditLabel: EditLabel\n  },\n  mixins: [alertMixin],\n  data: function data() {\n    return {\n      loading: {},\n      showAddPopup: false,\n      showEditPopup: false,\n      showDeleteConfirmationPopup: false,\n      selectedResponse: {}\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    records: 'labels/getLabels',\n    uiFlags: 'labels/getUIFlags'\n  })), {}, {\n    // Delete Modal\n    deleteConfirmText: function deleteConfirmText() {\n      return \"\".concat(this.$t('LABEL_MGMT.DELETE.CONFIRM.YES'), \" \").concat(this.selectedResponse.title);\n    },\n    deleteRejectText: function deleteRejectText() {\n      return \"\".concat(this.$t('LABEL_MGMT.DELETE.CONFIRM.NO'), \" \").concat(this.selectedResponse.title);\n    },\n    deleteMessage: function deleteMessage() {\n      return \" \".concat(this.selectedResponse.title, \"?\");\n    }\n  }),\n  mounted: function mounted() {\n    this.$store.dispatch('labels/get');\n  },\n  methods: {\n    openAddPopup: function openAddPopup() {\n      this.showAddPopup = true;\n    },\n    hideAddPopup: function hideAddPopup() {\n      this.showAddPopup = false;\n    },\n    openEditPopup: function openEditPopup(response) {\n      this.showEditPopup = true;\n      this.selectedResponse = response;\n    },\n    hideEditPopup: function hideEditPopup() {\n      this.showEditPopup = false;\n    },\n    openDeletePopup: function openDeletePopup(response) {\n      this.showDeleteConfirmationPopup = true;\n      this.selectedResponse = response;\n    },\n    closeDeletePopup: function closeDeletePopup() {\n      this.showDeleteConfirmationPopup = false;\n    },\n    confirmDeletion: function confirmDeletion() {\n      this.loading[this.selectedResponse.id] = true;\n      this.closeDeletePopup();\n      this.deleteLabel(this.selectedResponse.id);\n    },\n    deleteLabel: function deleteLabel(id) {\n      var _this = this;\n\n      this.$store.dispatch('labels/delete', id).then(function () {\n        _this.showAlert(_this.$t('LABEL_MGMT.DELETE.API.SUCCESS_MESSAGE'));\n      }).catch(function () {\n        _this.showAlert(_this.$t('LABEL_MGMT.DELETE.API.ERROR_MESSAGE'));\n      }).finally(function () {\n        _this.loading[_this.selectedResponse.id] = false;\n      });\n    }\n  }\n};","map":{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA,SAAA,UAAA,QAAA,MAAA;AAEA,OAAA,QAAA,MAAA,YAAA;AACA,OAAA,SAAA,MAAA,aAAA;AACA,OAAA,UAAA,MAAA,0BAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,QAAA,EAAA,QADA;AAEA,IAAA,SAAA,EAAA;AAFA,GADA;AAKA,EAAA,MAAA,EAAA,CAAA,UAAA,CALA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,YAAA,EAAA,KAFA;AAGA,MAAA,aAAA,EAAA,KAHA;AAIA,MAAA,2BAAA,EAAA,KAJA;AAKA,MAAA,gBAAA,EAAA;AALA,KAAA;AAOA,GAdA;AAeA,EAAA,QAAA,kCACA,UAAA,CAAA;AACA,IAAA,OAAA,EAAA,kBADA;AAEA,IAAA,OAAA,EAAA;AAFA,GAAA,CADA;AAKA;AACA,IAAA,iBANA,+BAMA;AACA,uBAAA,KAAA,EAAA,CAAA,+BAAA,CAAA,cACA,KAAA,gBAAA,CAAA,KADA;AAGA,KAVA;AAWA,IAAA,gBAXA,8BAWA;AACA,uBAAA,KAAA,EAAA,CAAA,8BAAA,CAAA,cACA,KAAA,gBAAA,CAAA,KADA;AAGA,KAfA;AAgBA,IAAA,aAhBA,2BAgBA;AACA,wBAAA,KAAA,gBAAA,CAAA,KAAA;AACA;AAlBA,IAfA;AAmCA,EAAA,OAnCA,qBAmCA;AACA,SAAA,MAAA,CAAA,QAAA,CAAA,YAAA;AACA,GArCA;AAsCA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA,WAAA,YAAA,GAAA,IAAA;AACA,KAHA;AAIA,IAAA,YAJA,0BAIA;AACA,WAAA,YAAA,GAAA,KAAA;AACA,KANA;AAQA,IAAA,aARA,yBAQA,QARA,EAQA;AACA,WAAA,aAAA,GAAA,IAAA;AACA,WAAA,gBAAA,GAAA,QAAA;AACA,KAXA;AAYA,IAAA,aAZA,2BAYA;AACA,WAAA,aAAA,GAAA,KAAA;AACA,KAdA;AAgBA,IAAA,eAhBA,2BAgBA,QAhBA,EAgBA;AACA,WAAA,2BAAA,GAAA,IAAA;AACA,WAAA,gBAAA,GAAA,QAAA;AACA,KAnBA;AAoBA,IAAA,gBApBA,8BAoBA;AACA,WAAA,2BAAA,GAAA,KAAA;AACA,KAtBA;AAwBA,IAAA,eAxBA,6BAwBA;AACA,WAAA,OAAA,CAAA,KAAA,gBAAA,CAAA,EAAA,IAAA,IAAA;AACA,WAAA,gBAAA;AACA,WAAA,WAAA,CAAA,KAAA,gBAAA,CAAA,EAAA;AACA,KA5BA;AA6BA,IAAA,WA7BA,uBA6BA,EA7BA,EA6BA;AAAA;;AACA,WAAA,MAAA,CACA,QADA,CACA,eADA,EACA,EADA,EAEA,IAFA,CAEA,YAAA;AACA,QAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,EAAA,CAAA,uCAAA,CAAA;AACA,OAJA,EAKA,KALA,CAKA,YAAA;AACA,QAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,EAAA,CAAA,qCAAA,CAAA;AACA,OAPA,EAQA,OARA,CAQA,YAAA;AACA,QAAA,KAAA,CAAA,OAAA,CAAA,KAAA,CAAA,gBAAA,CAAA,EAAA,IAAA,KAAA;AACA,OAVA;AAWA;AAzCA;AAtCA,CAAA","sourcesContent":["<template>\n  <div class=\"column content-box\">\n    <woot-button\n      color-scheme=\"success\"\n      class-names=\"button--fixed-right-top\"\n      icon=\"add-circle\"\n      @click=\"openAddPopup\"\n    >\n      {{ $t('LABEL_MGMT.HEADER_BTN_TXT') }}\n    </woot-button>\n    <div class=\"row\">\n      <div class=\"small-8 columns with-right-space\">\n        <p\n          v-if=\"!uiFlags.isFetching && !records.length\"\n          class=\"no-items-error-message\"\n        >\n          {{ $t('LABEL_MGMT.LIST.404') }}\n        </p>\n        <woot-loading-state\n          v-if=\"uiFlags.isFetching\"\n          :message=\"$t('LABEL_MGMT.LOADING')\"\n        />\n        <table v-if=\"!uiFlags.isFetching && records.length\" class=\"woot-table\">\n          <thead>\n            <th\n              v-for=\"thHeader in $t('LABEL_MGMT.LIST.TABLE_HEADER')\"\n              :key=\"thHeader\"\n            >\n              {{ thHeader }}\n            </th>\n          </thead>\n          <tbody>\n            <tr v-for=\"(label, index) in records\" :key=\"label.title\">\n              <td class=\"label-title\">\n                <span class=\"text-truncate\">{{ label.title }}</span>\n              </td>\n              <td>{{ label.description }}</td>\n              <td>\n                <div class=\"label-color--container\">\n                  <span\n                    class=\"label-color--display\"\n                    :style=\"{ backgroundColor: label.color }\"\n                  />\n                  {{ label.color }}\n                </div>\n              </td>\n              <td class=\"button-wrapper\">\n                <woot-button\n                  v-tooltip.top=\"$t('LABEL_MGMT.FORM.EDIT')\"\n                  variant=\"smooth\"\n                  size=\"tiny\"\n                  color-scheme=\"secondary\"\n                  class-names=\"grey-btn\"\n                  :is-loading=\"loading[label.id]\"\n                  icon=\"edit\"\n                  @click=\"openEditPopup(label)\"\n                />\n                <woot-button\n                  v-tooltip.top=\"$t('LABEL_MGMT.FORM.DELETE')\"\n                  variant=\"smooth\"\n                  color-scheme=\"alert\"\n                  size=\"tiny\"\n                  icon=\"dismiss-circle\"\n                  class-names=\"grey-btn\"\n                  :is-loading=\"loading[label.id]\"\n                  @click=\"openDeletePopup(label, index)\"\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <div class=\"small-4 columns\">\n        <span v-dompurify-html=\"$t('LABEL_MGMT.SIDEBAR_TXT')\" />\n      </div>\n    </div>\n    <woot-modal :show.sync=\"showAddPopup\" :on-close=\"hideAddPopup\">\n      <add-label @close=\"hideAddPopup\" />\n    </woot-modal>\n\n    <woot-modal :show.sync=\"showEditPopup\" :on-close=\"hideEditPopup\">\n      <edit-label\n        :selected-response=\"selectedResponse\"\n        @close=\"hideEditPopup\"\n      />\n    </woot-modal>\n\n    <woot-delete-modal\n      :show.sync=\"showDeleteConfirmationPopup\"\n      :on-close=\"closeDeletePopup\"\n      :on-confirm=\"confirmDeletion\"\n      :title=\"$t('LABEL_MGMT.DELETE.CONFIRM.TITLE')\"\n      :message=\"$t('LABEL_MGMT.DELETE.CONFIRM.MESSAGE')\"\n      :message-value=\"deleteMessage\"\n      :confirm-text=\"deleteConfirmText\"\n      :reject-text=\"deleteRejectText\"\n    />\n  </div>\n</template>\n<script>\nimport { mapGetters } from 'vuex';\n\nimport AddLabel from './AddLabel';\nimport EditLabel from './EditLabel';\nimport alertMixin from 'shared/mixins/alertMixin';\n\nexport default {\n  components: {\n    AddLabel,\n    EditLabel,\n  },\n  mixins: [alertMixin],\n  data() {\n    return {\n      loading: {},\n      showAddPopup: false,\n      showEditPopup: false,\n      showDeleteConfirmationPopup: false,\n      selectedResponse: {},\n    };\n  },\n  computed: {\n    ...mapGetters({\n      records: 'labels/getLabels',\n      uiFlags: 'labels/getUIFlags',\n    }),\n    // Delete Modal\n    deleteConfirmText() {\n      return `${this.$t('LABEL_MGMT.DELETE.CONFIRM.YES')} ${\n        this.selectedResponse.title\n      }`;\n    },\n    deleteRejectText() {\n      return `${this.$t('LABEL_MGMT.DELETE.CONFIRM.NO')} ${\n        this.selectedResponse.title\n      }`;\n    },\n    deleteMessage() {\n      return ` ${this.selectedResponse.title}?`;\n    },\n  },\n  mounted() {\n    this.$store.dispatch('labels/get');\n  },\n  methods: {\n    openAddPopup() {\n      this.showAddPopup = true;\n    },\n    hideAddPopup() {\n      this.showAddPopup = false;\n    },\n\n    openEditPopup(response) {\n      this.showEditPopup = true;\n      this.selectedResponse = response;\n    },\n    hideEditPopup() {\n      this.showEditPopup = false;\n    },\n\n    openDeletePopup(response) {\n      this.showDeleteConfirmationPopup = true;\n      this.selectedResponse = response;\n    },\n    closeDeletePopup() {\n      this.showDeleteConfirmationPopup = false;\n    },\n\n    confirmDeletion() {\n      this.loading[this.selectedResponse.id] = true;\n      this.closeDeletePopup();\n      this.deleteLabel(this.selectedResponse.id);\n    },\n    deleteLabel(id) {\n      this.$store\n        .dispatch('labels/delete', id)\n        .then(() => {\n          this.showAlert(this.$t('LABEL_MGMT.DELETE.API.SUCCESS_MESSAGE'));\n        })\n        .catch(() => {\n          this.showAlert(this.$t('LABEL_MGMT.DELETE.API.ERROR_MESSAGE'));\n        })\n        .finally(() => {\n          this.loading[this.selectedResponse.id] = false;\n        });\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import '~dashboard/assets/scss/variables';\n\n.label-color--container {\n  display: flex;\n  align-items: center;\n}\n\n.label-color--display {\n  border-radius: $space-smaller;\n  height: $space-normal;\n  margin-right: $space-smaller;\n  width: $space-normal;\n  border: 1px solid var(--color-border-light);\n}\n.label-title {\n  span {\n    width: var(--space-giga);\n    display: inline-block;\n  }\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/settings/labels"},"metadata":{},"sourceType":"module"}