{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport validationMixin from './validationMixin';\nimport validations from './validations';\nexport default {\n  mixins: [alertMixin, validationMixin],\n  props: {\n    selectedResponse: {\n      type: Object,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    return {\n      title: '',\n      description: '',\n      showOnSidebar: true,\n      color: ''\n    };\n  },\n  validations: validations,\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    uiFlags: 'labels/getUIFlags'\n  })), {}, {\n    pageTitle: function pageTitle() {\n      return \"\".concat(this.$t('LABEL_MGMT.EDIT.TITLE'), \" - \").concat(this.selectedResponse.title);\n    }\n  }),\n  mounted: function mounted() {\n    this.setFormValues();\n  },\n  methods: {\n    onClose: function onClose() {\n      this.$emit('close');\n    },\n    setFormValues: function setFormValues() {\n      this.title = this.selectedResponse.title;\n      this.description = this.selectedResponse.description;\n      this.showOnSidebar = this.selectedResponse.show_on_sidebar;\n      this.color = this.selectedResponse.color;\n    },\n    editLabel: function editLabel() {\n      var _this = this;\n\n      this.$store.dispatch('labels/update', {\n        id: this.selectedResponse.id,\n        color: this.color,\n        description: this.description,\n        title: this.title,\n        show_on_sidebar: this.showOnSidebar\n      }).then(function () {\n        _this.showAlert(_this.$t('LABEL_MGMT.EDIT.API.SUCCESS_MESSAGE'));\n\n        setTimeout(function () {\n          return _this.onClose();\n        }, 10);\n      }).catch(function () {\n        _this.showAlert(_this.$t('LABEL_MGMT.EDIT.API.ERROR_MESSAGE'));\n      });\n    }\n  }\n};","map":{"version":3,"sources":["EditLabel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,UAAA,MAAA,0BAAA;AACA,OAAA,eAAA,MAAA,mBAAA;AACA,OAAA,WAAA,MAAA,eAAA;AAEA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,CADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,gBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA;AADA,GAFA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,WAAA,EAAA,EAFA;AAGA,MAAA,aAAA,EAAA,IAHA;AAIA,MAAA,KAAA,EAAA;AAJA,KAAA;AAMA,GAfA;AAgBA,EAAA,WAAA,EAAA,WAhBA;AAiBA,EAAA,QAAA,kCACA,UAAA,CAAA;AACA,IAAA,OAAA,EAAA;AADA,GAAA,CADA;AAIA,IAAA,SAJA,uBAIA;AACA,uBAAA,KAAA,EAAA,CAAA,uBAAA,CAAA,gBACA,KAAA,gBAAA,CAAA,KADA;AAGA;AARA,IAjBA;AA2BA,EAAA,OA3BA,qBA2BA;AACA,SAAA,aAAA;AACA,GA7BA;AA8BA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,WAAA,KAAA,CAAA,OAAA;AACA,KAHA;AAIA,IAAA,aAJA,2BAIA;AACA,WAAA,KAAA,GAAA,KAAA,gBAAA,CAAA,KAAA;AACA,WAAA,WAAA,GAAA,KAAA,gBAAA,CAAA,WAAA;AACA,WAAA,aAAA,GAAA,KAAA,gBAAA,CAAA,eAAA;AACA,WAAA,KAAA,GAAA,KAAA,gBAAA,CAAA,KAAA;AACA,KATA;AAUA,IAAA,SAVA,uBAUA;AAAA;;AACA,WAAA,MAAA,CACA,QADA,CACA,eADA,EACA;AACA,QAAA,EAAA,EAAA,KAAA,gBAAA,CAAA,EADA;AAEA,QAAA,KAAA,EAAA,KAAA,KAFA;AAGA,QAAA,WAAA,EAAA,KAAA,WAHA;AAIA,QAAA,KAAA,EAAA,KAAA,KAJA;AAKA,QAAA,eAAA,EAAA,KAAA;AALA,OADA,EAQA,IARA,CAQA,YAAA;AACA,QAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,EAAA,CAAA,qCAAA,CAAA;;AACA,QAAA,UAAA,CAAA;AAAA,iBAAA,KAAA,CAAA,OAAA,EAAA;AAAA,SAAA,EAAA,EAAA,CAAA;AACA,OAXA,EAYA,KAZA,CAYA,YAAA;AACA,QAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,EAAA,CAAA,mCAAA,CAAA;AACA,OAdA;AAeA;AA1BA;AA9BA,CAAA","sourcesContent":["<template>\n  <div class=\"column content-box\">\n    <woot-modal-header :header-title=\"pageTitle\" />\n    <form class=\"row\" @submit.prevent=\"editLabel\">\n      <woot-input\n        v-model.trim=\"title\"\n        :class=\"{ error: $v.title.$error }\"\n        class=\"medium-12 columns\"\n        :label=\"$t('LABEL_MGMT.FORM.NAME.LABEL')\"\n        :placeholder=\"$t('LABEL_MGMT.FORM.NAME.PLACEHOLDER')\"\n        :error=\"getLabelTitleErrorMessage\"\n        @input=\"$v.title.$touch\"\n      />\n      <woot-input\n        v-model.trim=\"description\"\n        :class=\"{ error: $v.description.$error }\"\n        class=\"medium-12 columns\"\n        :label=\"$t('LABEL_MGMT.FORM.DESCRIPTION.LABEL')\"\n        :placeholder=\"$t('LABEL_MGMT.FORM.DESCRIPTION.PLACEHOLDER')\"\n        @input=\"$v.description.$touch\"\n      />\n\n      <div class=\"medium-12\">\n        <label>\n          {{ $t('LABEL_MGMT.FORM.COLOR.LABEL') }}\n          <woot-color-picker v-model=\"color\" />\n        </label>\n      </div>\n      <div class=\"medium-12\">\n        <input v-model=\"showOnSidebar\" type=\"checkbox\" :value=\"true\" />\n        <label for=\"conversation_creation\">\n          {{ $t('LABEL_MGMT.FORM.SHOW_ON_SIDEBAR.LABEL') }}\n        </label>\n      </div>\n      <div class=\"modal-footer\">\n        <div class=\"medium-12 columns\">\n          <woot-button\n            :is-disabled=\"$v.title.$invalid || uiFlags.isUpdating\"\n            :is-loading=\"uiFlags.isUpdating\"\n          >\n            {{ $t('LABEL_MGMT.FORM.EDIT') }}\n          </woot-button>\n          <woot-button class=\"button clear\" @click.prevent=\"onClose\">\n            {{ $t('LABEL_MGMT.FORM.CANCEL') }}\n          </woot-button>\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport validationMixin from './validationMixin';\nimport validations from './validations';\n\nexport default {\n  mixins: [alertMixin, validationMixin],\n  props: {\n    selectedResponse: {\n      type: Object,\n      default: () => {},\n    },\n  },\n  data() {\n    return {\n      title: '',\n      description: '',\n      showOnSidebar: true,\n      color: '',\n    };\n  },\n  validations,\n  computed: {\n    ...mapGetters({\n      uiFlags: 'labels/getUIFlags',\n    }),\n    pageTitle() {\n      return `${this.$t('LABEL_MGMT.EDIT.TITLE')} - ${\n        this.selectedResponse.title\n      }`;\n    },\n  },\n  mounted() {\n    this.setFormValues();\n  },\n  methods: {\n    onClose() {\n      this.$emit('close');\n    },\n    setFormValues() {\n      this.title = this.selectedResponse.title;\n      this.description = this.selectedResponse.description;\n      this.showOnSidebar = this.selectedResponse.show_on_sidebar;\n      this.color = this.selectedResponse.color;\n    },\n    editLabel() {\n      this.$store\n        .dispatch('labels/update', {\n          id: this.selectedResponse.id,\n          color: this.color,\n          description: this.description,\n          title: this.title,\n          show_on_sidebar: this.showOnSidebar,\n        })\n        .then(() => {\n          this.showAlert(this.$t('LABEL_MGMT.EDIT.API.SUCCESS_MESSAGE'));\n          setTimeout(() => this.onClose(), 10);\n        })\n        .catch(() => {\n          this.showAlert(this.$t('LABEL_MGMT.EDIT.API.ERROR_MESSAGE'));\n        });\n    },\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/settings/labels"},"metadata":{},"sourceType":"module"}