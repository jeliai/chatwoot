{"ast":null,"code":"import \"regenerator-runtime/runtime.js\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport { mixin as clickaway } from 'vue-clickaway';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport snoozeTimesMixin from 'dashboard/mixins/conversation/snoozeTimesMixin.js';\nimport eventListenerMixins from 'shared/mixins/eventListenerMixins';\nimport { hasPressedAltAndEKey, hasPressedCommandPlusAltAndEKey, hasPressedAltAndMKey } from 'shared/helpers/KeyboardHelpers';\nimport WootDropdownItem from 'shared/components/ui/dropdown/DropdownItem.vue';\nimport WootDropdownSubMenu from 'shared/components/ui/dropdown/DropdownSubMenu.vue';\nimport WootDropdownMenu from 'shared/components/ui/dropdown/DropdownMenu.vue';\nimport WootDropdownDivider from 'shared/components/ui/dropdown/DropdownDivider';\nimport wootConstants from '../../constants';\nimport { CMD_REOPEN_CONVERSATION, CMD_RESOLVE_CONVERSATION, CMD_SNOOZE_CONVERSATION } from '../../routes/dashboard/commands/commandBarBusEvents';\nexport default {\n  components: {\n    WootDropdownItem: WootDropdownItem,\n    WootDropdownMenu: WootDropdownMenu,\n    WootDropdownSubMenu: WootDropdownSubMenu,\n    WootDropdownDivider: WootDropdownDivider\n  },\n  mixins: [clickaway, alertMixin, eventListenerMixins, snoozeTimesMixin],\n  props: {\n    conversationId: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      isLoading: false,\n      showActionsDropdown: false,\n      STATUS_TYPE: wootConstants.STATUS_TYPE\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    currentChat: 'getSelectedChat'\n  })), {}, {\n    isOpen: function isOpen() {\n      return this.currentChat.status === wootConstants.STATUS_TYPE.OPEN;\n    },\n    isPending: function isPending() {\n      return this.currentChat.status === wootConstants.STATUS_TYPE.PENDING;\n    },\n    isResolved: function isResolved() {\n      return this.currentChat.status === wootConstants.STATUS_TYPE.RESOLVED;\n    },\n    isSnoozed: function isSnoozed() {\n      return this.currentChat.status === wootConstants.STATUS_TYPE.SNOOZED;\n    },\n    buttonClass: function buttonClass() {\n      if (this.isPending) return 'primary';\n      if (this.isOpen) return 'success';\n      if (this.isResolved) return 'warning';\n      return '';\n    },\n    showAdditionalActions: function showAdditionalActions() {\n      return !this.isPending && !this.isSnoozed;\n    }\n  }),\n  mounted: function mounted() {\n    bus.$on(CMD_SNOOZE_CONVERSATION, this.onCmdSnoozeConversation);\n    bus.$on(CMD_REOPEN_CONVERSATION, this.onCmdOpenConversation);\n    bus.$on(CMD_RESOLVE_CONVERSATION, this.onCmdResolveConversation);\n  },\n  destroyed: function destroyed() {\n    bus.$off(CMD_SNOOZE_CONVERSATION, this.onCmdSnoozeConversation);\n    bus.$off(CMD_REOPEN_CONVERSATION, this.onCmdOpenConversation);\n    bus.$off(CMD_RESOLVE_CONVERSATION, this.onCmdResolveConversation);\n  },\n  methods: {\n    handleKeyEvents: function handleKeyEvents(e) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var allConversations, activeConversation, activeConversationIndex, lastConversationIndex;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                allConversations = document.querySelectorAll('.conversations-list .conversation');\n\n                if (hasPressedAltAndMKey(e)) {\n                  if (_this.$refs.arrowDownButton) {\n                    _this.$refs.arrowDownButton.$el.click();\n                  }\n                }\n\n                if (!hasPressedAltAndEKey(e)) {\n                  _context.next = 14;\n                  break;\n                }\n\n                activeConversation = document.querySelector('div.conversations-list div.conversation.active');\n                activeConversationIndex = _toConsumableArray(allConversations).indexOf(activeConversation);\n                lastConversationIndex = allConversations.length - 1;\n                _context.prev = 6;\n                _context.next = 9;\n                return _this.toggleStatus(wootConstants.STATUS_TYPE.RESOLVED);\n\n              case 9:\n                _context.next = 13;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](6);\n\n              case 13:\n                if (hasPressedCommandPlusAltAndEKey(e)) {\n                  if (activeConversationIndex < lastConversationIndex) {\n                    allConversations[activeConversationIndex + 1].click();\n                  } else if (allConversations.length > 1) {\n                    allConversations[0].click();\n                    document.querySelector('.conversations-list').scrollTop = 0;\n                  }\n\n                  e.preventDefault();\n                }\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[6, 11]]);\n      }))();\n    },\n    onCmdSnoozeConversation: function onCmdSnoozeConversation(snoozeType) {\n      this.toggleStatus(this.STATUS_TYPE.SNOOZED, this.snoozeTimes[snoozeType] || null);\n    },\n    onCmdOpenConversation: function onCmdOpenConversation() {\n      this.toggleStatus(this.STATUS_TYPE.OPEN);\n    },\n    onCmdResolveConversation: function onCmdResolveConversation() {\n      this.toggleStatus(this.STATUS_TYPE.RESOLVED);\n    },\n    showOpenButton: function showOpenButton() {\n      return this.isResolved || this.isSnoozed;\n    },\n    closeDropdown: function closeDropdown() {\n      this.showActionsDropdown = false;\n    },\n    openDropdown: function openDropdown() {\n      this.showActionsDropdown = true;\n    },\n    toggleStatus: function toggleStatus(status, snoozedUntil) {\n      var _this2 = this;\n\n      this.closeDropdown();\n      this.isLoading = true;\n      this.$store.dispatch('toggleStatus', {\n        conversationId: this.currentChat.id,\n        status: status,\n        snoozedUntil: snoozedUntil\n      }).then(function () {\n        _this2.showAlert(_this2.$t('CONVERSATION.CHANGE_STATUS'));\n\n        _this2.isLoading = false;\n      });\n    }\n  }\n};","map":{"version":3,"sources":["ResolveAction.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"resolve-actions\">\n    <div class=\"button-group\">\n      <woot-button\n        v-if=\"isOpen\"\n        class-names=\"resolve\"\n        color-scheme=\"success\"\n        icon=\"checkmark\"\n        emoji=\"✅\"\n        :is-loading=\"isLoading\"\n        @click=\"onCmdResolveConversation\"\n      >\n        {{ this.$t('CONVERSATION.HEADER.RESOLVE_ACTION') }}\n      </woot-button>\n      <woot-button\n        v-else-if=\"isResolved\"\n        class-names=\"resolve\"\n        color-scheme=\"warning\"\n        icon=\"arrow-redo\"\n        emoji=\"👀\"\n        :is-loading=\"isLoading\"\n        @click=\"onCmdOpenConversation\"\n      >\n        {{ this.$t('CONVERSATION.HEADER.REOPEN_ACTION') }}\n      </woot-button>\n      <woot-button\n        v-else-if=\"showOpenButton\"\n        class-names=\"resolve\"\n        color-scheme=\"primary\"\n        icon=\"person\"\n        :is-loading=\"isLoading\"\n        @click=\"onCmdOpenConversation\"\n      >\n        {{ this.$t('CONVERSATION.HEADER.OPEN_ACTION') }}\n      </woot-button>\n      <woot-button\n        v-if=\"showAdditionalActions\"\n        ref=\"arrowDownButton\"\n        :color-scheme=\"buttonClass\"\n        :disabled=\"isLoading\"\n        icon=\"chevron-down\"\n        emoji=\"🔽\"\n        @click=\"openDropdown\"\n      />\n    </div>\n    <div\n      v-if=\"showActionsDropdown\"\n      v-on-clickaway=\"closeDropdown\"\n      class=\"dropdown-pane dropdown-pane--open\"\n    >\n      <woot-dropdown-menu>\n        <woot-dropdown-item v-if=\"!isPending\">\n          <woot-button\n            variant=\"clear\"\n            color-scheme=\"secondary\"\n            size=\"small\"\n            icon=\"book-clock\"\n            @click=\"() => toggleStatus(STATUS_TYPE.PENDING)\"\n          >\n            {{ this.$t('CONVERSATION.RESOLVE_DROPDOWN.MARK_PENDING') }}\n          </woot-button>\n        </woot-dropdown-item>\n\n        <woot-dropdown-divider v-if=\"isOpen\" />\n        <woot-dropdown-sub-menu\n          v-if=\"isOpen\"\n          :title=\"this.$t('CONVERSATION.RESOLVE_DROPDOWN.SNOOZE.TITLE')\"\n        >\n          <woot-dropdown-item>\n            <woot-button\n              variant=\"clear\"\n              color-scheme=\"secondary\"\n              size=\"small\"\n              icon=\"send-clock\"\n              @click=\"() => toggleStatus(STATUS_TYPE.SNOOZED, null)\"\n            >\n              {{ this.$t('CONVERSATION.RESOLVE_DROPDOWN.SNOOZE.NEXT_REPLY') }}\n            </woot-button>\n          </woot-dropdown-item>\n          <woot-dropdown-item>\n            <woot-button\n              variant=\"clear\"\n              color-scheme=\"secondary\"\n              size=\"small\"\n              icon=\"dual-screen-clock\"\n              @click=\"\n                () => toggleStatus(STATUS_TYPE.SNOOZED, snoozeTimes.tomorrow)\n              \"\n            >\n              {{ this.$t('CONVERSATION.RESOLVE_DROPDOWN.SNOOZE.TOMORROW') }}\n            </woot-button>\n          </woot-dropdown-item>\n          <woot-dropdown-item>\n            <woot-button\n              variant=\"clear\"\n              color-scheme=\"secondary\"\n              size=\"small\"\n              icon=\"calendar-clock\"\n              @click=\"\n                () => toggleStatus(STATUS_TYPE.SNOOZED, snoozeTimes.nextWeek)\n              \"\n            >\n              {{ this.$t('CONVERSATION.RESOLVE_DROPDOWN.SNOOZE.NEXT_WEEK') }}\n            </woot-button>\n          </woot-dropdown-item>\n        </woot-dropdown-sub-menu>\n      </woot-dropdown-menu>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport { mixin as clickaway } from 'vue-clickaway';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport snoozeTimesMixin from 'dashboard/mixins/conversation/snoozeTimesMixin.js';\nimport eventListenerMixins from 'shared/mixins/eventListenerMixins';\nimport {\n  hasPressedAltAndEKey,\n  hasPressedCommandPlusAltAndEKey,\n  hasPressedAltAndMKey,\n} from 'shared/helpers/KeyboardHelpers';\n\nimport WootDropdownItem from 'shared/components/ui/dropdown/DropdownItem.vue';\nimport WootDropdownSubMenu from 'shared/components/ui/dropdown/DropdownSubMenu.vue';\nimport WootDropdownMenu from 'shared/components/ui/dropdown/DropdownMenu.vue';\nimport WootDropdownDivider from 'shared/components/ui/dropdown/DropdownDivider';\n\nimport wootConstants from '../../constants';\nimport {\n  CMD_REOPEN_CONVERSATION,\n  CMD_RESOLVE_CONVERSATION,\n  CMD_SNOOZE_CONVERSATION,\n} from '../../routes/dashboard/commands/commandBarBusEvents';\n\nexport default {\n  components: {\n    WootDropdownItem,\n    WootDropdownMenu,\n    WootDropdownSubMenu,\n    WootDropdownDivider,\n  },\n  mixins: [clickaway, alertMixin, eventListenerMixins, snoozeTimesMixin],\n  props: { conversationId: { type: [String, Number], required: true } },\n  data() {\n    return {\n      isLoading: false,\n      showActionsDropdown: false,\n      STATUS_TYPE: wootConstants.STATUS_TYPE,\n    };\n  },\n  computed: {\n    ...mapGetters({ currentChat: 'getSelectedChat' }),\n    isOpen() {\n      return this.currentChat.status === wootConstants.STATUS_TYPE.OPEN;\n    },\n    isPending() {\n      return this.currentChat.status === wootConstants.STATUS_TYPE.PENDING;\n    },\n    isResolved() {\n      return this.currentChat.status === wootConstants.STATUS_TYPE.RESOLVED;\n    },\n    isSnoozed() {\n      return this.currentChat.status === wootConstants.STATUS_TYPE.SNOOZED;\n    },\n    buttonClass() {\n      if (this.isPending) return 'primary';\n      if (this.isOpen) return 'success';\n      if (this.isResolved) return 'warning';\n      return '';\n    },\n    showAdditionalActions() {\n      return !this.isPending && !this.isSnoozed;\n    },\n  },\n  mounted() {\n    bus.$on(CMD_SNOOZE_CONVERSATION, this.onCmdSnoozeConversation);\n    bus.$on(CMD_REOPEN_CONVERSATION, this.onCmdOpenConversation);\n    bus.$on(CMD_RESOLVE_CONVERSATION, this.onCmdResolveConversation);\n  },\n  destroyed() {\n    bus.$off(CMD_SNOOZE_CONVERSATION, this.onCmdSnoozeConversation);\n    bus.$off(CMD_REOPEN_CONVERSATION, this.onCmdOpenConversation);\n    bus.$off(CMD_RESOLVE_CONVERSATION, this.onCmdResolveConversation);\n  },\n  methods: {\n    async handleKeyEvents(e) {\n      const allConversations = document.querySelectorAll(\n        '.conversations-list .conversation'\n      );\n      if (hasPressedAltAndMKey(e)) {\n        if (this.$refs.arrowDownButton) {\n          this.$refs.arrowDownButton.$el.click();\n        }\n      }\n      if (hasPressedAltAndEKey(e)) {\n        const activeConversation = document.querySelector(\n          'div.conversations-list div.conversation.active'\n        );\n        const activeConversationIndex = [...allConversations].indexOf(\n          activeConversation\n        );\n        const lastConversationIndex = allConversations.length - 1;\n        try {\n          await this.toggleStatus(wootConstants.STATUS_TYPE.RESOLVED);\n        } catch (error) {\n          // error\n        }\n        if (hasPressedCommandPlusAltAndEKey(e)) {\n          if (activeConversationIndex < lastConversationIndex) {\n            allConversations[activeConversationIndex + 1].click();\n          } else if (allConversations.length > 1) {\n            allConversations[0].click();\n            document.querySelector('.conversations-list').scrollTop = 0;\n          }\n          e.preventDefault();\n        }\n      }\n    },\n    onCmdSnoozeConversation(snoozeType) {\n      this.toggleStatus(\n        this.STATUS_TYPE.SNOOZED,\n        this.snoozeTimes[snoozeType] || null\n      );\n    },\n    onCmdOpenConversation() {\n      this.toggleStatus(this.STATUS_TYPE.OPEN);\n    },\n    onCmdResolveConversation() {\n      this.toggleStatus(this.STATUS_TYPE.RESOLVED);\n    },\n    showOpenButton() {\n      return this.isResolved || this.isSnoozed;\n    },\n    closeDropdown() {\n      this.showActionsDropdown = false;\n    },\n    openDropdown() {\n      this.showActionsDropdown = true;\n    },\n    toggleStatus(status, snoozedUntil) {\n      this.closeDropdown();\n      this.isLoading = true;\n      this.$store\n        .dispatch('toggleStatus', {\n          conversationId: this.currentChat.id,\n          status,\n          snoozedUntil,\n        })\n        .then(() => {\n          this.showAlert(this.$t('CONVERSATION.CHANGE_STATUS'));\n          this.isLoading = false;\n        });\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n.resolve-actions {\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n}\n\n.dropdown-pane {\n  left: unset;\n  top: 4.2rem;\n  margin-top: var(--space-micro);\n  right: 0;\n  max-width: 20rem;\n  min-width: 15.6rem;\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/components/buttons"},"metadata":{},"sourceType":"module"}