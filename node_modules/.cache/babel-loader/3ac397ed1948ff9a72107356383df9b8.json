{"ast":null,"code":"import \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport { MACRO_ACTION_TYPES as macroActionTypes } from 'dashboard/routes/dashboard/settings/macros/constants.js';\nexport var emptyMacro = {\n  name: '',\n  actions: [{\n    action_name: 'assign_team',\n    action_params: []\n  }],\n  visibility: 'global'\n};\nexport var resolveActionName = function resolveActionName(key) {\n  return macroActionTypes.find(function (i) {\n    return i.key === key;\n  }).label;\n};\nexport var resolveTeamIds = function resolveTeamIds(teams, ids) {\n  return ids.map(function (id) {\n    var team = teams.find(function (i) {\n      return i.id === id;\n    });\n    return team ? team.name : '';\n  }).join(', ');\n};\nexport var resolveLabels = function resolveLabels(labels, ids) {\n  return ids.map(function (id) {\n    var label = labels.find(function (i) {\n      return i.title === id;\n    });\n    return label ? label.title : '';\n  }).join(', ');\n};\nexport var resolveAgents = function resolveAgents(agents, ids) {\n  return ids.map(function (id) {\n    var agent = agents.find(function (i) {\n      return i.id === id;\n    });\n    return agent ? agent.name : '';\n  }).join(', ');\n};\nexport var getFileName = function getFileName(id, actionType, files) {\n  if (!id || !files) return '';\n\n  if (actionType === 'send_attachment') {\n    var file = files.find(function (item) {\n      return item.blob_id === id;\n    });\n    if (file) return file.filename.toString();\n  }\n\n  return '';\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/routes/dashboard/settings/macros/macroHelper.js"],"names":["MACRO_ACTION_TYPES","macroActionTypes","emptyMacro","name","actions","action_name","action_params","visibility","resolveActionName","key","find","i","label","resolveTeamIds","teams","ids","map","id","team","join","resolveLabels","labels","title","resolveAgents","agents","agent","getFileName","actionType","files","file","item","blob_id","filename","toString"],"mappings":";;;;;;AAAA,SAASA,kBAAkB,IAAIC,gBAA/B,QAAuD,yDAAvD;AACA,OAAO,IAAMC,UAAU,GAAG;AACxBC,EAAAA,IAAI,EAAE,EADkB;AAExBC,EAAAA,OAAO,EAAE,CACP;AACEC,IAAAA,WAAW,EAAE,aADf;AAEEC,IAAAA,aAAa,EAAE;AAFjB,GADO,CAFe;AAQxBC,EAAAA,UAAU,EAAE;AARY,CAAnB;AAWP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,GAAG,EAAI;AACtC,SAAOR,gBAAgB,CAACS,IAAjB,CAAsB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACF,GAAF,KAAUA,GAAd;AAAA,GAAvB,EAA0CG,KAAjD;AACD,CAFM;AAIP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAQC,GAAR,EAAgB;AAC5C,SAAOA,GAAG,CACPC,GADI,CACA,UAAAC,EAAE,EAAI;AACT,QAAMC,IAAI,GAAGJ,KAAK,CAACJ,IAAN,CAAW,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACM,EAAF,KAASA,EAAb;AAAA,KAAZ,CAAb;AACA,WAAOC,IAAI,GAAGA,IAAI,CAACf,IAAR,GAAe,EAA1B;AACD,GAJI,EAKJgB,IALI,CAKC,IALD,CAAP;AAMD,CAPM;AASP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,MAAD,EAASN,GAAT,EAAiB;AAC5C,SAAOA,GAAG,CACPC,GADI,CACA,UAAAC,EAAE,EAAI;AACT,QAAML,KAAK,GAAGS,MAAM,CAACX,IAAP,CAAY,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACW,KAAF,KAAYL,EAAhB;AAAA,KAAb,CAAd;AACA,WAAOL,KAAK,GAAGA,KAAK,CAACU,KAAT,GAAiB,EAA7B;AACD,GAJI,EAKJH,IALI,CAKC,IALD,CAAP;AAMD,CAPM;AASP,OAAO,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAACC,MAAD,EAAST,GAAT,EAAiB;AAC5C,SAAOA,GAAG,CACPC,GADI,CACA,UAAAC,EAAE,EAAI;AACT,QAAMQ,KAAK,GAAGD,MAAM,CAACd,IAAP,CAAY,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACM,EAAF,KAASA,EAAb;AAAA,KAAb,CAAd;AACA,WAAOQ,KAAK,GAAGA,KAAK,CAACtB,IAAT,GAAgB,EAA5B;AACD,GAJI,EAKJgB,IALI,CAKC,IALD,CAAP;AAMD,CAPM;AASP,OAAO,IAAMO,WAAW,GAAG,SAAdA,WAAc,CAACT,EAAD,EAAKU,UAAL,EAAiBC,KAAjB,EAA2B;AACpD,MAAI,CAACX,EAAD,IAAO,CAACW,KAAZ,EAAmB,OAAO,EAAP;;AACnB,MAAID,UAAU,KAAK,iBAAnB,EAAsC;AACpC,QAAME,IAAI,GAAGD,KAAK,CAAClB,IAAN,CAAW,UAAAoB,IAAI;AAAA,aAAIA,IAAI,CAACC,OAAL,KAAiBd,EAArB;AAAA,KAAf,CAAb;AACA,QAAIY,IAAJ,EAAU,OAAOA,IAAI,CAACG,QAAL,CAAcC,QAAd,EAAP;AACX;;AACD,SAAO,EAAP;AACD,CAPM","sourcesContent":["import { MACRO_ACTION_TYPES as macroActionTypes } from 'dashboard/routes/dashboard/settings/macros/constants.js';\nexport const emptyMacro = {\n  name: '',\n  actions: [\n    {\n      action_name: 'assign_team',\n      action_params: [],\n    },\n  ],\n  visibility: 'global',\n};\n\nexport const resolveActionName = key => {\n  return macroActionTypes.find(i => i.key === key).label;\n};\n\nexport const resolveTeamIds = (teams, ids) => {\n  return ids\n    .map(id => {\n      const team = teams.find(i => i.id === id);\n      return team ? team.name : '';\n    })\n    .join(', ');\n};\n\nexport const resolveLabels = (labels, ids) => {\n  return ids\n    .map(id => {\n      const label = labels.find(i => i.title === id);\n      return label ? label.title : '';\n    })\n    .join(', ');\n};\n\nexport const resolveAgents = (agents, ids) => {\n  return ids\n    .map(id => {\n      const agent = agents.find(i => i.id === id);\n      return agent ? agent.name : '';\n    })\n    .join(', ');\n};\n\nexport const getFileName = (id, actionType, files) => {\n  if (!id || !files) return '';\n  if (actionType === 'send_attachment') {\n    const file = files.find(item => item.blob_id === id);\n    if (file) return file.filename.toString();\n  }\n  return '';\n};\n"]},"metadata":{},"sourceType":"module"}