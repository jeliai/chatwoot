{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/* global axios */\nvar DEFAULT_API_VERSION = 'v1';\n\nvar ApiClient = /*#__PURE__*/function () {\n  function ApiClient(resource) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, ApiClient);\n\n    this.apiVersion = \"/api/\".concat(options.apiVersion || DEFAULT_API_VERSION);\n    this.options = options;\n    this.resource = resource;\n  }\n\n  _createClass(ApiClient, [{\n    key: \"url\",\n    get: function get() {\n      return \"\".concat(this.baseUrl(), \"/\").concat(this.resource);\n    }\n  }, {\n    key: \"baseUrl\",\n    value: function baseUrl() {\n      var url = this.apiVersion;\n\n      if (this.options.enterprise) {\n        url = \"/enterprise\".concat(url);\n      }\n\n      if (this.options.accountScoped) {\n        var isInsideAccountScopedURLs = window.location.pathname.includes('/app/accounts');\n\n        if (isInsideAccountScopedURLs) {\n          var accountId = window.location.pathname.split('/')[3];\n          url = \"\".concat(url, \"/accounts/\").concat(accountId);\n        }\n      }\n\n      return url;\n    }\n  }, {\n    key: \"get\",\n    value: function get() {\n      return axios.get(this.url);\n    }\n  }, {\n    key: \"show\",\n    value: function show(id) {\n      return axios.get(\"\".concat(this.url, \"/\").concat(id));\n    }\n  }, {\n    key: \"create\",\n    value: function create(data) {\n      return axios.post(this.url, data);\n    }\n  }, {\n    key: \"update\",\n    value: function update(id, data) {\n      return axios.patch(\"\".concat(this.url, \"/\").concat(id), data);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(id) {\n      return axios.delete(\"\".concat(this.url, \"/\").concat(id));\n    }\n  }]);\n\n  return ApiClient;\n}();\n\nexport default ApiClient;","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/api/ApiClient.js"],"names":["DEFAULT_API_VERSION","ApiClient","resource","options","apiVersion","baseUrl","url","enterprise","accountScoped","isInsideAccountScopedURLs","window","location","pathname","includes","accountId","split","axios","get","id","data","post","patch","delete"],"mappings":";;;;;;;;;;;;AAAA;AAEA,IAAMA,mBAAmB,GAAG,IAA5B;;IAEMC,S;AACJ,qBAAYC,QAAZ,EAAoC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AAAA;;AAClC,SAAKC,UAAL,kBAA0BD,OAAO,CAACC,UAAR,IAAsBJ,mBAAhD;AACA,SAAKG,OAAL,GAAeA,OAAf;AACA,SAAKD,QAAL,GAAgBA,QAAhB;AACD;;;;SAED,eAAU;AACR,uBAAU,KAAKG,OAAL,EAAV,cAA4B,KAAKH,QAAjC;AACD;;;WAED,mBAAU;AACR,UAAII,GAAG,GAAG,KAAKF,UAAf;;AAEA,UAAI,KAAKD,OAAL,CAAaI,UAAjB,EAA6B;AAC3BD,QAAAA,GAAG,wBAAiBA,GAAjB,CAAH;AACD;;AAED,UAAI,KAAKH,OAAL,CAAaK,aAAjB,EAAgC;AAC9B,YAAMC,yBAAyB,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,QAAzB,CAChC,eADgC,CAAlC;;AAIA,YAAIJ,yBAAJ,EAA+B;AAC7B,cAAMK,SAAS,GAAGJ,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBG,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,CAAlB;AACAT,UAAAA,GAAG,aAAMA,GAAN,uBAAsBQ,SAAtB,CAAH;AACD;AACF;;AAED,aAAOR,GAAP;AACD;;;WAED,eAAM;AACJ,aAAOU,KAAK,CAACC,GAAN,CAAU,KAAKX,GAAf,CAAP;AACD;;;WAED,cAAKY,EAAL,EAAS;AACP,aAAOF,KAAK,CAACC,GAAN,WAAa,KAAKX,GAAlB,cAAyBY,EAAzB,EAAP;AACD;;;WAED,gBAAOC,IAAP,EAAa;AACX,aAAOH,KAAK,CAACI,IAAN,CAAW,KAAKd,GAAhB,EAAqBa,IAArB,CAAP;AACD;;;WAED,gBAAOD,EAAP,EAAWC,IAAX,EAAiB;AACf,aAAOH,KAAK,CAACK,KAAN,WAAe,KAAKf,GAApB,cAA2BY,EAA3B,GAAiCC,IAAjC,CAAP;AACD;;;WAED,iBAAOD,EAAP,EAAW;AACT,aAAOF,KAAK,CAACM,MAAN,WAAgB,KAAKhB,GAArB,cAA4BY,EAA5B,EAAP;AACD;;;;;;AAGH,eAAejB,SAAf","sourcesContent":["/* global axios */\n\nconst DEFAULT_API_VERSION = 'v1';\n\nclass ApiClient {\n  constructor(resource, options = {}) {\n    this.apiVersion = `/api/${options.apiVersion || DEFAULT_API_VERSION}`;\n    this.options = options;\n    this.resource = resource;\n  }\n\n  get url() {\n    return `${this.baseUrl()}/${this.resource}`;\n  }\n\n  baseUrl() {\n    let url = this.apiVersion;\n\n    if (this.options.enterprise) {\n      url = `/enterprise${url}`;\n    }\n\n    if (this.options.accountScoped) {\n      const isInsideAccountScopedURLs = window.location.pathname.includes(\n        '/app/accounts'\n      );\n\n      if (isInsideAccountScopedURLs) {\n        const accountId = window.location.pathname.split('/')[3];\n        url = `${url}/accounts/${accountId}`;\n      }\n    }\n\n    return url;\n  }\n\n  get() {\n    return axios.get(this.url);\n  }\n\n  show(id) {\n    return axios.get(`${this.url}/${id}`);\n  }\n\n  create(data) {\n    return axios.post(this.url, data);\n  }\n\n  update(id, data) {\n    return axios.patch(`${this.url}/${id}`, data);\n  }\n\n  delete(id) {\n    return axios.delete(`${this.url}/${id}`);\n  }\n}\n\nexport default ApiClient;\n"]},"metadata":{},"sourceType":"module"}