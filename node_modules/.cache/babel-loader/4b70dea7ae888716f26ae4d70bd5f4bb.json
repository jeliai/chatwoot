{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport configMixin from 'shared/mixins/configMixin';\nimport EmptyState from '../../../../components/widgets/EmptyState';\nexport default {\n  components: {\n    EmptyState: EmptyState\n  },\n  mixins: [configMixin],\n  computed: {\n    currentInbox: function currentInbox() {\n      return this.$store.getters['inboxes/getInbox'](this.$route.params.inbox_id);\n    },\n    isATwilioInbox: function isATwilioInbox() {\n      return this.currentInbox.channel_type === 'Channel::TwilioSms';\n    },\n    isAEmailInbox: function isAEmailInbox() {\n      return this.currentInbox.channel_type === 'Channel::Email';\n    },\n    isALineInbox: function isALineInbox() {\n      return this.currentInbox.channel_type === 'Channel::Line';\n    },\n    isASmsInbox: function isASmsInbox() {\n      return this.currentInbox.channel_type === 'Channel::Sms';\n    },\n    isWhatsAppCloudInbox: function isWhatsAppCloudInbox() {\n      return this.currentInbox.channel_type === 'Channel::Whatsapp' && this.currentInbox.provider === 'whatsapp_cloud';\n    },\n    message: function message() {\n      if (this.isATwilioInbox) {\n        return \"\".concat(this.$t('INBOX_MGMT.FINISH.MESSAGE'), \". \").concat(this.$t('INBOX_MGMT.ADD.TWILIO.API_CALLBACK.SUBTITLE'));\n      }\n\n      if (this.isASmsInbox) {\n        return \"\".concat(this.$t('INBOX_MGMT.FINISH.MESSAGE'), \". \").concat(this.$t('INBOX_MGMT.ADD.SMS.BANDWIDTH.API_CALLBACK.SUBTITLE'));\n      }\n\n      if (this.isALineInbox) {\n        return \"\".concat(this.$t('INBOX_MGMT.FINISH.MESSAGE'), \". \").concat(this.$t('INBOX_MGMT.ADD.LINE_CHANNEL.API_CALLBACK.SUBTITLE'));\n      }\n\n      if (this.isWhatsAppCloudInbox) {\n        return \"\".concat(this.$t('INBOX_MGMT.FINISH.MESSAGE'), \". \").concat(this.$t('INBOX_MGMT.ADD.WHATSAPP.API_CALLBACK.SUBTITLE'));\n      }\n\n      if (this.isAEmailInbox) {\n        return this.$t('INBOX_MGMT.ADD.EMAIL_CHANNEL.FINISH_MESSAGE');\n      }\n\n      if (this.currentInbox.web_widget_script) {\n        return this.$t('INBOX_MGMT.FINISH.WEBSITE_SUCCESS');\n      }\n\n      return this.$t('INBOX_MGMT.FINISH.MESSAGE');\n    }\n  }\n};","map":{"version":3,"sources":["FinishSetup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA,OAAA,WAAA,MAAA,2BAAA;AACA,OAAA,UAAA,MAAA,2CAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA;AADA,GADA;AAIA,EAAA,MAAA,EAAA,CAAA,WAAA,CAJA;AAKA,EAAA,QAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,kBAAA,EACA,KAAA,MAAA,CAAA,MAAA,CAAA,QADA,CAAA;AAGA,KALA;AAMA,IAAA,cANA,4BAMA;AACA,aAAA,KAAA,YAAA,CAAA,YAAA,KAAA,oBAAA;AACA,KARA;AASA,IAAA,aATA,2BASA;AACA,aAAA,KAAA,YAAA,CAAA,YAAA,KAAA,gBAAA;AACA,KAXA;AAYA,IAAA,YAZA,0BAYA;AACA,aAAA,KAAA,YAAA,CAAA,YAAA,KAAA,eAAA;AACA,KAdA;AAeA,IAAA,WAfA,yBAeA;AACA,aAAA,KAAA,YAAA,CAAA,YAAA,KAAA,cAAA;AACA,KAjBA;AAkBA,IAAA,oBAlBA,kCAkBA;AACA,aACA,KAAA,YAAA,CAAA,YAAA,KAAA,mBAAA,IACA,KAAA,YAAA,CAAA,QAAA,KAAA,gBAFA;AAIA,KAvBA;AAwBA,IAAA,OAxBA,qBAwBA;AACA,UAAA,KAAA,cAAA,EAAA;AACA,yBAAA,KAAA,EAAA,CAAA,2BAAA,CAAA,eAAA,KAAA,EAAA,CACA,6CADA,CAAA;AAGA;;AAEA,UAAA,KAAA,WAAA,EAAA;AACA,yBAAA,KAAA,EAAA,CAAA,2BAAA,CAAA,eAAA,KAAA,EAAA,CACA,oDADA,CAAA;AAGA;;AAEA,UAAA,KAAA,YAAA,EAAA;AACA,yBAAA,KAAA,EAAA,CAAA,2BAAA,CAAA,eAAA,KAAA,EAAA,CACA,mDADA,CAAA;AAGA;;AAEA,UAAA,KAAA,oBAAA,EAAA;AACA,yBAAA,KAAA,EAAA,CAAA,2BAAA,CAAA,eAAA,KAAA,EAAA,CACA,+CADA,CAAA;AAGA;;AAEA,UAAA,KAAA,aAAA,EAAA;AACA,eAAA,KAAA,EAAA,CAAA,6CAAA,CAAA;AACA;;AAEA,UAAA,KAAA,YAAA,CAAA,iBAAA,EAAA;AACA,eAAA,KAAA,EAAA,CAAA,mCAAA,CAAA;AACA;;AAEA,aAAA,KAAA,EAAA,CAAA,2BAAA,CAAA;AACA;AA1DA;AALA,CAAA","sourcesContent":["<template>\n  <div class=\"wizard-body columns content-box small-9\">\n    <empty-state\n      :title=\"$t('INBOX_MGMT.FINISH.TITLE')\"\n      :message=\"message\"\n      :button-text=\"$t('INBOX_MGMT.FINISH.BUTTON_TEXT')\"\n    >\n      <div class=\"medium-12 columns text-center\">\n        <div class=\"website--code\">\n          <woot-code\n            v-if=\"currentInbox.web_widget_script\"\n            :script=\"currentInbox.web_widget_script\"\n          />\n        </div>\n        <div class=\"medium-6 small-offset-3\">\n          <woot-code\n            v-if=\"isATwilioInbox\"\n            lang=\"html\"\n            :script=\"currentInbox.callback_webhook_url\"\n          />\n        </div>\n        <div v-if=\"isWhatsAppCloudInbox\" class=\"medium-6 small-offset-3\">\n          <p class=\"config--label\">\n            {{ $t('INBOX_MGMT.ADD.WHATSAPP.API_CALLBACK.WEBHOOK_URL') }}\n          </p>\n          <woot-code lang=\"html\" :script=\"currentInbox.callback_webhook_url\" />\n          <p class=\"config--label\">\n            {{\n              $t(\n                'INBOX_MGMT.ADD.WHATSAPP.API_CALLBACK.WEBHOOK_VERIFICATION_TOKEN'\n              )\n            }}\n          </p>\n          <woot-code\n            lang=\"html\"\n            :script=\"currentInbox.provider_config.webhook_verify_token\"\n          />\n        </div>\n        <div class=\"medium-6 small-offset-3\">\n          <woot-code\n            v-if=\"isALineInbox\"\n            lang=\"html\"\n            :script=\"currentInbox.callback_webhook_url\"\n          />\n        </div>\n        <div class=\"medium-6 small-offset-3\">\n          <woot-code\n            v-if=\"isASmsInbox\"\n            lang=\"html\"\n            :script=\"currentInbox.callback_webhook_url\"\n          />\n        </div>\n        <div class=\"medium-6 small-offset-3\">\n          <woot-code\n            v-if=\"isAEmailInbox\"\n            lang=\"html\"\n            :script=\"currentInbox.forward_to_email\"\n          />\n        </div>\n        <div class=\"footer\">\n          <router-link\n            class=\"button hollow primary settings-button\"\n            :to=\"{\n              name: 'settings_inbox_show',\n              params: { inboxId: this.$route.params.inbox_id },\n            }\"\n          >\n            {{ $t('INBOX_MGMT.FINISH.MORE_SETTINGS') }}\n          </router-link>\n          <router-link\n            class=\"button success\"\n            :to=\"{\n              name: 'inbox_dashboard',\n              params: { inboxId: this.$route.params.inbox_id },\n            }\"\n          >\n            {{ $t('INBOX_MGMT.FINISH.BUTTON_TEXT') }}\n          </router-link>\n        </div>\n      </div>\n    </empty-state>\n  </div>\n</template>\n\n<script>\nimport configMixin from 'shared/mixins/configMixin';\nimport EmptyState from '../../../../components/widgets/EmptyState';\n\nexport default {\n  components: {\n    EmptyState,\n  },\n  mixins: [configMixin],\n  computed: {\n    currentInbox() {\n      return this.$store.getters['inboxes/getInbox'](\n        this.$route.params.inbox_id\n      );\n    },\n    isATwilioInbox() {\n      return this.currentInbox.channel_type === 'Channel::TwilioSms';\n    },\n    isAEmailInbox() {\n      return this.currentInbox.channel_type === 'Channel::Email';\n    },\n    isALineInbox() {\n      return this.currentInbox.channel_type === 'Channel::Line';\n    },\n    isASmsInbox() {\n      return this.currentInbox.channel_type === 'Channel::Sms';\n    },\n    isWhatsAppCloudInbox() {\n      return (\n        this.currentInbox.channel_type === 'Channel::Whatsapp' &&\n        this.currentInbox.provider === 'whatsapp_cloud'\n      );\n    },\n    message() {\n      if (this.isATwilioInbox) {\n        return `${this.$t('INBOX_MGMT.FINISH.MESSAGE')}. ${this.$t(\n          'INBOX_MGMT.ADD.TWILIO.API_CALLBACK.SUBTITLE'\n        )}`;\n      }\n\n      if (this.isASmsInbox) {\n        return `${this.$t('INBOX_MGMT.FINISH.MESSAGE')}. ${this.$t(\n          'INBOX_MGMT.ADD.SMS.BANDWIDTH.API_CALLBACK.SUBTITLE'\n        )}`;\n      }\n\n      if (this.isALineInbox) {\n        return `${this.$t('INBOX_MGMT.FINISH.MESSAGE')}. ${this.$t(\n          'INBOX_MGMT.ADD.LINE_CHANNEL.API_CALLBACK.SUBTITLE'\n        )}`;\n      }\n\n      if (this.isWhatsAppCloudInbox) {\n        return `${this.$t('INBOX_MGMT.FINISH.MESSAGE')}. ${this.$t(\n          'INBOX_MGMT.ADD.WHATSAPP.API_CALLBACK.SUBTITLE'\n        )}`;\n      }\n\n      if (this.isAEmailInbox) {\n        return this.$t('INBOX_MGMT.ADD.EMAIL_CHANNEL.FINISH_MESSAGE');\n      }\n\n      if (this.currentInbox.web_widget_script) {\n        return this.$t('INBOX_MGMT.FINISH.WEBSITE_SUCCESS');\n      }\n\n      return this.$t('INBOX_MGMT.FINISH.MESSAGE');\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n@import '~dashboard/assets/scss/variables';\n\n.website--code {\n  margin: $space-normal auto;\n  max-width: 70%;\n}\n\n.footer {\n  display: flex;\n  justify-content: center;\n}\n\n.settings-button {\n  margin-right: var(--space-small);\n}\n\n.config--label {\n  color: var(--b-600);\n  font-weight: var(--font-weight-medium);\n  margin-top: var(--space-large);\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/settings/inbox"},"metadata":{},"sourceType":"module"}