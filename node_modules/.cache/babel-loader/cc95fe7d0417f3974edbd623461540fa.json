{"ast":null,"code":"import \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport Vue from 'vue';\nimport { getCampaigns, triggerCampaign } from 'widget/api/campaign';\nimport campaignTimer from 'widget/helpers/campaignTimer';\nimport { formatCampaigns, filterCampaigns } from 'widget/helpers/campaignHelper';\nvar state = {\n  records: [],\n  uiFlags: {\n    isError: false\n  },\n  activeCampaign: {}\n};\n\nvar resetCampaignTimers = function resetCampaignTimers(campaigns, currentURL, websiteToken, isInBusinessHours) {\n  var formattedCampaigns = formatCampaigns({\n    campaigns: campaigns\n  }); // Find all campaigns that matches the current URL\n\n  var filteredCampaigns = filterCampaigns({\n    campaigns: formattedCampaigns,\n    currentURL: currentURL,\n    isInBusinessHours: isInBusinessHours\n  });\n  campaignTimer.initTimers({\n    campaigns: filteredCampaigns\n  }, websiteToken);\n};\n\nexport var getters = {\n  getCampaigns: function getCampaigns($state) {\n    return $state.records;\n  },\n  getActiveCampaign: function getActiveCampaign($state) {\n    return $state.activeCampaign;\n  }\n};\nexport var actions = {\n  fetchCampaigns: function () {\n    var _fetchCampaigns = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref, _ref2) {\n      var commit, websiteToken, currentURL, isInBusinessHours, _yield$getCampaigns, campaigns;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              websiteToken = _ref2.websiteToken, currentURL = _ref2.currentURL, isInBusinessHours = _ref2.isInBusinessHours;\n              _context.prev = 2;\n              _context.next = 5;\n              return getCampaigns(websiteToken);\n\n            case 5:\n              _yield$getCampaigns = _context.sent;\n              campaigns = _yield$getCampaigns.data;\n              commit('setCampaigns', campaigns);\n              commit('setError', false);\n              resetCampaignTimers(campaigns, currentURL, websiteToken, isInBusinessHours);\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](2);\n              commit('setError', true);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 12]]);\n    }));\n\n    function fetchCampaigns(_x, _x2) {\n      return _fetchCampaigns.apply(this, arguments);\n    }\n\n    return fetchCampaigns;\n  }(),\n  initCampaigns: function () {\n    var _initCampaigns = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref3, _ref4) {\n      var campaigns, dispatch, currentURL, websiteToken, isInBusinessHours;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              campaigns = _ref3.getters.getCampaigns, dispatch = _ref3.dispatch;\n              currentURL = _ref4.currentURL, websiteToken = _ref4.websiteToken, isInBusinessHours = _ref4.isInBusinessHours;\n\n              if (!campaigns.length) {\n                dispatch('fetchCampaigns', {\n                  websiteToken: websiteToken,\n                  currentURL: currentURL,\n                  isInBusinessHours: isInBusinessHours\n                });\n              } else {\n                resetCampaignTimers(campaigns, currentURL, websiteToken, isInBusinessHours);\n              }\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function initCampaigns(_x3, _x4) {\n      return _initCampaigns.apply(this, arguments);\n    }\n\n    return initCampaigns;\n  }(),\n  startCampaign: function () {\n    var _startCampaign = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(_ref5, _ref6) {\n      var commit, isWidgetOpen, websiteToken, campaignId, _yield$getCampaigns2, campaigns, campaign;\n\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref5.commit, isWidgetOpen = _ref5.rootState.appConfig.isWidgetOpen;\n              websiteToken = _ref6.websiteToken, campaignId = _ref6.campaignId;\n\n              if (isWidgetOpen) {\n                _context3.next = 9;\n                break;\n              }\n\n              _context3.next = 5;\n              return getCampaigns(websiteToken);\n\n            case 5:\n              _yield$getCampaigns2 = _context3.sent;\n              campaigns = _yield$getCampaigns2.data;\n              // Check campaign is disabled or not\n              campaign = campaigns.find(function (item) {\n                return item.id === campaignId;\n              });\n\n              if (campaign) {\n                commit('setActiveCampaign', campaign);\n              }\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function startCampaign(_x5, _x6) {\n      return _startCampaign.apply(this, arguments);\n    }\n\n    return startCampaign;\n  }(),\n  executeCampaign: function () {\n    var _executeCampaign = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(_ref7, _ref8) {\n      var commit, campaignId, websiteToken, customAttributes;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref7.commit;\n              campaignId = _ref8.campaignId, websiteToken = _ref8.websiteToken, customAttributes = _ref8.customAttributes;\n              _context4.prev = 2;\n              commit('conversation/setConversationUIFlag', {\n                isCreating: true\n              }, {\n                root: true\n              });\n              _context4.next = 6;\n              return triggerCampaign({\n                campaignId: campaignId,\n                websiteToken: websiteToken,\n                customAttributes: customAttributes\n              });\n\n            case 6:\n              commit('setCampaignExecuted', true);\n              commit('setActiveCampaign', {});\n              _context4.next = 13;\n              break;\n\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](2);\n              commit('setError', true);\n\n            case 13:\n              _context4.prev = 13;\n              commit('conversation/setConversationUIFlag', {\n                isCreating: false\n              }, {\n                root: true\n              });\n              return _context4.finish(13);\n\n            case 16:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[2, 10, 13, 16]]);\n    }));\n\n    function executeCampaign(_x7, _x8) {\n      return _executeCampaign.apply(this, arguments);\n    }\n\n    return executeCampaign;\n  }(),\n  resetCampaign: function () {\n    var _resetCampaign = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(_ref9) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref9.commit;\n\n              try {\n                commit('setCampaignExecuted', false);\n                commit('setActiveCampaign', {});\n              } catch (error) {\n                commit('setError', true);\n              }\n\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function resetCampaign(_x9) {\n      return _resetCampaign.apply(this, arguments);\n    }\n\n    return resetCampaign;\n  }()\n};\nexport var mutations = {\n  setCampaigns: function setCampaigns($state, data) {\n    Vue.set($state, 'records', data);\n  },\n  setActiveCampaign: function setActiveCampaign($state, data) {\n    Vue.set($state, 'activeCampaign', data);\n  },\n  setError: function setError($state, value) {\n    Vue.set($state.uiFlags, 'isError', value);\n  },\n  setHasFetched: function setHasFetched($state, value) {\n    Vue.set($state.uiFlags, 'hasFetched', value);\n  },\n  setCampaignExecuted: function setCampaignExecuted($state, data) {\n    Vue.set($state, 'campaignHasExecuted', data);\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/widget/store/modules/campaign.js"],"names":["Vue","getCampaigns","triggerCampaign","campaignTimer","formatCampaigns","filterCampaigns","state","records","uiFlags","isError","activeCampaign","resetCampaignTimers","campaigns","currentURL","websiteToken","isInBusinessHours","formattedCampaigns","filteredCampaigns","initTimers","getters","$state","getActiveCampaign","actions","fetchCampaigns","commit","data","initCampaigns","dispatch","length","startCampaign","isWidgetOpen","rootState","appConfig","campaignId","campaign","find","item","id","executeCampaign","customAttributes","isCreating","root","resetCampaign","error","mutations","setCampaigns","set","setActiveCampaign","setError","value","setHasFetched","setCampaignExecuted","namespaced"],"mappings":"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","sourcesContent":["import Vue from 'vue';\nimport { getCampaigns, triggerCampaign } from 'widget/api/campaign';\nimport campaignTimer from 'widget/helpers/campaignTimer';\nimport {\n  formatCampaigns,\n  filterCampaigns,\n} from 'widget/helpers/campaignHelper';\nconst state = {\n  records: [],\n  uiFlags: {\n    isError: false,\n  },\n  activeCampaign: {},\n};\n\nconst resetCampaignTimers = (\n  campaigns,\n  currentURL,\n  websiteToken,\n  isInBusinessHours\n) => {\n  const formattedCampaigns = formatCampaigns({ campaigns });\n  // Find all campaigns that matches the current URL\n  const filteredCampaigns = filterCampaigns({\n    campaigns: formattedCampaigns,\n    currentURL,\n    isInBusinessHours,\n  });\n  campaignTimer.initTimers({ campaigns: filteredCampaigns }, websiteToken);\n};\n\nexport const getters = {\n  getCampaigns: $state => $state.records,\n  getActiveCampaign: $state => $state.activeCampaign,\n};\n\nexport const actions = {\n  fetchCampaigns: async (\n    { commit },\n    { websiteToken, currentURL, isInBusinessHours }\n  ) => {\n    try {\n      const { data: campaigns } = await getCampaigns(websiteToken);\n      commit('setCampaigns', campaigns);\n      commit('setError', false);\n      resetCampaignTimers(\n        campaigns,\n        currentURL,\n        websiteToken,\n        isInBusinessHours\n      );\n    } catch (error) {\n      commit('setError', true);\n    }\n  },\n  initCampaigns: async (\n    { getters: { getCampaigns: campaigns }, dispatch },\n    { currentURL, websiteToken, isInBusinessHours }\n  ) => {\n    if (!campaigns.length) {\n      dispatch('fetchCampaigns', {\n        websiteToken,\n        currentURL,\n        isInBusinessHours,\n      });\n    } else {\n      resetCampaignTimers(\n        campaigns,\n        currentURL,\n        websiteToken,\n        isInBusinessHours\n      );\n    }\n  },\n  startCampaign: async (\n    {\n      commit,\n      rootState: {\n        appConfig: { isWidgetOpen },\n      },\n    },\n    { websiteToken, campaignId }\n  ) => {\n    // Disable campaign execution if widget is opened\n    if (!isWidgetOpen) {\n      const { data: campaigns } = await getCampaigns(websiteToken);\n      // Check campaign is disabled or not\n      const campaign = campaigns.find(item => item.id === campaignId);\n      if (campaign) {\n        commit('setActiveCampaign', campaign);\n      }\n    }\n  },\n\n  executeCampaign: async (\n    { commit },\n    { campaignId, websiteToken, customAttributes }\n  ) => {\n    try {\n      commit(\n        'conversation/setConversationUIFlag',\n        { isCreating: true },\n        { root: true }\n      );\n      await triggerCampaign({ campaignId, websiteToken, customAttributes });\n      commit('setCampaignExecuted', true);\n      commit('setActiveCampaign', {});\n    } catch (error) {\n      commit('setError', true);\n    } finally {\n      commit(\n        'conversation/setConversationUIFlag',\n        { isCreating: false },\n        { root: true }\n      );\n    }\n  },\n  resetCampaign: async ({ commit }) => {\n    try {\n      commit('setCampaignExecuted', false);\n      commit('setActiveCampaign', {});\n    } catch (error) {\n      commit('setError', true);\n    }\n  },\n};\n\nexport const mutations = {\n  setCampaigns($state, data) {\n    Vue.set($state, 'records', data);\n  },\n  setActiveCampaign($state, data) {\n    Vue.set($state, 'activeCampaign', data);\n  },\n  setError($state, value) {\n    Vue.set($state.uiFlags, 'isError', value);\n  },\n  setHasFetched($state, value) {\n    Vue.set($state.uiFlags, 'hasFetched', value);\n  },\n  setCampaignExecuted($state, data) {\n    Vue.set($state, 'campaignHasExecuted', data);\n  },\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations,\n};\n"]},"metadata":{},"sourceType":"module"}