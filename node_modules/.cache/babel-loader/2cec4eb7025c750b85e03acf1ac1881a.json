{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { createConsumer } from '@rails/actioncable';\nimport { BUS_EVENTS } from 'shared/constants/busEvents';\nvar PRESENCE_INTERVAL = 20000;\n\nvar BaseActionCableConnector = /*#__PURE__*/function () {\n  function BaseActionCableConnector(app, pubsubToken) {\n    var _this = this;\n\n    var websocketHost = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n    _classCallCheck(this, BaseActionCableConnector);\n\n    this.onReceived = function () {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          event = _ref.event,\n          data = _ref.data;\n\n      if (_this.isAValidEvent(data)) {\n        if (_this.events[event] && typeof _this.events[event] === 'function') {\n          _this.events[event](data);\n        }\n      }\n    };\n\n    var websocketURL = websocketHost ? \"\".concat(websocketHost, \"/cable\") : undefined;\n    this.consumer = createConsumer(websocketURL);\n    this.subscription = this.consumer.subscriptions.create({\n      channel: 'RoomChannel',\n      pubsub_token: pubsubToken,\n      account_id: app.$store.getters.getCurrentAccountId,\n      user_id: app.$store.getters.getCurrentUserID\n    }, {\n      updatePresence: function updatePresence() {\n        this.perform('update_presence');\n      },\n      received: this.onReceived,\n      disconnected: this.onDisconnected\n    });\n    this.app = app;\n    this.events = {};\n\n    this.isAValidEvent = function () {\n      return true;\n    };\n\n    setInterval(function () {\n      _this.subscription.updatePresence();\n    }, PRESENCE_INTERVAL);\n  }\n\n  _createClass(BaseActionCableConnector, [{\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.consumer.disconnect();\n    } // eslint-disable-next-line class-methods-use-this\n\n  }, {\n    key: \"onDisconnected\",\n    value: function onDisconnected() {\n      window.bus.$emit(BUS_EVENTS.WEBSOCKET_DISCONNECT);\n    }\n  }]);\n\n  return BaseActionCableConnector;\n}();\n\nexport default BaseActionCableConnector;","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/shared/helpers/BaseActionCableConnector.js"],"names":["createConsumer","BUS_EVENTS","PRESENCE_INTERVAL","BaseActionCableConnector","app","pubsubToken","websocketHost","onReceived","event","data","isAValidEvent","events","websocketURL","undefined","consumer","subscription","subscriptions","create","channel","pubsub_token","account_id","$store","getters","getCurrentAccountId","user_id","getCurrentUserID","updatePresence","perform","received","disconnected","onDisconnected","setInterval","disconnect","window","bus","$emit","WEBSOCKET_DISCONNECT"],"mappings":";;;;;;AAAA,SAASA,cAAT,QAA+B,oBAA/B;AACA,SAASC,UAAT,QAA2B,4BAA3B;AAEA,IAAMC,iBAAiB,GAAG,KAA1B;;IAEMC,wB;AACJ,oCAAYC,GAAZ,EAAiBC,WAAjB,EAAkD;AAAA;;AAAA,QAApBC,aAAoB,uEAAJ,EAAI;;AAAA;;AAAA,SAoClDC,UApCkD,GAoCrC,YAA0B;AAAA,qFAAP,EAAO;AAAA,UAAvBC,KAAuB,QAAvBA,KAAuB;AAAA,UAAhBC,IAAgB,QAAhBA,IAAgB;;AACrC,UAAI,KAAI,CAACC,aAAL,CAAmBD,IAAnB,CAAJ,EAA8B;AAC5B,YAAI,KAAI,CAACE,MAAL,CAAYH,KAAZ,KAAsB,OAAO,KAAI,CAACG,MAAL,CAAYH,KAAZ,CAAP,KAA8B,UAAxD,EAAoE;AAClE,UAAA,KAAI,CAACG,MAAL,CAAYH,KAAZ,EAAmBC,IAAnB;AACD;AACF;AACF,KA1CiD;;AAChD,QAAMG,YAAY,GAAGN,aAAa,aAAMA,aAAN,cAA8BO,SAAhE;AACA,SAAKC,QAAL,GAAgBd,cAAc,CAACY,YAAD,CAA9B;AACA,SAAKG,YAAL,GAAoB,KAAKD,QAAL,CAAcE,aAAd,CAA4BC,MAA5B,CAClB;AACEC,MAAAA,OAAO,EAAE,aADX;AAEEC,MAAAA,YAAY,EAAEd,WAFhB;AAGEe,MAAAA,UAAU,EAAEhB,GAAG,CAACiB,MAAJ,CAAWC,OAAX,CAAmBC,mBAHjC;AAIEC,MAAAA,OAAO,EAAEpB,GAAG,CAACiB,MAAJ,CAAWC,OAAX,CAAmBG;AAJ9B,KADkB,EAOlB;AACEC,MAAAA,cADF,4BACmB;AACf,aAAKC,OAAL,CAAa,iBAAb;AACD,OAHH;AAIEC,MAAAA,QAAQ,EAAE,KAAKrB,UAJjB;AAKEsB,MAAAA,YAAY,EAAE,KAAKC;AALrB,KAPkB,CAApB;AAeA,SAAK1B,GAAL,GAAWA,GAAX;AACA,SAAKO,MAAL,GAAc,EAAd;;AACA,SAAKD,aAAL,GAAqB;AAAA,aAAM,IAAN;AAAA,KAArB;;AAEAqB,IAAAA,WAAW,CAAC,YAAM;AAChB,MAAA,KAAI,CAAChB,YAAL,CAAkBW,cAAlB;AACD,KAFU,EAERxB,iBAFQ,CAAX;AAGD;;;;WAED,sBAAa;AACX,WAAKY,QAAL,CAAckB,UAAd;AACD,K,CAED;;;;WACA,0BAAiB;AACfC,MAAAA,MAAM,CAACC,GAAP,CAAWC,KAAX,CAAiBlC,UAAU,CAACmC,oBAA5B;AACD;;;;;;AAWH,eAAejC,wBAAf","sourcesContent":["import { createConsumer } from '@rails/actioncable';\nimport { BUS_EVENTS } from 'shared/constants/busEvents';\n\nconst PRESENCE_INTERVAL = 20000;\n\nclass BaseActionCableConnector {\n  constructor(app, pubsubToken, websocketHost = '') {\n    const websocketURL = websocketHost ? `${websocketHost}/cable` : undefined;\n    this.consumer = createConsumer(websocketURL);\n    this.subscription = this.consumer.subscriptions.create(\n      {\n        channel: 'RoomChannel',\n        pubsub_token: pubsubToken,\n        account_id: app.$store.getters.getCurrentAccountId,\n        user_id: app.$store.getters.getCurrentUserID,\n      },\n      {\n        updatePresence() {\n          this.perform('update_presence');\n        },\n        received: this.onReceived,\n        disconnected: this.onDisconnected,\n      }\n    );\n    this.app = app;\n    this.events = {};\n    this.isAValidEvent = () => true;\n\n    setInterval(() => {\n      this.subscription.updatePresence();\n    }, PRESENCE_INTERVAL);\n  }\n\n  disconnect() {\n    this.consumer.disconnect();\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  onDisconnected() {\n    window.bus.$emit(BUS_EVENTS.WEBSOCKET_DISCONNECT);\n  }\n\n  onReceived = ({ event, data } = {}) => {\n    if (this.isAValidEvent(data)) {\n      if (this.events[event] && typeof this.events[event] === 'function') {\n        this.events[event](data);\n      }\n    }\n  };\n}\n\nexport default BaseActionCableConnector;\n"]},"metadata":{},"sourceType":"module"}