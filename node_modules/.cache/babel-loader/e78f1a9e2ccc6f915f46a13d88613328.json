{"ast":null,"code":"import \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport { frontendURL } from '../../../../helper/URLHelper';\nimport Sidebar from 'dashboard/components/layout/Sidebar';\nimport { BUS_EVENTS } from 'shared/constants/busEvents';\nimport PortalPopover from '../components/PortalPopover.vue';\nimport HelpCenterSidebar from '../components/Sidebar/Sidebar.vue';\nimport CommandBar from 'dashboard/routes/dashboard/commands/commandbar.vue';\nimport WootKeyShortcutModal from 'dashboard/components/widgets/modal/WootKeyShortcutModal';\nimport AccountSelector from 'dashboard/components/layout/sidebarComponents/AccountSelector';\nimport NotificationPanel from 'dashboard/routes/dashboard/notifications/components/NotificationPanel';\nimport uiSettingsMixin from 'dashboard/mixins/uiSettings';\nimport portalMixin from '../mixins/portalMixin';\nimport AddCategory from '../pages/categories/AddCategory';\nexport default {\n  components: {\n    Sidebar: Sidebar,\n    HelpCenterSidebar: HelpCenterSidebar,\n    CommandBar: CommandBar,\n    WootKeyShortcutModal: WootKeyShortcutModal,\n    NotificationPanel: NotificationPanel,\n    PortalPopover: PortalPopover,\n    AddCategory: AddCategory,\n    AccountSelector: AccountSelector\n  },\n  mixins: [portalMixin, uiSettingsMixin],\n  data: function data() {\n    return {\n      isSidebarOpen: false,\n      isOnDesktop: true,\n      showShortcutModal: false,\n      showNotificationPanel: false,\n      showPortalPopover: false,\n      showAddCategoryModal: false,\n      lastActivePortalSlug: '',\n      showAccountModal: false\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    accountId: 'getCurrentAccountId',\n    portals: 'portals/allPortals',\n    categories: 'categories/allCategories',\n    meta: 'portals/getMeta',\n    isFetching: 'portals/isFetchingPortals'\n  })), {}, {\n    selectedPortal: function selectedPortal() {\n      var slug = this.$route.params.portalSlug || this.lastActivePortalSlug;\n      if (slug) return this.$store.getters['portals/portalBySlug'](slug);\n      return this.$store.getters['portals/allPortals'][0];\n    },\n    selectedLocaleInPortal: function selectedLocaleInPortal() {\n      return this.$route.params.locale || this.defaultPortalLocale;\n    },\n    sidebarClassName: function sidebarClassName() {\n      if (this.isOnDesktop) {\n        return '';\n      }\n\n      if (this.isSidebarOpen) {\n        return 'off-canvas is-open';\n      }\n\n      return 'off-canvas is-transition-push is-closed';\n    },\n    contentClassName: function contentClassName() {\n      if (this.isOnDesktop) {\n        return '';\n      }\n\n      if (this.isSidebarOpen) {\n        return 'off-canvas-content is-open-left has-transition-push';\n      }\n\n      return 'off-canvas-content has-transition-push';\n    },\n    selectedPortalName: function selectedPortalName() {\n      return this.selectedPortal ? this.selectedPortal.name : '';\n    },\n    selectedPortalSlug: function selectedPortalSlug() {\n      var _this$selectedPortal;\n\n      return this.selectedPortal ? (_this$selectedPortal = this.selectedPortal) === null || _this$selectedPortal === void 0 ? void 0 : _this$selectedPortal.slug : '';\n    },\n    defaultPortalLocale: function defaultPortalLocale() {\n      var _this$selectedPortal2, _this$selectedPortal3;\n\n      return this.selectedPortal ? (_this$selectedPortal2 = this.selectedPortal) === null || _this$selectedPortal2 === void 0 ? void 0 : (_this$selectedPortal3 = _this$selectedPortal2.meta) === null || _this$selectedPortal3 === void 0 ? void 0 : _this$selectedPortal3.default_locale : '';\n    },\n    accessibleMenuItems: function accessibleMenuItems() {\n      if (!this.selectedPortal) return [];\n      var _this$meta = this.meta,\n          allArticlesCount = _this$meta.allArticlesCount,\n          mineArticlesCount = _this$meta.mineArticlesCount,\n          draftArticlesCount = _this$meta.draftArticlesCount,\n          archivedArticlesCount = _this$meta.archivedArticlesCount;\n      return [{\n        icon: 'book',\n        label: 'HELP_CENTER.ALL_ARTICLES',\n        key: 'list_all_locale_articles',\n        count: allArticlesCount,\n        toState: frontendURL(\"accounts/\".concat(this.accountId, \"/portals/\").concat(this.selectedPortalSlug, \"/\").concat(this.selectedLocaleInPortal, \"/articles\")),\n        toolTip: 'All Articles',\n        toStateName: 'list_all_locale_articles'\n      }, {\n        icon: 'pen',\n        label: 'HELP_CENTER.MY_ARTICLES',\n        key: 'list_mine_articles',\n        count: mineArticlesCount,\n        toState: frontendURL(\"accounts/\".concat(this.accountId, \"/portals/\").concat(this.selectedPortalSlug, \"/\").concat(this.selectedLocaleInPortal, \"/articles/mine\")),\n        toolTip: 'My articles',\n        toStateName: 'list_mine_articles'\n      }, {\n        icon: 'draft',\n        label: 'HELP_CENTER.DRAFT',\n        key: 'list_draft_articles',\n        count: draftArticlesCount,\n        toState: frontendURL(\"accounts/\".concat(this.accountId, \"/portals/\").concat(this.selectedPortalSlug, \"/\").concat(this.selectedLocaleInPortal, \"/articles/draft\")),\n        toolTip: 'Draft',\n        toStateName: 'list_draft_articles'\n      }, {\n        icon: 'archive',\n        label: 'HELP_CENTER.ARCHIVED',\n        key: 'list_archived_articles',\n        count: archivedArticlesCount,\n        toState: frontendURL(\"accounts/\".concat(this.accountId, \"/portals/\").concat(this.selectedPortalSlug, \"/\").concat(this.selectedLocaleInPortal, \"/articles/archived\")),\n        toolTip: 'Archived',\n        toStateName: 'list_archived_articles'\n      }];\n    },\n    additionalSecondaryMenuItems: function additionalSecondaryMenuItems() {\n      var _this = this;\n\n      if (!this.selectedPortal) return [];\n      return [{\n        icon: 'folder',\n        label: 'HELP_CENTER.CATEGORY',\n        hasSubMenu: true,\n        showNewButton: true,\n        key: 'category',\n        children: this.categories.map(function (category) {\n          return {\n            id: category.id,\n            label: category.name,\n            count: category.meta.articles_count,\n            truncateLabel: true,\n            toState: frontendURL(\"accounts/\".concat(_this.accountId, \"/portals/\").concat(_this.selectedPortalSlug, \"/\").concat(category.locale, \"/categories/\").concat(category.slug))\n          };\n        })\n      }];\n    },\n    currentRoute: function currentRoute() {\n      return '  ';\n    },\n    headerTitle: function headerTitle() {\n      return this.selectedPortal ? this.selectedPortal.name : '';\n    }\n  }),\n  watch: {\n    '$route.params.portalSlug': function $routeParamsPortalSlug() {\n      this.fetchPortalsAndItsCategories();\n    }\n  },\n  mounted: function mounted() {\n    window.addEventListener('resize', this.handleResize);\n    this.handleResize();\n    bus.$on(BUS_EVENTS.TOGGLE_SIDEMENU, this.toggleSidebar);\n    var slug = this.$route.params.portalSlug;\n    if (slug) this.lastActivePortalSlug = slug;\n    this.fetchPortalsAndItsCategories();\n  },\n  beforeDestroy: function beforeDestroy() {\n    bus.$off(BUS_EVENTS.TOGGLE_SIDEMENU, this.toggleSidebar);\n    window.removeEventListener('resize', this.handleResize);\n  },\n  updated: function updated() {\n    var slug = this.$route.params.portalSlug;\n\n    if (slug !== this.lastActivePortalSlug) {\n      this.lastActivePortalSlug = slug;\n      this.updateUISettings({\n        last_active_portal_slug: slug,\n        last_active_locale_code: this.selectedLocaleInPortal\n      });\n    }\n  },\n  methods: {\n    handleResize: function handleResize() {\n      if (window.innerWidth > 1200) {\n        this.isOnDesktop = true;\n      } else {\n        this.isOnDesktop = false;\n      }\n    },\n    toggleSidebar: function toggleSidebar() {\n      this.isSidebarOpen = !this.isSidebarOpen;\n    },\n    fetchPortalsAndItsCategories: function fetchPortalsAndItsCategories() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var selectedPortalParam;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this2.$store.dispatch('portals/index');\n\n              case 2:\n                selectedPortalParam = {\n                  portalSlug: _this2.selectedPortalSlug,\n                  locale: _this2.selectedLocaleInPortal\n                };\n\n                _this2.$store.dispatch('portals/show', selectedPortalParam);\n\n                _this2.$store.dispatch('categories/index', selectedPortalParam);\n\n                _this2.$store.dispatch('agents/get');\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    toggleKeyShortcutModal: function toggleKeyShortcutModal() {\n      this.showShortcutModal = true;\n    },\n    closeKeyShortcutModal: function closeKeyShortcutModal() {\n      this.showShortcutModal = false;\n    },\n    openNotificationPanel: function openNotificationPanel() {\n      this.showNotificationPanel = true;\n    },\n    closeNotificationPanel: function closeNotificationPanel() {\n      this.showNotificationPanel = false;\n    },\n    openPortalPopover: function openPortalPopover() {\n      this.showPortalPopover = !this.showPortalPopover;\n    },\n    closePortalPopover: function closePortalPopover() {\n      this.showPortalPopover = false;\n    },\n    onClickOpenAddCategoryModal: function onClickOpenAddCategoryModal() {\n      this.showAddCategoryModal = true;\n    },\n    onClickCloseAddCategoryModal: function onClickCloseAddCategoryModal() {\n      this.showAddCategoryModal = false;\n    },\n    toggleAccountModal: function toggleAccountModal() {\n      this.showAccountModal = !this.showAccountModal;\n    }\n  }\n};","map":{"version":3,"sources":["HelpCenterLayout.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"row app-wrapper\">\n    <sidebar\n      :route=\"currentRoute\"\n      @toggle-account-modal=\"toggleAccountModal\"\n      @open-notification-panel=\"openNotificationPanel\"\n      @open-key-shortcut-modal=\"toggleKeyShortcutModal\"\n      @close-key-shortcut-modal=\"closeKeyShortcutModal\"\n    />\n    <help-center-sidebar\n      v-if=\"portals.length\"\n      :class=\"sidebarClassName\"\n      :header-title=\"headerTitle\"\n      :portal-slug=\"selectedPortalSlug\"\n      :locale-slug=\"selectedLocaleInPortal\"\n      :sub-title=\"localeName(selectedLocaleInPortal)\"\n      :accessible-menu-items=\"accessibleMenuItems\"\n      :additional-secondary-menu-items=\"additionalSecondaryMenuItems\"\n      @open-popover=\"openPortalPopover\"\n      @open-modal=\"onClickOpenAddCategoryModal\"\n    />\n    <section class=\"app-content columns\" :class=\"contentClassName\">\n      <router-view />\n      <command-bar />\n      <account-selector\n        :show-account-modal=\"showAccountModal\"\n        @close-account-modal=\"toggleAccountModal\"\n      />\n      <woot-key-shortcut-modal\n        v-if=\"showShortcutModal\"\n        @close=\"closeKeyShortcutModal\"\n        @clickaway=\"closeKeyShortcutModal\"\n      />\n      <notification-panel\n        v-if=\"showNotificationPanel\"\n        @close=\"closeNotificationPanel\"\n      />\n      <portal-popover\n        v-if=\"showPortalPopover\"\n        :portals=\"portals\"\n        :active-portal-slug=\"selectedPortalSlug\"\n        :active-locale=\"selectedLocaleInPortal\"\n        @close-popover=\"closePortalPopover\"\n      />\n      <add-category\n        v-if=\"showAddCategoryModal\"\n        :show.sync=\"showAddCategoryModal\"\n        :portal-name=\"selectedPortalName\"\n        :locale=\"selectedLocaleInPortal\"\n        :portal-slug=\"selectedPortalSlug\"\n        @cancel=\"onClickCloseAddCategoryModal\"\n      />\n    </section>\n  </div>\n</template>\n<script>\nimport { mapGetters } from 'vuex';\n\nimport { frontendURL } from '../../../../helper/URLHelper';\nimport Sidebar from 'dashboard/components/layout/Sidebar';\nimport { BUS_EVENTS } from 'shared/constants/busEvents';\nimport PortalPopover from '../components/PortalPopover.vue';\nimport HelpCenterSidebar from '../components/Sidebar/Sidebar.vue';\nimport CommandBar from 'dashboard/routes/dashboard/commands/commandbar.vue';\nimport WootKeyShortcutModal from 'dashboard/components/widgets/modal/WootKeyShortcutModal';\nimport AccountSelector from 'dashboard/components/layout/sidebarComponents/AccountSelector';\nimport NotificationPanel from 'dashboard/routes/dashboard/notifications/components/NotificationPanel';\nimport uiSettingsMixin from 'dashboard/mixins/uiSettings';\nimport portalMixin from '../mixins/portalMixin';\nimport AddCategory from '../pages/categories/AddCategory';\n\nexport default {\n  components: {\n    Sidebar,\n    HelpCenterSidebar,\n    CommandBar,\n    WootKeyShortcutModal,\n    NotificationPanel,\n    PortalPopover,\n    AddCategory,\n    AccountSelector,\n  },\n  mixins: [portalMixin, uiSettingsMixin],\n  data() {\n    return {\n      isSidebarOpen: false,\n      isOnDesktop: true,\n      showShortcutModal: false,\n      showNotificationPanel: false,\n      showPortalPopover: false,\n      showAddCategoryModal: false,\n      lastActivePortalSlug: '',\n      showAccountModal: false,\n    };\n  },\n\n  computed: {\n    ...mapGetters({\n      accountId: 'getCurrentAccountId',\n      portals: 'portals/allPortals',\n      categories: 'categories/allCategories',\n      meta: 'portals/getMeta',\n      isFetching: 'portals/isFetchingPortals',\n    }),\n    selectedPortal() {\n      const slug = this.$route.params.portalSlug || this.lastActivePortalSlug;\n      if (slug) return this.$store.getters['portals/portalBySlug'](slug);\n\n      return this.$store.getters['portals/allPortals'][0];\n    },\n    selectedLocaleInPortal() {\n      return this.$route.params.locale || this.defaultPortalLocale;\n    },\n    sidebarClassName() {\n      if (this.isOnDesktop) {\n        return '';\n      }\n      if (this.isSidebarOpen) {\n        return 'off-canvas is-open';\n      }\n      return 'off-canvas is-transition-push is-closed';\n    },\n    contentClassName() {\n      if (this.isOnDesktop) {\n        return '';\n      }\n      if (this.isSidebarOpen) {\n        return 'off-canvas-content is-open-left has-transition-push';\n      }\n      return 'off-canvas-content has-transition-push';\n    },\n    selectedPortalName() {\n      return this.selectedPortal ? this.selectedPortal.name : '';\n    },\n    selectedPortalSlug() {\n      return this.selectedPortal ? this.selectedPortal?.slug : '';\n    },\n    defaultPortalLocale() {\n      return this.selectedPortal\n        ? this.selectedPortal?.meta?.default_locale\n        : '';\n    },\n    accessibleMenuItems() {\n      if (!this.selectedPortal) return [];\n\n      const {\n        allArticlesCount,\n        mineArticlesCount,\n        draftArticlesCount,\n        archivedArticlesCount,\n      } = this.meta;\n\n      return [\n        {\n          icon: 'book',\n          label: 'HELP_CENTER.ALL_ARTICLES',\n          key: 'list_all_locale_articles',\n          count: allArticlesCount,\n          toState: frontendURL(\n            `accounts/${this.accountId}/portals/${this.selectedPortalSlug}/${this.selectedLocaleInPortal}/articles`\n          ),\n          toolTip: 'All Articles',\n          toStateName: 'list_all_locale_articles',\n        },\n        {\n          icon: 'pen',\n          label: 'HELP_CENTER.MY_ARTICLES',\n          key: 'list_mine_articles',\n          count: mineArticlesCount,\n          toState: frontendURL(\n            `accounts/${this.accountId}/portals/${this.selectedPortalSlug}/${this.selectedLocaleInPortal}/articles/mine`\n          ),\n          toolTip: 'My articles',\n          toStateName: 'list_mine_articles',\n        },\n        {\n          icon: 'draft',\n          label: 'HELP_CENTER.DRAFT',\n          key: 'list_draft_articles',\n          count: draftArticlesCount,\n          toState: frontendURL(\n            `accounts/${this.accountId}/portals/${this.selectedPortalSlug}/${this.selectedLocaleInPortal}/articles/draft`\n          ),\n          toolTip: 'Draft',\n          toStateName: 'list_draft_articles',\n        },\n        {\n          icon: 'archive',\n          label: 'HELP_CENTER.ARCHIVED',\n          key: 'list_archived_articles',\n          count: archivedArticlesCount,\n          toState: frontendURL(\n            `accounts/${this.accountId}/portals/${this.selectedPortalSlug}/${this.selectedLocaleInPortal}/articles/archived`\n          ),\n          toolTip: 'Archived',\n          toStateName: 'list_archived_articles',\n        },\n      ];\n    },\n    additionalSecondaryMenuItems() {\n      if (!this.selectedPortal) return [];\n      return [\n        {\n          icon: 'folder',\n          label: 'HELP_CENTER.CATEGORY',\n          hasSubMenu: true,\n          showNewButton: true,\n          key: 'category',\n          children: this.categories.map(category => ({\n            id: category.id,\n            label: category.name,\n            count: category.meta.articles_count,\n            truncateLabel: true,\n            toState: frontendURL(\n              `accounts/${this.accountId}/portals/${this.selectedPortalSlug}/${category.locale}/categories/${category.slug}`\n            ),\n          })),\n        },\n      ];\n    },\n    currentRoute() {\n      return '  ';\n    },\n    headerTitle() {\n      return this.selectedPortal ? this.selectedPortal.name : '';\n    },\n  },\n\n  watch: {\n    '$route.params.portalSlug'() {\n      this.fetchPortalsAndItsCategories();\n    },\n  },\n\n  mounted() {\n    window.addEventListener('resize', this.handleResize);\n    this.handleResize();\n    bus.$on(BUS_EVENTS.TOGGLE_SIDEMENU, this.toggleSidebar);\n\n    const slug = this.$route.params.portalSlug;\n    if (slug) this.lastActivePortalSlug = slug;\n\n    this.fetchPortalsAndItsCategories();\n  },\n  beforeDestroy() {\n    bus.$off(BUS_EVENTS.TOGGLE_SIDEMENU, this.toggleSidebar);\n    window.removeEventListener('resize', this.handleResize);\n  },\n  updated() {\n    const slug = this.$route.params.portalSlug;\n    if (slug !== this.lastActivePortalSlug) {\n      this.lastActivePortalSlug = slug;\n      this.updateUISettings({\n        last_active_portal_slug: slug,\n        last_active_locale_code: this.selectedLocaleInPortal,\n      });\n    }\n  },\n  methods: {\n    handleResize() {\n      if (window.innerWidth > 1200) {\n        this.isOnDesktop = true;\n      } else {\n        this.isOnDesktop = false;\n      }\n    },\n    toggleSidebar() {\n      this.isSidebarOpen = !this.isSidebarOpen;\n    },\n    async fetchPortalsAndItsCategories() {\n      await this.$store.dispatch('portals/index');\n      const selectedPortalParam = {\n        portalSlug: this.selectedPortalSlug,\n        locale: this.selectedLocaleInPortal,\n      };\n      this.$store.dispatch('portals/show', selectedPortalParam);\n      this.$store.dispatch('categories/index', selectedPortalParam);\n      this.$store.dispatch('agents/get');\n    },\n    toggleKeyShortcutModal() {\n      this.showShortcutModal = true;\n    },\n    closeKeyShortcutModal() {\n      this.showShortcutModal = false;\n    },\n    openNotificationPanel() {\n      this.showNotificationPanel = true;\n    },\n    closeNotificationPanel() {\n      this.showNotificationPanel = false;\n    },\n    openPortalPopover() {\n      this.showPortalPopover = !this.showPortalPopover;\n    },\n    closePortalPopover() {\n      this.showPortalPopover = false;\n    },\n    onClickOpenAddCategoryModal() {\n      this.showAddCategoryModal = true;\n    },\n    onClickCloseAddCategoryModal() {\n      this.showAddCategoryModal = false;\n    },\n    toggleAccountModal() {\n      this.showAccountModal = !this.showAccountModal;\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n.off-canvas-content.is-open-left.has-transition-push {\n  transform: translateX(var(--space-giga));\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/helpcenter/components"},"metadata":{},"sourceType":"module"}