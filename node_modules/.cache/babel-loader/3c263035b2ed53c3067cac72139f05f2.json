{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport messageFormatterMixin from 'shared/mixins/messageFormatterMixin';\nimport Thumbnail from 'dashboard/components/widgets/Thumbnail';\nimport configMixin from '../mixins/configMixin';\nimport { isEmptyObject } from 'widget/helpers/utils';\nimport { ON_CAMPAIGN_MESSAGE_CLICK, ON_UNREAD_MESSAGE_CLICK } from '../constants/widgetBusEvents';\nimport darkModeMixin from 'widget/mixins/darkModeMixin';\nexport default {\n  name: 'UnreadMessage',\n  components: {\n    Thumbnail: Thumbnail\n  },\n  mixins: [messageFormatterMixin, configMixin, darkModeMixin],\n  props: {\n    message: {\n      type: String,\n      default: ''\n    },\n    showSender: {\n      type: Boolean,\n      default: false\n    },\n    sender: {\n      type: Object,\n      default: function _default() {}\n    },\n    campaignId: {\n      type: Number,\n      default: null\n    }\n  },\n  computed: {\n    companyName: function companyName() {\n      return \"\".concat(this.$t('UNREAD_VIEW.COMPANY_FROM'), \" \").concat(this.channelConfig.websiteName);\n    },\n    avatarUrl: function avatarUrl() {\n      // eslint-disable-next-line\n      var BotImage = require('dashboard/assets/images/chatwoot_bot.png');\n\n      var displayImage = this.useInboxAvatarForBot ? this.inboxAvatarUrl : BotImage;\n\n      if (this.isSenderExist(this.sender)) {\n        var avatarUrl = this.sender.avatar_url;\n        return avatarUrl;\n      }\n\n      return displayImage;\n    },\n    agentName: function agentName() {\n      if (this.isSenderExist(this.sender)) {\n        var _this$sender = this.sender,\n            availableName = _this$sender.available_name,\n            name = _this$sender.name;\n        return availableName || name;\n      }\n\n      return this.$t('UNREAD_VIEW.BOT');\n    },\n    availabilityStatus: function availabilityStatus() {\n      if (this.isSenderExist(this.sender)) {\n        var availabilityStatus = this.sender.availability_status;\n        return availabilityStatus;\n      }\n\n      return null;\n    }\n  },\n  methods: {\n    isSenderExist: function isSenderExist(sender) {\n      return sender && !isEmptyObject(sender);\n    },\n    onClickMessage: function onClickMessage() {\n      if (this.campaignId) {\n        bus.$emit(ON_CAMPAIGN_MESSAGE_CLICK, this.campaignId);\n      } else {\n        bus.$emit(ON_UNREAD_MESSAGE_CLICK);\n      }\n    }\n  }\n};","map":{"version":3,"sources":["UnreadMessage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,OAAA,qBAAA,MAAA,qCAAA;AACA,OAAA,SAAA,MAAA,wCAAA;AACA,OAAA,WAAA,MAAA,uBAAA;AACA,SAAA,aAAA,QAAA,sBAAA;AACA,SACA,yBADA,EAEA,uBAFA,QAGA,8BAHA;AAIA,OAAA,aAAA,MAAA,6BAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,SAAA,EAAA;AAAA,GAFA;AAGA,EAAA,MAAA,EAAA,CAAA,qBAAA,EAAA,WAAA,EAAA,aAAA,CAHA;AAIA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA,KATA;AAaA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAbA,GAJA;AAsBA,EAAA,QAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,uBAAA,KAAA,EAAA,CAAA,0BAAA,CAAA,cACA,KAAA,aAAA,CAAA,WADA;AAGA,KALA;AAMA,IAAA,SANA,uBAMA;AACA;AACA,UAAA,QAAA,GAAA,OAAA,CAAA,0CAAA,CAAA;;AACA,UAAA,YAAA,GAAA,KAAA,oBAAA,GACA,KAAA,cADA,GAEA,QAFA;;AAGA,UAAA,KAAA,aAAA,CAAA,KAAA,MAAA,CAAA,EAAA;AACA,YAAA,SAAA,GAAA,KAAA,MAAA,CAAA,UAAA;AACA,eAAA,SAAA;AACA;;AACA,aAAA,YAAA;AACA,KAjBA;AAkBA,IAAA,SAlBA,uBAkBA;AACA,UAAA,KAAA,aAAA,CAAA,KAAA,MAAA,CAAA,EAAA;AACA,2BAAA,KAAA,MAAA;AAAA,YAAA,aAAA,gBAAA,cAAA;AAAA,YAAA,IAAA,gBAAA,IAAA;AACA,eAAA,aAAA,IAAA,IAAA;AACA;;AACA,aAAA,KAAA,EAAA,CAAA,iBAAA,CAAA;AACA,KAxBA;AAyBA,IAAA,kBAzBA,gCAyBA;AACA,UAAA,KAAA,aAAA,CAAA,KAAA,MAAA,CAAA,EAAA;AACA,YAAA,kBAAA,GAAA,KAAA,MAAA,CAAA,mBAAA;AACA,eAAA,kBAAA;AACA;;AACA,aAAA,IAAA;AACA;AA/BA,GAtBA;AAuDA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,yBACA,MADA,EACA;AACA,aAAA,MAAA,IAAA,CAAA,aAAA,CAAA,MAAA,CAAA;AACA,KAHA;AAIA,IAAA,cAJA,4BAIA;AACA,UAAA,KAAA,UAAA,EAAA;AACA,QAAA,GAAA,CAAA,KAAA,CAAA,yBAAA,EAAA,KAAA,UAAA;AACA,OAFA,MAEA;AACA,QAAA,GAAA,CAAA,KAAA,CAAA,uBAAA;AACA;AACA;AAVA;AAvDA,CAAA","sourcesContent":["<template>\n  <div class=\"chat-bubble-wrap\">\n    <button\n      class=\"chat-bubble agent\"\n      :class=\"$dm('bg-white', 'dark:bg-slate-50')\"\n      @click=\"onClickMessage\"\n    >\n      <div v-if=\"showSender\" class=\"row--agent-block\">\n        <thumbnail\n          :src=\"avatarUrl\"\n          size=\"20px\"\n          :username=\"agentName\"\n          :status=\"availabilityStatus\"\n        />\n        <span class=\"agent--name\">{{ agentName }}</span>\n        <span class=\"company--name\"> {{ companyName }}</span>\n      </div>\n      <div\n        v-dompurify-html=\"formatMessage(message, false)\"\n        class=\"message-content\"\n      />\n    </button>\n  </div>\n</template>\n\n<script>\nimport messageFormatterMixin from 'shared/mixins/messageFormatterMixin';\nimport Thumbnail from 'dashboard/components/widgets/Thumbnail';\nimport configMixin from '../mixins/configMixin';\nimport { isEmptyObject } from 'widget/helpers/utils';\nimport {\n  ON_CAMPAIGN_MESSAGE_CLICK,\n  ON_UNREAD_MESSAGE_CLICK,\n} from '../constants/widgetBusEvents';\nimport darkModeMixin from 'widget/mixins/darkModeMixin';\nexport default {\n  name: 'UnreadMessage',\n  components: { Thumbnail },\n  mixins: [messageFormatterMixin, configMixin, darkModeMixin],\n  props: {\n    message: {\n      type: String,\n      default: '',\n    },\n    showSender: {\n      type: Boolean,\n      default: false,\n    },\n    sender: {\n      type: Object,\n      default: () => {},\n    },\n    campaignId: {\n      type: Number,\n      default: null,\n    },\n  },\n  computed: {\n    companyName() {\n      return `${this.$t('UNREAD_VIEW.COMPANY_FROM')} ${\n        this.channelConfig.websiteName\n      }`;\n    },\n    avatarUrl() {\n      // eslint-disable-next-line\n      const BotImage = require('dashboard/assets/images/chatwoot_bot.png');\n      const displayImage = this.useInboxAvatarForBot\n        ? this.inboxAvatarUrl\n        : BotImage;\n      if (this.isSenderExist(this.sender)) {\n        const { avatar_url: avatarUrl } = this.sender;\n        return avatarUrl;\n      }\n      return displayImage;\n    },\n    agentName() {\n      if (this.isSenderExist(this.sender)) {\n        const { available_name: availableName, name } = this.sender;\n        return availableName || name;\n      }\n      return this.$t('UNREAD_VIEW.BOT');\n    },\n    availabilityStatus() {\n      if (this.isSenderExist(this.sender)) {\n        const { availability_status: availabilityStatus } = this.sender;\n        return availabilityStatus;\n      }\n      return null;\n    },\n  },\n  methods: {\n    isSenderExist(sender) {\n      return sender && !isEmptyObject(sender);\n    },\n    onClickMessage() {\n      if (this.campaignId) {\n        bus.$emit(ON_CAMPAIGN_MESSAGE_CLICK, this.campaignId);\n      } else {\n        bus.$emit(ON_UNREAD_MESSAGE_CLICK);\n      }\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n@import '~widget/assets/scss/variables.scss';\n.chat-bubble {\n  max-width: 85%;\n  padding: $space-normal;\n  cursor: pointer;\n}\n\n.row--agent-block {\n  align-items: center;\n  display: flex;\n  text-align: left;\n  padding-bottom: $space-small;\n  font-size: $font-size-small;\n  .agent--name {\n    font-weight: $font-weight-medium;\n    margin-left: $space-smaller;\n  }\n  .company--name {\n    color: $color-light-gray;\n    margin-left: $space-smaller;\n  }\n}\n</style>\n"],"sourceRoot":"app/javascript/widget/components"},"metadata":{},"sourceType":"module"}