{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport UserMessageBubble from 'widget/components/UserMessageBubble';\nimport ImageBubble from 'widget/components/ImageBubble';\nimport FluentIcon from 'shared/components/FluentIcon/Index';\nimport FileBubble from 'widget/components/FileBubble';\nimport timeMixin from 'dashboard/mixins/time';\nimport messageMixin from '../mixins/messageMixin';\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'UserMessage',\n  components: {\n    UserMessageBubble: UserMessageBubble,\n    ImageBubble: ImageBubble,\n    FileBubble: FileBubble,\n    FluentIcon: FluentIcon\n  },\n  mixins: [timeMixin, messageMixin],\n  props: {\n    message: {\n      type: Object,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    return {\n      hasImageError: false\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    widgetColor: 'appConfig/getWidgetColor'\n  })), {}, {\n    isInProgress: function isInProgress() {\n      var _this$message$status = this.message.status,\n          status = _this$message$status === void 0 ? '' : _this$message$status;\n      return status === 'in_progress';\n    },\n    showTextBubble: function showTextBubble() {\n      var message = this.message;\n      return !!message.content;\n    },\n    readableTime: function readableTime() {\n      var _this$message$created = this.message.created_at,\n          createdAt = _this$message$created === void 0 ? '' : _this$message$created;\n      return this.messageStamp(createdAt);\n    },\n    isFailed: function isFailed() {\n      var _this$message$status2 = this.message.status,\n          status = _this$message$status2 === void 0 ? '' : _this$message$status2;\n      return status === 'failed';\n    },\n    errorMessage: function errorMessage() {\n      var meta = this.message.meta;\n      return meta ? meta.error : this.$t('COMPONENTS.MESSAGE_BUBBLE.ERROR_MESSAGE');\n    }\n  }),\n  watch: {\n    message: function message() {\n      this.hasImageError = false;\n    }\n  },\n  mounted: function mounted() {\n    this.hasImageError = false;\n  },\n  methods: {\n    retrySendMessage: function retrySendMessage() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.$store.dispatch('conversation/sendMessageWithData', _this.message);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    onImageLoadError: function onImageLoadError() {\n      this.hasImageError = true;\n    }\n  }\n};","map":{"version":3,"sources":["UserMessage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA,OAAA,iBAAA,MAAA,qCAAA;AACA,OAAA,WAAA,MAAA,+BAAA;AACA,OAAA,UAAA,MAAA,oCAAA;AACA,OAAA,UAAA,MAAA,8BAAA;AACA,OAAA,SAAA,MAAA,uBAAA;AACA,OAAA,YAAA,MAAA,wBAAA;AACA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,iBAAA,EAAA,iBADA;AAEA,IAAA,WAAA,EAAA,WAFA;AAGA,IAAA,UAAA,EAAA,UAHA;AAIA,IAAA,UAAA,EAAA;AAJA,GAFA;AAQA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,YAAA,CARA;AASA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA;AADA,GATA;AAeA,EAAA,IAfA,kBAeA;AACA,WAAA;AACA,MAAA,aAAA,EAAA;AADA,KAAA;AAGA,GAnBA;AAoBA,EAAA,QAAA,kCACA,UAAA,CAAA;AACA,IAAA,WAAA,EAAA;AADA,GAAA,CADA;AAKA,IAAA,YALA,0BAKA;AACA,iCAAA,KAAA,OAAA,CAAA,MAAA;AAAA,UAAA,MAAA,qCAAA,EAAA;AACA,aAAA,MAAA,KAAA,aAAA;AACA,KARA;AASA,IAAA,cATA,4BASA;AACA,UAAA,OAAA,GAAA,IAAA,CAAA,OAAA;AACA,aAAA,CAAA,CAAA,OAAA,CAAA,OAAA;AACA,KAZA;AAaA,IAAA,YAbA,0BAaA;AACA,kCAAA,KAAA,OAAA,CAAA,UAAA;AAAA,UAAA,SAAA,sCAAA,EAAA;AACA,aAAA,KAAA,YAAA,CAAA,SAAA,CAAA;AACA,KAhBA;AAiBA,IAAA,QAjBA,sBAiBA;AACA,kCAAA,KAAA,OAAA,CAAA,MAAA;AAAA,UAAA,MAAA,sCAAA,EAAA;AACA,aAAA,MAAA,KAAA,QAAA;AACA,KApBA;AAqBA,IAAA,YArBA,0BAqBA;AACA,UAAA,IAAA,GAAA,KAAA,OAAA,CAAA,IAAA;AACA,aAAA,IAAA,GACA,IAAA,CAAA,KADA,GAEA,KAAA,EAAA,CAAA,yCAAA,CAFA;AAGA;AA1BA,IApBA;AAgDA,EAAA,KAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,WAAA,aAAA,GAAA,KAAA;AACA;AAHA,GAhDA;AAqDA,EAAA,OArDA,qBAqDA;AACA,SAAA,aAAA,GAAA,KAAA;AACA,GAvDA;AAwDA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,8BACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,CAAA,MAAA,CAAA,QAAA,CACA,kCADA,EAEA,KAAA,CAAA,OAFA,CADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,KANA;AAOA,IAAA,gBAPA,8BAOA;AACA,WAAA,aAAA,GAAA,IAAA;AACA;AATA;AAxDA,CAAA","sourcesContent":["<template>\n  <div class=\"user-message-wrap\">\n    <div class=\"user-message\">\n      <div\n        class=\"message-wrap\"\n        :class=\"{ 'in-progress': isInProgress, 'is-failed': isFailed }\"\n      >\n        <user-message-bubble\n          v-if=\"showTextBubble\"\n          :message=\"message.content\"\n          :status=\"message.status\"\n          :widget-color=\"widgetColor\"\n        />\n        <div\n          v-if=\"hasAttachments\"\n          class=\"chat-bubble has-attachment user\"\n          :style=\"{ backgroundColor: widgetColor }\"\n        >\n          <div v-for=\"attachment in message.attachments\" :key=\"attachment.id\">\n            <image-bubble\n              v-if=\"attachment.file_type === 'image' && !hasImageError\"\n              :url=\"attachment.data_url\"\n              :thumb=\"attachment.data_url\"\n              :readable-time=\"readableTime\"\n              @error=\"onImageLoadError\"\n            />\n            <file-bubble\n              v-else\n              :url=\"attachment.data_url\"\n              :is-in-progress=\"isInProgress\"\n            />\n          </div>\n        </div>\n        <div\n          v-if=\"isFailed\"\n          class=\"flex justify-end align-middle px-4 py-2 text-red-700\"\n        >\n          <button\n            v-if=\"!hasAttachments\"\n            :title=\"$t('COMPONENTS.MESSAGE_BUBBLE.RETRY')\"\n            class=\"inline-flex justify-center items-center ml-2\"\n            @click=\"retrySendMessage\"\n          >\n            <fluent-icon icon=\"arrow-clockwise\" size=\"14\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport UserMessageBubble from 'widget/components/UserMessageBubble';\nimport ImageBubble from 'widget/components/ImageBubble';\nimport FluentIcon from 'shared/components/FluentIcon/Index';\nimport FileBubble from 'widget/components/FileBubble';\nimport timeMixin from 'dashboard/mixins/time';\nimport messageMixin from '../mixins/messageMixin';\nimport { mapGetters } from 'vuex';\n\nexport default {\n  name: 'UserMessage',\n  components: {\n    UserMessageBubble,\n    ImageBubble,\n    FileBubble,\n    FluentIcon,\n  },\n  mixins: [timeMixin, messageMixin],\n  props: {\n    message: {\n      type: Object,\n      default: () => {},\n    },\n  },\n  data() {\n    return {\n      hasImageError: false,\n    };\n  },\n  computed: {\n    ...mapGetters({\n      widgetColor: 'appConfig/getWidgetColor',\n    }),\n\n    isInProgress() {\n      const { status = '' } = this.message;\n      return status === 'in_progress';\n    },\n    showTextBubble() {\n      const { message } = this;\n      return !!message.content;\n    },\n    readableTime() {\n      const { created_at: createdAt = '' } = this.message;\n      return this.messageStamp(createdAt);\n    },\n    isFailed() {\n      const { status = '' } = this.message;\n      return status === 'failed';\n    },\n    errorMessage() {\n      const { meta } = this.message;\n      return meta\n        ? meta.error\n        : this.$t('COMPONENTS.MESSAGE_BUBBLE.ERROR_MESSAGE');\n    },\n  },\n  watch: {\n    message() {\n      this.hasImageError = false;\n    },\n  },\n  mounted() {\n    this.hasImageError = false;\n  },\n  methods: {\n    async retrySendMessage() {\n      await this.$store.dispatch(\n        'conversation/sendMessageWithData',\n        this.message\n      );\n    },\n    onImageLoadError() {\n      this.hasImageError = true;\n    },\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/widget/components"},"metadata":{},"sourceType":"module"}