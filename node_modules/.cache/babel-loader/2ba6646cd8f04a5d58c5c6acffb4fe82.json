{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport conversationLabels from '../../api/conversationLabels';\nvar state = {};\nexport var getters = {};\nexport var actions = {\n  create: function () {\n    var _create = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_, label) {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return conversationLabels.create(label);\n\n            case 3:\n              _context.next = 7;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 5]]);\n    }));\n\n    function create(_x, _x2) {\n      return _create.apply(this, arguments);\n    }\n\n    return create;\n  }(),\n  destroy: function () {\n    var _destroy = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_, label) {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return conversationLabels.destroy(label);\n\n            case 3:\n              _context2.next = 7;\n              break;\n\n            case 5:\n              _context2.prev = 5;\n              _context2.t0 = _context2[\"catch\"](0);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 5]]);\n    }));\n\n    function destroy(_x3, _x4) {\n      return _destroy.apply(this, arguments);\n    }\n\n    return destroy;\n  }()\n};\nexport var mutations = {};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/widget/store/modules/conversationLabels.js"],"names":["conversationLabels","state","getters","actions","create","_","label","destroy","mutations","namespaced"],"mappings":";;;;;;;;AAAA,OAAOA,kBAAP,MAA+B,8BAA/B;AAEA,IAAMC,KAAK,GAAG,EAAd;AAEA,OAAO,IAAMC,OAAO,GAAG,EAAhB;AAEP,OAAO,IAAMC,OAAO,GAAG;AACrBC,EAAAA,MAAM;AAAA,0EAAE,iBAAOC,CAAP,EAAUC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEEN,kBAAkB,CAACI,MAAnB,CAA0BE,KAA1B,CAFF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADe;AAQrBC,EAAAA,OAAO;AAAA,2EAAE,kBAAOF,CAAP,EAAUC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAECN,kBAAkB,CAACO,OAAnB,CAA2BD,KAA3B,CAFD;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AARc,CAAhB;AAiBP,OAAO,IAAME,SAAS,GAAG,EAAlB;AAEP,eAAe;AACbC,EAAAA,UAAU,EAAE,IADC;AAEbR,EAAAA,KAAK,EAALA,KAFa;AAGbC,EAAAA,OAAO,EAAPA,OAHa;AAIbC,EAAAA,OAAO,EAAPA,OAJa;AAKbK,EAAAA,SAAS,EAATA;AALa,CAAf","sourcesContent":["import conversationLabels from '../../api/conversationLabels';\n\nconst state = {};\n\nexport const getters = {};\n\nexport const actions = {\n  create: async (_, label) => {\n    try {\n      await conversationLabels.create(label);\n    } catch (error) {\n      // Ignore error\n    }\n  },\n  destroy: async (_, label) => {\n    try {\n      await conversationLabels.destroy(label);\n    } catch (error) {\n      // Ignore error\n    }\n  },\n};\n\nexport const mutations = {};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations,\n};\n"]},"metadata":{},"sourceType":"module"}