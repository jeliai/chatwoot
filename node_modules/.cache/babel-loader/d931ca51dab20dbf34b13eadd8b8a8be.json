{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport AddCanned from './AddCanned';\nimport EditCanned from './EditCanned';\nexport default {\n  components: {\n    AddCanned: AddCanned,\n    EditCanned: EditCanned\n  },\n  data: function data() {\n    return {\n      loading: {},\n      showAddPopup: false,\n      showEditPopup: false,\n      showDeleteConfirmationPopup: false,\n      selectedResponse: {},\n      cannedResponseAPI: {\n        message: ''\n      }\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    records: 'getCannedResponses',\n    uiFlags: 'getUIFlags'\n  })), {}, {\n    // Delete Modal\n    deleteConfirmText: function deleteConfirmText() {\n      return \"\".concat(this.$t('CANNED_MGMT.DELETE.CONFIRM.YES'), \" \").concat(this.selectedResponse.short_code);\n    },\n    deleteRejectText: function deleteRejectText() {\n      return \"\".concat(this.$t('CANNED_MGMT.DELETE.CONFIRM.NO'), \" \").concat(this.selectedResponse.short_code);\n    },\n    deleteMessage: function deleteMessage() {\n      return \" \".concat(this.selectedResponse.short_code, \"?\");\n    }\n  }),\n  mounted: function mounted() {\n    // Fetch API Call\n    this.$store.dispatch('getCannedResponse');\n  },\n  methods: {\n    showAlert: function showAlert(message) {\n      // Reset loading, current selected agent\n      this.loading[this.selectedResponse.id] = false;\n      this.selectedResponse = {}; // Show message\n\n      this.cannedResponseAPI.message = message;\n      bus.$emit('newToastMessage', message);\n    },\n    // Edit Function\n    openAddPopup: function openAddPopup() {\n      this.showAddPopup = true;\n    },\n    hideAddPopup: function hideAddPopup() {\n      this.showAddPopup = false;\n    },\n    // Edit Modal Functions\n    openEditPopup: function openEditPopup(response) {\n      this.showEditPopup = true;\n      this.selectedResponse = response;\n    },\n    hideEditPopup: function hideEditPopup() {\n      this.showEditPopup = false;\n    },\n    // Delete Modal Functions\n    openDeletePopup: function openDeletePopup(response) {\n      this.showDeleteConfirmationPopup = true;\n      this.selectedResponse = response;\n    },\n    closeDeletePopup: function closeDeletePopup() {\n      this.showDeleteConfirmationPopup = false;\n    },\n    // Set loading and call Delete API\n    confirmDeletion: function confirmDeletion() {\n      this.loading[this.selectedResponse.id] = true;\n      this.closeDeletePopup();\n      this.deleteCannedResponse(this.selectedResponse.id);\n    },\n    deleteCannedResponse: function deleteCannedResponse(id) {\n      var _this = this;\n\n      this.$store.dispatch('deleteCannedResponse', id).then(function () {\n        _this.showAlert(_this.$t('CANNED_MGMT.DELETE.API.SUCCESS_MESSAGE'));\n      }).catch(function () {\n        _this.showAlert(_this.$t('CANNED_MGMT.DELETE.API.ERROR_MESSAGE'));\n      });\n    }\n  }\n};","map":{"version":3,"sources":["Index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"column content-box\">\n    <woot-button\n      color-scheme=\"success\"\n      class-names=\"button--fixed-right-top\"\n      icon=\"add-circle\"\n      @click=\"openAddPopup()\"\n    >\n      {{ $t('CANNED_MGMT.HEADER_BTN_TXT') }}\n    </woot-button>\n\n    <!-- List Canned Response -->\n    <div class=\"row\">\n      <div class=\"small-8 columns with-right-space \">\n        <p\n          v-if=\"!uiFlags.fetchingList && !records.length\"\n          class=\"no-items-error-message\"\n        >\n          {{ $t('CANNED_MGMT.LIST.404') }}\n        </p>\n        <woot-loading-state\n          v-if=\"uiFlags.fetchingList\"\n          :message=\"$t('CANNED_MGMT.LOADING')\"\n        />\n\n        <table\n          v-if=\"!uiFlags.fetchingList && records.length\"\n          class=\"woot-table\"\n        >\n          <thead>\n            <!-- Header -->\n            <th\n              v-for=\"thHeader in $t('CANNED_MGMT.LIST.TABLE_HEADER')\"\n              :key=\"thHeader\"\n            >\n              {{ thHeader }}\n            </th>\n          </thead>\n          <tbody>\n            <tr\n              v-for=\"(cannedItem, index) in records\"\n              :key=\"cannedItem.short_code\"\n            >\n              <!-- Short Code  -->\n              <td class=\"short-code\">\n                {{ cannedItem.short_code }}\n              </td>\n              <!-- Content -->\n              <td class=\"wrap-break-words\">{{ cannedItem.content }}</td>\n              <!-- Action Buttons -->\n              <td class=\"button-wrapper\">\n                <woot-button\n                  v-tooltip.top=\"$t('CANNED_MGMT.EDIT.BUTTON_TEXT')\"\n                  variant=\"smooth\"\n                  size=\"tiny\"\n                  color-scheme=\"secondary\"\n                  icon=\"edit\"\n                  @click=\"openEditPopup(cannedItem)\"\n                />\n                <woot-button\n                  v-tooltip.top=\"$t('CANNED_MGMT.DELETE.BUTTON_TEXT')\"\n                  variant=\"smooth\"\n                  color-scheme=\"alert\"\n                  size=\"tiny\"\n                  icon=\"dismiss-circle\"\n                  class-names=\"grey-btn\"\n                  :is-loading=\"loading[cannedItem.id]\"\n                  @click=\"openDeletePopup(cannedItem, index)\"\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <div class=\"small-4 columns\">\n        <span v-dompurify-html=\"$t('CANNED_MGMT.SIDEBAR_TXT')\" />\n      </div>\n    </div>\n    <!-- Add Agent -->\n    <woot-modal :show.sync=\"showAddPopup\" :on-close=\"hideAddPopup\">\n      <add-canned :on-close=\"hideAddPopup\" />\n    </woot-modal>\n\n    <!-- Edit Canned Response -->\n    <woot-modal :show.sync=\"showEditPopup\" :on-close=\"hideEditPopup\">\n      <edit-canned\n        v-if=\"showEditPopup\"\n        :id=\"selectedResponse.id\"\n        :edshort-code=\"selectedResponse.short_code\"\n        :edcontent=\"selectedResponse.content\"\n        :on-close=\"hideEditPopup\"\n      />\n    </woot-modal>\n\n    <!-- Delete Canned Response -->\n    <woot-delete-modal\n      :show.sync=\"showDeleteConfirmationPopup\"\n      :on-close=\"closeDeletePopup\"\n      :on-confirm=\"confirmDeletion\"\n      :title=\"$t('CANNED_MGMT.DELETE.CONFIRM.TITLE')\"\n      :message=\"$t('CANNED_MGMT.DELETE.CONFIRM.MESSAGE')\"\n      :message-value=\"deleteMessage\"\n      :confirm-text=\"deleteConfirmText\"\n      :reject-text=\"deleteRejectText\"\n    />\n  </div>\n</template>\n<script>\nimport { mapGetters } from 'vuex';\nimport AddCanned from './AddCanned';\nimport EditCanned from './EditCanned';\n\nexport default {\n  components: {\n    AddCanned,\n    EditCanned,\n  },\n  data() {\n    return {\n      loading: {},\n      showAddPopup: false,\n      showEditPopup: false,\n      showDeleteConfirmationPopup: false,\n      selectedResponse: {},\n      cannedResponseAPI: {\n        message: '',\n      },\n    };\n  },\n  computed: {\n    ...mapGetters({\n      records: 'getCannedResponses',\n      uiFlags: 'getUIFlags',\n    }),\n    // Delete Modal\n    deleteConfirmText() {\n      return `${this.$t('CANNED_MGMT.DELETE.CONFIRM.YES')} ${\n        this.selectedResponse.short_code\n      }`;\n    },\n    deleteRejectText() {\n      return `${this.$t('CANNED_MGMT.DELETE.CONFIRM.NO')} ${\n        this.selectedResponse.short_code\n      }`;\n    },\n    deleteMessage() {\n      return ` ${this.selectedResponse.short_code}?`;\n    },\n  },\n  mounted() {\n    // Fetch API Call\n    this.$store.dispatch('getCannedResponse');\n  },\n  methods: {\n    showAlert(message) {\n      // Reset loading, current selected agent\n      this.loading[this.selectedResponse.id] = false;\n      this.selectedResponse = {};\n      // Show message\n      this.cannedResponseAPI.message = message;\n      bus.$emit('newToastMessage', message);\n    },\n    // Edit Function\n    openAddPopup() {\n      this.showAddPopup = true;\n    },\n    hideAddPopup() {\n      this.showAddPopup = false;\n    },\n\n    // Edit Modal Functions\n    openEditPopup(response) {\n      this.showEditPopup = true;\n      this.selectedResponse = response;\n    },\n    hideEditPopup() {\n      this.showEditPopup = false;\n    },\n\n    // Delete Modal Functions\n    openDeletePopup(response) {\n      this.showDeleteConfirmationPopup = true;\n      this.selectedResponse = response;\n    },\n    closeDeletePopup() {\n      this.showDeleteConfirmationPopup = false;\n    },\n    // Set loading and call Delete API\n    confirmDeletion() {\n      this.loading[this.selectedResponse.id] = true;\n      this.closeDeletePopup();\n      this.deleteCannedResponse(this.selectedResponse.id);\n    },\n    deleteCannedResponse(id) {\n      this.$store\n        .dispatch('deleteCannedResponse', id)\n        .then(() => {\n          this.showAlert(this.$t('CANNED_MGMT.DELETE.API.SUCCESS_MESSAGE'));\n        })\n        .catch(() => {\n          this.showAlert(this.$t('CANNED_MGMT.DELETE.API.ERROR_MESSAGE'));\n        });\n    },\n  },\n};\n</script>\n<style scoped>\n.short-code {\n  width: 14rem;\n}\n.wrap-break-words {\n  word-break: break-all;\n  white-space: normal;\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/settings/canned"},"metadata":{},"sourceType":"module"}