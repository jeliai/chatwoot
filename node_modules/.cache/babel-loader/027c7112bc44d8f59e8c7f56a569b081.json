{"ast":null,"code":"var _mutations;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport * as MutationHelpers from 'shared/helpers/vuex/mutationHelpers';\nimport types from '../mutation-types';\nimport CustomViewsAPI from '../../api/customViews';\nexport var state = {\n  records: [],\n  uiFlags: {\n    isFetching: false,\n    isCreating: false,\n    isDeleting: false\n  }\n};\nexport var getters = {\n  getUIFlags: function getUIFlags(_state) {\n    return _state.uiFlags;\n  },\n  getCustomViews: function getCustomViews(_state) {\n    return _state.records;\n  },\n  getCustomViewsByFilterType: function getCustomViewsByFilterType(_state) {\n    return function (filterType) {\n      return _state.records.filter(function (record) {\n        return record.filter_type === filterType;\n      });\n    };\n  }\n};\nexport var actions = {\n  get: function () {\n    var _getCustomViews = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref, filterType) {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              commit(types.SET_CUSTOM_VIEW_UI_FLAG, {\n                isFetching: true\n              });\n              _context.prev = 2;\n              _context.next = 5;\n              return CustomViewsAPI.getCustomViewsByFilterType(filterType);\n\n            case 5:\n              response = _context.sent;\n              commit(types.SET_CUSTOM_VIEW, response.data);\n              _context.next = 11;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n\n            case 11:\n              _context.prev = 11;\n              commit(types.SET_CUSTOM_VIEW_UI_FLAG, {\n                isFetching: false\n              });\n              return _context.finish(11);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 9, 11, 14]]);\n    }));\n\n    function getCustomViews(_x, _x2) {\n      return _getCustomViews.apply(this, arguments);\n    }\n\n    return getCustomViews;\n  }(),\n  create: function () {\n    var _createCustomViews = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref2, obj) {\n      var commit, response, _error$response, _error$response$data, errorMessage;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              commit(types.SET_CUSTOM_VIEW_UI_FLAG, {\n                isCreating: true\n              });\n              _context2.prev = 2;\n              _context2.next = 5;\n              return CustomViewsAPI.create(obj);\n\n            case 5:\n              response = _context2.sent;\n              commit(types.ADD_CUSTOM_VIEW, response.data);\n              _context2.next = 13;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](2);\n              errorMessage = _context2.t0 === null || _context2.t0 === void 0 ? void 0 : (_error$response = _context2.t0.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message;\n              throw new Error(errorMessage);\n\n            case 13:\n              _context2.prev = 13;\n              commit(types.SET_CUSTOM_VIEW_UI_FLAG, {\n                isCreating: false\n              });\n              return _context2.finish(13);\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 9, 13, 16]]);\n    }));\n\n    function createCustomViews(_x3, _x4) {\n      return _createCustomViews.apply(this, arguments);\n    }\n\n    return createCustomViews;\n  }(),\n  delete: function () {\n    var _delete2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(_ref3, _ref4) {\n      var commit, id, filterType;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              id = _ref4.id, filterType = _ref4.filterType;\n              commit(types.SET_CUSTOM_VIEW_UI_FLAG, {\n                isDeleting: true\n              });\n              _context3.prev = 3;\n              _context3.next = 6;\n              return CustomViewsAPI.deleteCustomViews(id, filterType);\n\n            case 6:\n              commit(types.DELETE_CUSTOM_VIEW, id);\n              _context3.next = 12;\n              break;\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](3);\n              throw new Error(_context3.t0);\n\n            case 12:\n              _context3.prev = 12;\n              commit(types.SET_CUSTOM_VIEW_UI_FLAG, {\n                isDeleting: false\n              });\n              return _context3.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[3, 9, 12, 15]]);\n    }));\n\n    function _delete(_x5, _x6) {\n      return _delete2.apply(this, arguments);\n    }\n\n    return _delete;\n  }()\n};\nexport var mutations = (_mutations = {}, _defineProperty(_mutations, types.SET_CUSTOM_VIEW_UI_FLAG, function (_state, data) {\n  _state.uiFlags = _objectSpread(_objectSpread({}, _state.uiFlags), data);\n}), _defineProperty(_mutations, types.ADD_CUSTOM_VIEW, MutationHelpers.create), _defineProperty(_mutations, types.SET_CUSTOM_VIEW, MutationHelpers.set), _defineProperty(_mutations, types.DELETE_CUSTOM_VIEW, MutationHelpers.destroy), _mutations);\nexport default {\n  namespaced: true,\n  actions: actions,\n  state: state,\n  getters: getters,\n  mutations: mutations\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/store/modules/customViews.js"],"names":["MutationHelpers","types","CustomViewsAPI","state","records","uiFlags","isFetching","isCreating","isDeleting","getters","getUIFlags","_state","getCustomViews","getCustomViewsByFilterType","filterType","filter","record","filter_type","actions","get","commit","SET_CUSTOM_VIEW_UI_FLAG","response","SET_CUSTOM_VIEW","data","create","obj","ADD_CUSTOM_VIEW","errorMessage","message","Error","createCustomViews","delete","id","deleteCustomViews","DELETE_CUSTOM_VIEW","mutations","set","destroy","namespaced"],"mappings":"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","sourcesContent":["import * as MutationHelpers from 'shared/helpers/vuex/mutationHelpers';\nimport types from '../mutation-types';\nimport CustomViewsAPI from '../../api/customViews';\n\nexport const state = {\n  records: [],\n  uiFlags: {\n    isFetching: false,\n    isCreating: false,\n    isDeleting: false,\n  },\n};\n\nexport const getters = {\n  getUIFlags(_state) {\n    return _state.uiFlags;\n  },\n  getCustomViews(_state) {\n    return _state.records;\n  },\n  getCustomViewsByFilterType: _state => filterType => {\n    return _state.records.filter(record => record.filter_type === filterType);\n  },\n};\n\nexport const actions = {\n  get: async function getCustomViews({ commit }, filterType) {\n    commit(types.SET_CUSTOM_VIEW_UI_FLAG, { isFetching: true });\n    try {\n      const response = await CustomViewsAPI.getCustomViewsByFilterType(\n        filterType\n      );\n      commit(types.SET_CUSTOM_VIEW, response.data);\n    } catch (error) {\n      // Ignore error\n    } finally {\n      commit(types.SET_CUSTOM_VIEW_UI_FLAG, { isFetching: false });\n    }\n  },\n  create: async function createCustomViews({ commit }, obj) {\n    commit(types.SET_CUSTOM_VIEW_UI_FLAG, { isCreating: true });\n    try {\n      const response = await CustomViewsAPI.create(obj);\n      commit(types.ADD_CUSTOM_VIEW, response.data);\n    } catch (error) {\n      const errorMessage = error?.response?.data?.message;\n      throw new Error(errorMessage);\n    } finally {\n      commit(types.SET_CUSTOM_VIEW_UI_FLAG, { isCreating: false });\n    }\n  },\n  delete: async ({ commit }, { id, filterType }) => {\n    commit(types.SET_CUSTOM_VIEW_UI_FLAG, { isDeleting: true });\n    try {\n      await CustomViewsAPI.deleteCustomViews(id, filterType);\n      commit(types.DELETE_CUSTOM_VIEW, id);\n    } catch (error) {\n      throw new Error(error);\n    } finally {\n      commit(types.SET_CUSTOM_VIEW_UI_FLAG, { isDeleting: false });\n    }\n  },\n};\n\nexport const mutations = {\n  [types.SET_CUSTOM_VIEW_UI_FLAG](_state, data) {\n    _state.uiFlags = {\n      ..._state.uiFlags,\n      ...data,\n    };\n  },\n\n  [types.ADD_CUSTOM_VIEW]: MutationHelpers.create,\n  [types.SET_CUSTOM_VIEW]: MutationHelpers.set,\n  [types.DELETE_CUSTOM_VIEW]: MutationHelpers.destroy,\n};\n\nexport default {\n  namespaced: true,\n  actions,\n  state,\n  getters,\n  mutations,\n};\n"]},"metadata":{},"sourceType":"module"}