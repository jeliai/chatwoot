{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport MacroForm from './MacroForm';\nimport { MACRO_ACTION_TYPES } from './constants';\nimport { mapGetters } from 'vuex';\nimport actionQueryGenerator from 'dashboard/helper/actionQueryGenerator.js';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport macrosMixin from 'dashboard/mixins/macrosMixin';\nexport default {\n  components: {\n    MacroForm: MacroForm\n  },\n  mixins: [alertMixin, macrosMixin],\n  provide: function provide() {\n    return {\n      macroActionTypes: this.macroActionTypes\n    };\n  },\n  data: function data() {\n    return {\n      macro: null,\n      mode: 'CREATE',\n      macroActionTypes: MACRO_ACTION_TYPES\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    uiFlags: 'macros/getUIFlags',\n    labels: 'labels/getLabels',\n    agents: 'agents/getAgents',\n    teams: 'teams/getTeams'\n  })), {}, {\n    macroId: function macroId() {\n      return this.$route.params.macroId;\n    }\n  }),\n  watch: {\n    $route: {\n      handler: function handler() {\n        this.fetchDropdownData();\n\n        if (this.$route.params.macroId) {\n          this.fetchMacro();\n        } else {\n          this.initNewMacro();\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    fetchDropdownData: function fetchDropdownData() {\n      this.$store.dispatch('agents/get');\n      this.$store.dispatch('teams/get');\n      this.$store.dispatch('labels/get');\n    },\n    fetchMacro: function fetchMacro() {\n      this.mode = 'EDIT';\n      this.manifestMacro();\n    },\n    manifestMacro: function manifestMacro() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var singleMacro;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.$store.dispatch('macros/getSingleMacro', _this.macroId);\n\n              case 2:\n                singleMacro = _this.$store.getters['macros/getMacro'](_this.macroId);\n                _this.macro = _this.formatMacro(singleMacro);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    formatMacro: function formatMacro(macro) {\n      var _this2 = this;\n\n      var formattedActions = macro.actions.map(function (action) {\n        var actionParams = [];\n\n        if (action.action_params.length) {\n          var inputType = _this2.macroActionTypes.find(function (item) {\n            return item.key === action.action_name;\n          }).inputType;\n\n          if (inputType === 'multi_select' || inputType === 'search_select') {\n            actionParams = _toConsumableArray(_this2.getDropdownValues(action.action_name, _this2.$store)).filter(function (item) {\n              return _toConsumableArray(action.action_params).includes(item.id);\n            });\n          } else if (inputType === 'team_message') {\n            actionParams = {\n              team_ids: _toConsumableArray(_this2.getDropdownValues(action.action_name, _this2.$store)).filter(function (item) {\n                return _toConsumableArray(action.action_params[0].team_ids).includes(item.id);\n              }),\n              message: action.action_params[0].message\n            };\n          } else actionParams = _toConsumableArray(action.action_params);\n        }\n\n        return _objectSpread(_objectSpread({}, action), {}, {\n          action_params: actionParams\n        });\n      });\n      return _objectSpread(_objectSpread({}, macro), {}, {\n        actions: formattedActions\n      });\n    },\n    initNewMacro: function initNewMacro() {\n      this.mode = 'CREATE';\n      this.macro = {\n        name: '',\n        actions: [{\n          action_name: 'assign_team',\n          action_params: []\n        }],\n        visibility: 'global'\n      };\n    },\n    saveMacro: function saveMacro(macro) {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var action, successMessage, serializedMacro;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                action = _this3.mode === 'EDIT' ? 'macros/update' : 'macros/create';\n                successMessage = _this3.mode === 'EDIT' ? _this3.$t('MACROS.EDIT.API.SUCCESS_MESSAGE') : _this3.$t('MACROS.ADD.API.SUCCESS_MESSAGE');\n                serializedMacro = JSON.parse(JSON.stringify(macro));\n                serializedMacro.actions = actionQueryGenerator(serializedMacro.actions);\n                _context2.next = 7;\n                return _this3.$store.dispatch(action, serializedMacro);\n\n              case 7:\n                _this3.showAlert(successMessage);\n\n                _this3.$router.push({\n                  name: 'macros_wrapper'\n                });\n\n                _context2.next = 14;\n                break;\n\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2[\"catch\"](0);\n\n                _this3.showAlert(_this3.$t('MACROS.ERROR'));\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 11]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"sources":["MacroEditor.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"column content-box\">\n    <woot-loading-state\n      v-if=\"uiFlags.isFetchingItem\"\n      :message=\"$t('MACROS.EDITOR.LOADING')\"\n    />\n    <macro-form\n      v-if=\"macro && !uiFlags.isFetchingItem\"\n      :macro-data.sync=\"macro\"\n      @submit=\"saveMacro\"\n    />\n  </div>\n</template>\n\n<script>\nimport MacroForm from './MacroForm';\nimport { MACRO_ACTION_TYPES } from './constants';\nimport { mapGetters } from 'vuex';\nimport actionQueryGenerator from 'dashboard/helper/actionQueryGenerator.js';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport macrosMixin from 'dashboard/mixins/macrosMixin';\n\nexport default {\n  components: {\n    MacroForm,\n  },\n  mixins: [alertMixin, macrosMixin],\n  provide() {\n    return {\n      macroActionTypes: this.macroActionTypes,\n    };\n  },\n  data() {\n    return {\n      macro: null,\n      mode: 'CREATE',\n      macroActionTypes: MACRO_ACTION_TYPES,\n    };\n  },\n  computed: {\n    ...mapGetters({\n      uiFlags: 'macros/getUIFlags',\n      labels: 'labels/getLabels',\n      agents: 'agents/getAgents',\n      teams: 'teams/getTeams',\n    }),\n    macroId() {\n      return this.$route.params.macroId;\n    },\n  },\n  watch: {\n    $route: {\n      handler() {\n        this.fetchDropdownData();\n        if (this.$route.params.macroId) {\n          this.fetchMacro();\n        } else {\n          this.initNewMacro();\n        }\n      },\n      immediate: true,\n    },\n  },\n  methods: {\n    fetchDropdownData() {\n      this.$store.dispatch('agents/get');\n      this.$store.dispatch('teams/get');\n      this.$store.dispatch('labels/get');\n    },\n    fetchMacro() {\n      this.mode = 'EDIT';\n      this.manifestMacro();\n    },\n    async manifestMacro() {\n      await this.$store.dispatch('macros/getSingleMacro', this.macroId);\n      const singleMacro = this.$store.getters['macros/getMacro'](this.macroId);\n      this.macro = this.formatMacro(singleMacro);\n    },\n    formatMacro(macro) {\n      const formattedActions = macro.actions.map(action => {\n        let actionParams = [];\n        if (action.action_params.length) {\n          const inputType = this.macroActionTypes.find(\n            item => item.key === action.action_name\n          ).inputType;\n          if (inputType === 'multi_select' || inputType === 'search_select') {\n            actionParams = [\n              ...this.getDropdownValues(action.action_name, this.$store),\n            ].filter(item => [...action.action_params].includes(item.id));\n          } else if (inputType === 'team_message') {\n            actionParams = {\n              team_ids: [\n                ...this.getDropdownValues(action.action_name, this.$store),\n              ].filter(item =>\n                [...action.action_params[0].team_ids].includes(item.id)\n              ),\n              message: action.action_params[0].message,\n            };\n          } else actionParams = [...action.action_params];\n        }\n        return {\n          ...action,\n          action_params: actionParams,\n        };\n      });\n      return {\n        ...macro,\n        actions: formattedActions,\n      };\n    },\n    initNewMacro() {\n      this.mode = 'CREATE';\n      this.macro = {\n        name: '',\n        actions: [\n          {\n            action_name: 'assign_team',\n            action_params: [],\n          },\n        ],\n        visibility: 'global',\n      };\n    },\n    async saveMacro(macro) {\n      try {\n        const action = this.mode === 'EDIT' ? 'macros/update' : 'macros/create';\n        let successMessage =\n          this.mode === 'EDIT'\n            ? this.$t('MACROS.EDIT.API.SUCCESS_MESSAGE')\n            : this.$t('MACROS.ADD.API.SUCCESS_MESSAGE');\n        let serializedMacro = JSON.parse(JSON.stringify(macro));\n        serializedMacro.actions = actionQueryGenerator(serializedMacro.actions);\n        await this.$store.dispatch(action, serializedMacro);\n        this.showAlert(successMessage);\n        this.$router.push({ name: 'macros_wrapper' });\n      } catch (error) {\n        this.showAlert(this.$t('MACROS.ERROR'));\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.content-box {\n  padding: 0;\n  height: 100vh;\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/settings/macros"},"metadata":{},"sourceType":"module"}