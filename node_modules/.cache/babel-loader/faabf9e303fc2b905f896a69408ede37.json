{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.keys.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport messageFormatterMixin from 'shared/mixins/messageFormatterMixin';\nimport ChatCard from 'shared/components/ChatCard';\nimport ChatForm from 'shared/components/ChatForm';\nimport ChatOptions from 'shared/components/ChatOptions';\nimport ChatArticle from './template/Article';\nimport EmailInput from './template/EmailInput';\nimport CustomerSatisfaction from 'shared/components/CustomerSatisfaction';\nimport darkModeMixin from 'widget/mixins/darkModeMixin.js';\nexport default {\n  name: 'AgentMessageBubble',\n  components: {\n    ChatArticle: ChatArticle,\n    ChatCard: ChatCard,\n    ChatForm: ChatForm,\n    ChatOptions: ChatOptions,\n    EmailInput: EmailInput,\n    CustomerSatisfaction: CustomerSatisfaction\n  },\n  mixins: [messageFormatterMixin, darkModeMixin],\n  props: {\n    message: {\n      type: String,\n      default: null\n    },\n    contentType: {\n      type: String,\n      default: null\n    },\n    messageType: {\n      type: Number,\n      default: null\n    },\n    messageId: {\n      type: Number,\n      default: null\n    },\n    messageContentAttributes: {\n      type: Object,\n      default: function _default() {}\n    }\n  },\n  computed: {\n    isTemplate: function isTemplate() {\n      return this.messageType === 3;\n    },\n    isTemplateEmail: function isTemplateEmail() {\n      return this.contentType === 'input_email';\n    },\n    isCards: function isCards() {\n      return this.contentType === 'cards';\n    },\n    isOptions: function isOptions() {\n      return this.contentType === 'input_select';\n    },\n    isForm: function isForm() {\n      return this.contentType === 'form';\n    },\n    isArticle: function isArticle() {\n      return this.contentType === 'article';\n    },\n    isCSAT: function isCSAT() {\n      return this.contentType === 'input_csat';\n    }\n  },\n  methods: {\n    onResponse: function onResponse(messageResponse) {\n      this.$store.dispatch('message/update', messageResponse);\n    },\n    onOptionSelect: function onOptionSelect(selectedOption) {\n      this.onResponse({\n        submittedValues: [selectedOption],\n        messageId: this.messageId\n      });\n    },\n    onFormSubmit: function onFormSubmit(formValues) {\n      var formValuesAsArray = Object.keys(formValues).map(function (key) {\n        return {\n          name: key,\n          value: formValues[key]\n        };\n      });\n      this.onResponse({\n        submittedValues: formValuesAsArray,\n        messageId: this.messageId\n      });\n    }\n  }\n};","map":{"version":3,"sources":["AgentMessageBubble.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA,OAAA,qBAAA,MAAA,qCAAA;AACA,OAAA,QAAA,MAAA,4BAAA;AACA,OAAA,QAAA,MAAA,4BAAA;AACA,OAAA,WAAA,MAAA,+BAAA;AACA,OAAA,WAAA,MAAA,oBAAA;AACA,OAAA,UAAA,MAAA,uBAAA;AACA,OAAA,oBAAA,MAAA,wCAAA;AACA,OAAA,aAAA,MAAA,gCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,oBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA,WADA;AAEA,IAAA,QAAA,EAAA,QAFA;AAGA,IAAA,QAAA,EAAA,QAHA;AAIA,IAAA,WAAA,EAAA,WAJA;AAKA,IAAA,UAAA,EAAA,UALA;AAMA,IAAA,oBAAA,EAAA;AANA,GAFA;AAUA,EAAA,MAAA,EAAA,CAAA,qBAAA,EAAA,aAAA,CAVA;AAWA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AAAA,MAAA,IAAA,EAAA,MAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KADA;AAEA,IAAA,WAAA,EAAA;AAAA,MAAA,IAAA,EAAA,MAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KAFA;AAGA,IAAA,WAAA,EAAA;AAAA,MAAA,IAAA,EAAA,MAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KAHA;AAIA,IAAA,SAAA,EAAA;AAAA,MAAA,IAAA,EAAA,MAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KAJA;AAKA,IAAA,wBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA;AALA,GAXA;AAqBA,EAAA,QAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,aAAA,KAAA,WAAA,KAAA,CAAA;AACA,KAHA;AAIA,IAAA,eAJA,6BAIA;AACA,aAAA,KAAA,WAAA,KAAA,aAAA;AACA,KANA;AAOA,IAAA,OAPA,qBAOA;AACA,aAAA,KAAA,WAAA,KAAA,OAAA;AACA,KATA;AAUA,IAAA,SAVA,uBAUA;AACA,aAAA,KAAA,WAAA,KAAA,cAAA;AACA,KAZA;AAaA,IAAA,MAbA,oBAaA;AACA,aAAA,KAAA,WAAA,KAAA,MAAA;AACA,KAfA;AAgBA,IAAA,SAhBA,uBAgBA;AACA,aAAA,KAAA,WAAA,KAAA,SAAA;AACA,KAlBA;AAmBA,IAAA,MAnBA,oBAmBA;AACA,aAAA,KAAA,WAAA,KAAA,YAAA;AACA;AArBA,GArBA;AA4CA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,eADA,EACA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,gBAAA,EAAA,eAAA;AACA,KAHA;AAIA,IAAA,cAJA,0BAIA,cAJA,EAIA;AACA,WAAA,UAAA,CAAA;AACA,QAAA,eAAA,EAAA,CAAA,cAAA,CADA;AAEA,QAAA,SAAA,EAAA,KAAA;AAFA,OAAA;AAIA,KATA;AAUA,IAAA,YAVA,wBAUA,UAVA,EAUA;AACA,UAAA,iBAAA,GAAA,MAAA,CAAA,IAAA,CAAA,UAAA,EAAA,GAAA,CAAA,UAAA,GAAA;AAAA,eAAA;AACA,UAAA,IAAA,EAAA,GADA;AAEA,UAAA,KAAA,EAAA,UAAA,CAAA,GAAA;AAFA,SAAA;AAAA,OAAA,CAAA;AAIA,WAAA,UAAA,CAAA;AACA,QAAA,eAAA,EAAA,iBADA;AAEA,QAAA,SAAA,EAAA,KAAA;AAFA,OAAA;AAIA;AAnBA;AA5CA,CAAA","sourcesContent":["<template>\n  <div class=\"chat-bubble-wrap\">\n    <div\n      v-if=\"\n        !isCards && !isOptions && !isForm && !isArticle && !isCards && !isCSAT\n      \"\n      class=\"chat-bubble agent\"\n      :class=\"$dm('bg-white', 'dark:bg-slate-700')\"\n    >\n      <div\n        v-dompurify-html=\"formatMessage(message, false)\"\n        class=\"message-content\"\n        :class=\"$dm('text-black-900', 'dark:text-slate-50')\"\n      />\n      <email-input\n        v-if=\"isTemplateEmail\"\n        :message-id=\"messageId\"\n        :message-content-attributes=\"messageContentAttributes\"\n      />\n    </div>\n    <div v-if=\"isOptions\">\n      <chat-options\n        :title=\"message\"\n        :options=\"messageContentAttributes.items\"\n        :hide-fields=\"!!messageContentAttributes.submitted_values\"\n        @click=\"onOptionSelect\"\n      />\n    </div>\n    <chat-form\n      v-if=\"isForm && !messageContentAttributes.submitted_values\"\n      :items=\"messageContentAttributes.items\"\n      :button-label=\"messageContentAttributes.button_label\"\n      :submitted-values=\"messageContentAttributes.submitted_values\"\n      @submit=\"onFormSubmit\"\n    />\n    <div v-if=\"isCards\">\n      <chat-card\n        v-for=\"item in messageContentAttributes.items\"\n        :key=\"item.title\"\n        :media-url=\"item.media_url\"\n        :title=\"item.title\"\n        :description=\"item.description\"\n        :actions=\"item.actions\"\n      />\n    </div>\n    <div v-if=\"isArticle\">\n      <chat-article :items=\"messageContentAttributes.items\" />\n    </div>\n    <customer-satisfaction\n      v-if=\"isCSAT\"\n      :message-content-attributes=\"messageContentAttributes.submitted_values\"\n      :message-id=\"messageId\"\n    />\n  </div>\n</template>\n\n<script>\nimport messageFormatterMixin from 'shared/mixins/messageFormatterMixin';\nimport ChatCard from 'shared/components/ChatCard';\nimport ChatForm from 'shared/components/ChatForm';\nimport ChatOptions from 'shared/components/ChatOptions';\nimport ChatArticle from './template/Article';\nimport EmailInput from './template/EmailInput';\nimport CustomerSatisfaction from 'shared/components/CustomerSatisfaction';\nimport darkModeMixin from 'widget/mixins/darkModeMixin.js';\n\nexport default {\n  name: 'AgentMessageBubble',\n  components: {\n    ChatArticle,\n    ChatCard,\n    ChatForm,\n    ChatOptions,\n    EmailInput,\n    CustomerSatisfaction,\n  },\n  mixins: [messageFormatterMixin, darkModeMixin],\n  props: {\n    message: { type: String, default: null },\n    contentType: { type: String, default: null },\n    messageType: { type: Number, default: null },\n    messageId: { type: Number, default: null },\n    messageContentAttributes: {\n      type: Object,\n      default: () => {},\n    },\n  },\n  computed: {\n    isTemplate() {\n      return this.messageType === 3;\n    },\n    isTemplateEmail() {\n      return this.contentType === 'input_email';\n    },\n    isCards() {\n      return this.contentType === 'cards';\n    },\n    isOptions() {\n      return this.contentType === 'input_select';\n    },\n    isForm() {\n      return this.contentType === 'form';\n    },\n    isArticle() {\n      return this.contentType === 'article';\n    },\n    isCSAT() {\n      return this.contentType === 'input_csat';\n    },\n  },\n  methods: {\n    onResponse(messageResponse) {\n      this.$store.dispatch('message/update', messageResponse);\n    },\n    onOptionSelect(selectedOption) {\n      this.onResponse({\n        submittedValues: [selectedOption],\n        messageId: this.messageId,\n      });\n    },\n    onFormSubmit(formValues) {\n      const formValuesAsArray = Object.keys(formValues).map(key => ({\n        name: key,\n        value: formValues[key],\n      }));\n      this.onResponse({\n        submittedValues: formValuesAsArray,\n        messageId: this.messageId,\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import '~widget/assets/scss/variables.scss';\n\n.chat-bubble .message-content::v-deep pre {\n  background: $color-primary-light;\n  color: $color-body;\n  overflow-y: auto;\n  padding: $space-smaller;\n}\n</style>\n"],"sourceRoot":"app/javascript/widget/components"},"metadata":{},"sourceType":"module"}