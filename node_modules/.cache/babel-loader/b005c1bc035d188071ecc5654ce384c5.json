{"ast":null,"code":"import \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport EditAttribute from './EditAttribute';\nexport default {\n  components: {\n    EditAttribute: EditAttribute\n  },\n  mixins: [alertMixin],\n  data: function data() {\n    return {\n      selectedTabIndex: 0,\n      showEditPopup: false,\n      showDeletePopup: false,\n      selectedAttribute: {}\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    uiFlags: 'attributes/getUIFlags'\n  })), {}, {\n    attributes: function attributes() {\n      var attributeModel = this.selectedTabIndex ? 'contact_attribute' : 'conversation_attribute';\n      return this.$store.getters['attributes/getAttributesByModel'](attributeModel);\n    },\n    tabs: function tabs() {\n      return [{\n        key: 0,\n        name: this.$t('ATTRIBUTES_MGMT.TABS.CONVERSATION')\n      }, {\n        key: 1,\n        name: this.$t('ATTRIBUTES_MGMT.TABS.CONTACT')\n      }];\n    },\n    deleteConfirmText: function deleteConfirmText() {\n      return \"\".concat(this.$t('ATTRIBUTES_MGMT.DELETE.CONFIRM.YES'), \" \").concat(this.selectedAttribute.attribute_display_name);\n    },\n    deleteRejectText: function deleteRejectText() {\n      return this.$t('ATTRIBUTES_MGMT.DELETE.CONFIRM.NO');\n    },\n    confirmDeleteTitle: function confirmDeleteTitle() {\n      return this.$t('ATTRIBUTES_MGMT.DELETE.CONFIRM.TITLE', {\n        attributeName: this.selectedAttribute.attribute_display_name\n      });\n    },\n    confirmPlaceHolderText: function confirmPlaceHolderText() {\n      return \"\".concat(this.$t('ATTRIBUTES_MGMT.DELETE.CONFIRM.PLACE_HOLDER', {\n        attributeName: this.selectedAttribute.attribute_display_name\n      }));\n    }\n  }),\n  mounted: function mounted() {\n    this.fetchAttributes(this.selectedTabIndex);\n  },\n  methods: {\n    onClickTabChange: function onClickTabChange(index) {\n      this.selectedTabIndex = index;\n      this.fetchAttributes(index);\n    },\n    fetchAttributes: function fetchAttributes(index) {\n      this.$store.dispatch('attributes/get', index);\n    },\n    deleteAttributes: function deleteAttributes(_ref) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var id, _error$response, errorMessage;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                id = _ref.id;\n                _context.prev = 1;\n                _context.next = 4;\n                return _this.$store.dispatch('attributes/delete', id);\n\n              case 4:\n                _this.showAlert(_this.$t('ATTRIBUTES_MGMT.DELETE.API.SUCCESS_MESSAGE'));\n\n                _context.next = 11;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                errorMessage = (_context.t0 === null || _context.t0 === void 0 ? void 0 : (_error$response = _context.t0.response) === null || _error$response === void 0 ? void 0 : _error$response.message) || _this.$t('ATTRIBUTES_MGMT.DELETE.API.ERROR_MESSAGE');\n\n                _this.showAlert(errorMessage);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 7]]);\n      }))();\n    },\n    openEditPopup: function openEditPopup(response) {\n      this.showEditPopup = true;\n      this.selectedAttribute = response;\n    },\n    hideEditPopup: function hideEditPopup() {\n      this.showEditPopup = false;\n    },\n    confirmDeletion: function confirmDeletion() {\n      this.deleteAttributes(this.selectedAttribute);\n      this.closeDelete();\n    },\n    openDelete: function openDelete(value) {\n      this.showDeletePopup = true;\n      this.selectedAttribute = value;\n    },\n    closeDelete: function closeDelete() {\n      this.showDeletePopup = false;\n      this.selectedAttribute = {};\n    }\n  }\n};","map":{"version":3,"sources":["CustomAttribute.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"row table-wrap\">\n    <div class=\"column\">\n      <woot-tabs :index=\"selectedTabIndex\" @change=\"onClickTabChange\">\n        <woot-tabs-item\n          v-for=\"tab in tabs\"\n          :key=\"tab.key\"\n          :name=\"tab.name\"\n          :show-badge=\"false\"\n        />\n      </woot-tabs>\n\n      <div class=\"columns with-right-space\">\n        <p\n          v-if=\"!uiFlags.isFetching && !attributes.length\"\n          class=\"no-items-error-message\"\n        >\n          {{ $t('ATTRIBUTES_MGMT.LIST.EMPTY_RESULT.404') }}\n        </p>\n        <woot-loading-state\n          v-if=\"uiFlags.isFetching\"\n          :message=\"$t('ATTRIBUTES_MGMT.LOADING')\"\n        />\n        <table\n          v-if=\"!uiFlags.isFetching && attributes.length\"\n          class=\"woot-table\"\n        >\n          <thead>\n            <th\n              v-for=\"tableHeader in $t('ATTRIBUTES_MGMT.LIST.TABLE_HEADER')\"\n              :key=\"tableHeader\"\n              class=\"item\"\n            >\n              {{ tableHeader }}\n            </th>\n          </thead>\n          <tbody>\n            <tr v-for=\"attribute in attributes\" :key=\"attribute.attribute_key\">\n              <td class=\"item text-truncate\">\n                {{ attribute.attribute_display_name }}\n              </td>\n              <td class=\"item-description text-truncate\">\n                {{ attribute.attribute_description }}\n              </td>\n              <td class=\"item text-truncatee\">\n                {{ attribute.attribute_display_type }}\n              </td>\n              <td class=\"item key text-truncate\">\n                {{ attribute.attribute_key }}\n              </td>\n              <td class=\"button-wrapper\">\n                <woot-button\n                  v-tooltip.top=\"$t('ATTRIBUTES_MGMT.LIST.BUTTONS.EDIT')\"\n                  variant=\"smooth\"\n                  size=\"tiny\"\n                  color-scheme=\"secondary\"\n                  class-names=\"grey-btn\"\n                  icon=\"edit\"\n                  @click=\"openEditPopup(attribute)\"\n                />\n                <woot-button\n                  v-tooltip.top=\"$t('ATTRIBUTES_MGMT.LIST.BUTTONS.DELETE')\"\n                  variant=\"smooth\"\n                  color-scheme=\"alert\"\n                  size=\"tiny\"\n                  icon=\"dismiss-circle\"\n                  class-names=\"grey-btn\"\n                  @click=\"openDelete(attribute)\"\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    <div class=\"small-4 columns\">\n      <span v-dompurify-html=\"$t('ATTRIBUTES_MGMT.SIDEBAR_TXT')\" />\n    </div>\n    <woot-modal :show.sync=\"showEditPopup\" :on-close=\"hideEditPopup\">\n      <edit-attribute\n        :selected-attribute=\"selectedAttribute\"\n        :is-updating=\"uiFlags.isUpdating\"\n        @on-close=\"hideEditPopup\"\n      />\n    </woot-modal>\n    <woot-confirm-delete-modal\n      v-if=\"showDeletePopup\"\n      :show.sync=\"showDeletePopup\"\n      :title=\"confirmDeleteTitle\"\n      :message=\"$t('ATTRIBUTES_MGMT.DELETE.CONFIRM.MESSAGE')\"\n      :confirm-text=\"deleteConfirmText\"\n      :reject-text=\"deleteRejectText\"\n      :confirm-value=\"selectedAttribute.attribute_display_name\"\n      :confirm-place-holder-text=\"confirmPlaceHolderText\"\n      @on-confirm=\"confirmDeletion\"\n      @on-close=\"closeDelete\"\n    />\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport EditAttribute from './EditAttribute';\n\nexport default {\n  components: {\n    EditAttribute,\n  },\n  mixins: [alertMixin],\n  data() {\n    return {\n      selectedTabIndex: 0,\n      showEditPopup: false,\n      showDeletePopup: false,\n      selectedAttribute: {},\n    };\n  },\n  computed: {\n    ...mapGetters({\n      uiFlags: 'attributes/getUIFlags',\n    }),\n    attributes() {\n      const attributeModel = this.selectedTabIndex\n        ? 'contact_attribute'\n        : 'conversation_attribute';\n\n      return this.$store.getters['attributes/getAttributesByModel'](\n        attributeModel\n      );\n    },\n    tabs() {\n      return [\n        {\n          key: 0,\n          name: this.$t('ATTRIBUTES_MGMT.TABS.CONVERSATION'),\n        },\n        {\n          key: 1,\n          name: this.$t('ATTRIBUTES_MGMT.TABS.CONTACT'),\n        },\n      ];\n    },\n    deleteConfirmText() {\n      return `${this.$t('ATTRIBUTES_MGMT.DELETE.CONFIRM.YES')} ${\n        this.selectedAttribute.attribute_display_name\n      }`;\n    },\n    deleteRejectText() {\n      return this.$t('ATTRIBUTES_MGMT.DELETE.CONFIRM.NO');\n    },\n    confirmDeleteTitle() {\n      return this.$t('ATTRIBUTES_MGMT.DELETE.CONFIRM.TITLE', {\n        attributeName: this.selectedAttribute.attribute_display_name,\n      });\n    },\n    confirmPlaceHolderText() {\n      return `${this.$t('ATTRIBUTES_MGMT.DELETE.CONFIRM.PLACE_HOLDER', {\n        attributeName: this.selectedAttribute.attribute_display_name,\n      })}`;\n    },\n  },\n  mounted() {\n    this.fetchAttributes(this.selectedTabIndex);\n  },\n  methods: {\n    onClickTabChange(index) {\n      this.selectedTabIndex = index;\n      this.fetchAttributes(index);\n    },\n    fetchAttributes(index) {\n      this.$store.dispatch('attributes/get', index);\n    },\n    async deleteAttributes({ id }) {\n      try {\n        await this.$store.dispatch('attributes/delete', id);\n        this.showAlert(this.$t('ATTRIBUTES_MGMT.DELETE.API.SUCCESS_MESSAGE'));\n      } catch (error) {\n        const errorMessage =\n          error?.response?.message ||\n          this.$t('ATTRIBUTES_MGMT.DELETE.API.ERROR_MESSAGE');\n        this.showAlert(errorMessage);\n      }\n    },\n    openEditPopup(response) {\n      this.showEditPopup = true;\n      this.selectedAttribute = response;\n    },\n    hideEditPopup() {\n      this.showEditPopup = false;\n    },\n    confirmDeletion() {\n      this.deleteAttributes(this.selectedAttribute);\n      this.closeDelete();\n    },\n    openDelete(value) {\n      this.showDeletePopup = true;\n      this.selectedAttribute = value;\n    },\n    closeDelete() {\n      this.showDeletePopup = false;\n      this.selectedAttribute = {};\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.table-wrap {\n  padding-left: var(--space-small);\n}\n\n.woot-table {\n  width: 100%;\n  margin-top: var(--space-small);\n}\n\n.no-items-error-message {\n  margin-top: var(--space-larger);\n}\n\n.tabs {\n  padding-left: 0;\n  margin-right: var(--space-medium);\n  user-select: none;\n}\n\n.item {\n  padding-left: 0;\n  max-width: 10rem;\n  min-width: 8rem;\n}\n\n.item-description {\n  padding-left: 0;\n  max-width: 16rem;\n  min-width: 10rem;\n}\n\n.key {\n  font-family: monospace;\n}\n\n::v-deep {\n  .tabs-title a {\n    font-weight: var(--font-weight-medium);\n    padding-top: 0;\n  }\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/settings/attributes"},"metadata":{},"sourceType":"module"}