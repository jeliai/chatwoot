{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport 'highlight.js/styles/default.css';\nimport { copyTextToClipboard } from 'shared/helpers/clipboard';\nexport default {\n  props: {\n    script: {\n      type: String,\n      default: ''\n    },\n    lang: {\n      type: String,\n      default: 'javascript'\n    }\n  },\n  methods: {\n    onCopy: function onCopy(e) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return copyTextToClipboard(_this.script);\n\n              case 3:\n                bus.$emit('newToastMessage', _this.$t('COMPONENTS.CODE.COPY_SUCCESSFUL'));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"sources":["Code.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAUA,OAAA,iCAAA;AACA,SAAA,mBAAA,QAAA,0BAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AALA,GADA;AAWA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,kBACA,CADA,EACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,CAAA,CAAA,cAAA;AADA;AAAA,uBAEA,mBAAA,CAAA,KAAA,CAAA,MAAA,CAFA;;AAAA;AAGA,gBAAA,GAAA,CAAA,KAAA,CAAA,iBAAA,EAAA,KAAA,CAAA,EAAA,CAAA,iCAAA,CAAA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AALA;AAXA,CAAA","sourcesContent":["<template>\n  <div class=\"code--container\">\n    <button class=\"button small button--copy-code\" @click=\"onCopy\">\n      {{ $t('COMPONENTS.CODE.BUTTON_TEXT') }}\n    </button>\n    <highlightjs v-if=\"script\" :language=\"lang\" :code=\"script\" />\n  </div>\n</template>\n\n<script>\nimport 'highlight.js/styles/default.css';\nimport { copyTextToClipboard } from 'shared/helpers/clipboard';\n\nexport default {\n  props: {\n    script: {\n      type: String,\n      default: '',\n    },\n    lang: {\n      type: String,\n      default: 'javascript',\n    },\n  },\n  methods: {\n    async onCopy(e) {\n      e.preventDefault();\n      await copyTextToClipboard(this.script);\n      bus.$emit('newToastMessage', this.$t('COMPONENTS.CODE.COPY_SUCCESSFUL'));\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.code--container {\n  position: relative;\n  text-align: left;\n\n  .button--copy-code {\n    margin-top: 0;\n    position: absolute;\n    right: 0;\n  }\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/components"},"metadata":{},"sourceType":"module"}