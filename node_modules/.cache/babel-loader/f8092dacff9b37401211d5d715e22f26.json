{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.slice.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport Thumbnail from 'dashboard/components/widgets/Thumbnail.vue';\nimport Spinner from 'shared/components/Spinner';\nimport { mixin as clickaway } from 'vue-clickaway';\nimport bulkActionsMixin from 'dashboard/mixins/bulkActionsMixin.js';\nexport default {\n  components: {\n    Thumbnail: Thumbnail,\n    Spinner: Spinner\n  },\n  mixins: [clickaway, bulkActionsMixin],\n  props: {\n    selectedInboxes: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    conversationCount: {\n      type: Number,\n      default: 0\n    }\n  },\n  data: function data() {\n    return {\n      query: '',\n      selectedAgent: null\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    uiFlags: 'bulkActions/getUIFlags',\n    inboxes: 'inboxes/getInboxes',\n    assignableAgentsUiFlags: 'inboxAssignableAgents/getUIFlags'\n  })), {}, {\n    filteredAgents: function filteredAgents() {\n      var _this = this;\n\n      if (this.query) {\n        return this.assignableAgents.filter(function (agent) {\n          return agent.name.toLowerCase().includes(_this.query.toLowerCase());\n        });\n      }\n\n      return [{\n        confirmed: true,\n        name: 'None',\n        id: null,\n        role: 'agent',\n        account_id: 0,\n        email: 'None'\n      }].concat(_toConsumableArray(this.assignableAgents));\n    },\n    assignableAgents: function assignableAgents() {\n      return this.$store.getters['inboxAssignableAgents/getAssignableAgents'](this.selectedInboxes.join(','));\n    },\n    conversationLabel: function conversationLabel() {\n      return this.conversationCount > 1 ? 'conversations' : 'conversation';\n    }\n  }),\n  mounted: function mounted() {\n    this.$store.dispatch('inboxAssignableAgents/fetch', this.selectedInboxes);\n  },\n  methods: {\n    submit: function submit() {\n      this.$emit('select', this.selectedAgent);\n    },\n    goBack: function goBack() {\n      this.selectedAgent = null;\n    },\n    assignAgent: function assignAgent(agent) {\n      this.selectedAgent = agent;\n    },\n    onClose: function onClose() {\n      this.$emit('close');\n    }\n  }\n};","map":{"version":3,"sources":["AgentSelector.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,SAAA,MAAA,4CAAA;AACA,OAAA,OAAA,MAAA,2BAAA;AACA,SAAA,KAAA,IAAA,SAAA,QAAA,eAAA;AACA,OAAA,gBAAA,MAAA,sCAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,OAAA,EAAA;AAFA,GADA;AAKA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,gBAAA,CALA;AAMA,EAAA,KAAA,EAAA;AACA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA,KADA;AAKA,IAAA,iBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AALA,GANA;AAgBA,EAAA,IAhBA,kBAgBA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,aAAA,EAAA;AAFA,KAAA;AAIA,GArBA;AAsBA,EAAA,QAAA,kCACA,UAAA,CAAA;AACA,IAAA,OAAA,EAAA,wBADA;AAEA,IAAA,OAAA,EAAA,oBAFA;AAGA,IAAA,uBAAA,EAAA;AAHA,GAAA,CADA;AAMA,IAAA,cANA,4BAMA;AAAA;;AACA,UAAA,KAAA,KAAA,EAAA;AACA,eAAA,KAAA,gBAAA,CAAA,MAAA,CAAA,UAAA,KAAA;AAAA,iBACA,KAAA,CAAA,IAAA,CAAA,WAAA,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA,WAAA,EAAA,CADA;AAAA,SAAA,CAAA;AAGA;;AACA,cACA;AACA,QAAA,SAAA,EAAA,IADA;AAEA,QAAA,IAAA,EAAA,MAFA;AAGA,QAAA,EAAA,EAAA,IAHA;AAIA,QAAA,IAAA,EAAA,OAJA;AAKA,QAAA,UAAA,EAAA,CALA;AAMA,QAAA,KAAA,EAAA;AANA,OADA,4BASA,KAAA,gBATA;AAWA,KAvBA;AAwBA,IAAA,gBAxBA,8BAwBA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,2CAAA,EACA,KAAA,eAAA,CAAA,IAAA,CAAA,GAAA,CADA,CAAA;AAGA,KA5BA;AA6BA,IAAA,iBA7BA,+BA6BA;AACA,aAAA,KAAA,iBAAA,GAAA,CAAA,GAAA,eAAA,GAAA,cAAA;AACA;AA/BA,IAtBA;AAuDA,EAAA,OAvDA,qBAuDA;AACA,SAAA,MAAA,CAAA,QAAA,CAAA,6BAAA,EAAA,KAAA,eAAA;AACA,GAzDA;AA0DA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,KAAA,aAAA;AACA,KAHA;AAIA,IAAA,MAJA,oBAIA;AACA,WAAA,aAAA,GAAA,IAAA;AACA,KANA;AAOA,IAAA,WAPA,uBAOA,KAPA,EAOA;AACA,WAAA,aAAA,GAAA,KAAA;AACA,KATA;AAUA,IAAA,OAVA,qBAUA;AACA,WAAA,KAAA,CAAA,OAAA;AACA;AAZA;AA1DA,CAAA","sourcesContent":["<template>\n  <div class=\"bulk-action__agents\">\n    <div class=\"triangle\" :style=\"cssVars\">\n      <svg height=\"12\" viewBox=\"0 0 24 12\" width=\"24\">\n        <path\n          d=\"M20 12l-8-8-12 12\"\n          fill=\"var(--white)\"\n          fill-rule=\"evenodd\"\n          stroke=\"var(--s-50)\"\n          stroke-width=\"1px\"\n        />\n      </svg>\n    </div>\n    <div class=\"header flex-between\">\n      <span>{{ $t('BULK_ACTION.AGENT_SELECT_LABEL') }}</span>\n      <woot-button\n        size=\"tiny\"\n        variant=\"clear\"\n        color-scheme=\"secondary\"\n        icon=\"dismiss\"\n        @click=\"onClose\"\n      />\n    </div>\n    <div class=\"container\">\n      <div\n        v-if=\"assignableAgentsUiFlags.isFetching\"\n        class=\"agent__list-loading\"\n      >\n        <spinner />\n        <p>{{ $t('BULK_ACTION.AGENT_LIST_LOADING') }}</p>\n      </div>\n      <div v-else class=\"agent__list-container\">\n        <ul v-if=\"!selectedAgent\">\n          <li class=\"search-container\">\n            <div class=\"agent-list-search flex-between\">\n              <fluent-icon icon=\"search\" class=\"search-icon\" size=\"16\" />\n              <input\n                ref=\"search\"\n                v-model=\"query\"\n                type=\"search\"\n                placeholder=\"Search\"\n                class=\"agent--search_input\"\n              />\n            </div>\n          </li>\n          <li v-for=\"agent in filteredAgents\" :key=\"agent.id\">\n            <div class=\"agent-list-item\" @click=\"assignAgent(agent)\">\n              <thumbnail\n                :src=\"agent.thumbnail\"\n                :status=\"agent.availability_status\"\n                :username=\"agent.name\"\n                size=\"22px\"\n                class=\"margin-right-small\"\n              />\n              <span class=\"reports-option__title\">{{ agent.name }}</span>\n            </div>\n          </li>\n        </ul>\n        <div v-else class=\"agent-confirmation-container\">\n          <p v-if=\"selectedAgent.id\">\n            {{\n              $t('BULK_ACTION.ASSIGN_CONFIRMATION_LABEL', {\n                conversationCount,\n                conversationLabel,\n              })\n            }}\n            <strong>\n              {{ selectedAgent.name }}\n            </strong>\n            <span>?</span>\n          </p>\n          <p v-else>\n            {{\n              $t('BULK_ACTION.UNASSIGN_CONFIRMATION_LABEL', {\n                conversationCount,\n                conversationLabel,\n              })\n            }}\n          </p>\n          <div class=\"agent-confirmation-actions\">\n            <woot-button\n              color-scheme=\"primary\"\n              variant=\"smooth\"\n              @click=\"goBack\"\n            >\n              {{ $t('BULK_ACTION.GO_BACK_LABEL') }}\n            </woot-button>\n            <woot-button\n              color-scheme=\"primary\"\n              variant=\"flat\"\n              :is-loading=\"uiFlags.isUpdating\"\n              @click=\"submit\"\n            >\n              {{ $t('BULK_ACTION.YES') }}\n            </woot-button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport Thumbnail from 'dashboard/components/widgets/Thumbnail.vue';\nimport Spinner from 'shared/components/Spinner';\nimport { mixin as clickaway } from 'vue-clickaway';\nimport bulkActionsMixin from 'dashboard/mixins/bulkActionsMixin.js';\n\nexport default {\n  components: {\n    Thumbnail,\n    Spinner,\n  },\n  mixins: [clickaway, bulkActionsMixin],\n  props: {\n    selectedInboxes: {\n      type: Array,\n      default: () => [],\n    },\n    conversationCount: {\n      type: Number,\n      default: 0,\n    },\n  },\n  data() {\n    return {\n      query: '',\n      selectedAgent: null,\n    };\n  },\n  computed: {\n    ...mapGetters({\n      uiFlags: 'bulkActions/getUIFlags',\n      inboxes: 'inboxes/getInboxes',\n      assignableAgentsUiFlags: 'inboxAssignableAgents/getUIFlags',\n    }),\n    filteredAgents() {\n      if (this.query) {\n        return this.assignableAgents.filter(agent =>\n          agent.name.toLowerCase().includes(this.query.toLowerCase())\n        );\n      }\n      return [\n        {\n          confirmed: true,\n          name: 'None',\n          id: null,\n          role: 'agent',\n          account_id: 0,\n          email: 'None',\n        },\n        ...this.assignableAgents,\n      ];\n    },\n    assignableAgents() {\n      return this.$store.getters['inboxAssignableAgents/getAssignableAgents'](\n        this.selectedInboxes.join(',')\n      );\n    },\n    conversationLabel() {\n      return this.conversationCount > 1 ? 'conversations' : 'conversation';\n    },\n  },\n  mounted() {\n    this.$store.dispatch('inboxAssignableAgents/fetch', this.selectedInboxes);\n  },\n  methods: {\n    submit() {\n      this.$emit('select', this.selectedAgent);\n    },\n    goBack() {\n      this.selectedAgent = null;\n    },\n    assignAgent(agent) {\n      this.selectedAgent = agent;\n    },\n    onClose() {\n      this.$emit('close');\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.bulk-action__agents {\n  background-color: var(--white);\n  border-radius: var(--border-radius-large);\n  border: 1px solid var(--s-50);\n  box-shadow: var(--shadow-dropdown-pane);\n  max-width: 75%;\n  position: absolute;\n  right: var(--space-small);\n  top: var(--space-larger);\n  transform-origin: top right;\n  width: auto;\n  z-index: var(--z-index-twenty);\n  min-width: var(--space-giga);\n  .header {\n    padding: var(--space-one);\n\n    span {\n      font-size: var(--font-size-small);\n      font-weight: var(--font-weight-medium);\n    }\n  }\n\n  .container {\n    max-height: var(--space-giga);\n    overflow-y: auto;\n    .agent__list-container {\n      height: 100%;\n    }\n    .agent-list-search {\n      padding: 0 var(--space-one);\n      border: 1px solid var(--s-100);\n      border-radius: var(--border-radius-medium);\n      background-color: var(--s-50);\n      .search-icon {\n        color: var(--s-400);\n      }\n\n      .agent--search_input {\n        border: 0;\n        font-size: var(--font-size-mini);\n        margin: 0;\n        background-color: transparent;\n        height: unset;\n      }\n    }\n  }\n  .triangle {\n    display: block;\n    z-index: var(--z-index-one);\n    position: absolute;\n    top: calc(var(--space-slab) * -1);\n    right: var(--triangle-position);\n    text-align: left;\n  }\n}\nul {\n  margin: 0;\n  list-style: none;\n}\n\n.agent-list-item {\n  display: flex;\n  align-items: center;\n  padding: var(--space-one);\n  cursor: pointer;\n  &:hover {\n    background-color: var(--s-50);\n  }\n  span {\n    font-size: var(--font-size-small);\n  }\n}\n\n.agent-confirmation-container {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  padding: var(--space-one);\n  p {\n    flex-grow: 1;\n  }\n  .agent-confirmation-actions {\n    width: 100%;\n    display: grid;\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n    gap: var(--space-one);\n  }\n}\n.search-container {\n  padding: 0 var(--space-one);\n  position: sticky;\n  top: 0;\n  z-index: var(--z-index-twenty);\n  background-color: var(--white);\n}\n\n.agent__list-loading {\n  height: calc(95% - var(--space-one));\n  margin: var(--space-one);\n  border-radius: var(--border-radius-medium);\n  background-color: var(--s-50);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  padding: var(--space-two);\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/components/widgets/conversation/conversationBulkActions"},"metadata":{},"sourceType":"module"}