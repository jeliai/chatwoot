{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { Analytics } from './analytics';\nimport { validation } from './plugins/validation';\nimport { analyticsNode } from './plugins/analytics-node';\nimport { EventQueue } from './core/queue/event-queue';\nimport { PriorityQueue } from './lib/priority-queue';\n\nvar AnalyticsNode =\n/** @class */\nfunction () {\n  function AnalyticsNode() {}\n\n  AnalyticsNode.load = function (settings) {\n    var _a, _b;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var cookieOptions, queue, options, analytics, nodeSettings, ctx;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            cookieOptions = {\n              persist: false\n            };\n            queue = new EventQueue(new PriorityQueue(3, []));\n            options = {\n              user: cookieOptions,\n              group: cookieOptions\n            };\n            analytics = new Analytics(settings, options, queue);\n            nodeSettings = {\n              writeKey: settings.writeKey,\n              apiHost: (_a = settings.apiHost) !== null && _a !== void 0 ? _a : \"api.june.so/sdk\",\n              httpScheme: (_b = settings.httpScheme) !== null && _b !== void 0 ? _b : \"https\",\n              name: 'analytics-node-next',\n              type: 'after',\n              version: 'latest'\n            };\n            return [4\n            /*yield*/\n            , analytics.register(validation, analyticsNode(nodeSettings))];\n\n          case 1:\n            ctx = _c.sent();\n            analytics.emit('initialize', settings, cookieOptions !== null && cookieOptions !== void 0 ? cookieOptions : {});\n            return [2\n            /*return*/\n            , [analytics, ctx]];\n        }\n      });\n    });\n  };\n\n  return AnalyticsNode;\n}();\n\nexport { AnalyticsNode };","map":null,"metadata":{},"sourceType":"module"}