{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport AddNote from './AddNote';\nimport ContactNote from './ContactNote';\nimport Spinner from 'shared/components/Spinner';\nexport default {\n  components: {\n    AddNote: AddNote,\n    ContactNote: ContactNote,\n    Spinner: Spinner\n  },\n  props: {\n    notes: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    isFetching: {\n      type: Boolean,\n      default: false\n    }\n  },\n  methods: {\n    onAddNote: function onAddNote(value) {\n      this.$emit('add', value);\n    },\n    onEditNote: function onEditNote(value) {\n      this.$emit('edit', value);\n    },\n    onDeleteNote: function onDeleteNote(value) {\n      this.$emit('delete', value);\n    }\n  }\n};","map":{"version":3,"sources":["NoteList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAyBA,OAAA,OAAA,MAAA,WAAA;AACA,OAAA,WAAA,MAAA,eAAA;AACA,OAAA,OAAA,MAAA,2BAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,OAAA,EAAA,OADA;AAEA,IAAA,WAAA,EAAA,WAFA;AAGA,IAAA,OAAA,EAAA;AAHA,GADA;AAOA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA,KADA;AAKA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AALA,GAPA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,qBACA,KADA,EACA;AACA,WAAA,KAAA,CAAA,KAAA,EAAA,KAAA;AACA,KAHA;AAIA,IAAA,UAJA,sBAIA,KAJA,EAIA;AACA,WAAA,KAAA,CAAA,MAAA,EAAA,KAAA;AACA,KANA;AAOA,IAAA,YAPA,wBAOA,KAPA,EAOA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,KAAA;AACA;AATA;AAlBA,CAAA","sourcesContent":["<template>\n  <div>\n    <add-note @add=\"onAddNote\" />\n    <contact-note\n      v-for=\"note in notes\"\n      :id=\"note.id\"\n      :key=\"note.id\"\n      :note=\"note.content\"\n      :user=\"note.user\"\n      :created-at=\"note.created_at\"\n      @edit=\"onEditNote\"\n      @delete=\"onDeleteNote\"\n    />\n\n    <div v-if=\"isFetching\" class=\"text-center p-normal fs-default\">\n      <spinner size=\"\" />\n      <span>{{ $t('NOTES.FETCHING_NOTES') }}</span>\n    </div>\n    <div v-else-if=\"!notes.length\" class=\"text-center p-normal fs-default\">\n      <span>{{ $t('NOTES.NOT_AVAILABLE') }}</span>\n    </div>\n  </div>\n</template>\n\n<script>\nimport AddNote from './AddNote';\nimport ContactNote from './ContactNote';\nimport Spinner from 'shared/components/Spinner';\n\nexport default {\n  components: {\n    AddNote,\n    ContactNote,\n    Spinner,\n  },\n\n  props: {\n    notes: {\n      type: Array,\n      default: () => [],\n    },\n    isFetching: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  methods: {\n    onAddNote(value) {\n      this.$emit('add', value);\n    },\n    onEditNote(value) {\n      this.$emit('edit', value);\n    },\n    onDeleteNote(value) {\n      this.$emit('delete', value);\n    },\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/dashboard/modules/notes/components"},"metadata":{},"sourceType":"module"}