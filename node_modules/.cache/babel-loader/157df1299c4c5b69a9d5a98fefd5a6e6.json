{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Page = void 0;\n\nvar inherits_1 = __importDefault(require(\"inherits\"));\n\nvar facade_1 = require(\"./facade\");\n\nvar track_1 = require(\"./track\");\n\nvar is_email_1 = __importDefault(require(\"./is-email\"));\n\nfunction Page(dictionary, opts) {\n  facade_1.Facade.call(this, dictionary, opts);\n}\n\nexports.Page = Page;\ninherits_1.default(Page, facade_1.Facade);\nvar p = Page.prototype;\n\np.action = function () {\n  return \"page\";\n};\n\np.type = p.action;\np.category = facade_1.Facade.field(\"category\");\np.name = facade_1.Facade.field(\"name\");\np.title = facade_1.Facade.proxy(\"properties.title\");\np.path = facade_1.Facade.proxy(\"properties.path\");\np.url = facade_1.Facade.proxy(\"properties.url\");\n\np.referrer = function () {\n  return this.proxy(\"context.referrer.url\") || this.proxy(\"context.page.referrer\") || this.proxy(\"properties.referrer\");\n};\n\np.properties = function (aliases) {\n  var props = this.field(\"properties\") || {};\n  var category = this.category();\n  var name = this.name();\n  aliases = aliases || {};\n  if (category) props.category = category;\n  if (name) props.name = name;\n\n  for (var alias in aliases) {\n    var value = this[alias] == null ? this.proxy(\"properties.\" + alias) : this[alias]();\n    if (value == null) continue;\n    props[aliases[alias]] = value;\n    if (alias !== aliases[alias]) delete props[alias];\n  }\n\n  return props;\n};\n\np.email = function () {\n  var email = this.proxy(\"context.traits.email\") || this.proxy(\"properties.email\");\n  if (email) return email;\n  var userId = this.userId();\n  if (is_email_1.default(userId)) return userId;\n};\n\np.fullName = function () {\n  var category = this.category();\n  var name = this.name();\n  return name && category ? category + \" \" + name : name;\n};\n\np.event = function (name) {\n  return name ? \"Viewed \" + name + \" Page\" : \"Loaded a Page\";\n};\n\np.track = function (name) {\n  var json = this.json();\n  json.event = this.event(name);\n  json.timestamp = this.timestamp();\n  json.properties = this.properties();\n  return new track_1.Track(json, this.opts);\n};","map":null,"metadata":{},"sourceType":"module"}