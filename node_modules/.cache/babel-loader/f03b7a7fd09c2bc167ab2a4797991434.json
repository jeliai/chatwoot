{"ast":null,"code":"var _mutations;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as MutationHelpers from 'shared/helpers/vuex/mutationHelpers';\nimport * as types from '../mutation-types';\nimport { INBOX_TYPES } from 'shared/mixins/inboxMixin';\nimport InboxesAPI from '../../api/inboxes';\nimport WebChannel from '../../api/channel/webChannel';\nimport FBChannel from '../../api/channel/fbChannel';\nimport TwilioChannel from '../../api/channel/twilioChannel';\nimport { throwErrorMessage } from '../utils/api';\nimport AnalyticsHelper, { ANALYTICS_EVENTS } from '../../helper/AnalyticsHelper';\n\nvar buildInboxData = function buildInboxData(inboxParams) {\n  var formData = new FormData();\n\n  var _inboxParams$channel = inboxParams.channel,\n      channel = _inboxParams$channel === void 0 ? {} : _inboxParams$channel,\n      inboxProperties = _objectWithoutProperties(inboxParams, [\"channel\"]);\n\n  Object.keys(inboxProperties).forEach(function (key) {\n    formData.append(key, inboxProperties[key]);\n  });\n\n  var selectedFeatureFlags = channel.selectedFeatureFlags,\n      channelParams = _objectWithoutProperties(channel, [\"selectedFeatureFlags\"]); // selectedFeatureFlags needs to be empty when creating a website channel\n\n\n  if (selectedFeatureFlags) {\n    if (selectedFeatureFlags.length) {\n      selectedFeatureFlags.forEach(function (featureFlag) {\n        formData.append(\"channel[selected_feature_flags][]\", featureFlag);\n      });\n    } else {\n      formData.append('channel[selected_feature_flags][]', '');\n    }\n  }\n\n  Object.keys(channelParams).forEach(function (key) {\n    formData.append(\"channel[\".concat(key, \"]\"), channel[key]);\n  });\n  return formData;\n};\n\nexport var state = {\n  records: [],\n  uiFlags: {\n    isFetching: false,\n    isFetchingItem: false,\n    isCreating: false,\n    isUpdating: false,\n    isDeleting: false,\n    isUpdatingIMAP: false,\n    isUpdatingSMTP: false\n  }\n};\nexport var getters = {\n  getInboxes: function getInboxes($state) {\n    return $state.records;\n  },\n  getWhatsAppTemplates: function getWhatsAppTemplates($state) {\n    return function (inboxId) {\n      var _$state$records$filte = $state.records.filter(function (record) {\n        return record.id === Number(inboxId);\n      }),\n          _$state$records$filte2 = _slicedToArray(_$state$records$filte, 1),\n          inbox = _$state$records$filte2[0];\n\n      var _ref = inbox || {},\n          whatsAppMessageTemplates = _ref.message_templates,\n          additionalAttributes = _ref.additional_attributes;\n\n      var _ref2 = additionalAttributes || {},\n          apiInboxMessageTemplates = _ref2.message_templates;\n\n      var messagesTemplates = whatsAppMessageTemplates || apiInboxMessageTemplates; // filtering out the whatsapp templates with media\n\n      if (messagesTemplates instanceof Array) {\n        return messagesTemplates.filter(function (template) {\n          return !template.components.some(function (i) {\n            return i.format === 'IMAGE' || i.format === 'VIDEO';\n          });\n        });\n      }\n\n      return [];\n    };\n  },\n  getNewConversationInboxes: function getNewConversationInboxes($state) {\n    return $state.records.filter(function (inbox) {\n      var channelType = inbox.channel_type,\n          _inbox$phone_number = inbox.phone_number,\n          phoneNumber = _inbox$phone_number === void 0 ? '' : _inbox$phone_number;\n      var isEmailChannel = channelType === INBOX_TYPES.EMAIL;\n      var isSmsChannel = channelType === INBOX_TYPES.TWILIO && phoneNumber.startsWith('whatsapp');\n      return isEmailChannel || isSmsChannel;\n    });\n  },\n  getInbox: function getInbox($state) {\n    return function (inboxId) {\n      var _$state$records$filte3 = $state.records.filter(function (record) {\n        return record.id === Number(inboxId);\n      }),\n          _$state$records$filte4 = _slicedToArray(_$state$records$filte3, 1),\n          inbox = _$state$records$filte4[0];\n\n      return inbox || {};\n    };\n  },\n  getUIFlags: function getUIFlags($state) {\n    return $state.uiFlags;\n  },\n  getWebsiteInboxes: function getWebsiteInboxes($state) {\n    return $state.records.filter(function (item) {\n      return item.channel_type === INBOX_TYPES.WEB;\n    });\n  },\n  getTwilioInboxes: function getTwilioInboxes($state) {\n    return $state.records.filter(function (item) {\n      return item.channel_type === INBOX_TYPES.TWILIO;\n    });\n  },\n  getSMSInboxes: function getSMSInboxes($state) {\n    return $state.records.filter(function (item) {\n      return item.channel_type === INBOX_TYPES.SMS || item.channel_type === INBOX_TYPES.TWILIO && item.medium === 'sms';\n    });\n  },\n  dialogFlowEnabledInboxes: function dialogFlowEnabledInboxes($state) {\n    return $state.records.filter(function (item) {\n      return item.channel_type !== INBOX_TYPES.EMAIL;\n    });\n  }\n};\n\nvar sendAnalyticsEvent = function sendAnalyticsEvent(channelType) {\n  AnalyticsHelper.track(ANALYTICS_EVENTS.ADDED_AN_INBOX, {\n    channelType: channelType\n  });\n};\n\nexport var actions = {\n  get: function () {\n    var _get = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref3) {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref3.commit;\n              commit(types.default.SET_INBOXES_UI_FLAG, {\n                isFetching: true\n              });\n              _context.prev = 2;\n              _context.next = 5;\n              return InboxesAPI.get();\n\n            case 5:\n              response = _context.sent;\n              commit(types.default.SET_INBOXES_UI_FLAG, {\n                isFetching: false\n              });\n              commit(types.default.SET_INBOXES, response.data.payload);\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](2);\n              commit(types.default.SET_INBOXES_UI_FLAG, {\n                isFetching: false\n              });\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 10]]);\n    }));\n\n    function get(_x) {\n      return _get.apply(this, arguments);\n    }\n\n    return get;\n  }(),\n  createChannel: function () {\n    var _createChannel = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref4, params) {\n      var commit, response, _params$channel, channel;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref4.commit;\n              _context2.prev = 1;\n              commit(types.default.SET_INBOXES_UI_FLAG, {\n                isCreating: true\n              });\n              _context2.next = 5;\n              return WebChannel.create(params);\n\n            case 5:\n              response = _context2.sent;\n              commit(types.default.ADD_INBOXES, response.data);\n              commit(types.default.SET_INBOXES_UI_FLAG, {\n                isCreating: false\n              });\n              _params$channel = params.channel, channel = _params$channel === void 0 ? {} : _params$channel;\n              sendAnalyticsEvent(channel.type);\n              return _context2.abrupt(\"return\", response.data);\n\n            case 13:\n              _context2.prev = 13;\n              _context2.t0 = _context2[\"catch\"](1);\n              commit(types.default.SET_INBOXES_UI_FLAG, {\n                isCreating: false\n              });\n              throw new Error(_context2.t0);\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 13]]);\n    }));\n\n    function createChannel(_x2, _x3) {\n      return _createChannel.apply(this, arguments);\n    }\n\n    return createChannel;\n  }(),\n  createWebsiteChannel: function () {\n    var _createWebsiteChannel = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(_ref5, params) {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref5.commit;\n              _context3.prev = 1;\n              commit(types.default.SET_INBOXES_UI_FLAG, {\n                isCreating: true\n              });\n              _context3.next = 5;\n              return WebChannel.create(buildInboxData(params));\n\n            case 5:\n              response = _context3.sent;\n              commit(types.default.ADD_INBOXES, response.data);\n              commit(types.default.SET_INBOXES_UI_FLAG, {\n                isCreating: false\n              });\n              sendAnalyticsEvent('website');\n              return _context3.abrupt(\"return\", response.data);\n\n            case 12:\n              _context3.prev = 12;\n              _context3.t0 = _context3[\"catch\"](1);\n              commit(types.default.SET_INBOXES_UI_FLAG, {\n                isCreating: false\n              });\n              return _context3.abrupt(\"return\", throwErrorMessage(_context3.t0));\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 12]]);\n    }));\n\n    function createWebsiteChannel(_x4, _x5) {\n      return _createWebsiteChannel.apply(this, arguments);\n    }\n\n    return createWebsiteChannel;\n  }(),\n  createTwilioChannel: function () {\n    var _createTwilioChannel = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(_ref6, params) {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref6.commit;\n              _context4.prev = 1;\n              commit(types.default.SET_INBOXES_UI_FLAG, {\n                isCreating: true\n              });\n              _context4.next = 5;\n              return TwilioChannel.create(params);\n\n            case 5:\n              response = _context4.sent;\n              commit(types.default.ADD_INBOXES, response.data);\n              commit(types.default.SET_INBOXES_UI_FLAG, {\n                isCreating: false\n              });\n              sendAnalyticsEvent('twilio');\n              return _context4.abrupt(\"return\", response.data);\n\n            case 12:\n              _context4.prev = 12;\n              _context4.t0 = _context4[\"catch\"](1);\n              commit(types.default.SET_INBOXES_UI_FLAG, {\n                isCreating: false\n              });\n              throw new Error(_context4.t0);\n\n            case 16:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[1, 12]]);\n    }));\n\n    function createTwilioChannel(_x6, _x7) {\n      return _createTwilioChannel.apply(this, arguments);\n    }\n\n    return createTwilioChannel;\n  }(),\n  createFBChannel: function () {\n    var _createFBChannel = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(_ref7, params) {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref7.commit;\n              _context5.prev = 1;\n              commit(types.default.SET_INBOXES_UI_FLAG, {\n                isCreating: true\n              });\n              _context5.next = 5;\n              return FBChannel.create(params);\n\n            case 5:\n              response = _context5.sent;\n              commit(types.default.ADD_INBOXES, response.data);\n              commit(types.default.SET_INBOXES_UI_FLAG, {\n                isCreating: false\n              });\n              sendAnalyticsEvent('facebook');\n              return _context5.abrupt(\"return\", response.data);\n\n            case 12:\n              _context5.prev = 12;\n              _context5.t0 = _context5[\"catch\"](1);\n              commit(types.default.SET_INBOXES_UI_FLAG, {\n                isCreating: false\n              });\n              throw new Error(_context5.t0);\n\n            case 16:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[1, 12]]);\n    }));\n\n    function createFBChannel(_x8, _x9) {\n      return _createFBChannel.apply(this, arguments);\n    }\n\n    return createFBChannel;\n  }(),\n  updateInbox: function () {\n    var _updateInbox = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(_ref8, _ref9) {\n      var commit, id, _ref9$formData, formData, inboxParams, response;\n\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              commit = _ref8.commit;\n              id = _ref9.id, _ref9$formData = _ref9.formData, formData = _ref9$formData === void 0 ? true : _ref9$formData, inboxParams = _objectWithoutProperties(_ref9, [\"id\", \"formData\"]);\n              commit(types.default.SET_INBOXES_UI_FLAG, {\n                isUpdating: true\n              });\n              _context6.prev = 3;\n              _context6.next = 6;\n              return InboxesAPI.update(id, formData ? buildInboxData(inboxParams) : inboxParams);\n\n            case 6:\n              response = _context6.sent;\n              commit(types.default.EDIT_INBOXES, response.data);\n              commit(types.default.SET_INBOXES_UI_FLAG, {\n                isUpdating: false\n              });\n              _context6.next = 15;\n              break;\n\n            case 11:\n              _context6.prev = 11;\n              _context6.t0 = _context6[\"catch\"](3);\n              commit(types.default.SET_INBOXES_UI_FLAG, {\n                isUpdating: false\n              });\n              throwErrorMessage(_context6.t0);\n\n            case 15:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[3, 11]]);\n    }));\n\n    function updateInbox(_x10, _x11) {\n      return _updateInbox.apply(this, arguments);\n    }\n\n    return updateInbox;\n  }(),\n  updateInboxIMAP: function () {\n    var _updateInboxIMAP = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(_ref10, _ref11) {\n      var commit, id, inboxParams, response;\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              commit = _ref10.commit;\n              id = _ref11.id, inboxParams = _objectWithoutProperties(_ref11, [\"id\"]);\n              commit(types.default.SET_INBOXES_UI_FLAG, {\n                isUpdatingIMAP: true\n              });\n              _context7.prev = 3;\n              _context7.next = 6;\n              return InboxesAPI.update(id, inboxParams);\n\n            case 6:\n              response = _context7.sent;\n              commit(types.default.EDIT_INBOXES, response.data);\n              commit(types.default.SET_INBOXES_UI_FLAG, {\n                isUpdatingIMAP: false\n              });\n              _context7.next = 15;\n              break;\n\n            case 11:\n              _context7.prev = 11;\n              _context7.t0 = _context7[\"catch\"](3);\n              commit(types.default.SET_INBOXES_UI_FLAG, {\n                isUpdatingIMAP: false\n              });\n              throwErrorMessage(_context7.t0);\n\n            case 15:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[3, 11]]);\n    }));\n\n    function updateInboxIMAP(_x12, _x13) {\n      return _updateInboxIMAP.apply(this, arguments);\n    }\n\n    return updateInboxIMAP;\n  }(),\n  updateInboxSMTP: function () {\n    var _updateInboxSMTP = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(_ref12, _ref13) {\n      var commit, id, inboxParams, response;\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              commit = _ref12.commit;\n              id = _ref13.id, inboxParams = _objectWithoutProperties(_ref13, [\"id\"]);\n              commit(types.default.SET_INBOXES_UI_FLAG, {\n                isUpdatingSMTP: true\n              });\n              _context8.prev = 3;\n              _context8.next = 6;\n              return InboxesAPI.update(id, inboxParams);\n\n            case 6:\n              response = _context8.sent;\n              commit(types.default.EDIT_INBOXES, response.data);\n              commit(types.default.SET_INBOXES_UI_FLAG, {\n                isUpdatingSMTP: false\n              });\n              _context8.next = 15;\n              break;\n\n            case 11:\n              _context8.prev = 11;\n              _context8.t0 = _context8[\"catch\"](3);\n              commit(types.default.SET_INBOXES_UI_FLAG, {\n                isUpdatingSMTP: false\n              });\n              throwErrorMessage(_context8.t0);\n\n            case 15:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[3, 11]]);\n    }));\n\n    function updateInboxSMTP(_x14, _x15) {\n      return _updateInboxSMTP.apply(this, arguments);\n    }\n\n    return updateInboxSMTP;\n  }(),\n  delete: function () {\n    var _delete2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(_ref14, inboxId) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              commit = _ref14.commit;\n              commit(types.default.SET_INBOXES_UI_FLAG, {\n                isDeleting: true\n              });\n              _context9.prev = 2;\n              _context9.next = 5;\n              return InboxesAPI.delete(inboxId);\n\n            case 5:\n              commit(types.default.DELETE_INBOXES, inboxId);\n              commit(types.default.SET_INBOXES_UI_FLAG, {\n                isDeleting: false\n              });\n              _context9.next = 13;\n              break;\n\n            case 9:\n              _context9.prev = 9;\n              _context9.t0 = _context9[\"catch\"](2);\n              commit(types.default.SET_INBOXES_UI_FLAG, {\n                isDeleting: false\n              });\n              throw new Error(_context9.t0);\n\n            case 13:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[2, 9]]);\n    }));\n\n    function _delete(_x16, _x17) {\n      return _delete2.apply(this, arguments);\n    }\n\n    return _delete;\n  }(),\n  reauthorizeFacebookPage: function () {\n    var _reauthorizeFacebookPage = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(_ref15, params) {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              commit = _ref15.commit;\n              _context10.prev = 1;\n              _context10.next = 4;\n              return FBChannel.reauthorizeFacebookPage(params);\n\n            case 4:\n              response = _context10.sent;\n              commit(types.default.EDIT_INBOXES, response.data);\n              _context10.next = 11;\n              break;\n\n            case 8:\n              _context10.prev = 8;\n              _context10.t0 = _context10[\"catch\"](1);\n              throw new Error(_context10.t0.message);\n\n            case 11:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[1, 8]]);\n    }));\n\n    function reauthorizeFacebookPage(_x18, _x19) {\n      return _reauthorizeFacebookPage.apply(this, arguments);\n    }\n\n    return reauthorizeFacebookPage;\n  }(),\n  deleteInboxAvatar: function () {\n    var _deleteInboxAvatar = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(_, inboxId) {\n      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.prev = 0;\n              _context11.next = 3;\n              return InboxesAPI.deleteInboxAvatar(inboxId);\n\n            case 3:\n              _context11.next = 8;\n              break;\n\n            case 5:\n              _context11.prev = 5;\n              _context11.t0 = _context11[\"catch\"](0);\n              throw new Error(_context11.t0);\n\n            case 8:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, null, [[0, 5]]);\n    }));\n\n    function deleteInboxAvatar(_x20, _x21) {\n      return _deleteInboxAvatar.apply(this, arguments);\n    }\n\n    return deleteInboxAvatar;\n  }()\n};\nexport var mutations = (_mutations = {}, _defineProperty(_mutations, types.default.SET_INBOXES_UI_FLAG, function ($state, uiFlag) {\n  $state.uiFlags = _objectSpread(_objectSpread({}, $state.uiFlags), uiFlag);\n}), _defineProperty(_mutations, types.default.SET_INBOXES, MutationHelpers.set), _defineProperty(_mutations, types.default.SET_INBOXES_ITEM, MutationHelpers.setSingleRecord), _defineProperty(_mutations, types.default.ADD_INBOXES, MutationHelpers.create), _defineProperty(_mutations, types.default.EDIT_INBOXES, MutationHelpers.update), _defineProperty(_mutations, types.default.DELETE_INBOXES, MutationHelpers.destroy), _mutations);\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/store/modules/inboxes.js"],"names":["MutationHelpers","types","INBOX_TYPES","InboxesAPI","WebChannel","FBChannel","TwilioChannel","throwErrorMessage","AnalyticsHelper","ANALYTICS_EVENTS","buildInboxData","inboxParams","formData","FormData","channel","inboxProperties","Object","keys","forEach","key","append","selectedFeatureFlags","channelParams","length","featureFlag","state","records","uiFlags","isFetching","isFetchingItem","isCreating","isUpdating","isDeleting","isUpdatingIMAP","isUpdatingSMTP","getters","getInboxes","$state","getWhatsAppTemplates","inboxId","filter","record","id","Number","inbox","whatsAppMessageTemplates","message_templates","additionalAttributes","additional_attributes","apiInboxMessageTemplates","messagesTemplates","Array","template","components","some","i","format","getNewConversationInboxes","channelType","channel_type","phone_number","phoneNumber","isEmailChannel","EMAIL","isSmsChannel","TWILIO","startsWith","getInbox","getUIFlags","getWebsiteInboxes","item","WEB","getTwilioInboxes","getSMSInboxes","SMS","medium","dialogFlowEnabledInboxes","sendAnalyticsEvent","track","ADDED_AN_INBOX","actions","get","commit","default","SET_INBOXES_UI_FLAG","response","SET_INBOXES","data","payload","createChannel","params","create","ADD_INBOXES","type","Error","createWebsiteChannel","createTwilioChannel","createFBChannel","updateInbox","update","EDIT_INBOXES","updateInboxIMAP","updateInboxSMTP","delete","DELETE_INBOXES","reauthorizeFacebookPage","message","deleteInboxAvatar","_","mutations","uiFlag","set","SET_INBOXES_ITEM","setSingleRecord","destroy","namespaced"],"mappings":"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","sourcesContent":["import * as MutationHelpers from 'shared/helpers/vuex/mutationHelpers';\nimport * as types from '../mutation-types';\nimport { INBOX_TYPES } from 'shared/mixins/inboxMixin';\nimport InboxesAPI from '../../api/inboxes';\nimport WebChannel from '../../api/channel/webChannel';\nimport FBChannel from '../../api/channel/fbChannel';\nimport TwilioChannel from '../../api/channel/twilioChannel';\nimport { throwErrorMessage } from '../utils/api';\nimport AnalyticsHelper, {\n  ANALYTICS_EVENTS,\n} from '../../helper/AnalyticsHelper';\n\nconst buildInboxData = inboxParams => {\n  const formData = new FormData();\n  const { channel = {}, ...inboxProperties } = inboxParams;\n  Object.keys(inboxProperties).forEach(key => {\n    formData.append(key, inboxProperties[key]);\n  });\n  const { selectedFeatureFlags, ...channelParams } = channel;\n  // selectedFeatureFlags needs to be empty when creating a website channel\n  if (selectedFeatureFlags) {\n    if (selectedFeatureFlags.length) {\n      selectedFeatureFlags.forEach(featureFlag => {\n        formData.append(`channel[selected_feature_flags][]`, featureFlag);\n      });\n    } else {\n      formData.append('channel[selected_feature_flags][]', '');\n    }\n  }\n  Object.keys(channelParams).forEach(key => {\n    formData.append(`channel[${key}]`, channel[key]);\n  });\n  return formData;\n};\n\nexport const state = {\n  records: [],\n  uiFlags: {\n    isFetching: false,\n    isFetchingItem: false,\n    isCreating: false,\n    isUpdating: false,\n    isDeleting: false,\n    isUpdatingIMAP: false,\n    isUpdatingSMTP: false,\n  },\n};\n\nexport const getters = {\n  getInboxes($state) {\n    return $state.records;\n  },\n  getWhatsAppTemplates: $state => inboxId => {\n    const [inbox] = $state.records.filter(\n      record => record.id === Number(inboxId)\n    );\n\n    const {\n      message_templates: whatsAppMessageTemplates,\n      additional_attributes: additionalAttributes,\n    } = inbox || {};\n\n    const { message_templates: apiInboxMessageTemplates } =\n      additionalAttributes || {};\n    const messagesTemplates =\n      whatsAppMessageTemplates || apiInboxMessageTemplates;\n\n    // filtering out the whatsapp templates with media\n    if (messagesTemplates instanceof Array) {\n      return messagesTemplates.filter(template => {\n        return !template.components.some(\n          i => i.format === 'IMAGE' || i.format === 'VIDEO'\n        );\n      });\n    }\n    return [];\n  },\n  getNewConversationInboxes($state) {\n    return $state.records.filter(inbox => {\n      const {\n        channel_type: channelType,\n        phone_number: phoneNumber = '',\n      } = inbox;\n\n      const isEmailChannel = channelType === INBOX_TYPES.EMAIL;\n      const isSmsChannel =\n        channelType === INBOX_TYPES.TWILIO &&\n        phoneNumber.startsWith('whatsapp');\n      return isEmailChannel || isSmsChannel;\n    });\n  },\n  getInbox: $state => inboxId => {\n    const [inbox] = $state.records.filter(\n      record => record.id === Number(inboxId)\n    );\n    return inbox || {};\n  },\n  getUIFlags($state) {\n    return $state.uiFlags;\n  },\n  getWebsiteInboxes($state) {\n    return $state.records.filter(item => item.channel_type === INBOX_TYPES.WEB);\n  },\n  getTwilioInboxes($state) {\n    return $state.records.filter(\n      item => item.channel_type === INBOX_TYPES.TWILIO\n    );\n  },\n  getSMSInboxes($state) {\n    return $state.records.filter(\n      item =>\n        item.channel_type === INBOX_TYPES.SMS ||\n        (item.channel_type === INBOX_TYPES.TWILIO && item.medium === 'sms')\n    );\n  },\n  dialogFlowEnabledInboxes($state) {\n    return $state.records.filter(\n      item => item.channel_type !== INBOX_TYPES.EMAIL\n    );\n  },\n};\n\nconst sendAnalyticsEvent = channelType => {\n  AnalyticsHelper.track(ANALYTICS_EVENTS.ADDED_AN_INBOX, {\n    channelType,\n  });\n};\n\nexport const actions = {\n  get: async ({ commit }) => {\n    commit(types.default.SET_INBOXES_UI_FLAG, { isFetching: true });\n    try {\n      const response = await InboxesAPI.get();\n      commit(types.default.SET_INBOXES_UI_FLAG, { isFetching: false });\n      commit(types.default.SET_INBOXES, response.data.payload);\n    } catch (error) {\n      commit(types.default.SET_INBOXES_UI_FLAG, { isFetching: false });\n    }\n  },\n  createChannel: async ({ commit }, params) => {\n    try {\n      commit(types.default.SET_INBOXES_UI_FLAG, { isCreating: true });\n      const response = await WebChannel.create(params);\n      commit(types.default.ADD_INBOXES, response.data);\n      commit(types.default.SET_INBOXES_UI_FLAG, { isCreating: false });\n      const { channel = {} } = params;\n      sendAnalyticsEvent(channel.type);\n      return response.data;\n    } catch (error) {\n      commit(types.default.SET_INBOXES_UI_FLAG, { isCreating: false });\n      throw new Error(error);\n    }\n  },\n  createWebsiteChannel: async ({ commit }, params) => {\n    try {\n      commit(types.default.SET_INBOXES_UI_FLAG, { isCreating: true });\n      const response = await WebChannel.create(buildInboxData(params));\n      commit(types.default.ADD_INBOXES, response.data);\n      commit(types.default.SET_INBOXES_UI_FLAG, { isCreating: false });\n      sendAnalyticsEvent('website');\n      return response.data;\n    } catch (error) {\n      commit(types.default.SET_INBOXES_UI_FLAG, { isCreating: false });\n      return throwErrorMessage(error);\n    }\n  },\n  createTwilioChannel: async ({ commit }, params) => {\n    try {\n      commit(types.default.SET_INBOXES_UI_FLAG, { isCreating: true });\n      const response = await TwilioChannel.create(params);\n      commit(types.default.ADD_INBOXES, response.data);\n      commit(types.default.SET_INBOXES_UI_FLAG, { isCreating: false });\n      sendAnalyticsEvent('twilio');\n      return response.data;\n    } catch (error) {\n      commit(types.default.SET_INBOXES_UI_FLAG, { isCreating: false });\n      throw new Error(error);\n    }\n  },\n  createFBChannel: async ({ commit }, params) => {\n    try {\n      commit(types.default.SET_INBOXES_UI_FLAG, { isCreating: true });\n      const response = await FBChannel.create(params);\n      commit(types.default.ADD_INBOXES, response.data);\n      commit(types.default.SET_INBOXES_UI_FLAG, { isCreating: false });\n      sendAnalyticsEvent('facebook');\n      return response.data;\n    } catch (error) {\n      commit(types.default.SET_INBOXES_UI_FLAG, { isCreating: false });\n      throw new Error(error);\n    }\n  },\n  updateInbox: async ({ commit }, { id, formData = true, ...inboxParams }) => {\n    commit(types.default.SET_INBOXES_UI_FLAG, { isUpdating: true });\n    try {\n      const response = await InboxesAPI.update(\n        id,\n        formData ? buildInboxData(inboxParams) : inboxParams\n      );\n      commit(types.default.EDIT_INBOXES, response.data);\n      commit(types.default.SET_INBOXES_UI_FLAG, { isUpdating: false });\n    } catch (error) {\n      commit(types.default.SET_INBOXES_UI_FLAG, { isUpdating: false });\n      throwErrorMessage(error);\n    }\n  },\n  updateInboxIMAP: async ({ commit }, { id, ...inboxParams }) => {\n    commit(types.default.SET_INBOXES_UI_FLAG, { isUpdatingIMAP: true });\n    try {\n      const response = await InboxesAPI.update(id, inboxParams);\n      commit(types.default.EDIT_INBOXES, response.data);\n      commit(types.default.SET_INBOXES_UI_FLAG, { isUpdatingIMAP: false });\n    } catch (error) {\n      commit(types.default.SET_INBOXES_UI_FLAG, { isUpdatingIMAP: false });\n      throwErrorMessage(error);\n    }\n  },\n  updateInboxSMTP: async ({ commit }, { id, ...inboxParams }) => {\n    commit(types.default.SET_INBOXES_UI_FLAG, { isUpdatingSMTP: true });\n    try {\n      const response = await InboxesAPI.update(id, inboxParams);\n      commit(types.default.EDIT_INBOXES, response.data);\n      commit(types.default.SET_INBOXES_UI_FLAG, { isUpdatingSMTP: false });\n    } catch (error) {\n      commit(types.default.SET_INBOXES_UI_FLAG, { isUpdatingSMTP: false });\n      throwErrorMessage(error);\n    }\n  },\n  delete: async ({ commit }, inboxId) => {\n    commit(types.default.SET_INBOXES_UI_FLAG, { isDeleting: true });\n    try {\n      await InboxesAPI.delete(inboxId);\n      commit(types.default.DELETE_INBOXES, inboxId);\n      commit(types.default.SET_INBOXES_UI_FLAG, { isDeleting: false });\n    } catch (error) {\n      commit(types.default.SET_INBOXES_UI_FLAG, { isDeleting: false });\n      throw new Error(error);\n    }\n  },\n  reauthorizeFacebookPage: async ({ commit }, params) => {\n    try {\n      const response = await FBChannel.reauthorizeFacebookPage(params);\n      commit(types.default.EDIT_INBOXES, response.data);\n    } catch (error) {\n      throw new Error(error.message);\n    }\n  },\n  deleteInboxAvatar: async (_, inboxId) => {\n    try {\n      await InboxesAPI.deleteInboxAvatar(inboxId);\n    } catch (error) {\n      throw new Error(error);\n    }\n  },\n};\n\nexport const mutations = {\n  [types.default.SET_INBOXES_UI_FLAG]($state, uiFlag) {\n    $state.uiFlags = { ...$state.uiFlags, ...uiFlag };\n  },\n  [types.default.SET_INBOXES]: MutationHelpers.set,\n  [types.default.SET_INBOXES_ITEM]: MutationHelpers.setSingleRecord,\n  [types.default.ADD_INBOXES]: MutationHelpers.create,\n  [types.default.EDIT_INBOXES]: MutationHelpers.update,\n  [types.default.DELETE_INBOXES]: MutationHelpers.destroy,\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations,\n};\n"]},"metadata":{},"sourceType":"module"}