{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.slice.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport 'ninja-keys';\nimport conversationHotKeysMixin from './conversationHotKeys';\nimport goToCommandHotKeys from './goToCommandHotKeys';\nimport agentMixin from 'dashboard/mixins/agentMixin';\nimport conversationLabelMixin from 'dashboard/mixins/conversation/labelMixin';\nimport conversationTeamMixin from 'dashboard/mixins/conversation/teamMixin';\nimport adminMixin from 'dashboard/mixins/isAdmin';\nexport default {\n  mixins: [adminMixin, agentMixin, conversationHotKeysMixin, conversationLabelMixin, conversationTeamMixin, goToCommandHotKeys],\n  data: function data() {\n    return {\n      placeholder: this.$t('COMMAND_BAR.SEARCH_PLACEHOLDER')\n    };\n  },\n  computed: {\n    accountId: function accountId() {\n      return this.$store.getters.getCurrentAccountId;\n    },\n    routeName: function routeName() {\n      return this.$route.name;\n    },\n    hotKeys: function hotKeys() {\n      return [].concat(_toConsumableArray(this.conversationHotKeys), _toConsumableArray(this.goToCommandHotKeys));\n    }\n  },\n  watch: {\n    routeName: function routeName() {\n      this.setCommandbarData();\n    }\n  },\n  mounted: function mounted() {\n    this.setCommandbarData();\n  },\n  methods: {\n    setCommandbarData: function setCommandbarData() {\n      this.$refs.ninjakeys.data = this.hotKeys;\n    }\n  }\n};","map":{"version":3,"sources":["commandbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYA,OAAA,YAAA;AACA,OAAA,wBAAA,MAAA,uBAAA;AACA,OAAA,kBAAA,MAAA,sBAAA;AACA,OAAA,UAAA,MAAA,6BAAA;AACA,OAAA,sBAAA,MAAA,0CAAA;AACA,OAAA,qBAAA,MAAA,yCAAA;AACA,OAAA,UAAA,MAAA,0BAAA;AAEA,eAAA;AACA,EAAA,MAAA,EAAA,CACA,UADA,EAEA,UAFA,EAGA,wBAHA,EAIA,sBAJA,EAKA,qBALA,EAMA,kBANA,CADA;AAUA,EAAA,IAVA,kBAUA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,KAAA,EAAA,CAAA,gCAAA;AADA,KAAA;AAGA,GAdA;AAeA,EAAA,QAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,mBAAA;AACA,KAHA;AAIA,IAAA,SAJA,uBAIA;AACA,aAAA,KAAA,MAAA,CAAA,IAAA;AACA,KANA;AAOA,IAAA,OAPA,qBAOA;AACA,0CAAA,KAAA,mBAAA,sBAAA,KAAA,kBAAA;AACA;AATA,GAfA;AA0BA,EAAA,KAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,WAAA,iBAAA;AACA;AAHA,GA1BA;AA+BA,EAAA,OA/BA,qBA+BA;AACA,SAAA,iBAAA;AACA,GAjCA;AAkCA,EAAA,OAAA,EAAA;AACA,IAAA,iBADA,+BACA;AACA,WAAA,KAAA,CAAA,SAAA,CAAA,IAAA,GAAA,KAAA,OAAA;AACA;AAHA;AAlCA,CAAA","sourcesContent":["<!-- eslint-disable vue/attribute-hyphenation -->\n<template>\n  <ninja-keys\n    ref=\"ninjakeys\"\n    :no-auto-load-md-icons=\"true\"\n    hideBreadcrumbs\n    :placeholder=\"placeholder\"\n    @selected=\"setCommandbarData\"\n  />\n</template>\n\n<script>\nimport 'ninja-keys';\nimport conversationHotKeysMixin from './conversationHotKeys';\nimport goToCommandHotKeys from './goToCommandHotKeys';\nimport agentMixin from 'dashboard/mixins/agentMixin';\nimport conversationLabelMixin from 'dashboard/mixins/conversation/labelMixin';\nimport conversationTeamMixin from 'dashboard/mixins/conversation/teamMixin';\nimport adminMixin from 'dashboard/mixins/isAdmin';\n\nexport default {\n  mixins: [\n    adminMixin,\n    agentMixin,\n    conversationHotKeysMixin,\n    conversationLabelMixin,\n    conversationTeamMixin,\n    goToCommandHotKeys,\n  ],\n\n  data() {\n    return {\n      placeholder: this.$t('COMMAND_BAR.SEARCH_PLACEHOLDER'),\n    };\n  },\n  computed: {\n    accountId() {\n      return this.$store.getters.getCurrentAccountId;\n    },\n    routeName() {\n      return this.$route.name;\n    },\n    hotKeys() {\n      return [...this.conversationHotKeys, ...this.goToCommandHotKeys];\n    },\n  },\n  watch: {\n    routeName() {\n      this.setCommandbarData();\n    },\n  },\n  mounted() {\n    this.setCommandbarData();\n  },\n  methods: {\n    setCommandbarData() {\n      this.$refs.ninjakeys.data = this.hotKeys;\n    },\n  },\n};\n</script>\n\n<style>\nninja-keys {\n  --ninja-accent-color: var(--w-500);\n  --ninja-font-family: 'Inter';\n  z-index: 9999;\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/commands"},"metadata":{},"sourceType":"module"}