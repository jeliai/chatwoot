{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport endPoints from 'widget/api/endPoints';\nimport { API } from 'widget/helpers/axios';\n\nvar createConversationAPI = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(content) {\n    var urlData;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            urlData = endPoints.createConversation(content);\n            return _context.abrupt(\"return\", API.post(urlData.url, urlData.params));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function createConversationAPI(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar sendMessageAPI = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(content) {\n    var urlData;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            urlData = endPoints.sendMessage(content);\n            return _context2.abrupt(\"return\", API.post(urlData.url, urlData.params));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function sendMessageAPI(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar sendAttachmentAPI = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(attachment) {\n    var urlData;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            urlData = endPoints.sendAttachment(attachment);\n            return _context3.abrupt(\"return\", API.post(urlData.url, urlData.params));\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function sendAttachmentAPI(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar getMessagesAPI = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(_ref4) {\n    var before, urlData;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            before = _ref4.before;\n            urlData = endPoints.getConversation({\n              before: before\n            });\n            return _context4.abrupt(\"return\", API.get(urlData.url, {\n              params: urlData.params\n            }));\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function getMessagesAPI(_x4) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nvar getConversationAPI = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            return _context5.abrupt(\"return\", API.get(\"/api/v1/widget/conversations\".concat(window.location.search)));\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function getConversationAPI() {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nvar toggleTyping = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(_ref7) {\n    var typingStatus;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            typingStatus = _ref7.typingStatus;\n            return _context6.abrupt(\"return\", API.post(\"/api/v1/widget/conversations/toggle_typing\".concat(window.location.search), {\n              typing_status: typingStatus\n            }));\n\n          case 2:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function toggleTyping(_x5) {\n    return _ref8.apply(this, arguments);\n  };\n}();\n\nvar setUserLastSeenAt = /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(_ref9) {\n    var lastSeen;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            lastSeen = _ref9.lastSeen;\n            return _context7.abrupt(\"return\", API.post(\"/api/v1/widget/conversations/update_last_seen\".concat(window.location.search), {\n              contact_last_seen_at: lastSeen\n            }));\n\n          case 2:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function setUserLastSeenAt(_x6) {\n    return _ref10.apply(this, arguments);\n  };\n}();\n\nvar sendEmailTranscript = /*#__PURE__*/function () {\n  var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(_ref11) {\n    var email;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            email = _ref11.email;\n            return _context8.abrupt(\"return\", API.post(\"/api/v1/widget/conversations/transcript\".concat(window.location.search), {\n              email: email\n            }));\n\n          case 2:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function sendEmailTranscript(_x7) {\n    return _ref12.apply(this, arguments);\n  };\n}();\n\nvar toggleStatus = /*#__PURE__*/function () {\n  var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            return _context9.abrupt(\"return\", API.get(\"/api/v1/widget/conversations/toggle_status\".concat(window.location.search)));\n\n          case 1:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n\n  return function toggleStatus() {\n    return _ref13.apply(this, arguments);\n  };\n}();\n\nexport { createConversationAPI, sendMessageAPI, getConversationAPI, getMessagesAPI, sendAttachmentAPI, toggleTyping, setUserLastSeenAt, sendEmailTranscript, toggleStatus };","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/widget/api/conversation.js"],"names":["endPoints","API","createConversationAPI","content","urlData","createConversation","post","url","params","sendMessageAPI","sendMessage","sendAttachmentAPI","attachment","sendAttachment","getMessagesAPI","before","getConversation","get","getConversationAPI","window","location","search","toggleTyping","typingStatus","typing_status","setUserLastSeenAt","lastSeen","contact_last_seen_at","sendEmailTranscript","email","toggleStatus"],"mappings":"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","sourcesContent":["import endPoints from 'widget/api/endPoints';\nimport { API } from 'widget/helpers/axios';\n\nconst createConversationAPI = async content => {\n  const urlData = endPoints.createConversation(content);\n  return API.post(urlData.url, urlData.params);\n};\n\nconst sendMessageAPI = async content => {\n  const urlData = endPoints.sendMessage(content);\n  return API.post(urlData.url, urlData.params);\n};\n\nconst sendAttachmentAPI = async attachment => {\n  const urlData = endPoints.sendAttachment(attachment);\n  return API.post(urlData.url, urlData.params);\n};\n\nconst getMessagesAPI = async ({ before }) => {\n  const urlData = endPoints.getConversation({ before });\n  return API.get(urlData.url, { params: urlData.params });\n};\n\nconst getConversationAPI = async () => {\n  return API.get(`/api/v1/widget/conversations${window.location.search}`);\n};\n\nconst toggleTyping = async ({ typingStatus }) => {\n  return API.post(\n    `/api/v1/widget/conversations/toggle_typing${window.location.search}`,\n    { typing_status: typingStatus }\n  );\n};\n\nconst setUserLastSeenAt = async ({ lastSeen }) => {\n  return API.post(\n    `/api/v1/widget/conversations/update_last_seen${window.location.search}`,\n    { contact_last_seen_at: lastSeen }\n  );\n};\nconst sendEmailTranscript = async ({ email }) => {\n  return API.post(\n    `/api/v1/widget/conversations/transcript${window.location.search}`,\n    { email }\n  );\n};\nconst toggleStatus = async () => {\n  return API.get(\n    `/api/v1/widget/conversations/toggle_status${window.location.search}`\n  );\n};\n\nexport {\n  createConversationAPI,\n  sendMessageAPI,\n  getConversationAPI,\n  getMessagesAPI,\n  sendAttachmentAPI,\n  toggleTyping,\n  setUserLastSeenAt,\n  sendEmailTranscript,\n  toggleStatus,\n};\n"]},"metadata":{},"sourceType":"module"}