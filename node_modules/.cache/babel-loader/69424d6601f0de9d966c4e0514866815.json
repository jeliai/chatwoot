{"ast":null,"code":"import \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\nimport alertMixin from 'shared/mixins/alertMixin';\nimport CsmlBotEditor from '../components/CSMLBotEditor.vue';\nimport { frontendURL } from '../../../../../helper/URLHelper';\nimport { mapGetters } from 'vuex';\nexport default {\n  components: {\n    CsmlBotEditor: CsmlBotEditor\n  },\n  mixins: [alertMixin],\n  computed: _objectSpread({}, mapGetters({\n    accountId: 'getCurrentAccountId'\n  })),\n  methods: {\n    saveBot: function saveBot(bot) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var agentBot;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _this.$store.dispatch('agentBots/create', {\n                  name: bot.name,\n                  description: bot.description,\n                  bot_type: 'csml',\n                  bot_config: {\n                    csml_content: bot.csmlContent\n                  }\n                });\n\n              case 3:\n                agentBot = _context.sent;\n\n                if (agentBot) {\n                  _this.$router.replace(frontendURL(\"accounts/\".concat(_this.accountId, \"/settings/agent-bots/csml/\").concat(agentBot.id)));\n                }\n\n                _this.showAlert(_this.$t('AGENT_BOTS.ADD.API.SUCCESS_MESSAGE'));\n\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n\n                _this.showAlert(_this.$t('AGENT_BOTS.ADD.API.ERROR_MESSAGE'));\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"sources":["New.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,OAAA,UAAA,MAAA,0BAAA;AACA,OAAA,aAAA,MAAA,iCAAA;AACA,SAAA,WAAA,QAAA,iCAAA;AACA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,aAAA,EAAA;AAAA,GADA;AAEA,EAAA,MAAA,EAAA,CAAA,UAAA,CAFA;AAGA,EAAA,QAAA,oBACA,UAAA,CAAA;AACA,IAAA,SAAA,EAAA;AADA,GAAA,CADA,CAHA;AAQA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,mBACA,GADA,EACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,kBAAA,EAAA;AACA,kBAAA,IAAA,EAAA,GAAA,CAAA,IADA;AAEA,kBAAA,WAAA,EAAA,GAAA,CAAA,WAFA;AAGA,kBAAA,QAAA,EAAA,MAHA;AAIA,kBAAA,UAAA,EAAA;AAAA,oBAAA,YAAA,EAAA,GAAA,CAAA;AAAA;AAJA,iBAAA,CAFA;;AAAA;AAEA,gBAAA,QAFA;;AAQA,oBAAA,QAAA,EAAA;AACA,kBAAA,KAAA,CAAA,OAAA,CAAA,OAAA,CACA,WAAA,oBACA,KAAA,CAAA,SADA,uCACA,QAAA,CAAA,EADA,EADA;AAKA;;AACA,gBAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,EAAA,CAAA,oCAAA,CAAA;;AAfA;AAAA;;AAAA;AAAA;AAAA;;AAiBA,gBAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,EAAA,CAAA,kCAAA,CAAA;;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;AApBA;AARA,CAAA","sourcesContent":["<template>\n  <csml-bot-editor :agent-bot=\"{ bot_config: {} }\" @submit=\"saveBot\" />\n</template>\n\n<script>\nimport alertMixin from 'shared/mixins/alertMixin';\nimport CsmlBotEditor from '../components/CSMLBotEditor.vue';\nimport { frontendURL } from '../../../../../helper/URLHelper';\nimport { mapGetters } from 'vuex';\n\nexport default {\n  components: { CsmlBotEditor },\n  mixins: [alertMixin],\n  computed: {\n    ...mapGetters({\n      accountId: 'getCurrentAccountId',\n    }),\n  },\n  methods: {\n    async saveBot(bot) {\n      try {\n        const agentBot = await this.$store.dispatch('agentBots/create', {\n          name: bot.name,\n          description: bot.description,\n          bot_type: 'csml',\n          bot_config: { csml_content: bot.csmlContent },\n        });\n        if (agentBot) {\n          this.$router.replace(\n            frontendURL(\n              `accounts/${this.accountId}/settings/agent-bots/csml/${agentBot.id}`\n            )\n          );\n        }\n        this.showAlert(this.$t('AGENT_BOTS.ADD.API.SUCCESS_MESSAGE'));\n      } catch (error) {\n        this.showAlert(this.$t('AGENT_BOTS.ADD.API.ERROR_MESSAGE'));\n      }\n    },\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/settings/agentBots/csml"},"metadata":{},"sourceType":"module"}