{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.filter.js\";\nexport default {\n  name: 'WootTabs',\n  props: {\n    index: {\n      type: Number,\n      default: 0\n    },\n    border: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      hasScroll: false\n    };\n  },\n  created: function created() {\n    window.addEventListener('resize', this.computeScrollWidth);\n  },\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('resize', this.computeScrollWidth);\n  },\n  mounted: function mounted() {\n    this.computeScrollWidth();\n  },\n  methods: {\n    computeScrollWidth: function computeScrollWidth() {\n      var tabElement = this.$el.getElementsByClassName('tabs')[0];\n      this.hasScroll = tabElement.scrollWidth > tabElement.clientWidth;\n    },\n    onScrollClick: function onScrollClick(direction) {\n      var tabElement = this.$el.getElementsByClassName('tabs')[0];\n      var scrollPosition = tabElement.scrollLeft;\n\n      if (direction === 'left') {\n        scrollPosition -= 100;\n      } else {\n        scrollPosition += 100;\n      }\n\n      tabElement.scrollTo({\n        top: 0,\n        left: scrollPosition,\n        behavior: 'smooth'\n      });\n    },\n    createScrollButton: function createScrollButton(createElement, direction) {\n      var _this = this;\n\n      if (!this.hasScroll) {\n        return false;\n      }\n\n      return createElement('button', {\n        class: 'tabs--scroll-button button clear secondary button--only-icon',\n        on: {\n          click: function click() {\n            return _this.onScrollClick(direction);\n          }\n        }\n      }, [createElement('fluent-icon', {\n        props: {\n          icon: \"chevron-\".concat(direction),\n          size: 16\n        }\n      })]);\n    }\n  },\n  render: function render(createElement) {\n    var h = arguments[0];\n    var Tabs = this.$slots.default.filter(function (node) {\n      return node.componentOptions && node.componentOptions.tag === 'woot-tabs-item';\n    }).map(function (node, index) {\n      var data = node.componentOptions.propsData;\n      data.index = index;\n      return node;\n    });\n    var leftButton = this.createScrollButton(createElement, 'left');\n    var rightButton = this.createScrollButton(createElement, 'right');\n    return h(\"div\", {\n      \"class\": {\n        'tabs--container--with-border': this.border,\n        'tabs--container': true\n      }\n    }, [leftButton, h(\"ul\", {\n      \"class\": {\n        tabs: true,\n        'tabs--with-scroll': this.hasScroll\n      }\n    }, [Tabs]), rightButton]);\n  }\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/components/ui/Tabs/Tabs.js"],"names":["name","props","index","type","Number","default","border","Boolean","data","hasScroll","created","window","addEventListener","computeScrollWidth","beforeDestroy","removeEventListener","mounted","methods","tabElement","$el","getElementsByClassName","scrollWidth","clientWidth","onScrollClick","direction","scrollPosition","scrollLeft","scrollTo","top","left","behavior","createScrollButton","createElement","class","on","click","icon","size","render","Tabs","$slots","filter","node","componentOptions","tag","map","propsData","leftButton","rightButton","tabs"],"mappings":"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","sourcesContent":["export default {\n  name: 'WootTabs',\n  props: {\n    index: {\n      type: Number,\n      default: 0,\n    },\n    border: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  data() {\n    return { hasScroll: false };\n  },\n  created() {\n    window.addEventListener('resize', this.computeScrollWidth);\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.computeScrollWidth);\n  },\n  mounted() {\n    this.computeScrollWidth();\n  },\n  methods: {\n    computeScrollWidth() {\n      const tabElement = this.$el.getElementsByClassName('tabs')[0];\n      this.hasScroll = tabElement.scrollWidth > tabElement.clientWidth;\n    },\n    onScrollClick(direction) {\n      const tabElement = this.$el.getElementsByClassName('tabs')[0];\n      let scrollPosition = tabElement.scrollLeft;\n      if (direction === 'left') {\n        scrollPosition -= 100;\n      } else {\n        scrollPosition += 100;\n      }\n      tabElement.scrollTo({\n        top: 0,\n        left: scrollPosition,\n        behavior: 'smooth',\n      });\n    },\n    createScrollButton(createElement, direction) {\n      if (!this.hasScroll) {\n        return false;\n      }\n      return createElement(\n        'button',\n        {\n          class: 'tabs--scroll-button button clear secondary button--only-icon',\n          on: { click: () => this.onScrollClick(direction) },\n        },\n        [\n          createElement('fluent-icon', {\n            props: { icon: `chevron-${direction}`, size: 16 },\n          }),\n        ]\n      );\n    },\n  },\n  render(createElement) {\n    const Tabs = this.$slots.default\n      .filter(\n        node =>\n          node.componentOptions &&\n          node.componentOptions.tag === 'woot-tabs-item'\n      )\n      .map((node, index) => {\n        const data = node.componentOptions.propsData;\n        data.index = index;\n        return node;\n      });\n    const leftButton = this.createScrollButton(createElement, 'left');\n    const rightButton = this.createScrollButton(createElement, 'right');\n    return (\n      <div\n        class={{\n          'tabs--container--with-border': this.border,\n          'tabs--container': true,\n        }}\n      >\n        {leftButton}\n        <ul class={{ tabs: true, 'tabs--with-scroll': this.hasScroll }}>\n          {Tabs}\n        </ul>\n        {rightButton}\n      </div>\n    );\n  },\n};\n"]},"metadata":{},"sourceType":"module"}