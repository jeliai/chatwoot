{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nimport \"regenerator-runtime/runtime.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.symbol.to-primitive.js\";\nimport \"core-js/modules/es.date.to-primitive.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CustomAttribute from 'dashboard/components/CustomAttribute.vue';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport attributeMixin from 'dashboard/mixins/attributeMixin';\nimport { copyTextToClipboard } from 'shared/helpers/clipboard';\nexport default {\n  components: {\n    CustomAttribute: CustomAttribute\n  },\n  mixins: [alertMixin, attributeMixin],\n  props: {\n    attributeType: {\n      type: String,\n      default: 'conversation_attribute'\n    },\n    attributeClass: {\n      type: String,\n      default: ''\n    },\n    contactId: {\n      type: Number,\n      default: null\n    }\n  },\n  methods: {\n    onUpdate: function onUpdate(key, value) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var updatedAttributes, _error$response, errorMessage;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                updatedAttributes = _objectSpread(_objectSpread({}, _this.customAttributes), {}, _defineProperty({}, key, value));\n                _context.prev = 1;\n\n                if (!(_this.attributeType === 'conversation_attribute')) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 5;\n                return _this.$store.dispatch('updateCustomAttributes', {\n                  conversationId: _this.conversationId,\n                  customAttributes: updatedAttributes\n                });\n\n              case 5:\n                _context.next = 8;\n                break;\n\n              case 7:\n                _this.$store.dispatch('contacts/update', {\n                  id: _this.contactId,\n                  custom_attributes: updatedAttributes\n                });\n\n              case 8:\n                _this.showAlert(_this.$t('CUSTOM_ATTRIBUTES.FORM.UPDATE.SUCCESS'));\n\n                _context.next = 15;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](1);\n                errorMessage = (_context.t0 === null || _context.t0 === void 0 ? void 0 : (_error$response = _context.t0.response) === null || _error$response === void 0 ? void 0 : _error$response.message) || _this.$t('CUSTOM_ATTRIBUTES.FORM.UPDATE.ERROR');\n\n                _this.showAlert(errorMessage);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 11]]);\n      }))();\n    },\n    onDelete: function onDelete(key) {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _this2$customAttribut, remove, updatedAttributes, _error$response2, errorMessage;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _this2$customAttribut = _this2.customAttributes, remove = _this2$customAttribut[key], updatedAttributes = _objectWithoutProperties(_this2$customAttribut, [key].map(_toPropertyKey));\n\n                if (!(_this2.attributeType === 'conversation_attribute')) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                _context2.next = 5;\n                return _this2.$store.dispatch('updateCustomAttributes', {\n                  conversationId: _this2.conversationId,\n                  customAttributes: updatedAttributes\n                });\n\n              case 5:\n                _context2.next = 8;\n                break;\n\n              case 7:\n                _this2.$store.dispatch('contacts/deleteCustomAttributes', {\n                  id: _this2.contactId,\n                  customAttributes: [key]\n                });\n\n              case 8:\n                _this2.showAlert(_this2.$t('CUSTOM_ATTRIBUTES.FORM.DELETE.SUCCESS'));\n\n                _context2.next = 15;\n                break;\n\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2[\"catch\"](0);\n                errorMessage = (_context2.t0 === null || _context2.t0 === void 0 ? void 0 : (_error$response2 = _context2.t0.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.message) || _this2.$t('CUSTOM_ATTRIBUTES.FORM.DELETE.ERROR');\n\n                _this2.showAlert(errorMessage);\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 11]]);\n      }))();\n    },\n    onCopy: function onCopy(attributeValue) {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return copyTextToClipboard(attributeValue);\n\n              case 2:\n                _this3.showAlert(_this3.$t('CUSTOM_ATTRIBUTES.COPY_SUCCESSFUL'));\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    }\n  }\n};","map":{"version":3,"sources":["CustomAttributes.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"custom-attributes--panel\">\n    <custom-attribute\n      v-for=\"attribute in filteredAttributes\"\n      :key=\"attribute.id\"\n      :attribute-key=\"attribute.attribute_key\"\n      :attribute-type=\"attribute.attribute_display_type\"\n      :values=\"attribute.attribute_values\"\n      :label=\"attribute.attribute_display_name\"\n      :icon=\"attribute.icon\"\n      emoji=\"\"\n      :value=\"attribute.value\"\n      :show-actions=\"true\"\n      :class=\"attributeClass\"\n      @update=\"onUpdate\"\n      @delete=\"onDelete\"\n      @copy=\"onCopy\"\n    />\n  </div>\n</template>\n\n<script>\nimport CustomAttribute from 'dashboard/components/CustomAttribute.vue';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport attributeMixin from 'dashboard/mixins/attributeMixin';\nimport { copyTextToClipboard } from 'shared/helpers/clipboard';\n\nexport default {\n  components: {\n    CustomAttribute,\n  },\n  mixins: [alertMixin, attributeMixin],\n  props: {\n    attributeType: {\n      type: String,\n      default: 'conversation_attribute',\n    },\n    attributeClass: {\n      type: String,\n      default: '',\n    },\n    contactId: { type: Number, default: null },\n  },\n  methods: {\n    async onUpdate(key, value) {\n      const updatedAttributes = { ...this.customAttributes, [key]: value };\n      try {\n        if (this.attributeType === 'conversation_attribute') {\n          await this.$store.dispatch('updateCustomAttributes', {\n            conversationId: this.conversationId,\n            customAttributes: updatedAttributes,\n          });\n        } else {\n          this.$store.dispatch('contacts/update', {\n            id: this.contactId,\n            custom_attributes: updatedAttributes,\n          });\n        }\n        this.showAlert(this.$t('CUSTOM_ATTRIBUTES.FORM.UPDATE.SUCCESS'));\n      } catch (error) {\n        const errorMessage =\n          error?.response?.message ||\n          this.$t('CUSTOM_ATTRIBUTES.FORM.UPDATE.ERROR');\n        this.showAlert(errorMessage);\n      }\n    },\n    async onDelete(key) {\n      try {\n        const { [key]: remove, ...updatedAttributes } = this.customAttributes;\n        if (this.attributeType === 'conversation_attribute') {\n          await this.$store.dispatch('updateCustomAttributes', {\n            conversationId: this.conversationId,\n            customAttributes: updatedAttributes,\n          });\n        } else {\n          this.$store.dispatch('contacts/deleteCustomAttributes', {\n            id: this.contactId,\n            customAttributes: [key],\n          });\n        }\n\n        this.showAlert(this.$t('CUSTOM_ATTRIBUTES.FORM.DELETE.SUCCESS'));\n      } catch (error) {\n        const errorMessage =\n          error?.response?.message ||\n          this.$t('CUSTOM_ATTRIBUTES.FORM.DELETE.ERROR');\n        this.showAlert(errorMessage);\n      }\n    },\n    async onCopy(attributeValue) {\n      await copyTextToClipboard(attributeValue);\n      this.showAlert(this.$t('CUSTOM_ATTRIBUTES.COPY_SUCCESSFUL'));\n    },\n  },\n};\n</script>\n<style scoped lang=\"scss\">\n.custom-attributes--panel {\n  .conversation--attribute {\n    border-bottom: 1px solid var(--color-border-light);\n  }\n\n  &.odd {\n    .conversation--attribute {\n      &:nth-child(2n + 1) {\n        background: var(--s-25);\n      }\n    }\n  }\n\n  &.even {\n    .conversation--attribute {\n      &:nth-child(2n) {\n        background: var(--s-25);\n      }\n    }\n  }\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/conversation/customAttributes"},"metadata":{},"sourceType":"module"}