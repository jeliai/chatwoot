{"ast":null,"code":"import \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mixin as clickaway } from 'vue-clickaway';\nimport ContactInfoRow from './ContactInfoRow';\nimport Thumbnail from 'dashboard/components/widgets/Thumbnail.vue';\nimport SocialIcons from './SocialIcons';\nimport EditContact from './EditContact';\nimport NewConversation from './NewConversation';\nimport ContactMergeModal from 'dashboard/modules/contact/ContactMergeModal';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport adminMixin from '../../../../mixins/isAdmin';\nimport { mapGetters } from 'vuex';\nimport { getCountryFlag } from 'dashboard/helper/flag';\nexport default {\n  components: {\n    ContactInfoRow: ContactInfoRow,\n    EditContact: EditContact,\n    Thumbnail: Thumbnail,\n    SocialIcons: SocialIcons,\n    NewConversation: NewConversation,\n    ContactMergeModal: ContactMergeModal\n  },\n  mixins: [alertMixin, adminMixin, clickaway],\n  props: {\n    contact: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    channelType: {\n      type: String,\n      default: ''\n    },\n    showAvatar: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      showEditModal: false,\n      showConversationModal: false,\n      showMergeModal: false,\n      showDeleteModal: false\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    uiFlags: 'contacts/getUIFlags'\n  })), {}, {\n    contactProfileLink: function contactProfileLink() {\n      return \"/app/accounts/\".concat(this.$route.params.accountId, \"/contacts/\").concat(this.contact.id);\n    },\n    additionalAttributes: function additionalAttributes() {\n      return this.contact.additional_attributes || {};\n    },\n    location: function location() {\n      var _this$additionalAttri = this.additionalAttributes,\n          _this$additionalAttri2 = _this$additionalAttri.country,\n          country = _this$additionalAttri2 === void 0 ? '' : _this$additionalAttri2,\n          _this$additionalAttri3 = _this$additionalAttri.city,\n          city = _this$additionalAttri3 === void 0 ? '' : _this$additionalAttri3,\n          countryCode = _this$additionalAttri.country_code;\n      var cityAndCountry = [city, country].filter(function (item) {\n        return !!item;\n      }).join(', ');\n\n      if (!cityAndCountry) {\n        return '';\n      }\n\n      return this.findCountryFlag(countryCode, cityAndCountry);\n    },\n    socialProfiles: function socialProfiles() {\n      var _this$additionalAttri4 = this.additionalAttributes,\n          socialProfiles = _this$additionalAttri4.social_profiles,\n          twitterScreenName = _this$additionalAttri4.screen_name;\n      return _objectSpread({\n        twitter: twitterScreenName\n      }, socialProfiles || {});\n    },\n    // Delete Modal\n    confirmDeleteMessage: function confirmDeleteMessage() {\n      return \" \".concat(this.contact.name, \"?\");\n    }\n  }),\n  methods: {\n    toggleMergeModal: function toggleMergeModal() {\n      this.showMergeModal = !this.showMergeModal;\n    },\n    toggleEditModal: function toggleEditModal() {\n      this.showEditModal = !this.showEditModal;\n    },\n    toggleConversationModal: function toggleConversationModal() {\n      this.showConversationModal = !this.showConversationModal;\n    },\n    toggleDeleteModal: function toggleDeleteModal() {\n      this.showDeleteModal = !this.showDeleteModal;\n    },\n    confirmDeletion: function confirmDeletion() {\n      this.deleteContact(this.contact);\n      this.closeDelete();\n    },\n    closeDelete: function closeDelete() {\n      this.showDeleteModal = false;\n      this.showConversationModal = false;\n      this.showEditModal = false;\n    },\n    findCountryFlag: function findCountryFlag(countryCode, cityAndCountry) {\n      try {\n        var countryFlag = countryCode ? getCountryFlag(countryCode) : '🌎';\n        return \"\".concat(cityAndCountry, \" \").concat(countryFlag);\n      } catch (error) {\n        return '';\n      }\n    },\n    deleteContact: function deleteContact(_ref) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var id;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                id = _ref.id;\n                _context.prev = 1;\n                _context.next = 4;\n                return _this.$store.dispatch('contacts/delete', id);\n\n              case 4:\n                _this.$emit('panel-close');\n\n                _this.showAlert(_this.$t('DELETE_CONTACT.API.SUCCESS_MESSAGE'));\n\n                if (_this.$route.name !== 'contacts_dashboard') {\n                  _this.$router.push({\n                    name: 'contacts_dashboard'\n                  });\n                }\n\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](1);\n\n                _this.showAlert(_context.t0.message ? _context.t0.message : _this.$t('DELETE_CONTACT.API.ERROR_MESSAGE'));\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 9]]);\n      }))();\n    },\n    openMergeModal: function openMergeModal() {\n      this.toggleMergeModal();\n    }\n  }\n};","map":{"version":3,"sources":["ContactInfo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"contact--profile\">\n    <div class=\"contact--info\">\n      <thumbnail\n        v-if=\"showAvatar\"\n        :src=\"contact.thumbnail\"\n        size=\"56px\"\n        :username=\"contact.name\"\n        :status=\"contact.availability_status\"\n      />\n\n      <div class=\"contact--details\">\n        <div v-if=\"showAvatar\" class=\"contact--name-wrap\">\n          <h3 class=\"sub-block-title contact--name\">\n            {{ contact.name }}\n          </h3>\n          <a\n            :href=\"contactProfileLink\"\n            class=\"fs-default\"\n            target=\"_blank\"\n            rel=\"noopener nofollow noreferrer\"\n          >\n            <woot-button\n              size=\"tiny\"\n              icon=\"open\"\n              variant=\"clear\"\n              color-scheme=\"secondary\"\n            />\n          </a>\n        </div>\n        <p v-if=\"additionalAttributes.description\" class=\"contact--bio\">\n          {{ additionalAttributes.description }}\n        </p>\n        <social-icons :social-profiles=\"socialProfiles\" />\n        <div class=\"contact--metadata\">\n          <contact-info-row\n            :href=\"contact.email ? `mailto:${contact.email}` : ''\"\n            :value=\"contact.email\"\n            icon=\"mail\"\n            emoji=\"✉️\"\n            :title=\"$t('CONTACT_PANEL.EMAIL_ADDRESS')\"\n            show-copy\n          />\n          <contact-info-row\n            :href=\"contact.phone_number ? `tel:${contact.phone_number}` : ''\"\n            :value=\"contact.phone_number\"\n            icon=\"call\"\n            emoji=\"📞\"\n            :title=\"$t('CONTACT_PANEL.PHONE_NUMBER')\"\n          />\n          <contact-info-row\n            v-if=\"contact.identifier\"\n            :value=\"contact.identifier\"\n            icon=\"contact-identify\"\n            emoji=\"🪪\"\n            :title=\"$t('CONTACT_PANEL.IDENTIFIER')\"\n          />\n          <contact-info-row\n            :value=\"additionalAttributes.company_name\"\n            icon=\"building-bank\"\n            emoji=\"🏢\"\n            :title=\"$t('CONTACT_PANEL.COMPANY')\"\n          />\n          <contact-info-row\n            v-if=\"location || additionalAttributes.location\"\n            :value=\"location || additionalAttributes.location\"\n            icon=\"map\"\n            emoji=\"🌍\"\n            :title=\"$t('CONTACT_PANEL.LOCATION')\"\n          />\n        </div>\n      </div>\n      <div class=\"contact-actions\">\n        <woot-button\n          v-tooltip=\"$t('CONTACT_PANEL.NEW_MESSAGE')\"\n          title=\"$t('CONTACT_PANEL.NEW_MESSAGE')\"\n          class=\"new-message\"\n          icon=\"chat\"\n          size=\"small\"\n          @click=\"toggleConversationModal\"\n        />\n        <woot-button\n          v-tooltip=\"$t('EDIT_CONTACT.BUTTON_LABEL')\"\n          title=\"$t('EDIT_CONTACT.BUTTON_LABEL')\"\n          class=\"edit-contact\"\n          icon=\"edit\"\n          variant=\"smooth\"\n          size=\"small\"\n          @click=\"toggleEditModal\"\n        />\n        <woot-button\n          v-if=\"isAdmin\"\n          v-tooltip=\"$t('CONTACT_PANEL.MERGE_CONTACT')\"\n          title=\"$t('CONTACT_PANEL.MERGE_CONTACT')\"\n          class=\"merge-contact\"\n          icon=\"merge\"\n          variant=\"smooth\"\n          size=\"small\"\n          color-scheme=\"secondary\"\n          :disabled=\"uiFlags.isMerging\"\n          @click=\"openMergeModal\"\n        />\n        <woot-button\n          v-if=\"isAdmin\"\n          v-tooltip=\"$t('DELETE_CONTACT.BUTTON_LABEL')\"\n          title=\"$t('DELETE_CONTACT.BUTTON_LABEL')\"\n          class=\"delete-contact\"\n          icon=\"delete\"\n          variant=\"smooth\"\n          size=\"small\"\n          color-scheme=\"alert\"\n          :disabled=\"uiFlags.isDeleting\"\n          @click=\"toggleDeleteModal\"\n        />\n      </div>\n      <edit-contact\n        v-if=\"showEditModal\"\n        :show=\"showEditModal\"\n        :contact=\"contact\"\n        @cancel=\"toggleEditModal\"\n      />\n      <new-conversation\n        v-if=\"contact.id\"\n        :show=\"showConversationModal\"\n        :contact=\"contact\"\n        @cancel=\"toggleConversationModal\"\n      />\n      <contact-merge-modal\n        v-if=\"showMergeModal\"\n        :primary-contact=\"contact\"\n        :show=\"showMergeModal\"\n        @close=\"toggleMergeModal\"\n      />\n    </div>\n    <woot-delete-modal\n      v-if=\"showDeleteModal\"\n      :show.sync=\"showDeleteModal\"\n      :on-close=\"closeDelete\"\n      :on-confirm=\"confirmDeletion\"\n      :title=\"$t('DELETE_CONTACT.CONFIRM.TITLE')\"\n      :message=\"$t('DELETE_CONTACT.CONFIRM.MESSAGE')\"\n      :message-value=\"confirmDeleteMessage\"\n      :confirm-text=\"$t('DELETE_CONTACT.CONFIRM.YES')\"\n      :reject-text=\"$t('DELETE_CONTACT.CONFIRM.NO')\"\n    />\n  </div>\n</template>\n<script>\nimport { mixin as clickaway } from 'vue-clickaway';\n\nimport ContactInfoRow from './ContactInfoRow';\nimport Thumbnail from 'dashboard/components/widgets/Thumbnail.vue';\nimport SocialIcons from './SocialIcons';\n\nimport EditContact from './EditContact';\nimport NewConversation from './NewConversation';\nimport ContactMergeModal from 'dashboard/modules/contact/ContactMergeModal';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport adminMixin from '../../../../mixins/isAdmin';\nimport { mapGetters } from 'vuex';\nimport { getCountryFlag } from 'dashboard/helper/flag';\n\nexport default {\n  components: {\n    ContactInfoRow,\n    EditContact,\n    Thumbnail,\n    SocialIcons,\n    NewConversation,\n    ContactMergeModal,\n  },\n  mixins: [alertMixin, adminMixin, clickaway],\n  props: {\n    contact: {\n      type: Object,\n      default: () => ({}),\n    },\n    channelType: {\n      type: String,\n      default: '',\n    },\n    showAvatar: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  data() {\n    return {\n      showEditModal: false,\n      showConversationModal: false,\n      showMergeModal: false,\n      showDeleteModal: false,\n    };\n  },\n  computed: {\n    ...mapGetters({ uiFlags: 'contacts/getUIFlags' }),\n    contactProfileLink() {\n      return `/app/accounts/${this.$route.params.accountId}/contacts/${this.contact.id}`;\n    },\n    additionalAttributes() {\n      return this.contact.additional_attributes || {};\n    },\n    location() {\n      const {\n        country = '',\n        city = '',\n        country_code: countryCode,\n      } = this.additionalAttributes;\n      const cityAndCountry = [city, country].filter(item => !!item).join(', ');\n\n      if (!cityAndCountry) {\n        return '';\n      }\n      return this.findCountryFlag(countryCode, cityAndCountry);\n    },\n    socialProfiles() {\n      const {\n        social_profiles: socialProfiles,\n        screen_name: twitterScreenName,\n      } = this.additionalAttributes;\n\n      return { twitter: twitterScreenName, ...(socialProfiles || {}) };\n    },\n    // Delete Modal\n    confirmDeleteMessage() {\n      return ` ${this.contact.name}?`;\n    },\n  },\n  methods: {\n    toggleMergeModal() {\n      this.showMergeModal = !this.showMergeModal;\n    },\n    toggleEditModal() {\n      this.showEditModal = !this.showEditModal;\n    },\n    toggleConversationModal() {\n      this.showConversationModal = !this.showConversationModal;\n    },\n    toggleDeleteModal() {\n      this.showDeleteModal = !this.showDeleteModal;\n    },\n    confirmDeletion() {\n      this.deleteContact(this.contact);\n      this.closeDelete();\n    },\n    closeDelete() {\n      this.showDeleteModal = false;\n      this.showConversationModal = false;\n      this.showEditModal = false;\n    },\n    findCountryFlag(countryCode, cityAndCountry) {\n      try {\n        const countryFlag = countryCode ? getCountryFlag(countryCode) : '🌎';\n        return `${cityAndCountry} ${countryFlag}`;\n      } catch (error) {\n        return '';\n      }\n    },\n    async deleteContact({ id }) {\n      try {\n        await this.$store.dispatch('contacts/delete', id);\n        this.$emit('panel-close');\n        this.showAlert(this.$t('DELETE_CONTACT.API.SUCCESS_MESSAGE'));\n        if (this.$route.name !== 'contacts_dashboard') {\n          this.$router.push({ name: 'contacts_dashboard' });\n        }\n      } catch (error) {\n        this.showAlert(\n          error.message\n            ? error.message\n            : this.$t('DELETE_CONTACT.API.ERROR_MESSAGE')\n        );\n      }\n    },\n    openMergeModal() {\n      this.toggleMergeModal();\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.contact--profile {\n  position: relative;\n  align-items: flex-start;\n  padding: var(--space-normal);\n\n  .user-thumbnail-box {\n    margin-right: var(--space-normal);\n  }\n}\n\n.contact--details {\n  margin-top: var(--space-small);\n  width: 100%;\n}\n\n.contact--info {\n  text-align: left;\n}\n\n.contact--name-wrap {\n  display: flex;\n  align-items: center;\n  margin-bottom: var(--space-small);\n}\n\n.contact--name {\n  text-transform: capitalize;\n  white-space: normal;\n  margin: 0 var(--space-smaller) 0 0;\n\n  a {\n    color: var(--color-body);\n  }\n}\n\n.contact--metadata {\n  margin-bottom: var(--space-slab);\n}\n\n.contact-actions {\n  margin-top: var(--space-small);\n}\n\n.contact-actions {\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  .new-message,\n  .edit-contact,\n  .merge-contact,\n  .delete-contact {\n    margin-right: var(--space-small);\n  }\n}\n.merege-summary--card {\n  padding: var(--space-normal);\n}\n.contact--bio {\n  word-wrap: break-word;\n}\n\n.button--contact-menu {\n  position: absolute;\n  right: var(--space-normal);\n  top: 0;\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/conversation/contact"},"metadata":{},"sourceType":"module"}