{"ast":null,"code":"var _mutations;\n\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport types from '../mutation-types';\nimport Vue from 'vue';\nimport ContactNotesAPI from '../../api/contactNotes';\nexport var state = {\n  records: {},\n  uiFlags: {\n    isFetching: false,\n    isCreating: false,\n    isDeleting: false\n  }\n};\nexport var getters = {\n  getAllNotesByContact: function getAllNotesByContact(_state) {\n    return function (contactId) {\n      var records = _state.records[contactId] || [];\n      return records.sort(function (r1, r2) {\n        return r2.id - r1.id;\n      });\n    };\n  },\n  getUIFlags: function getUIFlags(_state) {\n    return _state.uiFlags;\n  }\n};\nexport var actions = {\n  get: function get(_ref, _ref2) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, contactId, _yield$ContactNotesAP, data;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              contactId = _ref2.contactId;\n              commit(types.SET_CONTACT_NOTES_UI_FLAG, {\n                isFetching: true\n              });\n              _context.prev = 3;\n              _context.next = 6;\n              return ContactNotesAPI.get(contactId);\n\n            case 6:\n              _yield$ContactNotesAP = _context.sent;\n              data = _yield$ContactNotesAP.data;\n              commit(types.SET_CONTACT_NOTES, {\n                contactId: contactId,\n                data: data\n              });\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](3);\n              throw new Error(_context.t0);\n\n            case 14:\n              _context.prev = 14;\n              commit(types.SET_CONTACT_NOTES_UI_FLAG, {\n                isFetching: false\n              });\n              return _context.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 11, 14, 17]]);\n    }))();\n  },\n  create: function create(_ref3, _ref4) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var commit, contactId, content, _yield$ContactNotesAP2, data;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref3.commit;\n              contactId = _ref4.contactId, content = _ref4.content;\n              commit(types.SET_CONTACT_NOTES_UI_FLAG, {\n                isCreating: true\n              });\n              _context2.prev = 3;\n              _context2.next = 6;\n              return ContactNotesAPI.create(contactId, content);\n\n            case 6:\n              _yield$ContactNotesAP2 = _context2.sent;\n              data = _yield$ContactNotesAP2.data;\n              commit(types.ADD_CONTACT_NOTE, {\n                contactId: contactId,\n                data: data\n              });\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](3);\n              throw new Error(_context2.t0);\n\n            case 14:\n              _context2.prev = 14;\n              commit(types.SET_CONTACT_NOTES_UI_FLAG, {\n                isCreating: false\n              });\n              return _context2.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[3, 11, 14, 17]]);\n    }))();\n  },\n  delete: function _delete(_ref5, _ref6) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var commit, noteId, contactId;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref5.commit;\n              noteId = _ref6.noteId, contactId = _ref6.contactId;\n              commit(types.SET_CONTACT_NOTES_UI_FLAG, {\n                isDeleting: true\n              });\n              _context3.prev = 3;\n              _context3.next = 6;\n              return ContactNotesAPI.delete(contactId, noteId);\n\n            case 6:\n              commit(types.DELETE_CONTACT_NOTE, {\n                contactId: contactId,\n                noteId: noteId\n              });\n              _context3.next = 12;\n              break;\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](3);\n              throw new Error(_context3.t0);\n\n            case 12:\n              _context3.prev = 12;\n              commit(types.SET_CONTACT_NOTES_UI_FLAG, {\n                isDeleting: false\n              });\n              return _context3.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[3, 9, 12, 15]]);\n    }))();\n  }\n};\nexport var mutations = (_mutations = {}, _defineProperty(_mutations, types.SET_CONTACT_NOTES_UI_FLAG, function (_state, data) {\n  _state.uiFlags = _objectSpread(_objectSpread({}, _state.uiFlags), data);\n}), _defineProperty(_mutations, types.SET_CONTACT_NOTES, function ($state, _ref7) {\n  var data = _ref7.data,\n      contactId = _ref7.contactId;\n  Vue.set($state.records, contactId, data);\n}), _defineProperty(_mutations, types.ADD_CONTACT_NOTE, function ($state, _ref8) {\n  var data = _ref8.data,\n      contactId = _ref8.contactId;\n  var contactNotes = $state.records[contactId] || [];\n  $state.records[contactId] = [].concat(_toConsumableArray(contactNotes), [data]);\n}), _defineProperty(_mutations, types.DELETE_CONTACT_NOTE, function ($state, _ref9) {\n  var noteId = _ref9.noteId,\n      contactId = _ref9.contactId;\n  var contactNotes = $state.records[contactId];\n  var withoutDeletedNote = contactNotes.filter(function (note) {\n    return note.id !== noteId;\n  });\n  $state.records[contactId] = _toConsumableArray(withoutDeletedNote);\n}), _mutations);\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/store/modules/contactNotes.js"],"names":["types","Vue","ContactNotesAPI","state","records","uiFlags","isFetching","isCreating","isDeleting","getters","getAllNotesByContact","_state","contactId","sort","r1","r2","id","getUIFlags","actions","get","commit","SET_CONTACT_NOTES_UI_FLAG","data","SET_CONTACT_NOTES","Error","create","content","ADD_CONTACT_NOTE","delete","noteId","DELETE_CONTACT_NOTE","mutations","$state","set","contactNotes","withoutDeletedNote","filter","note","namespaced"],"mappings":"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","sourcesContent":["import types from '../mutation-types';\nimport Vue from 'vue';\nimport ContactNotesAPI from '../../api/contactNotes';\n\nexport const state = {\n  records: {},\n  uiFlags: {\n    isFetching: false,\n    isCreating: false,\n    isDeleting: false,\n  },\n};\n\nexport const getters = {\n  getAllNotesByContact: _state => contactId => {\n    const records = _state.records[contactId] || [];\n    return records.sort((r1, r2) => r2.id - r1.id);\n  },\n  getUIFlags(_state) {\n    return _state.uiFlags;\n  },\n};\n\nexport const actions = {\n  async get({ commit }, { contactId }) {\n    commit(types.SET_CONTACT_NOTES_UI_FLAG, { isFetching: true });\n    try {\n      const { data } = await ContactNotesAPI.get(contactId);\n      commit(types.SET_CONTACT_NOTES, { contactId, data });\n    } catch (error) {\n      throw new Error(error);\n    } finally {\n      commit(types.SET_CONTACT_NOTES_UI_FLAG, { isFetching: false });\n    }\n  },\n\n  async create({ commit }, { contactId, content }) {\n    commit(types.SET_CONTACT_NOTES_UI_FLAG, { isCreating: true });\n    try {\n      const { data } = await ContactNotesAPI.create(contactId, content);\n      commit(types.ADD_CONTACT_NOTE, { contactId, data });\n    } catch (error) {\n      throw new Error(error);\n    } finally {\n      commit(types.SET_CONTACT_NOTES_UI_FLAG, { isCreating: false });\n    }\n  },\n\n  async delete({ commit }, { noteId, contactId }) {\n    commit(types.SET_CONTACT_NOTES_UI_FLAG, { isDeleting: true });\n    try {\n      await ContactNotesAPI.delete(contactId, noteId);\n      commit(types.DELETE_CONTACT_NOTE, { contactId, noteId });\n    } catch (error) {\n      throw new Error(error);\n    } finally {\n      commit(types.SET_CONTACT_NOTES_UI_FLAG, { isDeleting: false });\n    }\n  },\n};\n\nexport const mutations = {\n  [types.SET_CONTACT_NOTES_UI_FLAG](_state, data) {\n    _state.uiFlags = {\n      ..._state.uiFlags,\n      ...data,\n    };\n  },\n\n  [types.SET_CONTACT_NOTES]($state, { data, contactId }) {\n    Vue.set($state.records, contactId, data);\n  },\n  [types.ADD_CONTACT_NOTE]($state, { data, contactId }) {\n    const contactNotes = $state.records[contactId] || [];\n    $state.records[contactId] = [...contactNotes, data];\n  },\n  [types.DELETE_CONTACT_NOTE]($state, { noteId, contactId }) {\n    const contactNotes = $state.records[contactId];\n    const withoutDeletedNote = contactNotes.filter(note => note.id !== noteId);\n    $state.records[contactId] = [...withoutDeletedNote];\n  },\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations,\n};\n"]},"metadata":{},"sourceType":"module"}