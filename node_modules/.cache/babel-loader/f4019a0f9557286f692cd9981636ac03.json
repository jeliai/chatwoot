{"ast":null,"code":"import { Plugin } from 'prosemirror-state';\nimport { Decoration, DecorationSet } from 'prosemirror-view';\nexport default (function () {\n  var placeholderText = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return new Plugin({\n    props: {\n      decorations: function decorations(state) {\n        var decorations = [];\n\n        var decorate = function decorate(node, pos) {\n          if (node.type.isBlock && node.childCount === 0) {\n            decorations.push(Decoration.node(pos, pos + node.nodeSize, {\n              class: 'empty-node',\n              'data-placeholder': placeholderText\n            }));\n          }\n        };\n\n        state.doc.descendants(decorate);\n        return DecorationSet.create(state.doc, decorations);\n      }\n    }\n  });\n});","map":null,"metadata":{},"sourceType":"module"}