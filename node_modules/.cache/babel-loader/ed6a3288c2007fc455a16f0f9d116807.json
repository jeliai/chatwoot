{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.map.js\";\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar allKeysRequired = function allKeysRequired(value) {\n  var keys = Object.keys(value);\n  return keys.every(function (key) {\n    return value[key];\n  });\n};\n\nimport { requiredIf } from 'vuelidate/lib/validators';\nexport default {\n  props: {\n    template: {\n      type: Object,\n      default: function _default() {}\n    }\n  },\n  validations: {\n    processedParams: {\n      requiredIfKeysPresent: requiredIf('variables'),\n      allKeysRequired: allKeysRequired\n    }\n  },\n  data: function data() {\n    return {\n      processedParams: {}\n    };\n  },\n  computed: {\n    variables: function variables() {\n      var variables = this.templateString.match(/{{([^}]+)}}/g);\n      return variables;\n    },\n    templateString: function templateString() {\n      return this.template.components.find(function (component) {\n        return component.type === 'BODY';\n      }).text;\n    },\n    processedString: function processedString() {\n      var _this = this;\n\n      return this.templateString.replace(/{{([^}]+)}}/g, function (match, variable) {\n        var variableKey = _this.processVariable(variable);\n\n        return _this.processedParams[variableKey] || \"{{\".concat(variable, \"}}\");\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.generateVariables();\n  },\n  methods: {\n    sendMessage: function sendMessage() {\n      this.$v.$touch();\n      if (this.$v.$invalid) return;\n      var payload = {\n        message: this.processedString,\n        templateParams: {\n          name: this.template.name,\n          category: this.template.category,\n          language: this.template.language,\n          namespace: this.template.namespace,\n          processed_params: this.processedParams\n        }\n      };\n      this.$emit('sendMessage', payload);\n    },\n    processVariable: function processVariable(str) {\n      return str.replace(/{{|}}/g, '');\n    },\n    generateVariables: function generateVariables() {\n      var _this2 = this;\n\n      var matchedVariables = this.templateString.match(/{{([^}]+)}}/g);\n      if (!matchedVariables) return;\n      var variables = matchedVariables.map(function (i) {\n        return _this2.processVariable(i);\n      });\n      this.processedParams = variables.reduce(function (acc, variable) {\n        acc[variable] = '';\n        return acc;\n      }, {});\n    }\n  }\n};","map":{"version":3,"sources":["TemplateParser.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"medium-12 columns\">\n    <textarea\n      v-model=\"processedString\"\n      rows=\"4\"\n      readonly\n      class=\"template-input\"\n    />\n    <div v-if=\"variables\" class=\"template__variables-container\">\n      <p class=\"variables-label\">\n        {{ $t('WHATSAPP_TEMPLATES.PARSER.VARIABLES_LABEL') }}\n      </p>\n      <div\n        v-for=\"(variable, key) in processedParams\"\n        :key=\"key\"\n        class=\"template__variable-item\"\n      >\n        <span class=\"variable-label\">\n          {{ key }}\n        </span>\n        <woot-input\n          v-model=\"processedParams[key]\"\n          type=\"text\"\n          class=\"variable-input\"\n          :styles=\"{ marginBottom: 0 }\"\n        />\n      </div>\n      <p v-if=\"$v.$dirty && $v.$invalid\" class=\"error\">\n        {{ $t('WHATSAPP_TEMPLATES.PARSER.FORM_ERROR_MESSAGE') }}\n      </p>\n    </div>\n    <footer>\n      <woot-button variant=\"smooth\" @click=\"$emit('resetTemplate')\">\n        {{ $t('WHATSAPP_TEMPLATES.PARSER.GO_BACK_LABEL') }}\n      </woot-button>\n      <woot-button @click=\"sendMessage\">\n        {{ $t('WHATSAPP_TEMPLATES.PARSER.SEND_MESSAGE_LABEL') }}\n      </woot-button>\n    </footer>\n  </div>\n</template>\n\n<script>\nconst allKeysRequired = value => {\n  const keys = Object.keys(value);\n  return keys.every(key => value[key]);\n};\nimport { requiredIf } from 'vuelidate/lib/validators';\nexport default {\n  props: {\n    template: {\n      type: Object,\n      default: () => {},\n    },\n  },\n  validations: {\n    processedParams: {\n      requiredIfKeysPresent: requiredIf('variables'),\n      allKeysRequired,\n    },\n  },\n  data() {\n    return {\n      processedParams: {},\n    };\n  },\n  computed: {\n    variables() {\n      const variables = this.templateString.match(/{{([^}]+)}}/g);\n      return variables;\n    },\n    templateString() {\n      return this.template.components.find(\n        component => component.type === 'BODY'\n      ).text;\n    },\n    processedString() {\n      return this.templateString.replace(/{{([^}]+)}}/g, (match, variable) => {\n        const variableKey = this.processVariable(variable);\n        return this.processedParams[variableKey] || `{{${variable}}}`;\n      });\n    },\n  },\n  mounted() {\n    this.generateVariables();\n  },\n  methods: {\n    sendMessage() {\n      this.$v.$touch();\n      if (this.$v.$invalid) return;\n      const payload = {\n        message: this.processedString,\n        templateParams: {\n          name: this.template.name,\n          category: this.template.category,\n          language: this.template.language,\n          namespace: this.template.namespace,\n          processed_params: this.processedParams,\n        },\n      };\n      this.$emit('sendMessage', payload);\n    },\n    processVariable(str) {\n      return str.replace(/{{|}}/g, '');\n    },\n    generateVariables() {\n      const matchedVariables = this.templateString.match(/{{([^}]+)}}/g);\n      if (!matchedVariables) return;\n\n      const variables = matchedVariables.map(i => this.processVariable(i));\n      this.processedParams = variables.reduce((acc, variable) => {\n        acc[variable] = '';\n        return acc;\n      }, {});\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.template__variables-container {\n  padding: var(--space-one);\n}\n\n.variables-label {\n  font-size: var(--font-size-small);\n  font-weight: var(--font-weight-bold);\n  margin-bottom: var(--space-one);\n}\n\n.template__variable-item {\n  align-items: center;\n  display: flex;\n  margin-bottom: var(--space-one);\n\n  .label {\n    font-size: var(--font-size-mini);\n  }\n\n  .variable-input {\n    flex: 1;\n    font-size: var(--font-size-small);\n    margin-left: var(--space-one);\n  }\n\n  .variable-label {\n    background-color: var(--s-75);\n    border-radius: var(--border-radius-normal);\n    display: inline-block;\n    font-size: var(--font-size-mini);\n    padding: var(--space-one) var(--space-medium);\n  }\n}\n\nfooter {\n  display: flex;\n  justify-content: flex-end;\n\n  button {\n    margin-left: var(--space-one);\n  }\n}\n.error {\n  background-color: var(--r-100);\n  border-radius: var(--border-radius-normal);\n  color: var(--r-800);\n  padding: var(--space-one);\n  text-align: center;\n}\n.template-input {\n  background-color: var(--s-25);\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/components/widgets/conversation/WhatsappTemplates"},"metadata":{},"sourceType":"module"}