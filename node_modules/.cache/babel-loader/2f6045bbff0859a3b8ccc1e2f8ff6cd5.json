{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nexport default {\n  props: {\n    featureKey: {\n      type: String,\n      required: true\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    isFeatureEnabledonAccount: 'accounts/isFeatureEnabledonAccount',\n    accountId: 'getCurrentAccountId'\n  })), {}, {\n    isFeatureEnabled: function isFeatureEnabled() {\n      return this.isFeatureEnabledonAccount(this.accountId, this.featureKey);\n    }\n  })\n};","map":{"version":3,"sources":["FeatureToggle.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAMA,SAAA,UAAA,QAAA,MAAA;AACA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AADA,GADA;AAOA,EAAA,QAAA,kCACA,UAAA,CAAA;AACA,IAAA,yBAAA,EAAA,oCADA;AAEA,IAAA,SAAA,EAAA;AAFA,GAAA,CADA;AAKA,IAAA,gBALA,8BAKA;AACA,aAAA,KAAA,yBAAA,CAAA,KAAA,SAAA,EAAA,KAAA,UAAA,CAAA;AACA;AAPA;AAPA,CAAA","sourcesContent":["<template>\n  <div v-if=\"isFeatureEnabled\">\n    <slot />\n  </div>\n</template>\n<script>\nimport { mapGetters } from 'vuex';\nexport default {\n  props: {\n    featureKey: {\n      type: String,\n      required: true,\n    },\n  },\n  computed: {\n    ...mapGetters({\n      isFeatureEnabledonAccount: 'accounts/isFeatureEnabledonAccount',\n      accountId: 'getCurrentAccountId',\n    }),\n    isFeatureEnabled() {\n      return this.isFeatureEnabledonAccount(this.accountId, this.featureKey);\n    },\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/dashboard/components/widgets"},"metadata":{},"sourceType":"module"}