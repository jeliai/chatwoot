{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport { frontendURL } from '../../../../helper/URLHelper';\nimport WootLabel from 'dashboard/components/ui/Label';\nimport globalConfigMixin from 'shared/mixins/globalConfigMixin';\nexport default {\n  components: {\n    WootLabel: WootLabel\n  },\n  mixins: [globalConfigMixin],\n  props: {\n    integrationId: {\n      type: [String, Number],\n      required: true\n    },\n    integrationLogo: {\n      type: String,\n      default: ''\n    },\n    integrationName: {\n      type: String,\n      default: ''\n    },\n    integrationDescription: {\n      type: String,\n      default: ''\n    },\n    integrationEnabled: {\n      type: Number,\n      default: 0\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    accountId: 'getCurrentAccountId',\n    globalConfig: 'globalConfig/get'\n  })), {}, {\n    labelText: function labelText() {\n      return this.integrationEnabled ? this.$t('INTEGRATION_APPS.STATUS.ENABLED') : this.$t('INTEGRATION_APPS.STATUS.DISABLED');\n    },\n    labelColor: function labelColor() {\n      return this.integrationEnabled ? 'success' : 'secondary';\n    }\n  }),\n  methods: {\n    frontendURL: frontendURL\n  }\n};","map":{"version":3,"sources":["IntegrationItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,SAAA,UAAA,QAAA,MAAA;AACA,SAAA,WAAA,QAAA,8BAAA;AACA,OAAA,SAAA,MAAA,+BAAA;AACA,OAAA,iBAAA,MAAA,iCAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA;AADA,GADA;AAIA,EAAA,MAAA,EAAA,CAAA,iBAAA,CAJA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,sBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,kBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAjBA,GALA;AA2BA,EAAA,QAAA,kCACA,UAAA,CAAA;AACA,IAAA,SAAA,EAAA,qBADA;AAEA,IAAA,YAAA,EAAA;AAFA,GAAA,CADA;AAKA,IAAA,SALA,uBAKA;AACA,aAAA,KAAA,kBAAA,GACA,KAAA,EAAA,CAAA,iCAAA,CADA,GAEA,KAAA,EAAA,CAAA,kCAAA,CAFA;AAGA,KATA;AAUA,IAAA,UAVA,wBAUA;AACA,aAAA,KAAA,kBAAA,GAAA,SAAA,GAAA,WAAA;AACA;AAZA,IA3BA;AAyCA,EAAA,OAAA,EAAA;AACA,IAAA,WAAA,EAAA;AADA;AAzCA,CAAA","sourcesContent":["<template>\n  <div class=\"row\">\n    <div class=\"integration--image\">\n      <img :src=\"'/dashboard/images/integrations/' + integrationLogo\" />\n    </div>\n    <div class=\"column\">\n      <h3 class=\"integration--title\">\n        {{ integrationName }}\n      </h3>\n      <p class=\"integration--description\">\n        {{\n          useInstallationName(\n            integrationDescription,\n            globalConfig.installationName\n          )\n        }}\n      </p>\n    </div>\n    <div class=\"small-2 column button-wrap\">\n      <woot-label :title=\"labelText\" :color-scheme=\"labelColor\" />\n    </div>\n    <div class=\"small-2 column button-wrap\">\n      <router-link\n        :to=\"\n          frontendURL(\n            `accounts/${accountId}/settings/applications/` + integrationId\n          )\n        \"\n      >\n        <woot-button icon=\"settings\">\n          {{ $t('INTEGRATION_APPS.CONFIGURE') }}\n        </woot-button>\n      </router-link>\n    </div>\n  </div>\n</template>\n<script>\nimport { mapGetters } from 'vuex';\nimport { frontendURL } from '../../../../helper/URLHelper';\nimport WootLabel from 'dashboard/components/ui/Label';\nimport globalConfigMixin from 'shared/mixins/globalConfigMixin';\n\nexport default {\n  components: {\n    WootLabel,\n  },\n  mixins: [globalConfigMixin],\n  props: {\n    integrationId: {\n      type: [String, Number],\n      required: true,\n    },\n    integrationLogo: {\n      type: String,\n      default: '',\n    },\n    integrationName: {\n      type: String,\n      default: '',\n    },\n    integrationDescription: {\n      type: String,\n      default: '',\n    },\n    integrationEnabled: {\n      type: Number,\n      default: 0,\n    },\n  },\n  computed: {\n    ...mapGetters({\n      accountId: 'getCurrentAccountId',\n      globalConfig: 'globalConfig/get',\n    }),\n    labelText() {\n      return this.integrationEnabled\n        ? this.$t('INTEGRATION_APPS.STATUS.ENABLED')\n        : this.$t('INTEGRATION_APPS.STATUS.DISABLED');\n    },\n    labelColor() {\n      return this.integrationEnabled ? 'success' : 'secondary';\n    },\n  },\n  methods: {\n    frontendURL,\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/settings/integrationapps"},"metadata":{},"sourceType":"module"}