{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport alertMixin from 'shared/mixins/alertMixin';\nimport { mixin as clickaway } from 'vue-clickaway';\nimport messageFormatterMixin from 'shared/mixins/messageFormatterMixin';\nimport AddCannedModal from 'dashboard/routes/dashboard/settings/canned/AddCanned';\nimport WootDropdownItem from 'shared/components/ui/dropdown/DropdownItem';\nimport WootDropdownMenu from 'shared/components/ui/dropdown/DropdownMenu';\nimport { copyTextToClipboard } from 'shared/helpers/clipboard';\nimport AnalyticsHelper, { ANALYTICS_EVENTS } from '../../../helper/AnalyticsHelper';\nexport default {\n  components: {\n    AddCannedModal: AddCannedModal,\n    WootDropdownMenu: WootDropdownMenu,\n    WootDropdownItem: WootDropdownItem\n  },\n  mixins: [alertMixin, clickaway, messageFormatterMixin],\n  props: {\n    messageContent: {\n      type: String,\n      default: ''\n    },\n    isOpen: {\n      type: Boolean,\n      default: false\n    },\n    showCopy: {\n      type: Boolean,\n      default: false\n    },\n    menuPosition: {\n      type: String,\n      default: 'left'\n    },\n    showCannedResponseOption: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      isCannedResponseModalOpen: false\n    };\n  },\n  computed: {\n    plainTextContent: function plainTextContent() {\n      return this.getPlainText(this.messageContent);\n    }\n  },\n  methods: {\n    handleContextMenuClick: function handleContextMenuClick() {\n      this.$emit('toggle', !this.isOpen);\n    },\n    handleCopy: function handleCopy() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return copyTextToClipboard(_this.plainTextContent);\n\n              case 2:\n                _this.showAlert(_this.$t('CONTACT_PANEL.COPY_SUCCESSFUL'));\n\n                _this.$emit('toggle', false);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    handleDelete: function handleDelete() {\n      this.$emit('delete');\n    },\n    hideCannedResponseModal: function hideCannedResponseModal() {\n      this.isCannedResponseModalOpen = false;\n      this.$emit('toggle', false);\n    },\n    showCannedResponseModal: function showCannedResponseModal() {\n      AnalyticsHelper.track(ANALYTICS_EVENTS.ADDED_TO_CANNED_RESPONSE);\n      this.isCannedResponseModalOpen = true;\n    }\n  }\n};","map":{"version":3,"sources":["MessageContextMenu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA,OAAA,UAAA,MAAA,0BAAA;AACA,SAAA,KAAA,IAAA,SAAA,QAAA,eAAA;AACA,OAAA,qBAAA,MAAA,qCAAA;AAEA,OAAA,cAAA,MAAA,sDAAA;AACA,OAAA,gBAAA,MAAA,4CAAA;AACA,OAAA,gBAAA,MAAA,4CAAA;AACA,SAAA,mBAAA,QAAA,0BAAA;AACA,OAAA,eAAA,IACA,gBADA,QAEA,iCAFA;AAIA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,cAAA,EAAA,cADA;AAEA,IAAA,gBAAA,EAAA,gBAFA;AAGA,IAAA,gBAAA,EAAA;AAHA,GADA;AAMA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,SAAA,EAAA,qBAAA,CANA;AAOA,EAAA,KAAA,EAAA;AACA,IAAA,cAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,wBAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAjBA,GAPA;AA6BA,EAAA,IA7BA,kBA6BA;AACA,WAAA;AAAA,MAAA,yBAAA,EAAA;AAAA,KAAA;AACA,GA/BA;AAgCA,EAAA,QAAA,EAAA;AACA,IAAA,gBADA,8BACA;AACA,aAAA,KAAA,YAAA,CAAA,KAAA,cAAA,CAAA;AACA;AAHA,GAhCA;AAqCA,EAAA,OAAA,EAAA;AACA,IAAA,sBADA,oCACA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,CAAA,KAAA,MAAA;AACA,KAHA;AAIA,IAAA,UAJA,wBAIA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,mBAAA,CAAA,KAAA,CAAA,gBAAA,CADA;;AAAA;AAEA,gBAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,EAAA,CAAA,+BAAA,CAAA;;AACA,gBAAA,KAAA,CAAA,KAAA,CAAA,QAAA,EAAA,KAAA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA,KARA;AASA,IAAA,YATA,0BASA;AACA,WAAA,KAAA,CAAA,QAAA;AACA,KAXA;AAYA,IAAA,uBAZA,qCAYA;AACA,WAAA,yBAAA,GAAA,KAAA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,KAAA;AACA,KAfA;AAgBA,IAAA,uBAhBA,qCAgBA;AACA,MAAA,eAAA,CAAA,KAAA,CAAA,gBAAA,CAAA,wBAAA;AACA,WAAA,yBAAA,GAAA,IAAA;AACA;AAnBA;AArCA,CAAA","sourcesContent":["<template>\n  <div class=\"context-menu\">\n    <woot-modal\n      v-if=\"isCannedResponseModalOpen && showCannedResponseOption\"\n      :show.sync=\"isCannedResponseModalOpen\"\n      :on-close=\"hideCannedResponseModal\"\n    >\n      <add-canned-modal\n        :response-content=\"plainTextContent\"\n        :on-close=\"hideCannedResponseModal\"\n      />\n    </woot-modal>\n    <woot-button\n      icon=\"more-vertical\"\n      color-scheme=\"secondary\"\n      variant=\"clear\"\n      size=\"small\"\n      @click=\"handleContextMenuClick\"\n    />\n    <div\n      v-if=\"isOpen && !isCannedResponseModalOpen\"\n      v-on-clickaway=\"handleContextMenuClick\"\n      class=\"dropdown-pane dropdown-pane--open\"\n      :class=\"`dropdown-pane--${menuPosition}`\"\n    >\n      <woot-dropdown-menu>\n        <woot-dropdown-item v-if=\"showCopy\">\n          <woot-dropdown-item>\n            <woot-button\n              variant=\"clear\"\n              color-scheme=\"alert\"\n              size=\"small\"\n              icon=\"delete\"\n              @click=\"handleDelete\"\n            >\n              {{ $t('CONVERSATION.CONTEXT_MENU.DELETE') }}\n            </woot-button>\n          </woot-dropdown-item>\n          <woot-button\n            variant=\"clear\"\n            size=\"small\"\n            icon=\"clipboard\"\n            color-scheme=\"secondary\"\n            @click=\"handleCopy\"\n          >\n            {{ $t('CONVERSATION.CONTEXT_MENU.COPY') }}\n          </woot-button>\n        </woot-dropdown-item>\n\n        <woot-dropdown-item>\n          <woot-button\n            v-if=\"showCannedResponseOption\"\n            variant=\"clear\"\n            size=\"small\"\n            icon=\"comment-add\"\n            color-scheme=\"secondary\"\n            @click=\"showCannedResponseModal\"\n          >\n            {{ $t('CONVERSATION.CONTEXT_MENU.CREATE_A_CANNED_RESPONSE') }}\n          </woot-button>\n        </woot-dropdown-item>\n      </woot-dropdown-menu>\n    </div>\n  </div>\n</template>\n<script>\nimport alertMixin from 'shared/mixins/alertMixin';\nimport { mixin as clickaway } from 'vue-clickaway';\nimport messageFormatterMixin from 'shared/mixins/messageFormatterMixin';\n\nimport AddCannedModal from 'dashboard/routes/dashboard/settings/canned/AddCanned';\nimport WootDropdownItem from 'shared/components/ui/dropdown/DropdownItem';\nimport WootDropdownMenu from 'shared/components/ui/dropdown/DropdownMenu';\nimport { copyTextToClipboard } from 'shared/helpers/clipboard';\nimport AnalyticsHelper, {\n  ANALYTICS_EVENTS,\n} from '../../../helper/AnalyticsHelper';\n\nexport default {\n  components: {\n    AddCannedModal,\n    WootDropdownMenu,\n    WootDropdownItem,\n  },\n  mixins: [alertMixin, clickaway, messageFormatterMixin],\n  props: {\n    messageContent: {\n      type: String,\n      default: '',\n    },\n    isOpen: {\n      type: Boolean,\n      default: false,\n    },\n    showCopy: {\n      type: Boolean,\n      default: false,\n    },\n    menuPosition: {\n      type: String,\n      default: 'left',\n    },\n    showCannedResponseOption: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  data() {\n    return { isCannedResponseModalOpen: false };\n  },\n  computed: {\n    plainTextContent() {\n      return this.getPlainText(this.messageContent);\n    },\n  },\n  methods: {\n    handleContextMenuClick() {\n      this.$emit('toggle', !this.isOpen);\n    },\n    async handleCopy() {\n      await copyTextToClipboard(this.plainTextContent);\n      this.showAlert(this.$t('CONTACT_PANEL.COPY_SUCCESSFUL'));\n      this.$emit('toggle', false);\n    },\n    handleDelete() {\n      this.$emit('delete');\n    },\n    hideCannedResponseModal() {\n      this.isCannedResponseModalOpen = false;\n      this.$emit('toggle', false);\n    },\n    showCannedResponseModal() {\n      AnalyticsHelper.track(ANALYTICS_EVENTS.ADDED_TO_CANNED_RESPONSE);\n      this.isCannedResponseModalOpen = true;\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n.dropdown-pane {\n  bottom: var(--space-large);\n}\n.dropdown-pane--left {\n  right: var(--space-minus-small);\n}\n.dropdown-pane--right {\n  left: var(--space-minus-small);\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/modules/conversations/components"},"metadata":{},"sourceType":"module"}