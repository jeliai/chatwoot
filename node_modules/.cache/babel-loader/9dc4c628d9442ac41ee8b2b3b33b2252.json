{"ast":null,"code":"import { __assign, __awaiter, __generator, __spreadArrays } from \"tslib\";\nimport { getProcessEnv } from './lib/get-process-env';\nimport { Analytics } from './analytics';\nimport { Context } from './core/context';\nimport { mergedOptions } from './lib/merged-options';\nimport { pageEnrichment } from './plugins/page-enrichment';\nimport { remoteLoader } from './plugins/remote-loader';\nimport { segmentio } from './plugins/segmentio';\nimport { validation } from './plugins/validation';\nexport function loadLegacySettings(writeKey, settings) {\n  var _a;\n\n  return {\n    // @ts-expect-error\n    integrations: {\n      'Segment.io': {\n        apiKey: writeKey,\n        addBundledMetadata: true,\n        apiHost: (_a = settings.apiHost) !== null && _a !== void 0 ? _a : \"api.june.so/sdk\",\n        versionSettings: {\n          version: '4.4.7',\n          componentTypes: ['browser']\n        }\n      }\n    },\n    plan: {\n      track: {\n        __default: {\n          enabled: true,\n          integrations: {}\n        }\n      },\n      identify: {\n        __default: {\n          enabled: true\n        }\n      },\n      group: {\n        __default: {\n          enabled: true\n        }\n      }\n    },\n    edgeFunction: {},\n    analyticsNextEnabled: true,\n    middlewareSettings: {},\n    enabledMiddleware: {},\n    metrics: {\n      sampleRate: 0.1\n    },\n    legacyVideoPluginsEnabled: false,\n    remotePlugins: []\n  };\n}\n\nfunction hasLegacyDestinations(settings) {\n  return getProcessEnv().NODE_ENV !== 'test' && // just one integration means segmentio\n  Object.keys(settings.integrations).length > 1;\n}\n\nfunction flushBuffered(analytics) {\n  return __awaiter(this, void 0, void 0, function () {\n    var wa, buffered, _loop_1, _i, buffered_1, _a, operation, args;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          wa = window.analytics;\n          buffered = // @ts-expect-error\n          wa && wa[0] ? __spreadArrays(wa) : [];\n\n          _loop_1 = function _loop_1(operation, args) {\n            var _a;\n\n            return __generator(this, function (_b) {\n              switch (_b.label) {\n                case 0:\n                  if (!( // @ts-expect-error\n                  analytics[operation] && // @ts-expect-error\n                  typeof analytics[operation] === 'function')) // @ts-expect-error\n                    return [3\n                    /*break*/\n                    , 3];\n                  if (!(operation === 'addSourceMiddleware')) return [3\n                  /*break*/\n                  , 2]; // @ts-expect-error\n\n                  return [4\n                  /*yield*/\n                  , (_a = analytics[operation]).call.apply(_a, __spreadArrays([analytics], args))];\n\n                case 1:\n                  // @ts-expect-error\n                  _b.sent();\n\n                  return [3\n                  /*break*/\n                  , 3];\n\n                case 2:\n                  // flush each individual event as its own task, so not to block initial page loads\n                  setTimeout(function () {\n                    var _a; // @ts-expect-error\n\n\n                    (_a = analytics[operation]).call.apply(_a, __spreadArrays([analytics], args));\n                  }, 0);\n                  _b.label = 3;\n\n                case 3:\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          };\n\n          _i = 0, buffered_1 = buffered;\n          _b.label = 1;\n\n        case 1:\n          if (!(_i < buffered_1.length)) return [3\n          /*break*/\n          , 4];\n          _a = buffered_1[_i], operation = _a[0], args = _a.slice(1);\n          return [5\n          /*yield**/\n          , _loop_1(operation, args)];\n\n        case 2:\n          _b.sent();\n\n          _b.label = 3;\n\n        case 3:\n          _i++;\n          return [3\n          /*break*/\n          , 1];\n\n        case 4:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n/**\n * With AJS classic, we allow users to call setAnonymousId before the library initialization.\n * This is important because some of the destinations will use the anonymousId during the initialization,\n * and if we set anonId afterwards, that wouldnâ€™t impact the destination.\n */\n\n\nfunction flushAnonymousUser(analytics) {\n  var wa = window.analytics;\n  var buffered = // @ts-expect-error\n  wa && wa[0] ? __spreadArrays(wa) : [];\n  var anon = buffered.find(function (_a) {\n    var op = _a[0];\n    return op === 'setAnonymousId';\n  });\n\n  if (anon) {\n    var id = anon[1];\n    analytics.setAnonymousId(id);\n  }\n}\n\nfunction registerPlugins(legacySettings, analytics, opts, options, plugins) {\n  var _a, _b, _c;\n\n  return __awaiter(this, void 0, void 0, function () {\n    var legacyDestinations, _d, schemaFilter, _e, mergedSettings, remotePlugins, toRegister, shouldIgnoreSegmentio, ctx;\n\n    var _this = this;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          if (!hasLegacyDestinations(legacySettings)) return [3\n          /*break*/\n          , 2];\n          return [4\n          /*yield*/\n          , import(\n          /* webpackChunkName: \"ajs-destination\" */\n          './plugins/ajs-destination').then(function (mod) {\n            return mod.ajsDestinations(legacySettings, analytics.integrations, opts);\n          })];\n\n        case 1:\n          _d = _f.sent();\n          return [3\n          /*break*/\n          , 3];\n\n        case 2:\n          _d = [];\n          _f.label = 3;\n\n        case 3:\n          legacyDestinations = _d;\n          if (!legacySettings.legacyVideoPluginsEnabled) return [3\n          /*break*/\n          , 5];\n          return [4\n          /*yield*/\n          , import(\n          /* webpackChunkName: \"legacyVideos\" */\n          './plugins/legacy-video-plugins').then(function (mod) {\n            return mod.loadLegacyVideoPlugins(analytics);\n          })];\n\n        case 4:\n          _f.sent();\n\n          _f.label = 5;\n\n        case 5:\n          if (!((_a = opts.plan) === null || _a === void 0 ? void 0 : _a.track)) return [3\n          /*break*/\n          , 7];\n          return [4\n          /*yield*/\n          , import(\n          /* webpackChunkName: \"schemaFilter\" */\n          './plugins/schema-filter').then(function (mod) {\n            var _a;\n\n            return mod.schemaFilter((_a = opts.plan) === null || _a === void 0 ? void 0 : _a.track, legacySettings);\n          })];\n\n        case 6:\n          _e = _f.sent();\n          return [3\n          /*break*/\n          , 8];\n\n        case 7:\n          _e = undefined;\n          _f.label = 8;\n\n        case 8:\n          schemaFilter = _e;\n          mergedSettings = mergedOptions(legacySettings, options);\n          return [4\n          /*yield*/\n          , remoteLoader(legacySettings).catch(function () {\n            return [];\n          })];\n\n        case 9:\n          remotePlugins = _f.sent();\n          toRegister = __spreadArrays([validation, pageEnrichment], plugins, legacyDestinations, remotePlugins);\n\n          if (schemaFilter) {\n            toRegister.push(schemaFilter);\n          }\n\n          shouldIgnoreSegmentio = ((_b = opts.integrations) === null || _b === void 0 ? void 0 : _b.All) === false && !opts.integrations['Segment.io'] || opts.integrations && opts.integrations['Segment.io'] === false;\n\n          if (!shouldIgnoreSegmentio) {\n            toRegister.push(segmentio(analytics, mergedSettings['Segment.io'], legacySettings.integrations));\n          }\n\n          return [4\n          /*yield*/\n          , analytics.register.apply(analytics, toRegister)];\n\n        case 10:\n          ctx = _f.sent();\n          if (!(Object.keys((_c = legacySettings.enabledMiddleware) !== null && _c !== void 0 ? _c : {}).length > 0)) return [3\n          /*break*/\n          , 12];\n          return [4\n          /*yield*/\n          , import(\n          /* webpackChunkName: \"remoteMiddleware\" */\n          './plugins/remote-middleware').then(function (_a) {\n            var remoteMiddlewares = _a.remoteMiddlewares;\n            return __awaiter(_this, void 0, void 0, function () {\n              var middleware, promises;\n              return __generator(this, function (_b) {\n                switch (_b.label) {\n                  case 0:\n                    return [4\n                    /*yield*/\n                    , remoteMiddlewares(ctx, legacySettings)];\n\n                  case 1:\n                    middleware = _b.sent();\n                    promises = middleware.map(function (mdw) {\n                      return analytics.addSourceMiddleware(mdw);\n                    });\n                    return [2\n                    /*return*/\n                    , Promise.all(promises)];\n                }\n              });\n            });\n          })];\n\n        case 11:\n          _f.sent();\n\n          _f.label = 12;\n\n        case 12:\n          return [2\n          /*return*/\n          , ctx];\n      }\n    });\n  });\n}\n\nvar AnalyticsBrowser =\n/** @class */\nfunction () {\n  function AnalyticsBrowser() {}\n\n  AnalyticsBrowser.load = function (settings, options) {\n    var _a, _b, _c, _d, _e;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var legacySettings, retryQueue, opts, analytics, plugins, ctx, search, hash, term;\n      return __generator(this, function (_f) {\n        switch (_f.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , loadLegacySettings(settings.writeKey, settings)];\n\n          case 1:\n            legacySettings = _f.sent();\n            retryQueue = (_b = (_a = legacySettings.integrations['Segment.io']) === null || _a === void 0 ? void 0 : _a.retryQueue) !== null && _b !== void 0 ? _b : true;\n            opts = __assign({\n              retryQueue: retryQueue\n            }, options);\n            analytics = new Analytics(settings, opts);\n            plugins = (_c = settings.plugins) !== null && _c !== void 0 ? _c : [];\n            Context.initMetrics(legacySettings.metrics); // needs to be flushed before plugins are registered\n\n            flushAnonymousUser(analytics);\n            return [4\n            /*yield*/\n            , registerPlugins(legacySettings, analytics, opts, options, plugins)];\n\n          case 2:\n            ctx = _f.sent();\n            analytics.initialized = true;\n            analytics.emit('initialize', settings, options);\n\n            if (options.initialPageview) {\n              analytics.page().catch(console.error);\n            }\n\n            search = (_d = window.location.search) !== null && _d !== void 0 ? _d : '';\n            hash = (_e = window.location.hash) !== null && _e !== void 0 ? _e : '';\n            term = search.length ? search : hash.replace(/(?=#).*(?=\\?)/, '');\n\n            if (term.includes('ajs_')) {\n              analytics.queryString(term).catch(console.error);\n            }\n\n            return [4\n            /*yield*/\n            , flushBuffered(analytics)];\n\n          case 3:\n            _f.sent();\n\n            return [2\n            /*return*/\n            , [analytics, ctx]];\n        }\n      });\n    });\n  };\n\n  AnalyticsBrowser.standalone = function (writeKey, options) {\n    return AnalyticsBrowser.load({\n      writeKey: writeKey\n    }, options).then(function (res) {\n      return res[0];\n    });\n  };\n\n  return AnalyticsBrowser;\n}();\n\nexport { AnalyticsBrowser };","map":null,"metadata":{},"sourceType":"module"}