{"ast":null,"code":"\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sanitize = void 0;\n\nvar constants_1 = require(\"./constants\");\n\nfunction prependIdToSelectorText(selectorText, id) {\n  if (!id) return selectorText;\n  return selectorText.split(',').map(function (selector) {\n    return selector.trim();\n  }).map(function (selector) {\n    var s = selector.replace(/\\./g, '.' + id + '_').replace(/#/g, '#' + id + '_');\n\n    if (s.toLowerCase().startsWith('body')) {\n      return '#' + id + ' ' + s.substring(4);\n    } else {\n      return '#' + id + ' ' + s;\n    }\n  }).join(',');\n}\n\nfunction sanitizeCssValue(cssValue, allowedSchemas, rewriteExternalResources) {\n  return cssValue.trim().replace(/expression\\((.*?)\\)/g, '').replace(/url\\([\"']?(.*?)[\"']?\\)/g, function (match, url) {\n    var quote = '';\n\n    if (match.startsWith('url(\"')) {\n      quote = '\"';\n    } else if (match.startsWith(\"url('\")) {\n      quote = \"'\";\n    }\n\n    if (allowedSchemas.includes(url.toLowerCase().split(':')[0])) {\n      if (rewriteExternalResources) {\n        return 'url(' + quote + rewriteExternalResources(url) + quote + ')';\n      } else {\n        return match;\n      }\n    } else {\n      return '';\n    }\n  });\n}\n\nfunction sanitizeCssStyle(style, allowedSchemas, preserveCssPriority, rewriteExternalResources) {\n  if (!style) {\n    return;\n  }\n\n  var properties = [];\n\n  for (var i = 0; i < style.length; i++) {\n    var name = style[i];\n    properties.push(name);\n  }\n\n  for (var _i = 0, _properties = properties; _i < _properties.length; _i++) {\n    var _name = _properties[_i];\n\n    if (constants_1.allowedCssProperties.includes(_name)) {\n      var value = style.getPropertyValue(_name);\n      style.setProperty(_name, sanitizeCssValue(value, allowedSchemas, rewriteExternalResources), preserveCssPriority ? style.getPropertyPriority(_name) : undefined);\n    } else {\n      style.removeProperty(_name);\n    }\n  }\n}\n\nfunction sanitizeCssRule(rule, id, allowedSchemas, preserveCssPriority, rewriteExternalResources) {\n  rule.selectorText = prependIdToSelectorText(rule.selectorText, id);\n  sanitizeCssStyle(rule.style, allowedSchemas, preserveCssPriority, rewriteExternalResources);\n}\n\nvar defaultAllowedSchemas = ['http', 'https', 'mailto'];\n\nfunction sanitizeHtml(input, _ref) {\n  var _ref$dropAllHtmlTags = _ref.dropAllHtmlTags,\n      dropAllHtmlTags = _ref$dropAllHtmlTags === void 0 ? false : _ref$dropAllHtmlTags,\n      rewriteExternalLinks = _ref.rewriteExternalLinks,\n      rewriteExternalResources = _ref.rewriteExternalResources,\n      _ref$id = _ref.id,\n      id = _ref$id === void 0 ? 'msg_' + String.fromCharCode.apply(String, _toConsumableArray(new Array(24).fill(undefined).map(function () {\n    return Math.random() * 25 % 25 + 65;\n  }))) : _ref$id,\n      _ref$allowedSchemas = _ref.allowedSchemas,\n      allowedSchemas = _ref$allowedSchemas === void 0 ? defaultAllowedSchemas : _ref$allowedSchemas,\n      _ref$preserveCssPrior = _ref.preserveCssPriority,\n      preserveCssPriority = _ref$preserveCssPrior === void 0 ? true : _ref$preserveCssPrior,\n      _ref$noWrapper = _ref.noWrapper,\n      noWrapper = _ref$noWrapper === void 0 ? false : _ref$noWrapper;\n\n  var _a, _b, _c, _d, _e, _f, _g, _h;\n\n  if (noWrapper) id = '';\n  var doc = new DOMParser().parseFromString(input, 'text/html'); // Ensure allowed schemas are lower case.\n\n  allowedSchemas = Array.isArray(allowedSchemas) ? allowedSchemas.map(function (schema) {\n    return schema.toLowerCase();\n  }) : defaultAllowedSchemas; // Remove comments.\n\n  var commentIter = doc.createNodeIterator(doc.documentElement, NodeFilter.SHOW_COMMENT);\n  var node;\n\n  while (node = commentIter.nextNode()) {\n    (_a = node.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(node);\n  }\n\n  var removeTags = _toConsumableArray(constants_1.removeWithContents);\n\n  if (dropAllHtmlTags) {\n    removeTags.push('style');\n  } // Remove disallowed tags.\n\n\n  var disallowedList = doc.querySelectorAll(removeTags.join(', '));\n  disallowedList.forEach(function (element) {\n    return element.remove();\n  }); // Move styles from head to body.\n\n  var styleList = doc.querySelectorAll('head > style');\n  styleList.forEach(function (element) {\n    doc.body.appendChild(element);\n  }); // Filter other tags.\n\n  var toRemove = [];\n  var elementIter = doc.createNodeIterator(doc.body, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: function acceptNode() {\n      return NodeFilter.FILTER_ACCEPT;\n    }\n  });\n\n  while (node = elementIter.nextNode()) {\n    var element = node;\n    var tagName = element.tagName.toLowerCase();\n\n    if (tagName === 'body' || tagName === 'html') {\n      continue;\n    }\n\n    if (dropAllHtmlTags) {\n      if (node.textContent) {\n        var textNode = doc.createTextNode(node.textContent);\n        (_b = node.parentNode) === null || _b === void 0 ? void 0 : _b.replaceChild(textNode, node);\n      } else {\n        (_c = node.parentNode) === null || _c === void 0 ? void 0 : _c.removeChild(node);\n      }\n\n      continue;\n    }\n\n    if (tagName in constants_1.allowedTags) {\n      var allowedAttributes = constants_1.allowedTags[tagName];\n\n      var _iterator = _createForOfIteratorHelper(element.getAttributeNames()),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var attribute = _step.value;\n\n          if (!allowedAttributes.includes(attribute)) {\n            element.removeAttribute(attribute);\n          } else if (attribute === 'class' && !noWrapper) {\n            element.setAttribute(attribute, (_e = (_d = element.getAttribute(attribute)) === null || _d === void 0 ? void 0 : _d.split(' ').map(function (className) {\n              return id + '_' + className;\n            }).join(' ')) !== null && _e !== void 0 ? _e : '');\n          } else if (attribute === 'id' && !noWrapper) {\n            element.setAttribute(attribute, id + '_' + ((_f = element.getAttribute(attribute)) !== null && _f !== void 0 ? _f : ''));\n          } else if (attribute === 'href' || attribute === 'src') {\n            var value = (_g = element.getAttribute(attribute)) !== null && _g !== void 0 ? _g : '';\n\n            if (!allowedSchemas.includes(value.toLowerCase().split(':')[0])) {\n              element.removeAttribute(attribute);\n            } else if (attribute === 'href' && rewriteExternalLinks) {\n              element.setAttribute(attribute, rewriteExternalLinks(value));\n            } else if (attribute === 'src' && rewriteExternalResources) {\n              element.setAttribute(attribute, rewriteExternalResources(value));\n            }\n          }\n        } // Sanitize CSS.\n\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      sanitizeCssStyle(element.style, allowedSchemas, preserveCssPriority, rewriteExternalResources);\n\n      if (tagName === 'a') {\n        // Add rel=\"noopener noreferrer\" to <a>\n        element.setAttribute('rel', 'noopener noreferrer'); // Add target=\"_blank\" to <a>\n\n        element.setAttribute('target', '_blank');\n      }\n    } else {\n      element.insertAdjacentHTML('afterend', element.innerHTML);\n      toRemove.push(element);\n    }\n  }\n\n  for (var _i2 = 0, _toRemove = toRemove; _i2 < _toRemove.length; _i2++) {\n    var _element = _toRemove[_i2];\n\n    try {\n      try {\n        (_h = _element.parentNode) === null || _h === void 0 ? void 0 : _h.removeChild(_element);\n      } catch (_j) {\n        _element.outerHTML = '';\n      }\n    } catch (_k) {\n      try {\n        _element.remove();\n      } catch (_l) {}\n    }\n  } // Prepend wrapper ID.\n\n\n  var bodyStyleList = doc.querySelectorAll('body style');\n  bodyStyleList.forEach(function (element) {\n    var styleElement = element;\n    var stylesheet = styleElement.sheet;\n    var newRules = [];\n\n    if (!stylesheet.cssRules) {\n      styleElement.textContent = '';\n      return;\n    }\n\n    for (var i = 0; i < stylesheet.cssRules.length; i++) {\n      var rule = stylesheet.cssRules[i];\n\n      if ('selectorText' in rule) {\n        sanitizeCssRule(rule, id, allowedSchemas, preserveCssPriority, rewriteExternalResources);\n        newRules.push(rule);\n      } else if ('cssRules' in rule && 'media' in rule) {\n        // According to https://www.caniemail.com/,\n        // out of all at-rules, Gmail only supports @media.\n        var mediaRule = rule;\n        var newRulesMedia = [];\n\n        for (var _i3 = 0; _i3 < mediaRule.cssRules.length; _i3++) {\n          var _rule = mediaRule.cssRules[_i3];\n\n          if (_rule.type === _rule.STYLE_RULE) {\n            sanitizeCssRule(_rule, id, allowedSchemas, preserveCssPriority, rewriteExternalResources);\n            newRulesMedia.push(_rule);\n          }\n        }\n\n        while (mediaRule.cssRules.length > 0) {\n          mediaRule.deleteRule(0);\n        }\n\n        for (var _i4 = 0, _newRulesMedia = newRulesMedia; _i4 < _newRulesMedia.length; _i4++) {\n          var _rule2 = _newRulesMedia[_i4];\n          mediaRule.insertRule(_rule2.cssText, mediaRule.cssRules.length);\n        }\n\n        newRules.push(mediaRule);\n      }\n    }\n\n    styleElement.textContent = newRules.map(function (rule) {\n      return rule.cssText;\n    }).join('\\n');\n  }); // Wrap body inside of a div with the generated ID.\n\n  if (noWrapper) {\n    return doc.body.innerHTML;\n  } else {\n    var div = doc.createElement('div');\n    div.id = id;\n    div.innerHTML = doc.body.innerHTML;\n    return div.outerHTML;\n  }\n}\n\nfunction sanitizeText(text) {\n  var div = document.createElement('div');\n  div.textContent = text;\n  return div.innerHTML;\n}\n\nfunction sanitize(html, text, options) {\n  var contents = html !== null && html !== void 0 ? html : '';\n\n  if ((contents === null || contents === void 0 ? void 0 : contents.length) === 0 && text) {\n    contents = sanitizeText(text).split('\\n').map(function (line) {\n      return '<p>' + line + '</p>';\n    }).join('\\n');\n  }\n\n  return sanitizeHtml(contents, options !== null && options !== void 0 ? options : {});\n}\n\nexports.sanitize = sanitize;","map":null,"metadata":{},"sourceType":"module"}