{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport AccordionItem from 'dashboard/components/Accordion/AccordionItem';\nimport ContactConversations from 'dashboard/routes/dashboard/conversation/ContactConversations';\nimport ContactInfo from 'dashboard/routes/dashboard/conversation/contact/ContactInfo';\nimport ContactLabel from 'dashboard/routes/dashboard/contacts/components/ContactLabels.vue';\nimport CustomAttributes from 'dashboard/routes/dashboard/conversation/customAttributes/CustomAttributes.vue';\nimport CustomAttributeSelector from 'dashboard/routes/dashboard/conversation/customAttributes/CustomAttributeSelector.vue';\nimport draggable from 'vuedraggable';\nimport uiSettingsMixin from 'dashboard/mixins/uiSettings';\nexport default {\n  components: {\n    AccordionItem: AccordionItem,\n    ContactConversations: ContactConversations,\n    ContactInfo: ContactInfo,\n    ContactLabel: ContactLabel,\n    CustomAttributes: CustomAttributes,\n    CustomAttributeSelector: CustomAttributeSelector,\n    draggable: draggable\n  },\n  mixins: [uiSettingsMixin],\n  props: {\n    contact: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    onClose: {\n      type: Function,\n      default: function _default() {}\n    },\n    showAvatar: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      dragEnabled: true,\n      contactSidebarItems: [],\n      dragging: false\n    };\n  },\n  computed: {\n    hasContactAttributes: function hasContactAttributes() {\n      var customAttributes = this.contact.custom_attributes;\n      return customAttributes && Object.keys(customAttributes).length;\n    }\n  },\n  mounted: function mounted() {\n    this.contactSidebarItems = this.contactSidebarItemsOrder;\n  },\n  methods: {\n    onDragEnd: function onDragEnd() {\n      this.dragging = false;\n      this.updateUISettings({\n        contact_sidebar_items_order: this.contactSidebarItems\n      });\n    }\n  }\n};","map":{"version":3,"sources":["ContactInfoPanel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA,OAAA,aAAA,MAAA,8CAAA;AACA,OAAA,oBAAA,MAAA,8DAAA;AACA,OAAA,WAAA,MAAA,6DAAA;AACA,OAAA,YAAA,MAAA,kEAAA;AACA,OAAA,gBAAA,MAAA,+EAAA;AACA,OAAA,uBAAA,MAAA,sFAAA;AACA,OAAA,SAAA,MAAA,cAAA;AACA,OAAA,eAAA,MAAA,6BAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,aAAA,EAAA,aADA;AAEA,IAAA,oBAAA,EAAA,oBAFA;AAGA,IAAA,WAAA,EAAA,WAHA;AAIA,IAAA,YAAA,EAAA,YAJA;AAKA,IAAA,gBAAA,EAAA,gBALA;AAMA,IAAA,uBAAA,EAAA,uBANA;AAOA,IAAA,SAAA,EAAA;AAPA,GADA;AAUA,EAAA,MAAA,EAAA,CAAA,eAAA,CAVA;AAWA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA,KADA;AAKA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,QADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA,KALA;AASA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AATA,GAXA;AAyBA,EAAA,IAzBA,kBAyBA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,IADA;AAEA,MAAA,mBAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA;AAHA,KAAA;AAKA,GA/BA;AAgCA,EAAA,QAAA,EAAA;AACA,IAAA,oBADA,kCACA;AACA,UAAA,gBAAA,GAAA,KAAA,OAAA,CAAA,iBAAA;AACA,aAAA,gBAAA,IAAA,MAAA,CAAA,IAAA,CAAA,gBAAA,EAAA,MAAA;AACA;AAJA,GAhCA;AAsCA,EAAA,OAtCA,qBAsCA;AACA,SAAA,mBAAA,GAAA,KAAA,wBAAA;AACA,GAxCA;AAyCA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,WAAA,QAAA,GAAA,KAAA;AACA,WAAA,gBAAA,CAAA;AACA,QAAA,2BAAA,EAAA,KAAA;AADA,OAAA;AAGA;AANA;AAzCA,CAAA","sourcesContent":["<template>\n  <div\n    class=\"small-12 medium-3 bg-white contact--panel\"\n    :class=\"{ 'border-left': showAvatar }\"\n  >\n    <span v-if=\"showAvatar\" class=\"close-button\" @click=\"onClose\">\n      <fluent-icon icon=\"dismiss\" class=\"close-icon\" />\n    </span>\n    <contact-info\n      :show-avatar=\"showAvatar\"\n      :contact=\"contact\"\n      @panel-close=\"onClose\"\n    />\n    <draggable\n      :list=\"contactSidebarItems\"\n      :disabled=\"!dragEnabled\"\n      class=\"list-group\"\n      ghost-class=\"ghost\"\n      @start=\"dragging = true\"\n      @end=\"onDragEnd\"\n    >\n      <transition-group>\n        <div\n          v-for=\"element in contactSidebarItems\"\n          :key=\"element.name\"\n          class=\"list-group-item\"\n        >\n          <div v-if=\"element.name === 'contact_attributes'\">\n            <accordion-item\n              :title=\"$t('CONVERSATION_SIDEBAR.ACCORDION.CONTACT_ATTRIBUTES')\"\n              :is-open=\"isContactSidebarItemOpen('is_ct_custom_attr_open')\"\n              compact\n              @click=\"\n                value => toggleSidebarUIState('is_ct_custom_attr_open', value)\n              \"\n            >\n              <custom-attributes\n                :contact-id=\"contact.id\"\n                attribute-type=\"contact_attribute\"\n                attribute-class=\"conversation--attribute\"\n                :custom-attributes=\"contact.custom_attributes\"\n                class=\"even\"\n              />\n              <custom-attribute-selector\n                attribute-type=\"contact_attribute\"\n                :contact-id=\"contact.id\"\n              />\n            </accordion-item>\n          </div>\n          <div v-if=\"element.name === 'contact_labels'\">\n            <accordion-item\n              :title=\"$t('CONTACT_PANEL.SIDEBAR_SECTIONS.CONTACT_LABELS')\"\n              :is-open=\"isContactSidebarItemOpen('is_ct_labels_open')\"\n              @click=\"value => toggleSidebarUIState('is_ct_labels_open', value)\"\n            >\n              <contact-label :contact-id=\"contact.id\" class=\"contact-labels\" />\n            </accordion-item>\n          </div>\n          <div v-if=\"element.name === 'previous_conversation'\">\n            <accordion-item\n              :title=\"\n                $t('CONTACT_PANEL.SIDEBAR_SECTIONS.PREVIOUS_CONVERSATIONS')\n              \"\n              :is-open=\"isContactSidebarItemOpen('is_ct_prev_conv_open')\"\n              @click=\"\n                value => toggleSidebarUIState('is_ct_prev_conv_open', value)\n              \"\n            >\n              <contact-conversations\n                v-if=\"contact.id\"\n                :contact-id=\"contact.id\"\n                conversation-id=\"\"\n              />\n            </accordion-item>\n          </div>\n        </div>\n      </transition-group>\n    </draggable>\n  </div>\n</template>\n\n<script>\nimport AccordionItem from 'dashboard/components/Accordion/AccordionItem';\nimport ContactConversations from 'dashboard/routes/dashboard/conversation/ContactConversations';\nimport ContactInfo from 'dashboard/routes/dashboard/conversation/contact/ContactInfo';\nimport ContactLabel from 'dashboard/routes/dashboard/contacts/components/ContactLabels.vue';\nimport CustomAttributes from 'dashboard/routes/dashboard/conversation/customAttributes/CustomAttributes.vue';\nimport CustomAttributeSelector from 'dashboard/routes/dashboard/conversation/customAttributes/CustomAttributeSelector.vue';\nimport draggable from 'vuedraggable';\nimport uiSettingsMixin from 'dashboard/mixins/uiSettings';\n\nexport default {\n  components: {\n    AccordionItem,\n    ContactConversations,\n    ContactInfo,\n    ContactLabel,\n    CustomAttributes,\n    CustomAttributeSelector,\n    draggable,\n  },\n  mixins: [uiSettingsMixin],\n  props: {\n    contact: {\n      type: Object,\n      default: () => ({}),\n    },\n    onClose: {\n      type: Function,\n      default: () => {},\n    },\n    showAvatar: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  data() {\n    return {\n      dragEnabled: true,\n      contactSidebarItems: [],\n      dragging: false,\n    };\n  },\n  computed: {\n    hasContactAttributes() {\n      const { custom_attributes: customAttributes } = this.contact;\n      return customAttributes && Object.keys(customAttributes).length;\n    },\n  },\n  mounted() {\n    this.contactSidebarItems = this.contactSidebarItemsOrder;\n  },\n  methods: {\n    onDragEnd() {\n      this.dragging = false;\n      this.updateUISettings({\n        contact_sidebar_items_order: this.contactSidebarItems,\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n::v-deep {\n  .contact--profile {\n    padding-bottom: var(--space-slab);\n    margin-bottom: var(--space-normal);\n  }\n}\n.contact--panel {\n  height: 100%;\n  background: white;\n  font-size: var(--font-size-small);\n  overflow-y: auto;\n  overflow: auto;\n  position: relative;\n  border-right: 1px solid var(--color-border);\n}\n\n.list-group {\n  .list-group-item {\n    background-color: var(--white);\n  }\n}\n\n.close-button {\n  position: absolute;\n  right: var(--space-normal);\n  top: 3.6rem;\n  font-size: var(--font-size-big);\n  color: var(--s-500);\n  z-index: 1;\n\n  .close-icon {\n    margin-right: var(--space-smaller);\n  }\n}\n\n.conversation--details {\n  padding: 0 var(--space-normal);\n}\n\n.contact--mute {\n  color: var(--r-400);\n  display: block;\n  text-align: left;\n}\n\n.contact--actions {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/contacts/components"},"metadata":{},"sourceType":"module"}