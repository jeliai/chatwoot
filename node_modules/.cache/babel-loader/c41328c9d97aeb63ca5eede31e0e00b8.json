{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport { mixin as clickaway } from 'vue-clickaway';\nimport ChatAttachmentButton from 'widget/components/ChatAttachment.vue';\nimport ChatSendButton from 'widget/components/ChatSendButton.vue';\nimport configMixin from '../mixins/configMixin';\nimport FluentIcon from 'shared/components/FluentIcon/Index.vue';\nimport ResizableTextArea from 'shared/components/ResizableTextArea';\nimport darkModeMixin from 'widget/mixins/darkModeMixin.js';\n\nvar EmojiInput = function EmojiInput() {\n  return import('shared/components/emoji/EmojiInput');\n};\n\nexport default {\n  name: 'ChatInputWrap',\n  components: {\n    ChatAttachmentButton: ChatAttachmentButton,\n    ChatSendButton: ChatSendButton,\n    EmojiInput: EmojiInput,\n    FluentIcon: FluentIcon,\n    ResizableTextArea: ResizableTextArea\n  },\n  mixins: [clickaway, configMixin, darkModeMixin],\n  props: {\n    onSendMessage: {\n      type: Function,\n      default: function _default() {}\n    },\n    onSendAttachment: {\n      type: Function,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    return {\n      userInput: '',\n      showEmojiPicker: false,\n      isFocused: false\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    widgetColor: 'appConfig/getWidgetColor',\n    isWidgetOpen: 'appConfig/getIsWidgetOpen'\n  })), {}, {\n    showAttachment: function showAttachment() {\n      return this.hasAttachmentsEnabled && this.userInput.length === 0;\n    },\n    showSendButton: function showSendButton() {\n      return this.userInput.length > 0;\n    },\n    inputColor: function inputColor() {\n      return \"\".concat(this.$dm('bg-white', 'dark:bg-slate-600'), \"\\n        \").concat(this.$dm('text-black-900', 'dark:text-slate-50'));\n    },\n    emojiIconColor: function emojiIconColor() {\n      return this.showEmojiPicker ? \"text-woot-500 \".concat(this.$dm('text-black-900', 'dark:text-slate-100')) : \"\".concat(this.$dm('text-black-900', 'dark:text-slate-100'));\n    }\n  }),\n  watch: {\n    isWidgetOpen: function isWidgetOpen(_isWidgetOpen) {\n      if (_isWidgetOpen) {\n        this.focusInput();\n      }\n    }\n  },\n  destroyed: function destroyed() {\n    document.removeEventListener('keypress', this.handleEnterKeyPress);\n  },\n  mounted: function mounted() {\n    document.addEventListener('keypress', this.handleEnterKeyPress);\n\n    if (this.isWidgetOpen) {\n      this.focusInput();\n    }\n  },\n  methods: {\n    onBlur: function onBlur() {\n      this.isFocused = false;\n    },\n    onFocus: function onFocus() {\n      this.isFocused = true;\n    },\n    handleButtonClick: function handleButtonClick() {\n      if (this.userInput && this.userInput.trim()) {\n        this.onSendMessage(this.userInput);\n      }\n\n      this.userInput = '';\n      this.focusInput();\n    },\n    handleEnterKeyPress: function handleEnterKeyPress(e) {\n      if (e.keyCode === 13 && !e.shiftKey) {\n        e.preventDefault();\n        this.handleButtonClick();\n      }\n    },\n    toggleEmojiPicker: function toggleEmojiPicker() {\n      this.showEmojiPicker = !this.showEmojiPicker;\n    },\n    hideEmojiPicker: function hideEmojiPicker(e) {\n      if (this.showEmojiPicker) {\n        e.stopPropagation();\n        this.toggleEmojiPicker();\n      }\n    },\n    emojiOnClick: function emojiOnClick(emoji) {\n      this.userInput = \"\".concat(this.userInput).concat(emoji, \" \");\n    },\n    onTypingOff: function onTypingOff() {\n      this.toggleTyping('off');\n    },\n    onTypingOn: function onTypingOn() {\n      this.toggleTyping('on');\n    },\n    toggleTyping: function toggleTyping(typingStatus) {\n      this.$store.dispatch('conversation/toggleUserTyping', {\n        typingStatus: typingStatus\n      });\n    },\n    focusInput: function focusInput() {\n      this.$refs.chatInput.focus();\n    }\n  }\n};","map":{"version":3,"sources":["ChatInputWrap.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div\n    class=\"chat-message--input is-focused\"\n    :class=\"$dm('bg-white ', 'dark:bg-slate-600')\"\n    @keydown.esc=\"hideEmojiPicker\"\n  >\n    <resizable-text-area\n      id=\"chat-input\"\n      ref=\"chatInput\"\n      v-model=\"userInput\"\n      :aria-label=\"$t('CHAT_PLACEHOLDER')\"\n      :placeholder=\"$t('CHAT_PLACEHOLDER')\"\n      class=\"form-input user-message-input is-focused\"\n      :class=\"inputColor\"\n      @typing-off=\"onTypingOff\"\n      @typing-on=\"onTypingOn\"\n      @focus=\"onFocus\"\n      @blur=\"onBlur\"\n    />\n    <div class=\"button-wrap\">\n      <chat-attachment-button\n        v-if=\"showAttachment\"\n        :class=\"$dm('text-black-900', 'dark:text-slate-100')\"\n        :on-attach=\"onSendAttachment\"\n      />\n      <button\n        v-if=\"hasEmojiPickerEnabled\"\n        class=\"icon-button flex justify-center items-center\"\n        aria-label=\"Emoji picker\"\n        @click=\"toggleEmojiPicker\"\n      >\n        <fluent-icon icon=\"emoji\" :class=\"emojiIconColor\" />\n      </button>\n      <emoji-input\n        v-if=\"showEmojiPicker\"\n        v-on-clickaway=\"hideEmojiPicker\"\n        :on-click=\"emojiOnClick\"\n        @keydown.esc=\"hideEmojiPicker\"\n      />\n      <chat-send-button\n        v-if=\"showSendButton\"\n        :on-click=\"handleButtonClick\"\n        :color=\"widgetColor\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport { mixin as clickaway } from 'vue-clickaway';\n\nimport ChatAttachmentButton from 'widget/components/ChatAttachment.vue';\nimport ChatSendButton from 'widget/components/ChatSendButton.vue';\nimport configMixin from '../mixins/configMixin';\nimport FluentIcon from 'shared/components/FluentIcon/Index.vue';\nimport ResizableTextArea from 'shared/components/ResizableTextArea';\nimport darkModeMixin from 'widget/mixins/darkModeMixin.js';\n\nconst EmojiInput = () => import('shared/components/emoji/EmojiInput');\n\nexport default {\n  name: 'ChatInputWrap',\n  components: {\n    ChatAttachmentButton,\n    ChatSendButton,\n    EmojiInput,\n    FluentIcon,\n    ResizableTextArea,\n  },\n  mixins: [clickaway, configMixin, darkModeMixin],\n  props: {\n    onSendMessage: {\n      type: Function,\n      default: () => {},\n    },\n    onSendAttachment: {\n      type: Function,\n      default: () => {},\n    },\n  },\n\n  data() {\n    return {\n      userInput: '',\n      showEmojiPicker: false,\n      isFocused: false,\n    };\n  },\n\n  computed: {\n    ...mapGetters({\n      widgetColor: 'appConfig/getWidgetColor',\n      isWidgetOpen: 'appConfig/getIsWidgetOpen',\n    }),\n    showAttachment() {\n      return this.hasAttachmentsEnabled && this.userInput.length === 0;\n    },\n    showSendButton() {\n      return this.userInput.length > 0;\n    },\n    inputColor() {\n      return `${this.$dm('bg-white', 'dark:bg-slate-600')}\n        ${this.$dm('text-black-900', 'dark:text-slate-50')}`;\n    },\n    emojiIconColor() {\n      return this.showEmojiPicker\n        ? `text-woot-500 ${this.$dm('text-black-900', 'dark:text-slate-100')}`\n        : `${this.$dm('text-black-900', 'dark:text-slate-100')}`;\n    },\n  },\n  watch: {\n    isWidgetOpen(isWidgetOpen) {\n      if (isWidgetOpen) {\n        this.focusInput();\n      }\n    },\n  },\n  destroyed() {\n    document.removeEventListener('keypress', this.handleEnterKeyPress);\n  },\n  mounted() {\n    document.addEventListener('keypress', this.handleEnterKeyPress);\n    if (this.isWidgetOpen) {\n      this.focusInput();\n    }\n  },\n\n  methods: {\n    onBlur() {\n      this.isFocused = false;\n    },\n    onFocus() {\n      this.isFocused = true;\n    },\n    handleButtonClick() {\n      if (this.userInput && this.userInput.trim()) {\n        this.onSendMessage(this.userInput);\n      }\n      this.userInput = '';\n      this.focusInput();\n    },\n    handleEnterKeyPress(e) {\n      if (e.keyCode === 13 && !e.shiftKey) {\n        e.preventDefault();\n        this.handleButtonClick();\n      }\n    },\n    toggleEmojiPicker() {\n      this.showEmojiPicker = !this.showEmojiPicker;\n    },\n    hideEmojiPicker(e) {\n      if (this.showEmojiPicker) {\n        e.stopPropagation();\n        this.toggleEmojiPicker();\n      }\n    },\n    emojiOnClick(emoji) {\n      this.userInput = `${this.userInput}${emoji} `;\n    },\n    onTypingOff() {\n      this.toggleTyping('off');\n    },\n    onTypingOn() {\n      this.toggleTyping('on');\n    },\n    toggleTyping(typingStatus) {\n      this.$store.dispatch('conversation/toggleUserTyping', { typingStatus });\n    },\n    focusInput() {\n      this.$refs.chatInput.focus();\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import '~widget/assets/scss/variables.scss';\n@import '~widget/assets/scss/mixins.scss';\n\n.chat-message--input {\n  align-items: center;\n  display: flex;\n  padding: 0 $space-small 0 $space-slab;\n  border-radius: 7px;\n\n  &.is-focused {\n    box-shadow: 0 0 0 1px $color-woot, 0 0 2px 3px $color-primary-light;\n  }\n}\n\n.emoji-dialog {\n  right: 0;\n  top: -302px;\n  max-width: 100%;\n\n  &::before {\n    right: $space-one;\n  }\n}\n\n.button-wrap {\n  display: flex;\n  align-items: center;\n  padding-left: $space-small;\n}\n\n.user-message-input {\n  border: 0;\n  height: $space-large;\n  min-height: $space-large;\n  max-height: 2.4 * $space-mega;\n  resize: none;\n  padding: $space-smaller 0;\n  margin-top: $space-small;\n  margin-bottom: $space-small;\n}\n</style>\n"],"sourceRoot":"app/javascript/widget/components"},"metadata":{},"sourceType":"module"}