{"ast":null,"code":"import { __awaiter, __extends, __generator, __spreadArrays } from \"tslib\";\nimport { AnalyticsBrowser } from './browser';\nimport { resolveAliasArguments, resolveArguments, resolvePageArguments, resolveUserArguments } from './core/arguments-resolver';\nimport { invokeCallback } from './core/callback';\nimport { isOffline } from './core/connection';\nimport { Context } from './core/context';\nimport { Emitter } from './core/emitter';\nimport { EventFactory } from './core/events';\nimport { EventQueue } from './core/queue/event-queue';\nimport { Group, User } from './core/user';\nimport autoBind from './lib/bind-all';\nimport { PersistedPriorityQueue } from './lib/priority-queue/persisted';\nimport { version } from './generated/version';\nvar deprecationWarning = 'This is being deprecated and will be not be available in future releases of Analytics JS'; // reference any pre-existing \"analytics\" object so a user can restore the reference\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar globalAny = global;\nvar _analytics = globalAny.analytics;\n\nvar Analytics =\n/** @class */\nfunction (_super) {\n  __extends(Analytics, _super);\n\n  function Analytics(settings, options, queue, user, group) {\n    var _a, _b;\n\n    var _this = _super.call(this) || this;\n\n    _this._debug = false;\n    _this.initialized = false;\n\n    _this.user = function () {\n      return _this._user;\n    };\n\n    _this.init = _this.initialize.bind(_this);\n    var cookieOptions = options === null || options === void 0 ? void 0 : options.cookie;\n    _this.settings = settings;\n    _this.settings.timeout = (_a = _this.settings.timeout) !== null && _a !== void 0 ? _a : 300;\n    _this.queue = queue !== null && queue !== void 0 ? queue : new EventQueue(new PersistedPriorityQueue((options === null || options === void 0 ? void 0 : options.retryQueue) ? 4 : 1, 'event-queue'));\n    _this._user = user !== null && user !== void 0 ? user : new User(options === null || options === void 0 ? void 0 : options.user, cookieOptions).load();\n    _this._group = group !== null && group !== void 0 ? group : new Group(options === null || options === void 0 ? void 0 : options.group, cookieOptions).load();\n    _this.eventFactory = new EventFactory(_this._user);\n    _this.integrations = (_b = options === null || options === void 0 ? void 0 : options.integrations) !== null && _b !== void 0 ? _b : {};\n    _this.options = options !== null && options !== void 0 ? options : {};\n    autoBind(_this);\n    return _this;\n  }\n\n  Analytics.prototype.track = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, name, data, opts, cb, segmentEvent;\n\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        _a = resolveArguments.apply(void 0, args), name = _a[0], data = _a[1], opts = _a[2], cb = _a[3];\n        segmentEvent = this.eventFactory.track(name, data, opts, this.integrations);\n        return [2\n        /*return*/\n        , this.dispatch(segmentEvent, cb).then(function (ctx) {\n          _this.emit('track', name, ctx.event.properties, ctx.event.options);\n\n          return ctx;\n        })];\n      });\n    });\n  };\n\n  Analytics.prototype.page = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, category, page, properties, options, callback, segmentEvent;\n\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        _a = resolvePageArguments.apply(void 0, args), category = _a[0], page = _a[1], properties = _a[2], options = _a[3], callback = _a[4];\n        segmentEvent = this.eventFactory.page(category, page, properties, options, this.integrations);\n        return [2\n        /*return*/\n        , this.dispatch(segmentEvent, callback).then(function (ctx) {\n          _this.emit('page', category, page, ctx.event.properties, ctx.event.options);\n\n          return ctx;\n        })];\n      });\n    });\n  };\n\n  Analytics.prototype.identify = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, id, _traits, options, callback, segmentEvent;\n\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        _a = resolveUserArguments(this._user).apply(void 0, args), id = _a[0], _traits = _a[1], options = _a[2], callback = _a[3];\n\n        this._user.identify(id, _traits);\n\n        segmentEvent = this.eventFactory.identify(this._user.id(), this._user.traits(), options, this.integrations);\n        return [2\n        /*return*/\n        , this.dispatch(segmentEvent, callback).then(function (ctx) {\n          _this.emit('identify', ctx.event.userId, ctx.event.traits, ctx.event.options);\n\n          return ctx;\n        })];\n      });\n    });\n  };\n\n  Analytics.prototype.group = function () {\n    var _this = this;\n\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (args.length === 0) {\n      return this._group;\n    }\n\n    var _a = resolveUserArguments(this._group).apply(void 0, args),\n        id = _a[0],\n        _traits = _a[1],\n        options = _a[2],\n        callback = _a[3];\n\n    this._group.identify(id, _traits);\n\n    var groupId = this._group.id();\n\n    var groupTraits = this._group.traits();\n\n    var segmentEvent = this.eventFactory.group(groupId, groupTraits, options, this.integrations);\n    return this.dispatch(segmentEvent, callback).then(function (ctx) {\n      _this.emit('group', ctx.event.groupId, ctx.event.traits, ctx.event.options);\n\n      return ctx;\n    });\n  };\n\n  Analytics.prototype.alias = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, to, from, options, callback, segmentEvent;\n\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        _a = resolveAliasArguments.apply(void 0, args), to = _a[0], from = _a[1], options = _a[2], callback = _a[3];\n        segmentEvent = this.eventFactory.alias(to, from, options, this.integrations);\n        return [2\n        /*return*/\n        , this.dispatch(segmentEvent, callback).then(function (ctx) {\n          _this.emit('alias', to, from, ctx.event.options);\n\n          return ctx;\n        })];\n      });\n    });\n  };\n\n  Analytics.prototype.screen = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, category, page, properties, options, callback, segmentEvent;\n\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        _a = resolvePageArguments.apply(void 0, args), category = _a[0], page = _a[1], properties = _a[2], options = _a[3], callback = _a[4];\n        segmentEvent = this.eventFactory.screen(category, page, properties, options, this.integrations);\n        return [2\n        /*return*/\n        , this.dispatch(segmentEvent, callback).then(function (ctx) {\n          _this.emit('screen', category, page, ctx.event.properties, ctx.event.options);\n\n          return ctx;\n        })];\n      });\n    });\n  };\n\n  Analytics.prototype.trackClick = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var autotrack;\n\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , import(\n            /* webpackChunkName: \"auto-track\" */\n            './core/auto-track')];\n\n          case 1:\n            autotrack = _b.sent();\n            return [2\n            /*return*/\n            , (_a = autotrack.link).call.apply(_a, __spreadArrays([this], args))];\n        }\n      });\n    });\n  };\n\n  Analytics.prototype.trackLink = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var autotrack;\n\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , import(\n            /* webpackChunkName: \"auto-track\" */\n            './core/auto-track')];\n\n          case 1:\n            autotrack = _b.sent();\n            return [2\n            /*return*/\n            , (_a = autotrack.link).call.apply(_a, __spreadArrays([this], args))];\n        }\n      });\n    });\n  };\n\n  Analytics.prototype.trackSubmit = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var autotrack;\n\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , import(\n            /* webpackChunkName: \"auto-track\" */\n            './core/auto-track')];\n\n          case 1:\n            autotrack = _b.sent();\n            return [2\n            /*return*/\n            , (_a = autotrack.form).call.apply(_a, __spreadArrays([this], args))];\n        }\n      });\n    });\n  };\n\n  Analytics.prototype.trackForm = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var autotrack;\n\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , import(\n            /* webpackChunkName: \"auto-track\" */\n            './core/auto-track')];\n\n          case 1:\n            autotrack = _b.sent();\n            return [2\n            /*return*/\n            , (_a = autotrack.form).call.apply(_a, __spreadArrays([this], args))];\n        }\n      });\n    });\n  };\n\n  Analytics.prototype.register = function () {\n    var plugins = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      plugins[_i] = arguments[_i];\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var ctx, registrations;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            ctx = Context.system();\n            registrations = plugins.map(function (xt) {\n              return _this.queue.register(ctx, xt, _this);\n            });\n            return [4\n            /*yield*/\n            , Promise.all(registrations)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , ctx];\n        }\n      });\n    });\n  };\n\n  Analytics.prototype.deregister = function () {\n    var plugins = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      plugins[_i] = arguments[_i];\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var ctx, deregistrations;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            ctx = Context.system();\n            deregistrations = plugins.map(function (pl) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var plugin;\n                return __generator(this, function (_a) {\n                  plugin = this.queue.plugins.find(function (p) {\n                    return p.name === pl;\n                  });\n\n                  if (plugin) {\n                    return [2\n                    /*return*/\n                    , this.queue.deregister(ctx, plugin, this)];\n                  } else {\n                    ctx.log('warn', \"plugin \" + pl + \" not found\");\n                  }\n\n                  return [2\n                  /*return*/\n                  ];\n                });\n              });\n            });\n            return [4\n            /*yield*/\n            , Promise.all(deregistrations)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , ctx];\n        }\n      });\n    });\n  };\n\n  Analytics.prototype.debug = function (toggle) {\n    // Make sure legacy ajs debug gets turned off if it was enabled before upgrading.\n    if (toggle === false && localStorage.getItem('debug')) {\n      localStorage.removeItem('debug');\n    }\n\n    this._debug = toggle;\n    return this;\n  };\n\n  Analytics.prototype.reset = function () {\n    this._user.reset();\n  };\n\n  Analytics.prototype.timeout = function (timeout) {\n    this.settings.timeout = timeout;\n  };\n\n  Analytics.prototype.dispatch = function (event, callback) {\n    return __awaiter(this, void 0, void 0, function () {\n      var ctx, dispatched;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            ctx = new Context(event);\n\n            if (isOffline() && !this.options.retryQueue) {\n              return [2\n              /*return*/\n              , ctx];\n            }\n\n            if (!this.queue.isEmpty()) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.queue.dispatchSingle(ctx)];\n\n          case 1:\n            dispatched = _a.sent();\n            return [3\n            /*break*/\n            , 4];\n\n          case 2:\n            return [4\n            /*yield*/\n            , this.queue.dispatch(ctx)];\n\n          case 3:\n            dispatched = _a.sent();\n            _a.label = 4;\n\n          case 4:\n            if (!callback) return [3\n            /*break*/\n            , 6];\n            return [4\n            /*yield*/\n            , invokeCallback(dispatched, callback, this.settings.timeout)];\n\n          case 5:\n            dispatched = _a.sent();\n            _a.label = 6;\n\n          case 6:\n            if (this._debug) {\n              dispatched.flush();\n            }\n\n            return [2\n            /*return*/\n            , dispatched];\n        }\n      });\n    });\n  };\n\n  Analytics.prototype.addSourceMiddleware = function (fn) {\n    return __awaiter(this, void 0, void 0, function () {\n      var sourceMiddlewarePlugin, integrations, plugin;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , import(\n            /* webpackChunkName: \"middleware\" */\n            './plugins/middleware')];\n\n          case 1:\n            sourceMiddlewarePlugin = _a.sent().sourceMiddlewarePlugin;\n            integrations = {};\n            this.queue.plugins.forEach(function (plugin) {\n              if (plugin.type === 'destination') {\n                return integrations[plugin.name] = true;\n              }\n            });\n            plugin = sourceMiddlewarePlugin(fn, integrations);\n            return [4\n            /*yield*/\n            , this.register(plugin)];\n\n          case 2:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , this];\n        }\n      });\n    });\n  };\n\n  Analytics.prototype.addDestinationMiddleware = function (integrationName) {\n    var middlewares = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      middlewares[_i - 1] = arguments[_i];\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var legacyDestinations;\n      return __generator(this, function (_a) {\n        legacyDestinations = this.queue.plugins.filter(function (xt) {\n          // xt instanceof LegacyDestination &&\n          return xt.name.toLowerCase() === integrationName.toLowerCase();\n        });\n        legacyDestinations.forEach(function (destination) {\n          destination.addMiddleware.apply(destination, middlewares);\n        });\n        return [2\n        /*return*/\n        , this];\n      });\n    });\n  };\n\n  Analytics.prototype.setAnonymousId = function (id) {\n    return this._user.anonymousId(id);\n  };\n\n  Analytics.prototype.queryString = function (query) {\n    return __awaiter(this, void 0, void 0, function () {\n      var queryString;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , import(\n            /* webpackChunkName: \"queryString\" */\n            './core/query-string')];\n\n          case 1:\n            queryString = _a.sent().queryString;\n            return [2\n            /*return*/\n            , queryString(this, query)];\n        }\n      });\n    });\n  };\n  /**\n   * @deprecated This function does not register a destination plugin.\n   *\n   * Instantiates a legacy Analytics.js destination.\n   *\n   * This function does not register the destination as an Analytics.JS plugin,\n   * all the it does it to invoke the factory function back.\n   */\n\n\n  Analytics.prototype.use = function (legacyPluginFactory) {\n    legacyPluginFactory(this);\n    return this;\n  };\n\n  Analytics.prototype.ready = function (callback) {\n    if (callback === void 0) {\n      callback = function callback(res) {\n        return res;\n      };\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , Promise.all(this.queue.plugins.map(function (i) {\n          return i.ready ? i.ready() : Promise.resolve();\n        })).then(function (res) {\n          callback(res);\n          return res;\n        })];\n      });\n    });\n  }; // analytics-classic api\n\n\n  Analytics.prototype.noConflict = function () {\n    console.warn(deprecationWarning);\n    window.analytics = _analytics !== null && _analytics !== void 0 ? _analytics : this;\n    return this;\n  };\n\n  Analytics.prototype.normalize = function (msg) {\n    console.warn(deprecationWarning);\n    return this.eventFactory.normalize(msg);\n  };\n\n  Object.defineProperty(Analytics.prototype, \"failedInitializations\", {\n    get: function get() {\n      console.warn(deprecationWarning);\n      return this.queue.failedInitializations;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Analytics.prototype, \"VERSION\", {\n    get: function get() {\n      return version;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Analytics.prototype.initialize = function (settings, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            console.warn(deprecationWarning);\n            if (!settings) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , AnalyticsBrowser.load(settings, options)];\n\n          case 1:\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            this.options = options || {};\n            return [2\n            /*return*/\n            , this];\n        }\n      });\n    });\n  };\n\n  Analytics.prototype.pageview = function (url) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            console.warn(deprecationWarning);\n            return [4\n            /*yield*/\n            , this.page({\n              path: url\n            })];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , this];\n        }\n      });\n    });\n  };\n\n  Object.defineProperty(Analytics.prototype, \"plugins\", {\n    get: function get() {\n      var _a;\n\n      console.warn(deprecationWarning); // @ts-expect-error\n\n      return (_a = this._plugins) !== null && _a !== void 0 ? _a : {};\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Analytics.prototype, \"Integrations\", {\n    get: function get() {\n      console.warn(deprecationWarning);\n      var integrations = this.queue.plugins.filter(function (plugin) {\n        return plugin.type === 'destination';\n      }).reduce(function (acc, plugin) {\n        var name = plugin.name.toLowerCase().replace('.', '').split(' ').join('-') + \"Integration\"; // @ts-expect-error\n\n        var integration = window[name];\n\n        if (!integration) {\n          return acc;\n        }\n\n        var nested = integration.Integration; // hack - Google Analytics function resides in the \"Integration\" field\n\n        if (nested) {\n          acc[plugin.name] = nested;\n          return acc;\n        }\n\n        acc[plugin.name] = integration;\n        return acc;\n      }, {});\n      return integrations;\n    },\n    enumerable: false,\n    configurable: true\n  }); // analytics-classic stubs\n\n  Analytics.prototype.log = function () {\n    console.warn(deprecationWarning);\n    return;\n  };\n\n  Analytics.prototype.addIntegrationMiddleware = function () {\n    console.warn(deprecationWarning);\n    return;\n  };\n\n  Analytics.prototype.listeners = function () {\n    console.warn(deprecationWarning);\n    return;\n  };\n\n  Analytics.prototype.addEventListener = function () {\n    console.warn(deprecationWarning);\n    return;\n  };\n\n  Analytics.prototype.removeAllListeners = function () {\n    console.warn(deprecationWarning);\n    return;\n  };\n\n  Analytics.prototype.removeListener = function () {\n    console.warn(deprecationWarning);\n    return;\n  };\n\n  Analytics.prototype.removeEventListener = function () {\n    console.warn(deprecationWarning);\n    return;\n  };\n\n  Analytics.prototype.hasListeners = function () {\n    console.warn(deprecationWarning);\n    return;\n  }; // This function is only used to add GA and Appcue, but these are already being added to Integrations by AJSN\n\n\n  Analytics.prototype.addIntegration = function () {\n    console.warn(deprecationWarning);\n    return;\n  };\n\n  Analytics.prototype.add = function () {\n    console.warn(deprecationWarning);\n    return;\n  }; // snippet function\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  Analytics.prototype.push = function (args) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var an = this;\n    var method = args.shift();\n\n    if (method) {\n      if (!an[method]) return;\n    }\n\n    an[method].apply(this, args);\n  };\n\n  return Analytics;\n}(Emitter);\n\nexport { Analytics };","map":null,"metadata":{},"sourceType":"module"}