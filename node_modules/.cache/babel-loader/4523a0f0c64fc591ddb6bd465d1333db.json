{"ast":null,"code":"import \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { required, minLength } from 'vuelidate/lib/validators';\nimport alertMixin from 'shared/mixins/alertMixin';\nexport default {\n  mixins: [alertMixin],\n  props: {\n    filterType: {\n      type: Number,\n      default: 0\n    },\n    customViewsQuery: {\n      type: Object,\n      default: function _default() {}\n    },\n    openLastSavedItem: {\n      type: Function,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    return {\n      show: true,\n      name: ''\n    };\n  },\n  computed: {\n    isButtonDisabled: function isButtonDisabled() {\n      return this.$v.name.$invalid;\n    }\n  },\n  validations: {\n    name: {\n      required: required,\n      minLength: minLength(1)\n    }\n  },\n  methods: {\n    onClose: function onClose() {\n      this.$emit('close');\n    },\n    saveCustomViews: function saveCustomViews() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var errorMessage;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.$v.$touch();\n\n                if (!_this.$v.$invalid) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                _context.prev = 3;\n                _context.next = 6;\n                return _this.$store.dispatch('customViews/create', {\n                  name: _this.name,\n                  filter_type: _this.filterType,\n                  query: _this.customViewsQuery\n                });\n\n              case 6:\n                _this.alertMessage = _this.filterType === 0 ? _this.$t('FILTER.CUSTOM_VIEWS.ADD.API_FOLDERS.SUCCESS_MESSAGE') : _this.$t('FILTER.CUSTOM_VIEWS.ADD.API_SEGMENTS.SUCCESS_MESSAGE');\n\n                _this.onClose();\n\n                _context.next = 14;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](3);\n                errorMessage = _context.t0 === null || _context.t0 === void 0 ? void 0 : _context.t0.message;\n                _this.alertMessage = errorMessage || _this.filterType === 0 ? _this.$t('FILTER.CUSTOM_VIEWS.ADD.API_FOLDERS.ERROR_MESSAGE') : _this.$t('FILTER.CUSTOM_VIEWS.ADD.API_SEGMENTS.ERROR_MESSAGE');\n\n              case 14:\n                _context.prev = 14;\n\n                _this.showAlert(_this.alertMessage);\n\n                return _context.finish(14);\n\n              case 17:\n                _this.openLastSavedItem();\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[3, 10, 14, 17]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"sources":["AddCustomViews.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,SAAA,QAAA,EAAA,SAAA,QAAA,0BAAA;AACA,OAAA,UAAA,MAAA,0BAAA;AAEA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,UAAA,CADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,gBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA,KALA;AASA,IAAA,iBAAA,EAAA;AACA,MAAA,IAAA,EAAA,QADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA;AATA,GAFA;AAiBA,EAAA,IAjBA,kBAiBA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAAA;AAIA,GAtBA;AAwBA,EAAA,QAAA,EAAA;AACA,IAAA,gBADA,8BACA;AACA,aAAA,KAAA,EAAA,CAAA,IAAA,CAAA,QAAA;AACA;AAHA,GAxBA;AA8BA,EAAA,WAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,QAAA,EAAA,QADA;AAEA,MAAA,SAAA,EAAA,SAAA,CAAA,CAAA;AAFA;AADA,GA9BA;AAqCA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,WAAA,KAAA,CAAA,OAAA;AACA,KAHA;AAIA,IAAA,eAJA,6BAIA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,KAAA,CAAA,EAAA,CAAA,MAAA;;AADA,qBAEA,KAAA,CAAA,EAAA,CAAA,QAFA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA,uBAMA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,oBAAA,EAAA;AACA,kBAAA,IAAA,EAAA,KAAA,CAAA,IADA;AAEA,kBAAA,WAAA,EAAA,KAAA,CAAA,UAFA;AAGA,kBAAA,KAAA,EAAA,KAAA,CAAA;AAHA,iBAAA,CANA;;AAAA;AAWA,gBAAA,KAAA,CAAA,YAAA,GACA,KAAA,CAAA,UAAA,KAAA,CAAA,GACA,KAAA,CAAA,EAAA,CAAA,qDAAA,CADA,GAEA,KAAA,CAAA,EAAA,CAAA,sDAAA,CAHA;;AAIA,gBAAA,KAAA,CAAA,OAAA;;AAfA;AAAA;;AAAA;AAAA;AAAA;AAiBA,gBAAA,YAjBA,6DAiBA,YAAA,OAjBA;AAkBA,gBAAA,KAAA,CAAA,YAAA,GACA,YAAA,IAAA,KAAA,CAAA,UAAA,KAAA,CAAA,GACA,KAAA,CAAA,EAAA,CAAA,mDAAA,CADA,GAEA,KAAA,CAAA,EAAA,CAAA,oDAAA,CAHA;;AAlBA;AAAA;;AAuBA,gBAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,YAAA;;AAvBA;;AAAA;AAyBA,gBAAA,KAAA,CAAA,iBAAA;;AAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0BA;AA9BA;AArCA,CAAA","sourcesContent":["<template>\n  <woot-modal :show.sync=\"show\" :on-close=\"onClose\">\n    <woot-modal-header :header-title=\"$t('FILTER.CUSTOM_VIEWS.ADD.TITLE')\" />\n    <form class=\"row\" @submit.prevent=\"saveCustomViews\">\n      <div class=\"medium-12 columns\">\n        <woot-input\n          v-model=\"name\"\n          :label=\"$t('FILTER.CUSTOM_VIEWS.ADD.LABEL')\"\n          type=\"text\"\n          :error=\"\n            $v.name.$error ? $t('FILTER.CUSTOM_VIEWS.ADD.ERROR_MESSAGE') : ''\n          \"\n          :class=\"{ error: $v.name.$error }\"\n          :placeholder=\"$t('FILTER.CUSTOM_VIEWS.ADD.PLACEHOLDER')\"\n          @blur=\"$v.name.$touch\"\n        />\n\n        <div class=\"modal-footer\">\n          <woot-button :disabled=\"isButtonDisabled\">\n            {{ $t('FILTER.CUSTOM_VIEWS.ADD.SAVE_BUTTON') }}\n          </woot-button>\n          <woot-button variant=\"clear\" @click.prevent=\"onClose\">\n            {{ $t('FILTER.CUSTOM_VIEWS.ADD.CANCEL_BUTTON') }}\n          </woot-button>\n        </div>\n      </div>\n    </form>\n  </woot-modal>\n</template>\n\n<script>\nimport { required, minLength } from 'vuelidate/lib/validators';\nimport alertMixin from 'shared/mixins/alertMixin';\n\nexport default {\n  mixins: [alertMixin],\n  props: {\n    filterType: {\n      type: Number,\n      default: 0,\n    },\n    customViewsQuery: {\n      type: Object,\n      default: () => {},\n    },\n    openLastSavedItem: {\n      type: Function,\n      default: () => {},\n    },\n  },\n\n  data() {\n    return {\n      show: true,\n      name: '',\n    };\n  },\n\n  computed: {\n    isButtonDisabled() {\n      return this.$v.name.$invalid;\n    },\n  },\n\n  validations: {\n    name: {\n      required,\n      minLength: minLength(1),\n    },\n  },\n\n  methods: {\n    onClose() {\n      this.$emit('close');\n    },\n    async saveCustomViews() {\n      this.$v.$touch();\n      if (this.$v.$invalid) {\n        return;\n      }\n      try {\n        await this.$store.dispatch('customViews/create', {\n          name: this.name,\n          filter_type: this.filterType,\n          query: this.customViewsQuery,\n        });\n        this.alertMessage =\n          this.filterType === 0\n            ? this.$t('FILTER.CUSTOM_VIEWS.ADD.API_FOLDERS.SUCCESS_MESSAGE')\n            : this.$t('FILTER.CUSTOM_VIEWS.ADD.API_SEGMENTS.SUCCESS_MESSAGE');\n        this.onClose();\n      } catch (error) {\n        const errorMessage = error?.message;\n        this.alertMessage =\n          errorMessage || this.filterType === 0\n            ? this.$t('FILTER.CUSTOM_VIEWS.ADD.API_FOLDERS.ERROR_MESSAGE')\n            : this.$t('FILTER.CUSTOM_VIEWS.ADD.API_SEGMENTS.ERROR_MESSAGE');\n      } finally {\n        this.showAlert(this.alertMessage);\n      }\n      this.openLastSavedItem();\n    },\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/customviews"},"metadata":{},"sourceType":"module"}