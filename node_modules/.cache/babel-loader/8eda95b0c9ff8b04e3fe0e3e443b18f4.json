{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport DashboardAppModal from './DashboardAppModal.vue';\nimport DashboardAppsRow from './DashboardAppsRow.vue';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport globalConfigMixin from 'shared/mixins/globalConfigMixin';\nexport default {\n  components: {\n    DashboardAppModal: DashboardAppModal,\n    DashboardAppsRow: DashboardAppsRow\n  },\n  mixins: [alertMixin, globalConfigMixin],\n  data: function data() {\n    return {\n      loading: {},\n      showDashboardAppPopup: false,\n      showDeleteConfirmationPopup: false,\n      selectedApp: {},\n      mode: 'CREATE'\n    };\n  },\n  computed: _objectSpread({}, mapGetters({\n    globalConfig: 'globalConfig/get',\n    records: 'dashboardApps/getRecords',\n    uiFlags: 'dashboardApps/getUIFlags'\n  })),\n  mounted: function mounted() {\n    this.$store.dispatch('dashboardApps/get');\n  },\n  methods: {\n    toggleDashboardAppPopup: function toggleDashboardAppPopup() {\n      this.showDashboardAppPopup = !this.showDashboardAppPopup;\n      this.selectedApp = {};\n    },\n    openDeletePopup: function openDeletePopup(response) {\n      this.showDeleteConfirmationPopup = true;\n      this.selectedApp = response;\n    },\n    openCreatePopup: function openCreatePopup() {\n      this.mode = 'CREATE';\n      this.selectedApp = {};\n      this.showDashboardAppPopup = true;\n    },\n    closeDeletePopup: function closeDeletePopup() {\n      this.showDeleteConfirmationPopup = false;\n    },\n    editApp: function editApp(app) {\n      this.loading[app.id] = true;\n      this.mode = 'UPDATE';\n      this.selectedApp = app;\n      this.showDashboardAppPopup = true;\n    },\n    confirmDeletion: function confirmDeletion() {\n      this.loading[this.selectedApp.id] = true;\n      this.closeDeletePopup();\n      this.deleteApp(this.selectedApp.id);\n    },\n    deleteApp: function deleteApp(id) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _this.$store.dispatch('dashboardApps/delete', id);\n\n              case 3:\n                _this.showAlert(_this.$t('INTEGRATION_SETTINGS.DASHBOARD_APPS.DELETE.API_SUCCESS'));\n\n                _context.next = 9;\n                break;\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](0);\n\n                _this.showAlert(_this.$t('INTEGRATION_SETTINGS.DASHBOARD_APPS.DELETE.API_ERROR'));\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 6]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoFA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,iBAAA,MAAA,yBAAA;AACA,OAAA,gBAAA,MAAA,wBAAA;AACA,OAAA,UAAA,MAAA,0BAAA;AACA,OAAA,iBAAA,MAAA,iCAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,iBAAA,EAAA,iBADA;AAEA,IAAA,gBAAA,EAAA;AAFA,GADA;AAKA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,iBAAA,CALA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,qBAAA,EAAA,KAFA;AAGA,MAAA,2BAAA,EAAA,KAHA;AAIA,MAAA,WAAA,EAAA,EAJA;AAKA,MAAA,IAAA,EAAA;AALA,KAAA;AAOA,GAdA;AAeA,EAAA,QAAA,oBACA,UAAA,CAAA;AACA,IAAA,YAAA,EAAA,kBADA;AAEA,IAAA,OAAA,EAAA,0BAFA;AAGA,IAAA,OAAA,EAAA;AAHA,GAAA,CADA,CAfA;AAsBA,EAAA,OAtBA,qBAsBA;AACA,SAAA,MAAA,CAAA,QAAA,CAAA,mBAAA;AACA,GAxBA;AAyBA,EAAA,OAAA,EAAA;AACA,IAAA,uBADA,qCACA;AACA,WAAA,qBAAA,GAAA,CAAA,KAAA,qBAAA;AACA,WAAA,WAAA,GAAA,EAAA;AACA,KAJA;AAKA,IAAA,eALA,2BAKA,QALA,EAKA;AACA,WAAA,2BAAA,GAAA,IAAA;AACA,WAAA,WAAA,GAAA,QAAA;AACA,KARA;AASA,IAAA,eATA,6BASA;AACA,WAAA,IAAA,GAAA,QAAA;AACA,WAAA,WAAA,GAAA,EAAA;AACA,WAAA,qBAAA,GAAA,IAAA;AACA,KAbA;AAcA,IAAA,gBAdA,8BAcA;AACA,WAAA,2BAAA,GAAA,KAAA;AACA,KAhBA;AAiBA,IAAA,OAjBA,mBAiBA,GAjBA,EAiBA;AACA,WAAA,OAAA,CAAA,GAAA,CAAA,EAAA,IAAA,IAAA;AACA,WAAA,IAAA,GAAA,QAAA;AACA,WAAA,WAAA,GAAA,GAAA;AACA,WAAA,qBAAA,GAAA,IAAA;AACA,KAtBA;AAuBA,IAAA,eAvBA,6BAuBA;AACA,WAAA,OAAA,CAAA,KAAA,WAAA,CAAA,EAAA,IAAA,IAAA;AACA,WAAA,gBAAA;AACA,WAAA,SAAA,CAAA,KAAA,WAAA,CAAA,EAAA;AACA,KA3BA;AA4BA,IAAA,SA5BA,qBA4BA,EA5BA,EA4BA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,sBAAA,EAAA,EAAA,CAFA;;AAAA;AAGA,gBAAA,KAAA,CAAA,SAAA,CACA,KAAA,CAAA,EAAA,CAAA,wDAAA,CADA;;AAHA;AAAA;;AAAA;AAAA;AAAA;;AAOA,gBAAA,KAAA,CAAA,SAAA,CACA,KAAA,CAAA,EAAA,CAAA,sDAAA,CADA;;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAvCA;AAzBA,CAAA","sourcesContent":["<template>\n  <div class=\"row content-box full-height\">\n    <woot-button\n      color-scheme=\"success\"\n      class-names=\"button--fixed-right-top\"\n      icon=\"add-circle\"\n      @click=\"openCreatePopup\"\n    >\n      {{ $t('INTEGRATION_SETTINGS.DASHBOARD_APPS.HEADER_BTN_TXT') }}\n    </woot-button>\n    <div class=\"row\">\n      <div class=\"small-8 columns with-right-space \">\n        <p\n          v-if=\"!uiFlags.isFetching && !records.length\"\n          class=\"no-items-error-message\"\n        >\n          {{ $t('INTEGRATION_SETTINGS.DASHBOARD_APPS.LIST.404') }}\n        </p>\n        <woot-loading-state\n          v-if=\"uiFlags.isFetching\"\n          :message=\"$t('INTEGRATION_SETTINGS.DASHBOARD_APPS.LIST.LOADING')\"\n        />\n        <table v-if=\"!uiFlags.isFetching && records.length\" class=\"woot-table\">\n          <thead>\n            <th\n              v-for=\"thHeader in $t(\n                'INTEGRATION_SETTINGS.DASHBOARD_APPS.LIST.TABLE_HEADER'\n              )\"\n              :key=\"thHeader\"\n            >\n              {{ thHeader }}\n            </th>\n          </thead>\n          <tbody>\n            <dashboard-apps-row\n              v-for=\"(dashboardAppItem, index) in records\"\n              :key=\"dashboardAppItem.id\"\n              :index=\"index\"\n              :app=\"dashboardAppItem\"\n              @edit=\"editApp\"\n              @delete=\"openDeletePopup\"\n            />\n          </tbody>\n        </table>\n      </div>\n\n      <div class=\"small-4 columns\">\n        <span\n          v-dompurify-html=\"\n            useInstallationName(\n              $t('INTEGRATION_SETTINGS.DASHBOARD_APPS.SIDEBAR_TXT'),\n              globalConfig.installationName\n            )\n          \"\n        />\n      </div>\n    </div>\n\n    <dashboard-app-modal\n      v-if=\"showDashboardAppPopup\"\n      :show=\"showDashboardAppPopup\"\n      :mode=\"mode\"\n      :selected-app-data=\"selectedApp\"\n      @close=\"toggleDashboardAppPopup\"\n    />\n\n    <woot-delete-modal\n      :show.sync=\"showDeleteConfirmationPopup\"\n      :on-close=\"closeDeletePopup\"\n      :on-confirm=\"confirmDeletion\"\n      :title=\"$t('INTEGRATION_SETTINGS.DASHBOARD_APPS.DELETE.TITLE')\"\n      :message=\"\n        $t('INTEGRATION_SETTINGS.DASHBOARD_APPS.DELETE.MESSAGE', {\n          appName: selectedApp.title,\n        })\n      \"\n      :confirm-text=\"\n        $t('INTEGRATION_SETTINGS.DASHBOARD_APPS.DELETE.CONFIRM_YES')\n      \"\n      :reject-text=\"$t('INTEGRATION_SETTINGS.DASHBOARD_APPS.DELETE.CONFIRM_NO')\"\n    />\n  </div>\n</template>\n<script>\nimport { mapGetters } from 'vuex';\nimport DashboardAppModal from './DashboardAppModal.vue';\nimport DashboardAppsRow from './DashboardAppsRow.vue';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport globalConfigMixin from 'shared/mixins/globalConfigMixin';\n\nexport default {\n  components: {\n    DashboardAppModal,\n    DashboardAppsRow,\n  },\n  mixins: [alertMixin, globalConfigMixin],\n  data() {\n    return {\n      loading: {},\n      showDashboardAppPopup: false,\n      showDeleteConfirmationPopup: false,\n      selectedApp: {},\n      mode: 'CREATE',\n    };\n  },\n  computed: {\n    ...mapGetters({\n      globalConfig: 'globalConfig/get',\n      records: 'dashboardApps/getRecords',\n      uiFlags: 'dashboardApps/getUIFlags',\n    }),\n  },\n  mounted() {\n    this.$store.dispatch('dashboardApps/get');\n  },\n  methods: {\n    toggleDashboardAppPopup() {\n      this.showDashboardAppPopup = !this.showDashboardAppPopup;\n      this.selectedApp = {};\n    },\n    openDeletePopup(response) {\n      this.showDeleteConfirmationPopup = true;\n      this.selectedApp = response;\n    },\n    openCreatePopup() {\n      this.mode = 'CREATE';\n      this.selectedApp = {};\n      this.showDashboardAppPopup = true;\n    },\n    closeDeletePopup() {\n      this.showDeleteConfirmationPopup = false;\n    },\n    editApp(app) {\n      this.loading[app.id] = true;\n      this.mode = 'UPDATE';\n      this.selectedApp = app;\n      this.showDashboardAppPopup = true;\n    },\n    confirmDeletion() {\n      this.loading[this.selectedApp.id] = true;\n      this.closeDeletePopup();\n      this.deleteApp(this.selectedApp.id);\n    },\n    async deleteApp(id) {\n      try {\n        await this.$store.dispatch('dashboardApps/delete', id);\n        this.showAlert(\n          this.$t('INTEGRATION_SETTINGS.DASHBOARD_APPS.DELETE.API_SUCCESS')\n        );\n      } catch (error) {\n        this.showAlert(\n          this.$t('INTEGRATION_SETTINGS.DASHBOARD_APPS.DELETE.API_ERROR')\n        );\n      }\n    },\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/settings/integrations/DashboardApps"},"metadata":{},"sourceType":"module"}