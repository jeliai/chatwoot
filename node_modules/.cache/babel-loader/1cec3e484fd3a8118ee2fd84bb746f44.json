{"ast":null,"code":"import \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.promise.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport router from '../../../../index';\nimport PageHeader from '../../SettingsSubPageHeader';\nimport AgentSelector from '../AgentSelector';\nexport default {\n  components: {\n    PageHeader: PageHeader,\n    AgentSelector: AgentSelector\n  },\n  mixins: [alertMixin],\n  props: {\n    team: {\n      type: Object,\n      default: function _default() {}\n    }\n  },\n  validations: {\n    selectedAgents: {\n      isEmpty: function isEmpty() {\n        return !!this.selectedAgents.length;\n      }\n    }\n  },\n  data: function data() {\n    return {\n      selectedAgents: [],\n      isCreating: false\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    agentList: 'agents/getAgents'\n  })), {}, {\n    teamId: function teamId() {\n      return this.$route.params.teamId;\n    },\n    headerTitle: function headerTitle() {\n      return this.$t('TEAMS_SETTINGS.ADD.TITLE', {\n        teamName: this.currentTeam.name\n      });\n    },\n    currentTeam: function currentTeam() {\n      return this.$store.getters['teams/getTeam'](this.teamId);\n    }\n  }),\n  mounted: function mounted() {\n    this.$store.dispatch('agents/get');\n  },\n  methods: {\n    updateSelectedAgents: function updateSelectedAgents(newAgentList) {\n      this.$v.selectedAgents.$touch();\n      this.selectedAgents = _toConsumableArray(newAgentList);\n    },\n    selectAllAgents: function selectAllAgents() {\n      this.selectedAgents = this.agentList.map(function (agent) {\n        return agent.id;\n      });\n    },\n    addAgents: function addAgents() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var teamId, selectedAgents;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.isCreating = true;\n                teamId = _this.teamId, selectedAgents = _this.selectedAgents;\n                _context.prev = 2;\n                _context.next = 5;\n                return _this.$store.dispatch('teamMembers/create', {\n                  teamId: teamId,\n                  agentsList: selectedAgents\n                });\n\n              case 5:\n                router.replace({\n                  name: 'settings_teams_finish',\n                  params: {\n                    page: 'new',\n                    teamId: teamId\n                  }\n                });\n\n                _this.$store.dispatch('teams/get');\n\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](2);\n\n                _this.showAlert(_context.t0.message);\n\n              case 12:\n                _this.isCreating = false;\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 9]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"sources":["AddAgents.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,SAAA,UAAA,QAAA,MAAA;AAEA,OAAA,UAAA,MAAA,0BAAA;AACA,OAAA,MAAA,MAAA,mBAAA;AACA,OAAA,UAAA,MAAA,6BAAA;AACA,OAAA,aAAA,MAAA,kBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA,UADA;AAEA,IAAA,aAAA,EAAA;AAFA,GADA;AAKA,EAAA,MAAA,EAAA,CAAA,UAAA,CALA;AAMA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA;AADA,GANA;AAYA,EAAA,WAAA,EAAA;AACA,IAAA,cAAA,EAAA;AACA,MAAA,OADA,qBACA;AACA,eAAA,CAAA,CAAA,KAAA,cAAA,CAAA,MAAA;AACA;AAHA;AADA,GAZA;AAoBA,EAAA,IApBA,kBAoBA;AACA,WAAA;AACA,MAAA,cAAA,EAAA,EADA;AAEA,MAAA,UAAA,EAAA;AAFA,KAAA;AAIA,GAzBA;AA2BA,EAAA,QAAA,kCACA,UAAA,CAAA;AACA,IAAA,SAAA,EAAA;AADA,GAAA,CADA;AAKA,IAAA,MALA,oBAKA;AACA,aAAA,KAAA,MAAA,CAAA,MAAA,CAAA,MAAA;AACA,KAPA;AAQA,IAAA,WARA,yBAQA;AACA,aAAA,KAAA,EAAA,CAAA,0BAAA,EAAA;AACA,QAAA,QAAA,EAAA,KAAA,WAAA,CAAA;AADA,OAAA,CAAA;AAGA,KAZA;AAaA,IAAA,WAbA,yBAaA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,eAAA,EAAA,KAAA,MAAA,CAAA;AACA;AAfA,IA3BA;AA6CA,EAAA,OA7CA,qBA6CA;AACA,SAAA,MAAA,CAAA,QAAA,CAAA,YAAA;AACA,GA/CA;AAiDA,EAAA,OAAA,EAAA;AACA,IAAA,oBADA,gCACA,YADA,EACA;AACA,WAAA,EAAA,CAAA,cAAA,CAAA,MAAA;AACA,WAAA,cAAA,sBAAA,YAAA;AACA,KAJA;AAKA,IAAA,eALA,6BAKA;AACA,WAAA,cAAA,GAAA,KAAA,SAAA,CAAA,GAAA,CAAA,UAAA,KAAA;AAAA,eAAA,KAAA,CAAA,EAAA;AAAA,OAAA,CAAA;AACA,KAPA;AAQA,IAAA,SARA,uBAQA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,KAAA,CAAA,UAAA,GAAA,IAAA;AACA,gBAAA,MAFA,GAEA,KAFA,CAEA,MAFA,EAEA,cAFA,GAEA,KAFA,CAEA,cAFA;AAAA;AAAA;AAAA,uBAKA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,oBAAA,EAAA;AACA,kBAAA,MAAA,EAAA,MADA;AAEA,kBAAA,UAAA,EAAA;AAFA,iBAAA,CALA;;AAAA;AASA,gBAAA,MAAA,CAAA,OAAA,CAAA;AACA,kBAAA,IAAA,EAAA,uBADA;AAEA,kBAAA,MAAA,EAAA;AACA,oBAAA,IAAA,EAAA,KADA;AAEA,oBAAA,MAAA,EAAA;AAFA;AAFA,iBAAA;;AAOA,gBAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,WAAA;;AAhBA;AAAA;;AAAA;AAAA;AAAA;;AAkBA,gBAAA,KAAA,CAAA,SAAA,CAAA,YAAA,OAAA;;AAlBA;AAoBA,gBAAA,KAAA,CAAA,UAAA,GAAA,KAAA;;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA;AA7BA;AAjDA,CAAA","sourcesContent":["<template>\n  <div class=\"wizard-body columns content-box small-9\">\n    <form class=\"row\" @submit.prevent=\"addAgents\">\n      <div class=\"medium-12 columns\">\n        <page-header\n          :header-title=\"headerTitle\"\n          :header-content=\"$t('TEAMS_SETTINGS.ADD.DESC')\"\n        />\n      </div>\n\n      <div class=\"medium-12 columns\">\n        <div v-if=\"$v.selectedAgents.$error\">\n          <p class=\"error-message\">\n            {{ $t('TEAMS_SETTINGS.ADD.AGENT_VALIDATION_ERROR') }}\n          </p>\n        </div>\n        <agent-selector\n          :agent-list=\"agentList\"\n          :selected-agents=\"selectedAgents\"\n          :update-selected-agents=\"updateSelectedAgents\"\n          :is-working=\"isCreating\"\n          :submit-button-text=\"$t('TEAMS_SETTINGS.ADD.BUTTON_TEXT')\"\n        />\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\n\nimport alertMixin from 'shared/mixins/alertMixin';\nimport router from '../../../../index';\nimport PageHeader from '../../SettingsSubPageHeader';\nimport AgentSelector from '../AgentSelector';\n\nexport default {\n  components: {\n    PageHeader,\n    AgentSelector,\n  },\n  mixins: [alertMixin],\n  props: {\n    team: {\n      type: Object,\n      default: () => {},\n    },\n  },\n  validations: {\n    selectedAgents: {\n      isEmpty() {\n        return !!this.selectedAgents.length;\n      },\n    },\n  },\n\n  data() {\n    return {\n      selectedAgents: [],\n      isCreating: false,\n    };\n  },\n\n  computed: {\n    ...mapGetters({\n      agentList: 'agents/getAgents',\n    }),\n\n    teamId() {\n      return this.$route.params.teamId;\n    },\n    headerTitle() {\n      return this.$t('TEAMS_SETTINGS.ADD.TITLE', {\n        teamName: this.currentTeam.name,\n      });\n    },\n    currentTeam() {\n      return this.$store.getters['teams/getTeam'](this.teamId);\n    },\n  },\n\n  mounted() {\n    this.$store.dispatch('agents/get');\n  },\n\n  methods: {\n    updateSelectedAgents(newAgentList) {\n      this.$v.selectedAgents.$touch();\n      this.selectedAgents = [...newAgentList];\n    },\n    selectAllAgents() {\n      this.selectedAgents = this.agentList.map(agent => agent.id);\n    },\n    async addAgents() {\n      this.isCreating = true;\n      const { teamId, selectedAgents } = this;\n\n      try {\n        await this.$store.dispatch('teamMembers/create', {\n          teamId,\n          agentsList: selectedAgents,\n        });\n        router.replace({\n          name: 'settings_teams_finish',\n          params: {\n            page: 'new',\n            teamId,\n          },\n        });\n        this.$store.dispatch('teams/get');\n      } catch (error) {\n        this.showAlert(error.message);\n      }\n      this.isCreating = false;\n    },\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/settings/teams/Create"},"metadata":{},"sourceType":"module"}