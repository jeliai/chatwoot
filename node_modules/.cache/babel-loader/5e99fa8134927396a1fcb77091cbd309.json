{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { frontendURL } from '../../../helper/URLHelper';\nimport account from './account/account.routes';\nimport agent from './agents/agent.routes';\nimport agentBot from './agentBots/agentBot.routes';\nimport attributes from './attributes/attributes.routes';\nimport automation from './automation/automation.routes';\nimport billing from './billing/billing.routes';\nimport campaigns from './campaigns/campaigns.routes';\nimport canned from './canned/canned.routes';\nimport inbox from './inbox/inbox.routes';\nimport integrationapps from './integrationapps/integrations.routes';\nimport integrations from './integrations/integrations.routes';\nimport labels from './labels/labels.routes';\nimport macros from './macros/macros.routes';\nimport profile from './profile/profile.routes';\nimport reports from './reports/reports.routes';\nimport store from '../../../store';\nimport teams from './teams/teams.routes';\nexport default {\n  routes: [{\n    path: frontendURL('accounts/:accountId/settings'),\n    name: 'settings_home',\n    roles: ['administrator', 'agent'],\n    redirect: function redirect() {\n      if (store.getters.getCurrentRole === 'administrator') {\n        return frontendURL('accounts/:accountId/settings/general');\n      }\n\n      return frontendURL('accounts/:accountId/settings/canned-response');\n    }\n  }].concat(_toConsumableArray(account.routes), _toConsumableArray(agent.routes), _toConsumableArray(agentBot.routes), _toConsumableArray(attributes.routes), _toConsumableArray(automation.routes), _toConsumableArray(billing.routes), _toConsumableArray(campaigns.routes), _toConsumableArray(canned.routes), _toConsumableArray(inbox.routes), _toConsumableArray(integrationapps.routes), _toConsumableArray(integrations.routes), _toConsumableArray(labels.routes), _toConsumableArray(macros.routes), _toConsumableArray(profile.routes), _toConsumableArray(reports.routes), _toConsumableArray(teams.routes))\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/routes/dashboard/settings/settings.routes.js"],"names":["frontendURL","account","agent","agentBot","attributes","automation","billing","campaigns","canned","inbox","integrationapps","integrations","labels","macros","profile","reports","store","teams","routes","path","name","roles","redirect","getters","getCurrentRole"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,WAAT,QAA4B,2BAA5B;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AAEA,eAAe;AACbC,EAAAA,MAAM,GACJ;AACEC,IAAAA,IAAI,EAAEnB,WAAW,CAAC,8BAAD,CADnB;AAEEoB,IAAAA,IAAI,EAAE,eAFR;AAGEC,IAAAA,KAAK,EAAE,CAAC,eAAD,EAAkB,OAAlB,CAHT;AAIEC,IAAAA,QAAQ,EAAE,oBAAM;AACd,UAAIN,KAAK,CAACO,OAAN,CAAcC,cAAd,KAAiC,eAArC,EAAsD;AACpD,eAAOxB,WAAW,CAAC,sCAAD,CAAlB;AACD;;AACD,aAAOA,WAAW,CAAC,8CAAD,CAAlB;AACD;AATH,GADI,4BAYDC,OAAO,CAACiB,MAZP,sBAaDhB,KAAK,CAACgB,MAbL,sBAcDf,QAAQ,CAACe,MAdR,sBAeDd,UAAU,CAACc,MAfV,sBAgBDb,UAAU,CAACa,MAhBV,sBAiBDZ,OAAO,CAACY,MAjBP,sBAkBDX,SAAS,CAACW,MAlBT,sBAmBDV,MAAM,CAACU,MAnBN,sBAoBDT,KAAK,CAACS,MApBL,sBAqBDR,eAAe,CAACQ,MArBf,sBAsBDP,YAAY,CAACO,MAtBZ,sBAuBDN,MAAM,CAACM,MAvBN,sBAwBDL,MAAM,CAACK,MAxBN,sBAyBDJ,OAAO,CAACI,MAzBP,sBA0BDH,OAAO,CAACG,MA1BP,sBA2BDD,KAAK,CAACC,MA3BL;AADO,CAAf","sourcesContent":["import { frontendURL } from '../../../helper/URLHelper';\nimport account from './account/account.routes';\nimport agent from './agents/agent.routes';\nimport agentBot from './agentBots/agentBot.routes';\nimport attributes from './attributes/attributes.routes';\nimport automation from './automation/automation.routes';\nimport billing from './billing/billing.routes';\nimport campaigns from './campaigns/campaigns.routes';\nimport canned from './canned/canned.routes';\nimport inbox from './inbox/inbox.routes';\nimport integrationapps from './integrationapps/integrations.routes';\nimport integrations from './integrations/integrations.routes';\nimport labels from './labels/labels.routes';\nimport macros from './macros/macros.routes';\nimport profile from './profile/profile.routes';\nimport reports from './reports/reports.routes';\nimport store from '../../../store';\nimport teams from './teams/teams.routes';\n\nexport default {\n  routes: [\n    {\n      path: frontendURL('accounts/:accountId/settings'),\n      name: 'settings_home',\n      roles: ['administrator', 'agent'],\n      redirect: () => {\n        if (store.getters.getCurrentRole === 'administrator') {\n          return frontendURL('accounts/:accountId/settings/general');\n        }\n        return frontendURL('accounts/:accountId/settings/canned-response');\n      },\n    },\n    ...account.routes,\n    ...agent.routes,\n    ...agentBot.routes,\n    ...attributes.routes,\n    ...automation.routes,\n    ...billing.routes,\n    ...campaigns.routes,\n    ...canned.routes,\n    ...inbox.routes,\n    ...integrationapps.routes,\n    ...integrations.routes,\n    ...labels.routes,\n    ...macros.routes,\n    ...profile.routes,\n    ...reports.routes,\n    ...teams.routes,\n  ],\n};\n"]},"metadata":{},"sourceType":"module"}