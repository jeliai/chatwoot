{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport { getContrastingTextColor } from '@chatwoot/utils';\nimport AvailableAgents from 'widget/components/AvailableAgents.vue';\nimport CustomButton from 'shared/components/Button';\nimport configMixin from 'widget/mixins/configMixin';\nimport availabilityMixin from 'widget/mixins/availability';\nimport darkMixin from 'widget/mixins/darkModeMixin.js';\nexport default {\n  name: 'TeamAvailability',\n  components: {\n    AvailableAgents: AvailableAgents,\n    CustomButton: CustomButton\n  },\n  mixins: [configMixin, availabilityMixin, darkMixin],\n  props: {\n    availableAgents: {\n      type: Array,\n      default: function _default() {}\n    },\n    hasConversation: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    widgetColor: 'appConfig/getWidgetColor'\n  })), {}, {\n    textColor: function textColor() {\n      return getContrastingTextColor(this.widgetColor);\n    },\n    isOnline: function isOnline() {\n      var workingHoursEnabled = this.channelConfig.workingHoursEnabled;\n      var anyAgentOnline = this.availableAgents.length > 0;\n\n      if (workingHoursEnabled) {\n        return this.isInBetweenTheWorkingHours;\n      }\n\n      return anyAgentOnline;\n    },\n    replyWaitMessage: function replyWaitMessage() {\n      var workingHoursEnabled = this.channelConfig.workingHoursEnabled;\n\n      if (this.isOnline) {\n        return this.replyTimeStatus;\n      }\n\n      if (workingHoursEnabled) {\n        return this.outOfOfficeMessage;\n      }\n\n      return '';\n    }\n  }),\n  methods: {\n    startConversation: function startConversation() {\n      this.$emit('start-conversation');\n    }\n  }\n};","map":{"version":3,"sources":["TeamAvailability.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,SAAA,UAAA,QAAA,MAAA;AACA,SAAA,uBAAA,QAAA,iBAAA;AACA,OAAA,eAAA,MAAA,uCAAA;AACA,OAAA,YAAA,MAAA,0BAAA;AACA,OAAA,WAAA,MAAA,2BAAA;AACA,OAAA,iBAAA,MAAA,4BAAA;AACA,OAAA,SAAA,MAAA,gCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,kBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,eAAA,EAAA,eADA;AAEA,IAAA,YAAA,EAAA;AAFA,GAFA;AAMA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,iBAAA,EAAA,SAAA,CANA;AAOA,EAAA,KAAA,EAAA;AACA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA,KADA;AAKA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AALA,GAPA;AAkBA,EAAA,QAAA,kCACA,UAAA,CAAA;AACA,IAAA,WAAA,EAAA;AADA,GAAA,CADA;AAIA,IAAA,SAJA,uBAIA;AACA,aAAA,uBAAA,CAAA,KAAA,WAAA,CAAA;AACA,KANA;AAOA,IAAA,QAPA,sBAOA;AACA,UAAA,mBAAA,GAAA,KAAA,aAAA,CAAA,mBAAA;AACA,UAAA,cAAA,GAAA,KAAA,eAAA,CAAA,MAAA,GAAA,CAAA;;AAEA,UAAA,mBAAA,EAAA;AACA,eAAA,KAAA,0BAAA;AACA;;AACA,aAAA,cAAA;AACA,KAfA;AAgBA,IAAA,gBAhBA,8BAgBA;AACA,UAAA,mBAAA,GAAA,KAAA,aAAA,CAAA,mBAAA;;AAEA,UAAA,KAAA,QAAA,EAAA;AACA,eAAA,KAAA,eAAA;AACA;;AACA,UAAA,mBAAA,EAAA;AACA,eAAA,KAAA,kBAAA;AACA;;AACA,aAAA,EAAA;AACA;AA1BA,IAlBA;AA8CA,EAAA,OAAA,EAAA;AACA,IAAA,iBADA,+BACA;AACA,WAAA,KAAA,CAAA,oBAAA;AACA;AAHA;AA9CA,CAAA","sourcesContent":["<template>\n  <div class=\"px-5\">\n    <div class=\"flex items-center justify-between mb-4\">\n      <div\n        class=\"max-w-xs\"\n        :class=\"$dm('text-black-700', 'dark:text-slate-50')\"\n      >\n        <div class=\"text-base leading-5 font-medium mb-1\">\n          {{\n            isOnline\n              ? $t('TEAM_AVAILABILITY.ONLINE')\n              : $t('TEAM_AVAILABILITY.OFFLINE')\n          }}\n        </div>\n        <div class=\"text-xs leading-4 mt-1\">\n          {{ replyWaitMessage }}\n        </div>\n      </div>\n      <available-agents v-if=\"isOnline\" :agents=\"availableAgents\" />\n    </div>\n    <custom-button\n      class=\"font-medium\"\n      block\n      :bg-color=\"widgetColor\"\n      :text-color=\"textColor\"\n      @click=\"startConversation\"\n    >\n      {{\n        hasConversation ? $t('CONTINUE_CONVERSATION') : $t('START_CONVERSATION')\n      }}\n    </custom-button>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport { getContrastingTextColor } from '@chatwoot/utils';\nimport AvailableAgents from 'widget/components/AvailableAgents.vue';\nimport CustomButton from 'shared/components/Button';\nimport configMixin from 'widget/mixins/configMixin';\nimport availabilityMixin from 'widget/mixins/availability';\nimport darkMixin from 'widget/mixins/darkModeMixin.js';\n\nexport default {\n  name: 'TeamAvailability',\n  components: {\n    AvailableAgents,\n    CustomButton,\n  },\n  mixins: [configMixin, availabilityMixin, darkMixin],\n  props: {\n    availableAgents: {\n      type: Array,\n      default: () => {},\n    },\n    hasConversation: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  computed: {\n    ...mapGetters({\n      widgetColor: 'appConfig/getWidgetColor',\n    }),\n    textColor() {\n      return getContrastingTextColor(this.widgetColor);\n    },\n    isOnline() {\n      const { workingHoursEnabled } = this.channelConfig;\n      const anyAgentOnline = this.availableAgents.length > 0;\n\n      if (workingHoursEnabled) {\n        return this.isInBetweenTheWorkingHours;\n      }\n      return anyAgentOnline;\n    },\n    replyWaitMessage() {\n      const { workingHoursEnabled } = this.channelConfig;\n\n      if (this.isOnline) {\n        return this.replyTimeStatus;\n      }\n      if (workingHoursEnabled) {\n        return this.outOfOfficeMessage;\n      }\n      return '';\n    },\n  },\n  methods: {\n    startConversation() {\n      this.$emit('start-conversation');\n    },\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/widget/components"},"metadata":{},"sourceType":"module"}