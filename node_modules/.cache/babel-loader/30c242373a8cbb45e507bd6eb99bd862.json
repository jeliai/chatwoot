{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Spinner from 'shared/components/Spinner';\nimport EmojiOrIcon from 'shared/components/EmojiOrIcon';\nexport default {\n  name: 'WootButton',\n  components: {\n    EmojiOrIcon: EmojiOrIcon,\n    Spinner: Spinner\n  },\n  props: {\n    type: {\n      type: String,\n      default: 'submit'\n    },\n    variant: {\n      type: String,\n      default: ''\n    },\n    size: {\n      type: String,\n      default: ''\n    },\n    icon: {\n      type: String,\n      default: ''\n    },\n    emoji: {\n      type: String,\n      default: ''\n    },\n    colorScheme: {\n      type: String,\n      default: 'primary'\n    },\n    classNames: {\n      type: [String, Object],\n      default: ''\n    },\n    isDisabled: {\n      type: Boolean,\n      default: false\n    },\n    isLoading: {\n      type: Boolean,\n      default: false\n    },\n    isExpanded: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    variantClasses: function variantClasses() {\n      if (this.variant.includes('link')) {\n        return \"clear \".concat(this.variant);\n      }\n\n      return this.variant;\n    },\n    hasOnlyIcon: function hasOnlyIcon() {\n      var hasEmojiOrIcon = this.emoji || this.icon;\n      return !this.$slots.default && hasEmojiOrIcon;\n    },\n    hasOnlyIconClasses: function hasOnlyIconClasses() {\n      return this.hasOnlyIcon ? 'button--only-icon' : '';\n    },\n    buttonClasses: function buttonClasses() {\n      return [this.variantClasses, this.hasOnlyIconClasses, this.size, this.colorScheme, this.classNames, this.isDisabled ? 'disabled' : '', this.isExpanded ? 'expanded' : ''];\n    },\n    iconSize: function iconSize() {\n      switch (this.size) {\n        case 'tiny':\n          return 12;\n\n        case 'small':\n          return 14;\n\n        case 'medium':\n          return 16;\n\n        case 'large':\n          return 18;\n\n        default:\n          return 16;\n      }\n    }\n  },\n  methods: {\n    handleClick: function handleClick(evt) {\n      this.$emit('click', evt);\n    }\n  }\n};","map":{"version":3,"sources":["WootButton.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAsBA,OAAA,OAAA,MAAA,2BAAA;AACA,OAAA,WAAA,MAAA,+BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,WAAA,EAAA,WAAA;AAAA,IAAA,OAAA,EAAA;AAAA,GAFA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjBA;AAqBA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KArBA;AAyBA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAzBA;AA6BA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KA7BA;AAiCA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjCA;AAqCA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AArCA,GAHA;AA6CA,EAAA,QAAA,EAAA;AACA,IAAA,cADA,4BACA;AACA,UAAA,KAAA,OAAA,CAAA,QAAA,CAAA,MAAA,CAAA,EAAA;AACA,+BAAA,KAAA,OAAA;AACA;;AACA,aAAA,KAAA,OAAA;AACA,KANA;AAOA,IAAA,WAPA,yBAOA;AACA,UAAA,cAAA,GAAA,KAAA,KAAA,IAAA,KAAA,IAAA;AACA,aAAA,CAAA,KAAA,MAAA,CAAA,OAAA,IAAA,cAAA;AACA,KAVA;AAWA,IAAA,kBAXA,gCAWA;AACA,aAAA,KAAA,WAAA,GAAA,mBAAA,GAAA,EAAA;AACA,KAbA;AAcA,IAAA,aAdA,2BAcA;AACA,aAAA,CACA,KAAA,cADA,EAEA,KAAA,kBAFA,EAGA,KAAA,IAHA,EAIA,KAAA,WAJA,EAKA,KAAA,UALA,EAMA,KAAA,UAAA,GAAA,UAAA,GAAA,EANA,EAOA,KAAA,UAAA,GAAA,UAAA,GAAA,EAPA,CAAA;AASA,KAxBA;AAyBA,IAAA,QAzBA,sBAyBA;AACA,cAAA,KAAA,IAAA;AACA,aAAA,MAAA;AACA,iBAAA,EAAA;;AACA,aAAA,OAAA;AACA,iBAAA,EAAA;;AACA,aAAA,QAAA;AACA,iBAAA,EAAA;;AACA,aAAA,OAAA;AACA,iBAAA,EAAA;;AAEA;AACA,iBAAA,EAAA;AAXA;AAaA;AAvCA,GA7CA;AAsFA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,GADA,EACA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,GAAA;AACA;AAHA;AAtFA,CAAA","sourcesContent":["<template>\n  <button\n    class=\"button\"\n    :type=\"type\"\n    :class=\"buttonClasses\"\n    :disabled=\"isDisabled || isLoading\"\n    @click=\"handleClick\"\n  >\n    <spinner v-if=\"isLoading\" size=\"small\" />\n    <emoji-or-icon\n      v-else-if=\"icon || emoji\"\n      class=\"icon\"\n      :emoji=\"emoji\"\n      :icon=\"icon\"\n      :icon-size=\"iconSize\"\n    />\n    <span v-if=\"$slots.default\" class=\"button__content\">\n      <slot />\n    </span>\n  </button>\n</template>\n<script>\nimport Spinner from 'shared/components/Spinner';\nimport EmojiOrIcon from 'shared/components/EmojiOrIcon';\n\nexport default {\n  name: 'WootButton',\n  components: { EmojiOrIcon, Spinner },\n  props: {\n    type: {\n      type: String,\n      default: 'submit',\n    },\n    variant: {\n      type: String,\n      default: '',\n    },\n    size: {\n      type: String,\n      default: '',\n    },\n    icon: {\n      type: String,\n      default: '',\n    },\n    emoji: {\n      type: String,\n      default: '',\n    },\n    colorScheme: {\n      type: String,\n      default: 'primary',\n    },\n    classNames: {\n      type: [String, Object],\n      default: '',\n    },\n    isDisabled: {\n      type: Boolean,\n      default: false,\n    },\n    isLoading: {\n      type: Boolean,\n      default: false,\n    },\n    isExpanded: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  computed: {\n    variantClasses() {\n      if (this.variant.includes('link')) {\n        return `clear ${this.variant}`;\n      }\n      return this.variant;\n    },\n    hasOnlyIcon() {\n      const hasEmojiOrIcon = this.emoji || this.icon;\n      return !this.$slots.default && hasEmojiOrIcon;\n    },\n    hasOnlyIconClasses() {\n      return this.hasOnlyIcon ? 'button--only-icon' : '';\n    },\n    buttonClasses() {\n      return [\n        this.variantClasses,\n        this.hasOnlyIconClasses,\n        this.size,\n        this.colorScheme,\n        this.classNames,\n        this.isDisabled ? 'disabled' : '',\n        this.isExpanded ? 'expanded' : '',\n      ];\n    },\n    iconSize() {\n      switch (this.size) {\n        case 'tiny':\n          return 12;\n        case 'small':\n          return 14;\n        case 'medium':\n          return 16;\n        case 'large':\n          return 18;\n\n        default:\n          return 16;\n      }\n    },\n  },\n  methods: {\n    handleClick(evt) {\n      this.$emit('click', evt);\n    },\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/dashboard/components/ui"},"metadata":{},"sourceType":"module"}