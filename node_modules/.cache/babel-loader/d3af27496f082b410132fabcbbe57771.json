{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ChannelItem from 'dashboard/components/widgets/ChannelItem';\nimport router from '../../../index';\nimport PageHeader from '../SettingsSubPageHeader';\nimport { mapGetters } from 'vuex';\nimport globalConfigMixin from 'shared/mixins/globalConfigMixin';\nexport default {\n  components: {\n    ChannelItem: ChannelItem,\n    PageHeader: PageHeader\n  },\n  mixins: [globalConfigMixin],\n  data: function data() {\n    return {\n      enabledFeatures: {}\n    };\n  },\n  computed: _objectSpread({\n    account: function account() {\n      return this.$store.getters['accounts/getAccount'](this.accountId);\n    },\n    channelList: function channelList() {\n      var _this$globalConfig = this.globalConfig,\n          apiChannelName = _this$globalConfig.apiChannelName,\n          apiChannelThumbnail = _this$globalConfig.apiChannelThumbnail;\n      return [{\n        key: 'website',\n        name: 'Website'\n      }, {\n        key: 'facebook',\n        name: 'Messenger'\n      }, {\n        key: 'twitter',\n        name: 'Twitter'\n      }, {\n        key: 'whatsapp',\n        name: 'WhatsApp'\n      }, {\n        key: 'sms',\n        name: 'SMS'\n      }, {\n        key: 'email',\n        name: 'Email'\n      }, {\n        key: 'api',\n        name: apiChannelName || 'API',\n        thumbnail: apiChannelThumbnail\n      }, {\n        key: 'telegram',\n        name: 'Telegram'\n      }, {\n        key: 'line',\n        name: 'Line'\n      }];\n    }\n  }, mapGetters({\n    accountId: 'getCurrentAccountId',\n    globalConfig: 'globalConfig/get'\n  })),\n  mounted: function mounted() {\n    this.initializeEnabledFeatures();\n  },\n  methods: {\n    initializeEnabledFeatures: function initializeEnabledFeatures() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.$store.dispatch('accounts/get', _this.accountId);\n\n              case 2:\n                _this.enabledFeatures = _this.account.features;\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    initChannelAuth: function initChannelAuth(channel) {\n      var params = {\n        page: 'new',\n        sub_page: channel\n      };\n      router.push({\n        name: 'settings_inboxes_page_channel',\n        params: params\n      });\n    }\n  }\n};","map":{"version":3,"sources":["ChannelList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,OAAA,WAAA,MAAA,0CAAA;AACA,OAAA,MAAA,MAAA,gBAAA;AACA,OAAA,UAAA,MAAA,0BAAA;AACA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,iBAAA,MAAA,iCAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA,WADA;AAEA,IAAA,UAAA,EAAA;AAFA,GADA;AAKA,EAAA,MAAA,EAAA,CAAA,iBAAA,CALA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,eAAA,EAAA;AADA,KAAA;AAGA,GAVA;AAWA,EAAA,QAAA;AACA,IAAA,OADA,qBACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,qBAAA,EAAA,KAAA,SAAA,CAAA;AACA,KAHA;AAIA,IAAA,WAJA,yBAIA;AACA,+BAAA,KAAA,YAAA;AAAA,UAAA,cAAA,sBAAA,cAAA;AAAA,UAAA,mBAAA,sBAAA,mBAAA;AACA,aAAA,CACA;AAAA,QAAA,GAAA,EAAA,SAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,GAAA,EAAA,UAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,GAAA,EAAA,SAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAHA,EAIA;AAAA,QAAA,GAAA,EAAA,UAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAJA,EAKA;AAAA,QAAA,GAAA,EAAA,KAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OALA,EAMA;AAAA,QAAA,GAAA,EAAA,OAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OANA,EAOA;AACA,QAAA,GAAA,EAAA,KADA;AAEA,QAAA,IAAA,EAAA,cAAA,IAAA,KAFA;AAGA,QAAA,SAAA,EAAA;AAHA,OAPA,EAYA;AAAA,QAAA,GAAA,EAAA,UAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAZA,EAaA;AAAA,QAAA,GAAA,EAAA,MAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAbA,CAAA;AAeA;AArBA,KAsBA,UAAA,CAAA;AACA,IAAA,SAAA,EAAA,qBADA;AAEA,IAAA,YAAA,EAAA;AAFA,GAAA,CAtBA,CAXA;AAsCA,EAAA,OAtCA,qBAsCA;AACA,SAAA,yBAAA;AACA,GAxCA;AAyCA,EAAA,OAAA,EAAA;AACA,IAAA,yBADA,uCACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,cAAA,EAAA,KAAA,CAAA,SAAA,CADA;;AAAA;AAEA,gBAAA,KAAA,CAAA,eAAA,GAAA,KAAA,CAAA,OAAA,CAAA,QAAA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,KAJA;AAKA,IAAA,eALA,2BAKA,OALA,EAKA;AACA,UAAA,MAAA,GAAA;AACA,QAAA,IAAA,EAAA,KADA;AAEA,QAAA,QAAA,EAAA;AAFA,OAAA;AAIA,MAAA,MAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA,+BAAA;AAAA,QAAA,MAAA,EAAA;AAAA,OAAA;AACA;AAXA;AAzCA,CAAA","sourcesContent":["<template>\n  <div class=\"wizard-body small-12 medium-9 columns height-auto\">\n    <page-header\n      :header-title=\"$t('INBOX_MGMT.ADD.AUTH.TITLE')\"\n      :header-content=\"\n        useInstallationName(\n          $t('INBOX_MGMT.ADD.AUTH.DESC'),\n          globalConfig.installationName\n        )\n      \"\n    />\n    <div class=\"row channels\">\n      <channel-item\n        v-for=\"channel in channelList\"\n        :key=\"channel.key\"\n        :channel=\"channel\"\n        :enabled-features=\"enabledFeatures\"\n        @channel-item-click=\"initChannelAuth\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport ChannelItem from 'dashboard/components/widgets/ChannelItem';\nimport router from '../../../index';\nimport PageHeader from '../SettingsSubPageHeader';\nimport { mapGetters } from 'vuex';\nimport globalConfigMixin from 'shared/mixins/globalConfigMixin';\n\nexport default {\n  components: {\n    ChannelItem,\n    PageHeader,\n  },\n  mixins: [globalConfigMixin],\n  data() {\n    return {\n      enabledFeatures: {},\n    };\n  },\n  computed: {\n    account() {\n      return this.$store.getters['accounts/getAccount'](this.accountId);\n    },\n    channelList() {\n      const { apiChannelName, apiChannelThumbnail } = this.globalConfig;\n      return [\n        { key: 'website', name: 'Website' },\n        { key: 'facebook', name: 'Messenger' },\n        { key: 'twitter', name: 'Twitter' },\n        { key: 'whatsapp', name: 'WhatsApp' },\n        { key: 'sms', name: 'SMS' },\n        { key: 'email', name: 'Email' },\n        {\n          key: 'api',\n          name: apiChannelName || 'API',\n          thumbnail: apiChannelThumbnail,\n        },\n        { key: 'telegram', name: 'Telegram' },\n        { key: 'line', name: 'Line' },\n      ];\n    },\n    ...mapGetters({\n      accountId: 'getCurrentAccountId',\n      globalConfig: 'globalConfig/get',\n    }),\n  },\n  mounted() {\n    this.initializeEnabledFeatures();\n  },\n  methods: {\n    async initializeEnabledFeatures() {\n      await this.$store.dispatch('accounts/get', this.accountId);\n      this.enabledFeatures = this.account.features;\n    },\n    initChannelAuth(channel) {\n      const params = {\n        page: 'new',\n        sub_page: channel,\n      };\n      router.push({ name: 'settings_inboxes_page_channel', params });\n    },\n  },\n};\n</script>\n<style scoped>\n.height-auto {\n  height: auto;\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/settings/inbox"},"metadata":{},"sourceType":"module"}