{"ast":null,"code":"var _mutations;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport * as MutationHelpers from 'shared/helpers/vuex/mutationHelpers';\nimport * as types from '../mutation-types';\nimport AgentAPI from '../../api/agents';\nexport var state = {\n  records: [],\n  uiFlags: {\n    isFetching: false,\n    isCreating: false,\n    isUpdating: false,\n    isDeleting: false\n  }\n};\nexport var getters = {\n  getAgents: function getAgents($state) {\n    return $state.records;\n  },\n  getVerifiedAgents: function getVerifiedAgents($state) {\n    return $state.records.filter(function (record) {\n      return record.confirmed;\n    });\n  },\n  getUIFlags: function getUIFlags($state) {\n    return $state.uiFlags;\n  },\n  getAgentStatus: function getAgentStatus($state) {\n    var status = {\n      online: $state.records.filter(function (agent) {\n        return agent.availability_status === 'online';\n      }).length,\n      busy: $state.records.filter(function (agent) {\n        return agent.availability_status === 'busy';\n      }).length,\n      offline: $state.records.filter(function (agent) {\n        return agent.availability_status === 'offline';\n      }).length\n    };\n    return status;\n  }\n};\nexport var actions = {\n  get: function () {\n    var _get = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref) {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              commit(types.default.SET_AGENT_FETCHING_STATUS, true);\n              _context.prev = 2;\n              _context.next = 5;\n              return AgentAPI.get();\n\n            case 5:\n              response = _context.sent;\n              commit(types.default.SET_AGENT_FETCHING_STATUS, false);\n              commit(types.default.SET_AGENTS, response.data);\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](2);\n              commit(types.default.SET_AGENT_FETCHING_STATUS, false);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 10]]);\n    }));\n\n    function get(_x) {\n      return _get.apply(this, arguments);\n    }\n\n    return get;\n  }(),\n  create: function () {\n    var _create = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref2, agentInfo) {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              commit(types.default.SET_AGENT_CREATING_STATUS, true);\n              _context2.prev = 2;\n              _context2.next = 5;\n              return AgentAPI.create(agentInfo);\n\n            case 5:\n              response = _context2.sent;\n              commit(types.default.ADD_AGENT, response.data);\n              commit(types.default.SET_AGENT_CREATING_STATUS, false);\n              _context2.next = 14;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](2);\n              commit(types.default.SET_AGENT_CREATING_STATUS, false);\n              throw _context2.t0;\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 10]]);\n    }));\n\n    function create(_x2, _x3) {\n      return _create.apply(this, arguments);\n    }\n\n    return create;\n  }(),\n  update: function () {\n    var _update = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(_ref3, _ref4) {\n      var commit, id, agentParams, response;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              id = _ref4.id, agentParams = _objectWithoutProperties(_ref4, [\"id\"]);\n              commit(types.default.SET_AGENT_UPDATING_STATUS, true);\n              _context3.prev = 3;\n              _context3.next = 6;\n              return AgentAPI.update(id, agentParams);\n\n            case 6:\n              response = _context3.sent;\n              commit(types.default.EDIT_AGENT, response.data);\n              commit(types.default.SET_AGENT_UPDATING_STATUS, false);\n              _context3.next = 15;\n              break;\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](3);\n              commit(types.default.SET_AGENT_UPDATING_STATUS, false);\n              throw new Error(_context3.t0);\n\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[3, 11]]);\n    }));\n\n    function update(_x4, _x5) {\n      return _update.apply(this, arguments);\n    }\n\n    return update;\n  }(),\n  updateSingleAgentPresence: function updateSingleAgentPresence(_ref5, _ref6) {\n    var commit = _ref5.commit;\n    var id = _ref6.id,\n        availabilityStatus = _ref6.availabilityStatus;\n    commit(types.default.UPDATE_SINGLE_AGENT_PRESENCE, {\n      id: id,\n      availabilityStatus: availabilityStatus\n    });\n  },\n  updatePresence: function () {\n    var _updatePresence = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(_ref7, data) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref7.commit;\n              commit(types.default.UPDATE_AGENTS_PRESENCE, data);\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function updatePresence(_x6, _x7) {\n      return _updatePresence.apply(this, arguments);\n    }\n\n    return updatePresence;\n  }(),\n  delete: function () {\n    var _delete2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(_ref8, agentId) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref8.commit;\n              commit(types.default.SET_AGENT_DELETING_STATUS, true);\n              _context5.prev = 2;\n              _context5.next = 5;\n              return AgentAPI.delete(agentId);\n\n            case 5:\n              commit(types.default.DELETE_AGENT, agentId);\n              commit(types.default.SET_AGENT_DELETING_STATUS, false);\n              _context5.next = 13;\n              break;\n\n            case 9:\n              _context5.prev = 9;\n              _context5.t0 = _context5[\"catch\"](2);\n              commit(types.default.SET_AGENT_DELETING_STATUS, false);\n              throw new Error(_context5.t0);\n\n            case 13:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[2, 9]]);\n    }));\n\n    function _delete(_x8, _x9) {\n      return _delete2.apply(this, arguments);\n    }\n\n    return _delete;\n  }()\n};\nexport var mutations = (_mutations = {}, _defineProperty(_mutations, types.default.SET_AGENT_FETCHING_STATUS, function ($state, status) {\n  $state.uiFlags.isFetching = status;\n}), _defineProperty(_mutations, types.default.SET_AGENT_CREATING_STATUS, function ($state, status) {\n  $state.uiFlags.isCreating = status;\n}), _defineProperty(_mutations, types.default.SET_AGENT_UPDATING_STATUS, function ($state, status) {\n  $state.uiFlags.isUpdating = status;\n}), _defineProperty(_mutations, types.default.SET_AGENT_DELETING_STATUS, function ($state, status) {\n  $state.uiFlags.isDeleting = status;\n}), _defineProperty(_mutations, types.default.SET_AGENTS, MutationHelpers.set), _defineProperty(_mutations, types.default.ADD_AGENT, MutationHelpers.create), _defineProperty(_mutations, types.default.EDIT_AGENT, MutationHelpers.update), _defineProperty(_mutations, types.default.DELETE_AGENT, MutationHelpers.destroy), _defineProperty(_mutations, types.default.UPDATE_AGENTS_PRESENCE, MutationHelpers.updatePresence), _defineProperty(_mutations, types.default.UPDATE_SINGLE_AGENT_PRESENCE, function ($state, _ref9) {\n  var id = _ref9.id,\n      availabilityStatus = _ref9.availabilityStatus;\n  return MutationHelpers.updateSingleRecordPresence($state.records, {\n    id: id,\n    availabilityStatus: availabilityStatus\n  });\n}), _mutations);\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/store/modules/agents.js"],"names":["MutationHelpers","types","AgentAPI","state","records","uiFlags","isFetching","isCreating","isUpdating","isDeleting","getters","getAgents","$state","getVerifiedAgents","filter","record","confirmed","getUIFlags","getAgentStatus","status","online","agent","availability_status","length","busy","offline","actions","get","commit","default","SET_AGENT_FETCHING_STATUS","response","SET_AGENTS","data","create","agentInfo","SET_AGENT_CREATING_STATUS","ADD_AGENT","update","id","agentParams","SET_AGENT_UPDATING_STATUS","EDIT_AGENT","Error","updateSingleAgentPresence","availabilityStatus","UPDATE_SINGLE_AGENT_PRESENCE","updatePresence","UPDATE_AGENTS_PRESENCE","delete","agentId","SET_AGENT_DELETING_STATUS","DELETE_AGENT","mutations","set","destroy","updateSingleRecordPresence","namespaced"],"mappings":"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","sourcesContent":["import * as MutationHelpers from 'shared/helpers/vuex/mutationHelpers';\nimport * as types from '../mutation-types';\nimport AgentAPI from '../../api/agents';\n\nexport const state = {\n  records: [],\n  uiFlags: {\n    isFetching: false,\n    isCreating: false,\n    isUpdating: false,\n    isDeleting: false,\n  },\n};\n\nexport const getters = {\n  getAgents($state) {\n    return $state.records;\n  },\n  getVerifiedAgents($state) {\n    return $state.records.filter(record => record.confirmed);\n  },\n  getUIFlags($state) {\n    return $state.uiFlags;\n  },\n  getAgentStatus($state) {\n    let status = {\n      online: $state.records.filter(\n        agent => agent.availability_status === 'online'\n      ).length,\n      busy: $state.records.filter(agent => agent.availability_status === 'busy')\n        .length,\n      offline: $state.records.filter(\n        agent => agent.availability_status === 'offline'\n      ).length,\n    };\n    return status;\n  },\n};\n\nexport const actions = {\n  get: async ({ commit }) => {\n    commit(types.default.SET_AGENT_FETCHING_STATUS, true);\n    try {\n      const response = await AgentAPI.get();\n      commit(types.default.SET_AGENT_FETCHING_STATUS, false);\n      commit(types.default.SET_AGENTS, response.data);\n    } catch (error) {\n      commit(types.default.SET_AGENT_FETCHING_STATUS, false);\n    }\n  },\n  create: async ({ commit }, agentInfo) => {\n    commit(types.default.SET_AGENT_CREATING_STATUS, true);\n    try {\n      const response = await AgentAPI.create(agentInfo);\n      commit(types.default.ADD_AGENT, response.data);\n      commit(types.default.SET_AGENT_CREATING_STATUS, false);\n    } catch (error) {\n      commit(types.default.SET_AGENT_CREATING_STATUS, false);\n      throw error;\n    }\n  },\n  update: async ({ commit }, { id, ...agentParams }) => {\n    commit(types.default.SET_AGENT_UPDATING_STATUS, true);\n    try {\n      const response = await AgentAPI.update(id, agentParams);\n      commit(types.default.EDIT_AGENT, response.data);\n      commit(types.default.SET_AGENT_UPDATING_STATUS, false);\n    } catch (error) {\n      commit(types.default.SET_AGENT_UPDATING_STATUS, false);\n      throw new Error(error);\n    }\n  },\n  updateSingleAgentPresence: ({ commit }, { id, availabilityStatus }) => {\n    commit(types.default.UPDATE_SINGLE_AGENT_PRESENCE, {\n      id,\n      availabilityStatus,\n    });\n  },\n  updatePresence: async ({ commit }, data) => {\n    commit(types.default.UPDATE_AGENTS_PRESENCE, data);\n  },\n  delete: async ({ commit }, agentId) => {\n    commit(types.default.SET_AGENT_DELETING_STATUS, true);\n    try {\n      await AgentAPI.delete(agentId);\n      commit(types.default.DELETE_AGENT, agentId);\n      commit(types.default.SET_AGENT_DELETING_STATUS, false);\n    } catch (error) {\n      commit(types.default.SET_AGENT_DELETING_STATUS, false);\n      throw new Error(error);\n    }\n  },\n};\n\nexport const mutations = {\n  [types.default.SET_AGENT_FETCHING_STATUS]($state, status) {\n    $state.uiFlags.isFetching = status;\n  },\n  [types.default.SET_AGENT_CREATING_STATUS]($state, status) {\n    $state.uiFlags.isCreating = status;\n  },\n  [types.default.SET_AGENT_UPDATING_STATUS]($state, status) {\n    $state.uiFlags.isUpdating = status;\n  },\n  [types.default.SET_AGENT_DELETING_STATUS]($state, status) {\n    $state.uiFlags.isDeleting = status;\n  },\n\n  [types.default.SET_AGENTS]: MutationHelpers.set,\n  [types.default.ADD_AGENT]: MutationHelpers.create,\n  [types.default.EDIT_AGENT]: MutationHelpers.update,\n  [types.default.DELETE_AGENT]: MutationHelpers.destroy,\n  [types.default.UPDATE_AGENTS_PRESENCE]: MutationHelpers.updatePresence,\n  [types.default.UPDATE_SINGLE_AGENT_PRESENCE]: (\n    $state,\n    { id, availabilityStatus }\n  ) =>\n    MutationHelpers.updateSingleRecordPresence($state.records, {\n      id,\n      availabilityStatus,\n    }),\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations,\n};\n"]},"metadata":{},"sourceType":"module"}