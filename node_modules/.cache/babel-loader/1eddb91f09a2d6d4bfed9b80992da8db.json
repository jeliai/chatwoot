{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mixin as clickaway } from 'vue-clickaway';\nimport { VeTable } from 'vue-easytable';\nimport Spinner from 'shared/components/Spinner.vue';\nimport Label from 'dashboard/components/ui/Label';\nimport EmptyState from 'dashboard/components/widgets/EmptyState.vue';\nimport WootButton from 'dashboard/components/ui/WootButton.vue';\nimport messageFormatterMixin from 'shared/mixins/messageFormatterMixin';\nimport UserAvatarWithName from 'dashboard/components/widgets/UserAvatarWithName';\nimport campaignMixin from 'shared/mixins/campaignMixin';\nimport timeMixin from 'dashboard/mixins/time';\nimport InboxName from 'dashboard/components/widgets/InboxName';\nexport default {\n  components: {\n    EmptyState: EmptyState,\n    Spinner: Spinner,\n    VeTable: VeTable\n  },\n  mixins: [clickaway, timeMixin, campaignMixin, messageFormatterMixin],\n  props: {\n    campaigns: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    showEmptyResult: {\n      type: Boolean,\n      default: false\n    },\n    isLoading: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    currentInboxId: function currentInboxId() {\n      return this.$route.params.inboxId;\n    },\n    inbox: function inbox() {\n      return this.$store.getters['inboxes/getInbox'](this.currentInboxId);\n    },\n    inboxes: function inboxes() {\n      if (this.isOngoingType) {\n        return this.$store.getters['inboxes/getWebsiteInboxes'];\n      }\n\n      return this.$store.getters['inboxes/getTwilioInboxes'];\n    },\n    emptyMessage: function emptyMessage() {\n      if (this.isOngoingType) {\n        return this.inboxes.length ? this.$t('CAMPAIGN.ONGOING.404') : this.$t('CAMPAIGN.ONGOING.INBOXES_NOT_FOUND');\n      }\n\n      return this.inboxes.length ? this.$t('CAMPAIGN.ONE_OFF.404') : this.$t('CAMPAIGN.ONE_OFF.INBOXES_NOT_FOUND');\n    },\n    tableData: function tableData() {\n      var _this = this;\n\n      if (this.isLoading) {\n        return [];\n      }\n\n      return this.campaigns.map(function (item) {\n        return _objectSpread(_objectSpread({}, item), {}, {\n          url: item.trigger_rules.url,\n          timeOnPage: item.trigger_rules.time_on_page,\n          scheduledAt: item.scheduled_at ? _this.messageStamp(new Date(item.scheduled_at), 'LLL d, h:mm a') : '---'\n        });\n      });\n    },\n    columns: function columns() {\n      var _this2 = this;\n\n      var h = this.$createElement;\n      var visibleToAllTable = [{\n        field: 'title',\n        key: 'title',\n        title: this.$t('CAMPAIGN.LIST.TABLE_HEADER.TITLE'),\n        fixed: 'left',\n        align: 'left',\n        renderBodyCell: function renderBodyCell(_ref) {\n          var row = _ref.row;\n          return h(\"div\", {\n            \"class\": \"row--title-block\"\n          }, [h(\"h6\", {\n            \"class\": \"sub-block-title title text-truncate\"\n          }, [row.title])]);\n        }\n      }, {\n        field: 'message',\n        key: 'message',\n        title: this.$t('CAMPAIGN.LIST.TABLE_HEADER.MESSAGE'),\n        align: 'left',\n        width: 350,\n        renderBodyCell: function renderBodyCell(_ref2) {\n          var row = _ref2.row;\n\n          if (row.message) {\n            return h(\"div\", {\n              \"class\": \"text-truncate\"\n            }, [h(\"span\", {\n              domProps: {\n                \"innerHTML\": _this2.formatMessage(row.message)\n              }\n            })]);\n          }\n\n          return '';\n        }\n      }, {\n        field: 'inbox',\n        key: 'inbox',\n        title: this.$t('CAMPAIGN.LIST.TABLE_HEADER.INBOX'),\n        align: 'left',\n        renderBodyCell: function renderBodyCell(_ref3) {\n          var row = _ref3.row;\n          return h(InboxName, {\n            attrs: {\n              inbox: row.inbox\n            }\n          });\n        }\n      }];\n\n      if (this.isOngoingType) {\n        return [].concat(visibleToAllTable, [{\n          field: 'enabled',\n          key: 'enabled',\n          title: this.$t('CAMPAIGN.LIST.TABLE_HEADER.STATUS'),\n          align: 'left',\n          renderBodyCell: function renderBodyCell(_ref4) {\n            var row = _ref4.row;\n            var labelText = row.enabled ? _this2.$t('CAMPAIGN.LIST.STATUS.ENABLED') : _this2.$t('CAMPAIGN.LIST.STATUS.DISABLED');\n            var colorScheme = row.enabled ? 'success' : 'secondary';\n            return h(Label, {\n              attrs: {\n                title: labelText,\n                colorScheme: colorScheme\n              }\n            });\n          }\n        }, {\n          field: 'sender',\n          key: 'sender',\n          title: this.$t('CAMPAIGN.LIST.TABLE_HEADER.SENDER'),\n          align: 'left',\n          renderBodyCell: function renderBodyCell(_ref5) {\n            var row = _ref5.row;\n            if (row.sender) return h(UserAvatarWithName, {\n              attrs: {\n                user: row.sender\n              }\n            });\n            return _this2.$t('CAMPAIGN.LIST.SENDER.BOT');\n          }\n        }, {\n          field: 'url',\n          key: 'url',\n          title: this.$t('CAMPAIGN.LIST.TABLE_HEADER.URL'),\n          align: 'left',\n          renderBodyCell: function renderBodyCell(_ref6) {\n            var row = _ref6.row;\n            return h(\"div\", {\n              \"class\": \"text-truncate\"\n            }, [h(\"a\", {\n              attrs: {\n                target: \"_blank\",\n                rel: \"noopener noreferrer nofollow\",\n                href: row.url,\n                title: row.url\n              }\n            }, [row.url])]);\n          }\n        }, {\n          field: 'timeOnPage',\n          key: 'timeOnPage',\n          title: this.$t('CAMPAIGN.LIST.TABLE_HEADER.TIME_ON_PAGE'),\n          align: 'left'\n        }, {\n          field: 'buttons',\n          key: 'buttons',\n          title: '',\n          align: 'left',\n          renderBodyCell: function renderBodyCell(row) {\n            return h(\"div\", {\n              \"class\": \"button-wrapper\"\n            }, [h(WootButton, {\n              attrs: {\n                variant: \"clear\",\n                icon: \"edit\",\n                \"color-scheme\": \"secondary\",\n                classNames: \"grey-btn\"\n              },\n              on: {\n                \"click\": function click() {\n                  return _this2.$emit('on-edit-click', row);\n                }\n              }\n            }, [_this2.$t('CAMPAIGN.LIST.BUTTONS.EDIT')]), h(WootButton, {\n              attrs: {\n                variant: \"link\",\n                icon: \"dismiss-circle\",\n                \"color-scheme\": \"secondary\"\n              },\n              on: {\n                \"click\": function click() {\n                  return _this2.$emit('on-delete-click', row);\n                }\n              }\n            }, [_this2.$t('CAMPAIGN.LIST.BUTTONS.DELETE')])]);\n          }\n        }]);\n      }\n\n      return [].concat(visibleToAllTable, [{\n        field: 'campaign_status',\n        key: 'campaign_status',\n        title: this.$t('CAMPAIGN.LIST.TABLE_HEADER.STATUS'),\n        align: 'left',\n        renderBodyCell: function renderBodyCell(_ref7) {\n          var row = _ref7.row;\n          var labelText = row.campaign_status === 'completed' ? _this2.$t('CAMPAIGN.LIST.STATUS.COMPLETED') : _this2.$t('CAMPAIGN.LIST.STATUS.ACTIVE');\n          var colorScheme = row.campaign_status === 'completed' ? 'secondary' : 'success';\n          return h(Label, {\n            attrs: {\n              title: labelText,\n              colorScheme: colorScheme\n            }\n          });\n        }\n      }, {\n        field: 'scheduledAt',\n        key: 'scheduledAt',\n        title: this.$t('CAMPAIGN.LIST.TABLE_HEADER.SCHEDULED_AT'),\n        align: 'left'\n      }, {\n        field: 'buttons',\n        key: 'buttons',\n        title: '',\n        align: 'left',\n        renderBodyCell: function renderBodyCell(row) {\n          return h(\"div\", {\n            \"class\": \"button-wrapper\"\n          }, [h(WootButton, {\n            attrs: {\n              variant: \"link\",\n              icon: \"dismiss-circle\",\n              \"color-scheme\": \"secondary\"\n            },\n            on: {\n              \"click\": function click() {\n                return _this2.$emit('on-delete-click', row);\n              }\n            }\n          }, [_this2.$t('CAMPAIGN.LIST.BUTTONS.DELETE')])]);\n        }\n      }]);\n    }\n  }\n};","map":{"version":3,"sources":["CampaignsTable.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <section class=\"campaigns-table-wrap\">\n    <empty-state v-if=\"showEmptyResult\" :title=\"emptyMessage\" />\n    <ve-table\n      v-else\n      :columns=\"columns\"\n      scroll-width=\"190rem\"\n      :table-data=\"tableData\"\n      :border-around=\"true\"\n    />\n    <div v-if=\"isLoading\" class=\"campaign--loader\">\n      <spinner />\n      <span>{{ $t('CAMPAIGN.LIST.LOADING_MESSAGE') }}</span>\n    </div>\n  </section>\n</template>\n\n<script>\nimport { mixin as clickaway } from 'vue-clickaway';\nimport { VeTable } from 'vue-easytable';\nimport Spinner from 'shared/components/Spinner.vue';\nimport Label from 'dashboard/components/ui/Label';\nimport EmptyState from 'dashboard/components/widgets/EmptyState.vue';\nimport WootButton from 'dashboard/components/ui/WootButton.vue';\nimport messageFormatterMixin from 'shared/mixins/messageFormatterMixin';\nimport UserAvatarWithName from 'dashboard/components/widgets/UserAvatarWithName';\nimport campaignMixin from 'shared/mixins/campaignMixin';\nimport timeMixin from 'dashboard/mixins/time';\nimport InboxName from 'dashboard/components/widgets/InboxName';\n\nexport default {\n  components: {\n    EmptyState,\n    Spinner,\n    VeTable,\n  },\n\n  mixins: [clickaway, timeMixin, campaignMixin, messageFormatterMixin],\n\n  props: {\n    campaigns: {\n      type: Array,\n      default: () => [],\n    },\n    showEmptyResult: {\n      type: Boolean,\n      default: false,\n    },\n    isLoading: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  computed: {\n    currentInboxId() {\n      return this.$route.params.inboxId;\n    },\n    inbox() {\n      return this.$store.getters['inboxes/getInbox'](this.currentInboxId);\n    },\n    inboxes() {\n      if (this.isOngoingType) {\n        return this.$store.getters['inboxes/getWebsiteInboxes'];\n      }\n      return this.$store.getters['inboxes/getTwilioInboxes'];\n    },\n    emptyMessage() {\n      if (this.isOngoingType) {\n        return this.inboxes.length\n          ? this.$t('CAMPAIGN.ONGOING.404')\n          : this.$t('CAMPAIGN.ONGOING.INBOXES_NOT_FOUND');\n      }\n\n      return this.inboxes.length\n        ? this.$t('CAMPAIGN.ONE_OFF.404')\n        : this.$t('CAMPAIGN.ONE_OFF.INBOXES_NOT_FOUND');\n    },\n    tableData() {\n      if (this.isLoading) {\n        return [];\n      }\n      return this.campaigns.map(item => {\n        return {\n          ...item,\n          url: item.trigger_rules.url,\n          timeOnPage: item.trigger_rules.time_on_page,\n          scheduledAt: item.scheduled_at\n            ? this.messageStamp(new Date(item.scheduled_at), 'LLL d, h:mm a')\n            : '---',\n        };\n      });\n    },\n    columns() {\n      const visibleToAllTable = [\n        {\n          field: 'title',\n          key: 'title',\n          title: this.$t('CAMPAIGN.LIST.TABLE_HEADER.TITLE'),\n          fixed: 'left',\n          align: 'left',\n          renderBodyCell: ({ row }) => (\n            <div class=\"row--title-block\">\n              <h6 class=\"sub-block-title title text-truncate\">{row.title}</h6>\n            </div>\n          ),\n        },\n\n        {\n          field: 'message',\n          key: 'message',\n          title: this.$t('CAMPAIGN.LIST.TABLE_HEADER.MESSAGE'),\n          align: 'left',\n          width: 350,\n          renderBodyCell: ({ row }) => {\n            if (row.message) {\n              return (\n                <div class=\"text-truncate\">\n                  <span\n                    domPropsInnerHTML={this.formatMessage(row.message)}\n                  ></span>\n                </div>\n              );\n            }\n            return '';\n          },\n        },\n        {\n          field: 'inbox',\n          key: 'inbox',\n          title: this.$t('CAMPAIGN.LIST.TABLE_HEADER.INBOX'),\n          align: 'left',\n          renderBodyCell: ({ row }) => {\n            return <InboxName inbox={row.inbox} />;\n          },\n        },\n      ];\n      if (this.isOngoingType) {\n        return [\n          ...visibleToAllTable,\n          {\n            field: 'enabled',\n            key: 'enabled',\n            title: this.$t('CAMPAIGN.LIST.TABLE_HEADER.STATUS'),\n            align: 'left',\n            renderBodyCell: ({ row }) => {\n              const labelText = row.enabled\n                ? this.$t('CAMPAIGN.LIST.STATUS.ENABLED')\n                : this.$t('CAMPAIGN.LIST.STATUS.DISABLED');\n              const colorScheme = row.enabled ? 'success' : 'secondary';\n              return <Label title={labelText} colorScheme={colorScheme} />;\n            },\n          },\n          {\n            field: 'sender',\n            key: 'sender',\n            title: this.$t('CAMPAIGN.LIST.TABLE_HEADER.SENDER'),\n            align: 'left',\n            renderBodyCell: ({ row }) => {\n              if (row.sender) return <UserAvatarWithName user={row.sender} />;\n              return this.$t('CAMPAIGN.LIST.SENDER.BOT');\n            },\n          },\n          {\n            field: 'url',\n            key: 'url',\n            title: this.$t('CAMPAIGN.LIST.TABLE_HEADER.URL'),\n            align: 'left',\n            renderBodyCell: ({ row }) => (\n              <div class=\"text-truncate\">\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer nofollow\"\n                  href={row.url}\n                  title={row.url}\n                >\n                  {row.url}\n                </a>\n              </div>\n            ),\n          },\n          {\n            field: 'timeOnPage',\n            key: 'timeOnPage',\n            title: this.$t('CAMPAIGN.LIST.TABLE_HEADER.TIME_ON_PAGE'),\n            align: 'left',\n          },\n\n          {\n            field: 'buttons',\n            key: 'buttons',\n            title: '',\n            align: 'left',\n            renderBodyCell: row => (\n              <div class=\"button-wrapper\">\n                <WootButton\n                  variant=\"clear\"\n                  icon=\"edit\"\n                  color-scheme=\"secondary\"\n                  classNames=\"grey-btn\"\n                  onClick={() => this.$emit('on-edit-click', row)}\n                >\n                  {this.$t('CAMPAIGN.LIST.BUTTONS.EDIT')}\n                </WootButton>\n                <WootButton\n                  variant=\"link\"\n                  icon=\"dismiss-circle\"\n                  color-scheme=\"secondary\"\n                  onClick={() => this.$emit('on-delete-click', row)}\n                >\n                  {this.$t('CAMPAIGN.LIST.BUTTONS.DELETE')}\n                </WootButton>\n              </div>\n            ),\n          },\n        ];\n      }\n      return [\n        ...visibleToAllTable,\n        {\n          field: 'campaign_status',\n          key: 'campaign_status',\n          title: this.$t('CAMPAIGN.LIST.TABLE_HEADER.STATUS'),\n          align: 'left',\n          renderBodyCell: ({ row }) => {\n            const labelText =\n              row.campaign_status === 'completed'\n                ? this.$t('CAMPAIGN.LIST.STATUS.COMPLETED')\n                : this.$t('CAMPAIGN.LIST.STATUS.ACTIVE');\n            const colorScheme =\n              row.campaign_status === 'completed' ? 'secondary' : 'success';\n            return <Label title={labelText} colorScheme={colorScheme} />;\n          },\n        },\n        {\n          field: 'scheduledAt',\n          key: 'scheduledAt',\n          title: this.$t('CAMPAIGN.LIST.TABLE_HEADER.SCHEDULED_AT'),\n          align: 'left',\n        },\n        {\n          field: 'buttons',\n          key: 'buttons',\n          title: '',\n          align: 'left',\n          renderBodyCell: row => (\n            <div class=\"button-wrapper\">\n              <WootButton\n                variant=\"link\"\n                icon=\"dismiss-circle\"\n                color-scheme=\"secondary\"\n                onClick={() => this.$emit('on-delete-click', row)}\n              >\n                {this.$t('CAMPAIGN.LIST.BUTTONS.DELETE')}\n              </WootButton>\n            </div>\n          ),\n        },\n      ];\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.campaigns-table-wrap::v-deep {\n  .ve-table {\n    padding-bottom: var(--space-large);\n    thead.ve-table-header .ve-table-header-tr .ve-table-header-th {\n      font-size: var(--font-size-mini);\n      padding: var(--space-small) var(--space-two);\n    }\n    tbody.ve-table-body .ve-table-body-tr .ve-table-body-td {\n      padding: var(--space-slab) var(--space-two);\n    }\n  }\n\n  .row--title-block {\n    align-items: center;\n    display: flex;\n    text-align: left;\n\n    .title {\n      font-size: var(--font-size-small);\n      margin: 0;\n      text-transform: capitalize;\n    }\n  }\n  .label {\n    padding: var(--space-smaller) var(--space-small);\n  }\n}\n\n.campaign--loader {\n  align-items: center;\n  display: flex;\n  font-size: var(--font-size-default);\n  justify-content: center;\n  padding: var(--space-big);\n}\n\n.button-wrapper {\n  justify-content: space-evenly;\n  display: flex;\n  flex-direction: row;\n  min-width: 20rem;\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/settings/campaigns"},"metadata":{},"sourceType":"module"}