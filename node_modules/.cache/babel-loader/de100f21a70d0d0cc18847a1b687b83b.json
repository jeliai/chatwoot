{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport alertMixin from 'shared/mixins/alertMixin';\nimport twitterClient from '../../../../../api/channel/twitterClient';\nexport default {\n  mixins: [alertMixin],\n  data: function data() {\n    return {\n      isRequestingAuthorization: false\n    };\n  },\n  methods: {\n    requestAuthorization: function requestAuthorization() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var response, url;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _this.isRequestingAuthorization = true;\n                _context.next = 4;\n                return twitterClient.generateAuthorization();\n\n              case 4:\n                response = _context.sent;\n                url = response.data.url;\n                window.location.href = url;\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n\n                _this.showAlert(_this.$t('INBOX_MGMT.ADD.TWITTER.ERROR_MESSAGE'));\n\n              case 12:\n                _context.prev = 12;\n                _this.isRequestingAuthorization = false;\n                return _context.finish(12);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 9, 12, 15]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"sources":["Twitter.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAgBA,OAAA,UAAA,MAAA,0BAAA;AACA,OAAA,aAAA,MAAA,0CAAA;AAEA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,UAAA,CADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AAAA,MAAA,yBAAA,EAAA;AAAA,KAAA;AACA,GAJA;AAKA,EAAA,OAAA,EAAA;AACA,IAAA,oBADA,kCACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,gBAAA,KAAA,CAAA,yBAAA,GAAA,IAAA;AAFA;AAAA,uBAGA,aAAA,CAAA,qBAAA,EAHA;;AAAA;AAGA,gBAAA,QAHA;AAKA,gBAAA,GALA,GAMA,QANA,CAKA,IALA,CAKA,GALA;AAOA,gBAAA,MAAA,CAAA,QAAA,CAAA,IAAA,GAAA,GAAA;AAPA;AAAA;;AAAA;AAAA;AAAA;;AASA,gBAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,EAAA,CAAA,sCAAA,CAAA;;AATA;AAAA;AAWA,gBAAA,KAAA,CAAA,yBAAA,GAAA,KAAA;AAXA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAdA;AALA,CAAA","sourcesContent":["<template>\n  <div class=\"wizard-body columns content-box small-9\">\n    <div class=\"login-init full-height text-center\">\n      <form @submit.prevent=\"requestAuthorization\">\n        <woot-submit-button\n          icon=\"brand-twitter\"\n          button-text=\"Sign in with Twitter\"\n          type=\"submit\"\n          :loading=\"isRequestingAuthorization\"\n        />\n      </form>\n      <p>{{ $t('INBOX_MGMT.ADD.TWITTER.HELP') }}</p>\n    </div>\n  </div>\n</template>\n<script>\nimport alertMixin from 'shared/mixins/alertMixin';\nimport twitterClient from '../../../../../api/channel/twitterClient';\n\nexport default {\n  mixins: [alertMixin],\n  data() {\n    return { isRequestingAuthorization: false };\n  },\n  methods: {\n    async requestAuthorization() {\n      try {\n        this.isRequestingAuthorization = true;\n        const response = await twitterClient.generateAuthorization();\n        const {\n          data: { url },\n        } = response;\n        window.location.href = url;\n      } catch (error) {\n        this.showAlert(this.$t('INBOX_MGMT.ADD.TWITTER.ERROR_MESSAGE'));\n      } finally {\n        this.isRequestingAuthorization = false;\n      }\n    },\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/settings/inbox/channels"},"metadata":{},"sourceType":"module"}