{"ast":null,"code":"import \"regenerator-runtime/runtime.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CustomAttributeDropDown from './CustomAttributeDropDown.vue';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport attributeMixin from 'dashboard/mixins/attributeMixin';\nimport { mixin as clickaway } from 'vue-clickaway';\nimport { BUS_EVENTS } from 'shared/constants/busEvents';\nexport default {\n  components: {\n    CustomAttributeDropDown: CustomAttributeDropDown\n  },\n  mixins: [clickaway, alertMixin, attributeMixin],\n  props: {\n    attributeType: {\n      type: String,\n      default: 'conversation_attribute'\n    },\n    contactId: {\n      type: Number,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      showAttributeDropDown: false\n    };\n  },\n  methods: {\n    addAttribute: function addAttribute(attribute) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var attribute_key, _error$response, errorMessage;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                attribute_key = attribute.attribute_key;\n\n                if (!(_this.attributeType === 'conversation_attribute')) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 5;\n                return _this.$store.dispatch('updateCustomAttributes', {\n                  conversationId: _this.conversationId,\n                  customAttributes: _objectSpread(_objectSpread({}, _this.customAttributes), {}, _defineProperty({}, attribute_key, null))\n                });\n\n              case 5:\n                _context.next = 9;\n                break;\n\n              case 7:\n                _context.next = 9;\n                return _this.$store.dispatch('contacts/update', {\n                  id: _this.contactId,\n                  custom_attributes: _objectSpread(_objectSpread({}, _this.customAttributes), {}, _defineProperty({}, attribute_key, null))\n                });\n\n              case 9:\n                bus.$emit(BUS_EVENTS.FOCUS_CUSTOM_ATTRIBUTE, attribute_key);\n\n                _this.showAlert(_this.$t('CUSTOM_ATTRIBUTES.FORM.ADD.SUCCESS'));\n\n                _context.next = 17;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](0);\n                errorMessage = (_context.t0 === null || _context.t0 === void 0 ? void 0 : (_error$response = _context.t0.response) === null || _error$response === void 0 ? void 0 : _error$response.message) || _this.$t('CUSTOM_ATTRIBUTES.FORM.ADD.ERROR');\n\n                _this.showAlert(errorMessage);\n\n              case 17:\n                _context.prev = 17;\n\n                _this.closeDropdown();\n\n                return _context.finish(17);\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 13, 17, 20]]);\n      }))();\n    },\n    toggleAttributeDropDown: function toggleAttributeDropDown() {\n      this.showAttributeDropDown = !this.showAttributeDropDown;\n    },\n    closeDropdown: function closeDropdown() {\n      this.showAttributeDropDown = false;\n    }\n  }\n};","map":{"version":3,"sources":["CustomAttributeSelector.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,OAAA,uBAAA,MAAA,+BAAA;AACA,OAAA,UAAA,MAAA,0BAAA;AACA,OAAA,cAAA,MAAA,iCAAA;AACA,SAAA,KAAA,IAAA,SAAA,QAAA,eAAA;AACA,SAAA,UAAA,QAAA,4BAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,uBAAA,EAAA;AADA,GADA;AAIA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,UAAA,EAAA,cAAA,CAJA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,SAAA,EAAA;AAAA,MAAA,IAAA,EAAA,MAAA;AAAA,MAAA,OAAA,EAAA;AAAA;AALA,GALA;AAYA,EAAA,IAZA,kBAYA;AACA,WAAA;AACA,MAAA,qBAAA,EAAA;AADA,KAAA;AAGA,GAhBA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,SADA,EACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,gBAAA,aAFA,GAEA,SAFA,CAEA,aAFA;;AAAA,sBAGA,KAAA,CAAA,aAAA,KAAA,wBAHA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAIA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,wBAAA,EAAA;AACA,kBAAA,cAAA,EAAA,KAAA,CAAA,cADA;AAEA,kBAAA,gBAAA,kCACA,KAAA,CAAA,gBADA,2BAEA,aAFA,EAEA,IAFA;AAFA,iBAAA,CAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAYA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,iBAAA,EAAA;AACA,kBAAA,EAAA,EAAA,KAAA,CAAA,SADA;AAEA,kBAAA,iBAAA,kCACA,KAAA,CAAA,gBADA,2BAEA,aAFA,EAEA,IAFA;AAFA,iBAAA,CAZA;;AAAA;AAoBA,gBAAA,GAAA,CAAA,KAAA,CAAA,UAAA,CAAA,sBAAA,EAAA,aAAA;;AACA,gBAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,EAAA,CAAA,oCAAA,CAAA;;AArBA;AAAA;;AAAA;AAAA;AAAA;AAuBA,gBAAA,YAvBA,GAwBA,0FAAA,QAAA,oEAAA,OAAA,KACA,KAAA,CAAA,EAAA,CAAA,kCAAA,CAzBA;;AA0BA,gBAAA,KAAA,CAAA,SAAA,CAAA,YAAA;;AA1BA;AAAA;;AA4BA,gBAAA,KAAA,CAAA,aAAA;;AA5BA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8BA,KA/BA;AAiCA,IAAA,uBAjCA,qCAiCA;AACA,WAAA,qBAAA,GAAA,CAAA,KAAA,qBAAA;AACA,KAnCA;AAqCA,IAAA,aArCA,2BAqCA;AACA,WAAA,qBAAA,GAAA,KAAA;AACA;AAvCA;AAjBA,CAAA","sourcesContent":["<template>\n  <div class=\"custom-attribute--selector\">\n    <div\n      v-on-clickaway=\"closeDropdown\"\n      class=\"label-wrap\"\n      @keyup.esc=\"closeDropdown\"\n    >\n      <woot-button\n        size=\"small\"\n        variant=\"link\"\n        icon=\"add\"\n        @click=\"toggleAttributeDropDown\"\n      >\n        {{ $t('CUSTOM_ATTRIBUTES.ADD_BUTTON_TEXT') }}\n      </woot-button>\n\n      <div class=\"dropdown-wrap\">\n        <div\n          :class=\"{ 'dropdown-pane--open': showAttributeDropDown }\"\n          class=\"dropdown-pane\"\n        >\n          <custom-attribute-drop-down\n            v-if=\"showAttributeDropDown\"\n            :attribute-type=\"attributeType\"\n            :contact-id=\"contactId\"\n            @add-attribute=\"addAttribute\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport CustomAttributeDropDown from './CustomAttributeDropDown.vue';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport attributeMixin from 'dashboard/mixins/attributeMixin';\nimport { mixin as clickaway } from 'vue-clickaway';\nimport { BUS_EVENTS } from 'shared/constants/busEvents';\n\nexport default {\n  components: {\n    CustomAttributeDropDown,\n  },\n  mixins: [clickaway, alertMixin, attributeMixin],\n  props: {\n    attributeType: {\n      type: String,\n      default: 'conversation_attribute',\n    },\n    contactId: { type: Number, default: null },\n  },\n  data() {\n    return {\n      showAttributeDropDown: false,\n    };\n  },\n  methods: {\n    async addAttribute(attribute) {\n      try {\n        const { attribute_key } = attribute;\n        if (this.attributeType === 'conversation_attribute') {\n          await this.$store.dispatch('updateCustomAttributes', {\n            conversationId: this.conversationId,\n            customAttributes: {\n              ...this.customAttributes,\n              [attribute_key]: null,\n            },\n          });\n        } else {\n          await this.$store.dispatch('contacts/update', {\n            id: this.contactId,\n            custom_attributes: {\n              ...this.customAttributes,\n              [attribute_key]: null,\n            },\n          });\n        }\n        bus.$emit(BUS_EVENTS.FOCUS_CUSTOM_ATTRIBUTE, attribute_key);\n        this.showAlert(this.$t('CUSTOM_ATTRIBUTES.FORM.ADD.SUCCESS'));\n      } catch (error) {\n        const errorMessage =\n          error?.response?.message ||\n          this.$t('CUSTOM_ATTRIBUTES.FORM.ADD.ERROR');\n        this.showAlert(errorMessage);\n      } finally {\n        this.closeDropdown();\n      }\n    },\n\n    toggleAttributeDropDown() {\n      this.showAttributeDropDown = !this.showAttributeDropDown;\n    },\n\n    closeDropdown() {\n      this.showAttributeDropDown = false;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.custom-attribute--selector {\n  width: 100%;\n  padding: var(--space-slab) var(--space-normal);\n\n  .label-wrap {\n    line-height: var(--space-medium);\n    position: relative;\n\n    .dropdown-wrap {\n      display: flex;\n      left: -1px;\n      margin-right: var(--space-medium);\n      position: absolute;\n      top: var(--space-medium);\n      width: 100%;\n\n      .dropdown-pane {\n        width: 100%;\n        box-sizing: border-box;\n      }\n    }\n  }\n}\n\n.error {\n  color: var(--r-500);\n  font-size: var(--font-size-mini);\n  font-weight: var(--font-weight-medium);\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/conversation/customAttributes"},"metadata":{},"sourceType":"module"}