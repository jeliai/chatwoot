{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { SET_TEAM_UI_FLAG, CLEAR_TEAMS, SET_TEAMS, SET_TEAM_ITEM, EDIT_TEAM, DELETE_TEAM } from './types';\nimport TeamsAPI from '../../../api/teams';\nexport var actions = {\n  create: function () {\n    var _create = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref, teamInfo) {\n      var commit, response, team;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              commit(SET_TEAM_UI_FLAG, {\n                isCreating: true\n              });\n              _context.prev = 2;\n              _context.next = 5;\n              return TeamsAPI.create(teamInfo);\n\n            case 5:\n              response = _context.sent;\n              team = response.data;\n              commit(SET_TEAM_ITEM, team);\n              return _context.abrupt(\"return\", team);\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](2);\n              throw new Error(_context.t0);\n\n            case 14:\n              _context.prev = 14;\n              commit(SET_TEAM_UI_FLAG, {\n                isCreating: false\n              });\n              return _context.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 11, 14, 17]]);\n    }));\n\n    function create(_x, _x2) {\n      return _create.apply(this, arguments);\n    }\n\n    return create;\n  }(),\n  get: function () {\n    var _get = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref2) {\n      var commit, _yield$TeamsAPI$get, data;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              commit(SET_TEAM_UI_FLAG, {\n                isFetching: true\n              });\n              _context2.prev = 2;\n              _context2.next = 5;\n              return TeamsAPI.get();\n\n            case 5:\n              _yield$TeamsAPI$get = _context2.sent;\n              data = _yield$TeamsAPI$get.data;\n              commit(CLEAR_TEAMS);\n              commit(SET_TEAMS, data);\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](2);\n              throw new Error(_context2.t0);\n\n            case 14:\n              _context2.prev = 14;\n              commit(SET_TEAM_UI_FLAG, {\n                isFetching: false\n              });\n              return _context2.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 11, 14, 17]]);\n    }));\n\n    function get(_x3) {\n      return _get.apply(this, arguments);\n    }\n\n    return get;\n  }(),\n  show: function () {\n    var _show = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(_ref3, _ref4) {\n      var commit, id, response;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              id = _ref4.id;\n              commit(SET_TEAM_UI_FLAG, {\n                isFetchingItem: true\n              });\n              _context3.prev = 3;\n              _context3.next = 6;\n              return TeamsAPI.show(id);\n\n            case 6:\n              response = _context3.sent;\n              commit(SET_TEAM_ITEM, response.data.payload);\n              commit(SET_TEAM_UI_FLAG, {\n                isFetchingItem: false\n              });\n              _context3.next = 14;\n              break;\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](3);\n              throw new Error(_context3.t0);\n\n            case 14:\n              _context3.prev = 14;\n              commit(SET_TEAM_UI_FLAG, {\n                isFetchingItem: false\n              });\n              return _context3.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[3, 11, 14, 17]]);\n    }));\n\n    function show(_x4, _x5) {\n      return _show.apply(this, arguments);\n    }\n\n    return show;\n  }(),\n  update: function () {\n    var _update = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(_ref5, _ref6) {\n      var commit, id, updateObj, response;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref5.commit;\n              id = _ref6.id, updateObj = _objectWithoutProperties(_ref6, [\"id\"]);\n              commit(SET_TEAM_UI_FLAG, {\n                isUpdating: true\n              });\n              _context4.prev = 3;\n              _context4.next = 6;\n              return TeamsAPI.update(id, updateObj);\n\n            case 6:\n              response = _context4.sent;\n              commit(EDIT_TEAM, response.data);\n              _context4.next = 13;\n              break;\n\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](3);\n              throw new Error(_context4.t0);\n\n            case 13:\n              _context4.prev = 13;\n              commit(SET_TEAM_UI_FLAG, {\n                isUpdating: false\n              });\n              return _context4.finish(13);\n\n            case 16:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[3, 10, 13, 16]]);\n    }));\n\n    function update(_x6, _x7) {\n      return _update.apply(this, arguments);\n    }\n\n    return update;\n  }(),\n  delete: function () {\n    var _delete2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(_ref7, teamId) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref7.commit;\n              commit(SET_TEAM_UI_FLAG, {\n                isDeleting: true\n              });\n              _context5.prev = 2;\n              _context5.next = 5;\n              return TeamsAPI.delete(teamId);\n\n            case 5:\n              commit(DELETE_TEAM, teamId);\n              _context5.next = 11;\n              break;\n\n            case 8:\n              _context5.prev = 8;\n              _context5.t0 = _context5[\"catch\"](2);\n              throw new Error(_context5.t0);\n\n            case 11:\n              _context5.prev = 11;\n              commit(SET_TEAM_UI_FLAG, {\n                isDeleting: false\n              });\n              return _context5.finish(11);\n\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[2, 8, 11, 14]]);\n    }));\n\n    function _delete(_x8, _x9) {\n      return _delete2.apply(this, arguments);\n    }\n\n    return _delete;\n  }()\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/store/modules/teams/actions.js"],"names":["SET_TEAM_UI_FLAG","CLEAR_TEAMS","SET_TEAMS","SET_TEAM_ITEM","EDIT_TEAM","DELETE_TEAM","TeamsAPI","actions","create","teamInfo","commit","isCreating","response","team","data","Error","get","isFetching","show","id","isFetchingItem","payload","update","updateObj","isUpdating","delete","teamId","isDeleting"],"mappings":"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","sourcesContent":["import {\n  SET_TEAM_UI_FLAG,\n  CLEAR_TEAMS,\n  SET_TEAMS,\n  SET_TEAM_ITEM,\n  EDIT_TEAM,\n  DELETE_TEAM,\n} from './types';\nimport TeamsAPI from '../../../api/teams';\n\nexport const actions = {\n  create: async ({ commit }, teamInfo) => {\n    commit(SET_TEAM_UI_FLAG, { isCreating: true });\n    try {\n      const response = await TeamsAPI.create(teamInfo);\n      const team = response.data;\n      commit(SET_TEAM_ITEM, team);\n      return team;\n    } catch (error) {\n      throw new Error(error);\n    } finally {\n      commit(SET_TEAM_UI_FLAG, { isCreating: false });\n    }\n  },\n  get: async ({ commit }) => {\n    commit(SET_TEAM_UI_FLAG, { isFetching: true });\n    try {\n      const { data } = await TeamsAPI.get();\n      commit(CLEAR_TEAMS);\n      commit(SET_TEAMS, data);\n    } catch (error) {\n      throw new Error(error);\n    } finally {\n      commit(SET_TEAM_UI_FLAG, { isFetching: false });\n    }\n  },\n\n  show: async ({ commit }, { id }) => {\n    commit(SET_TEAM_UI_FLAG, { isFetchingItem: true });\n    try {\n      const response = await TeamsAPI.show(id);\n      commit(SET_TEAM_ITEM, response.data.payload);\n      commit(SET_TEAM_UI_FLAG, {\n        isFetchingItem: false,\n      });\n    } catch (error) {\n      throw new Error(error);\n    } finally {\n      commit(SET_TEAM_UI_FLAG, {\n        isFetchingItem: false,\n      });\n    }\n  },\n\n  update: async ({ commit }, { id, ...updateObj }) => {\n    commit(SET_TEAM_UI_FLAG, { isUpdating: true });\n    try {\n      const response = await TeamsAPI.update(id, updateObj);\n      commit(EDIT_TEAM, response.data);\n    } catch (error) {\n      throw new Error(error);\n    } finally {\n      commit(SET_TEAM_UI_FLAG, { isUpdating: false });\n    }\n  },\n\n  delete: async ({ commit }, teamId) => {\n    commit(SET_TEAM_UI_FLAG, { isDeleting: true });\n    try {\n      await TeamsAPI.delete(teamId);\n      commit(DELETE_TEAM, teamId);\n    } catch (error) {\n      throw new Error(error);\n    } finally {\n      commit(SET_TEAM_UI_FLAG, { isDeleting: false });\n    }\n  },\n};\n"]},"metadata":{},"sourceType":"module"}