{"ast":null,"code":"import \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport PortalListItem from '../../components/PortalListItem';\nimport Spinner from 'shared/components/Spinner.vue';\nimport EmptyState from 'dashboard/components/widgets/EmptyState';\nimport AddLocale from '../../components/AddLocale';\nimport { buildPortalURL } from 'dashboard/helper/portalHelper';\nexport default {\n  components: {\n    PortalListItem: PortalListItem,\n    EmptyState: EmptyState,\n    Spinner: Spinner,\n    AddLocale: AddLocale\n  },\n  mixins: [alertMixin],\n  data: function data() {\n    return {\n      isAddLocaleModalOpen: false,\n      selectedPortal: {}\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    portals: 'portals/allPortals',\n    meta: 'portals/getMeta',\n    isFetching: 'portals/isFetchingPortals'\n  })), {}, {\n    portalStatus: function portalStatus() {\n      return this.archived ? 'Archived' : 'Live';\n    },\n    shouldShowEmptyState: function shouldShowEmptyState() {\n      return !this.isFetching && !this.portals.length;\n    }\n  }),\n  methods: {\n    openPortal: function openPortal(portalSlug) {\n      window.open(buildPortalURL(portalSlug), '_blank');\n    },\n    addPortal: function addPortal() {\n      this.$router.push({\n        name: 'new_portal_information'\n      });\n    },\n    closeAddLocaleModal: function closeAddLocaleModal() {\n      this.isAddLocaleModalOpen = false;\n      this.selectedPortal = {};\n    },\n    addLocale: function addLocale(portalId) {\n      this.isAddLocaleModalOpen = true;\n      this.selectedPortal = this.portals.find(function (portal) {\n        return portal.id === portalId;\n      });\n    }\n  }\n};","map":{"version":3,"sources":["ListAllPortals.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,UAAA,MAAA,0BAAA;AACA,OAAA,cAAA,MAAA,iCAAA;AACA,OAAA,OAAA,MAAA,+BAAA;AACA,OAAA,UAAA,MAAA,yCAAA;AACA,OAAA,SAAA,MAAA,4BAAA;AACA,SAAA,cAAA,QAAA,+BAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,cAAA,EAAA,cADA;AAEA,IAAA,UAAA,EAAA,UAFA;AAGA,IAAA,OAAA,EAAA,OAHA;AAIA,IAAA,SAAA,EAAA;AAJA,GADA;AAOA,EAAA,MAAA,EAAA,CAAA,UAAA,CAPA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,oBAAA,EAAA,KADA;AAEA,MAAA,cAAA,EAAA;AAFA,KAAA;AAIA,GAbA;AAcA,EAAA,QAAA,kCACA,UAAA,CAAA;AACA,IAAA,OAAA,EAAA,oBADA;AAEA,IAAA,IAAA,EAAA,iBAFA;AAGA,IAAA,UAAA,EAAA;AAHA,GAAA,CADA;AAMA,IAAA,YANA,0BAMA;AACA,aAAA,KAAA,QAAA,GAAA,UAAA,GAAA,MAAA;AACA,KARA;AASA,IAAA,oBATA,kCASA;AACA,aAAA,CAAA,KAAA,UAAA,IAAA,CAAA,KAAA,OAAA,CAAA,MAAA;AACA;AAXA,IAdA;AA2BA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,UADA,EACA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA,cAAA,CAAA,UAAA,CAAA,EAAA,QAAA;AACA,KAHA;AAIA,IAAA,SAJA,uBAIA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA;AACA,KANA;AAOA,IAAA,mBAPA,iCAOA;AACA,WAAA,oBAAA,GAAA,KAAA;AACA,WAAA,cAAA,GAAA,EAAA;AACA,KAVA;AAWA,IAAA,SAXA,qBAWA,QAXA,EAWA;AACA,WAAA,oBAAA,GAAA,IAAA;AACA,WAAA,cAAA,GAAA,KAAA,OAAA,CAAA,IAAA,CAAA,UAAA,MAAA;AAAA,eAAA,MAAA,CAAA,EAAA,KAAA,QAAA;AAAA,OAAA,CAAA;AACA;AAdA;AA3BA,CAAA","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"header-wrap\">\n      <div class=\"header-left-wrap\">\n        <woot-sidemenu-icon />\n        <h1 class=\"page-title\">{{ $t('HELP_CENTER.PORTAL.HEADER') }}</h1>\n      </div>\n      <woot-button\n        color-scheme=\"primary\"\n        icon=\"add\"\n        size=\"small\"\n        @click=\"addPortal\"\n      >\n        {{ $t('HELP_CENTER.PORTAL.NEW_BUTTON') }}\n      </woot-button>\n    </div>\n    <div class=\"portal-container\">\n      <portal-list-item\n        v-for=\"portal in portals\"\n        :key=\"portal.id\"\n        :portal=\"portal\"\n        :status=\"portalStatus\"\n        @add-locale=\"addLocale\"\n        @open-site=\"openPortal\"\n      />\n      <div v-if=\"isFetching\" class=\"portals--loader\">\n        <spinner />\n        <span>{{ $t('HELP_CENTER.PORTAL.LOADING_MESSAGE') }}</span>\n      </div>\n      <empty-state\n        v-else-if=\"shouldShowEmptyState\"\n        :title=\"$t('HELP_CENTER.PORTAL.NO_PORTALS_MESSAGE')\"\n      />\n    </div>\n    <woot-modal\n      :show.sync=\"isAddLocaleModalOpen\"\n      :on-close=\"closeAddLocaleModal\"\n    >\n      <add-locale\n        :show=\"isAddLocaleModalOpen\"\n        :portal=\"selectedPortal\"\n        @cancel=\"closeAddLocaleModal\"\n      />\n    </woot-modal>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport PortalListItem from '../../components/PortalListItem';\nimport Spinner from 'shared/components/Spinner.vue';\nimport EmptyState from 'dashboard/components/widgets/EmptyState';\nimport AddLocale from '../../components/AddLocale';\nimport { buildPortalURL } from 'dashboard/helper/portalHelper';\n\nexport default {\n  components: {\n    PortalListItem,\n    EmptyState,\n    Spinner,\n    AddLocale,\n  },\n  mixins: [alertMixin],\n  data() {\n    return {\n      isAddLocaleModalOpen: false,\n      selectedPortal: {},\n    };\n  },\n  computed: {\n    ...mapGetters({\n      portals: 'portals/allPortals',\n      meta: 'portals/getMeta',\n      isFetching: 'portals/isFetchingPortals',\n    }),\n    portalStatus() {\n      return this.archived ? 'Archived' : 'Live';\n    },\n    shouldShowEmptyState() {\n      return !this.isFetching && !this.portals.length;\n    },\n  },\n  methods: {\n    openPortal(portalSlug) {\n      window.open(buildPortalURL(portalSlug), '_blank');\n    },\n    addPortal() {\n      this.$router.push({ name: 'new_portal_information' });\n    },\n    closeAddLocaleModal() {\n      this.isAddLocaleModalOpen = false;\n      this.selectedPortal = {};\n    },\n    addLocale(portalId) {\n      this.isAddLocaleModalOpen = true;\n      this.selectedPortal = this.portals.find(portal => portal.id === portalId);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  padding: var(--space-small) var(--space-normal);\n  width: 100%;\n  .portals--loader {\n    align-items: center;\n    display: flex;\n    font-size: var(--font-size-default);\n    justify-content: center;\n    padding: var(--space-big);\n  }\n  .header-wrap {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin: 0 0 var(--space-small) 0;\n    height: var(--space-larger);\n\n    .header-left-wrap {\n      display: flex;\n      align-items: center;\n      .page-title {\n        margin-bottom: 0;\n      }\n    }\n  }\n  .portal-container {\n    height: 90vh;\n    overflow-y: scroll;\n  }\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/helpcenter/pages/portals"},"metadata":{},"sourceType":"module"}