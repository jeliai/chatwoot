{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { hasEmojiSupport } from 'shared/helpers/emoji';\nimport { mapGetters } from 'vuex';\nexport default {\n  props: {\n    icon: {\n      type: String,\n      default: ''\n    },\n    iconSize: {\n      type: [Number, String],\n      default: 20\n    },\n    emoji: {\n      type: String,\n      default: ''\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    uiSettings: 'getUISettings'\n  })), {}, {\n    isIconTypeEmoji: function isIconTypeEmoji() {\n      var _ref = this.uiSettings || {},\n          iconType = _ref.icon_type;\n\n      return iconType === 'emoji';\n    },\n    showEmoji: function showEmoji() {\n      return this.isIconTypeEmoji && this.emoji && hasEmojiSupport(this.emoji);\n    },\n    showIcon: function showIcon() {\n      return !this.showEmoji && this.icon;\n    },\n    iconContent: function iconContent() {\n      return this.showEmoji ? this.emoji : '';\n    },\n    className: function className() {\n      return _defineProperty({\n        'icon--emoji': this.showEmoji,\n        'icon--font': this.showIcon\n      }, this.icon, this.showIcon);\n    }\n  })\n};","map":{"version":3,"sources":["EmojiOrIcon.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAWA,SAAA,eAAA,QAAA,sBAAA;AACA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AAAA,MAAA,IAAA,EAAA,MAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KADA;AAEA,IAAA,QAAA,EAAA;AAAA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KAFA;AAGA,IAAA,KAAA,EAAA;AAAA,MAAA,IAAA,EAAA,MAAA;AAAA,MAAA,OAAA,EAAA;AAAA;AAHA,GADA;AAMA,EAAA,QAAA,kCACA,UAAA,CAAA;AAAA,IAAA,UAAA,EAAA;AAAA,GAAA,CADA;AAEA,IAAA,eAFA,6BAEA;AACA,iBAAA,KAAA,UAAA,IAAA,EAAA;AAAA,UAAA,QAAA,QAAA,SAAA;;AACA,aAAA,QAAA,KAAA,OAAA;AACA,KALA;AAMA,IAAA,SANA,uBAMA;AACA,aAAA,KAAA,eAAA,IAAA,KAAA,KAAA,IAAA,eAAA,CAAA,KAAA,KAAA,CAAA;AACA,KARA;AASA,IAAA,QATA,sBASA;AACA,aAAA,CAAA,KAAA,SAAA,IAAA,KAAA,IAAA;AACA,KAXA;AAYA,IAAA,WAZA,yBAYA;AACA,aAAA,KAAA,SAAA,GAAA,KAAA,KAAA,GAAA,EAAA;AACA,KAdA;AAeA,IAAA,SAfA,uBAeA;AACA;AACA,uBAAA,KAAA,SADA;AAEA,sBAAA,KAAA;AAFA,SAGA,KAAA,IAHA,EAGA,KAAA,QAHA;AAKA;AArBA;AANA,CAAA","sourcesContent":["<template>\n  <i v-if=\"showEmoji\" :class=\"className\">{{ iconContent }}</i>\n  <fluent-icon\n    v-else-if=\"showIcon\"\n    :size=\"iconSize\"\n    :icon=\"icon\"\n    :class=\"className\"\n  />\n</template>\n\n<script>\nimport { hasEmojiSupport } from 'shared/helpers/emoji';\nimport { mapGetters } from 'vuex';\n\nexport default {\n  props: {\n    icon: { type: String, default: '' },\n    iconSize: { type: [Number, String], default: 20 },\n    emoji: { type: String, default: '' },\n  },\n  computed: {\n    ...mapGetters({ uiSettings: 'getUISettings' }),\n    isIconTypeEmoji() {\n      const { icon_type: iconType } = this.uiSettings || {};\n      return iconType === 'emoji';\n    },\n    showEmoji() {\n      return this.isIconTypeEmoji && this.emoji && hasEmojiSupport(this.emoji);\n    },\n    showIcon() {\n      return !this.showEmoji && this.icon;\n    },\n    iconContent() {\n      return this.showEmoji ? this.emoji : '';\n    },\n    className() {\n      return {\n        'icon--emoji': this.showEmoji,\n        'icon--font': this.showIcon,\n        [this.icon]: this.showIcon,\n      };\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.icon--emoji {\n  font-style: normal;\n}\n</style>\n"],"sourceRoot":"app/javascript/shared/components"},"metadata":{},"sourceType":"module"}