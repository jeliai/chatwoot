{"ast":null,"code":"var _mutations;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport Vue from 'vue';\nimport * as MutationHelpers from 'shared/helpers/vuex/mutationHelpers';\nimport types from '../mutation-types';\nimport AgentBotsAPI from '../../api/agentBots';\nimport InboxesAPI from '../../api/inboxes';\nimport { throwErrorMessage } from '../utils/api';\nexport var state = {\n  records: [],\n  uiFlags: {\n    isFetching: false,\n    isFetchingItem: false,\n    isCreating: false,\n    isDeleting: false,\n    isUpdating: false,\n    isFetchingAgentBot: false,\n    isSettingAgentBot: false\n  },\n  agentBotInbox: {}\n};\nexport var getters = {\n  getBots: function getBots($state) {\n    return $state.records;\n  },\n  getUIFlags: function getUIFlags($state) {\n    return $state.uiFlags;\n  },\n  getBot: function getBot($state) {\n    return function (botId) {\n      var _$state$records$filte = $state.records.filter(function (record) {\n        return record.id === Number(botId);\n      }),\n          _$state$records$filte2 = _slicedToArray(_$state$records$filte, 1),\n          bot = _$state$records$filte2[0];\n\n      return bot || {};\n    };\n  },\n  getActiveAgentBot: function getActiveAgentBot($state) {\n    return function (inboxId) {\n      var associatedAgentBotId = $state.agentBotInbox[Number(inboxId)];\n      return getters.getBot($state)(associatedAgentBotId);\n    };\n  }\n};\nexport var actions = {\n  get: function () {\n    var _get = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref) {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              commit(types.SET_AGENT_BOT_UI_FLAG, {\n                isFetching: true\n              });\n              _context.prev = 2;\n              _context.next = 5;\n              return AgentBotsAPI.get();\n\n            case 5:\n              response = _context.sent;\n              commit(types.SET_AGENT_BOTS, response.data);\n              _context.next = 11;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n\n            case 11:\n              _context.prev = 11;\n              commit(types.SET_AGENT_BOT_UI_FLAG, {\n                isFetching: false\n              });\n              return _context.finish(11);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 9, 11, 14]]);\n    }));\n\n    function get(_x) {\n      return _get.apply(this, arguments);\n    }\n\n    return get;\n  }(),\n  create: function () {\n    var _create = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref2, agentBotObj) {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              commit(types.SET_AGENT_BOT_UI_FLAG, {\n                isCreating: true\n              });\n              _context2.prev = 2;\n              _context2.next = 5;\n              return AgentBotsAPI.create(agentBotObj);\n\n            case 5:\n              response = _context2.sent;\n              commit(types.ADD_AGENT_BOT, response.data);\n              return _context2.abrupt(\"return\", response.data);\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](2);\n              throwErrorMessage(_context2.t0);\n\n            case 13:\n              _context2.prev = 13;\n              commit(types.SET_AGENT_BOT_UI_FLAG, {\n                isCreating: false\n              });\n              return _context2.finish(13);\n\n            case 16:\n              return _context2.abrupt(\"return\", null);\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 10, 13, 16]]);\n    }));\n\n    function create(_x2, _x3) {\n      return _create.apply(this, arguments);\n    }\n\n    return create;\n  }(),\n  update: function () {\n    var _update = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(_ref3, _ref4) {\n      var commit, id, agentBotObj, response;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              id = _ref4.id, agentBotObj = _objectWithoutProperties(_ref4, [\"id\"]);\n              commit(types.SET_AGENT_BOT_UI_FLAG, {\n                isUpdating: true\n              });\n              _context3.prev = 3;\n              _context3.next = 6;\n              return AgentBotsAPI.update(id, agentBotObj);\n\n            case 6:\n              response = _context3.sent;\n              commit(types.EDIT_AGENT_BOT, response.data);\n              _context3.next = 13;\n              break;\n\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](3);\n              throwErrorMessage(_context3.t0);\n\n            case 13:\n              _context3.prev = 13;\n              commit(types.SET_AGENT_BOT_UI_FLAG, {\n                isUpdating: false\n              });\n              return _context3.finish(13);\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[3, 10, 13, 16]]);\n    }));\n\n    function update(_x4, _x5) {\n      return _update.apply(this, arguments);\n    }\n\n    return update;\n  }(),\n  delete: function () {\n    var _delete2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(_ref5, id) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref5.commit;\n              commit(types.SET_AGENT_BOT_UI_FLAG, {\n                isDeleting: true\n              });\n              _context4.prev = 2;\n              _context4.next = 5;\n              return AgentBotsAPI.delete(id);\n\n            case 5:\n              commit(types.DELETE_AGENT_BOT, id);\n              _context4.next = 11;\n              break;\n\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](2);\n              throwErrorMessage(_context4.t0);\n\n            case 11:\n              _context4.prev = 11;\n              commit(types.SET_AGENT_BOT_UI_FLAG, {\n                isDeleting: false\n              });\n              return _context4.finish(11);\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[2, 8, 11, 14]]);\n    }));\n\n    function _delete(_x6, _x7) {\n      return _delete2.apply(this, arguments);\n    }\n\n    return _delete;\n  }(),\n  show: function () {\n    var _show = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(_ref6, id) {\n      var commit, _yield$AgentBotsAPI$s, data;\n\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref6.commit;\n              commit(types.SET_AGENT_BOT_UI_FLAG, {\n                isFetchingItem: true\n              });\n              _context5.prev = 2;\n              _context5.next = 5;\n              return AgentBotsAPI.show(id);\n\n            case 5:\n              _yield$AgentBotsAPI$s = _context5.sent;\n              data = _yield$AgentBotsAPI$s.data;\n              commit(types.ADD_AGENT_BOT, data);\n              _context5.next = 13;\n              break;\n\n            case 10:\n              _context5.prev = 10;\n              _context5.t0 = _context5[\"catch\"](2);\n              throwErrorMessage(_context5.t0);\n\n            case 13:\n              _context5.prev = 13;\n              commit(types.SET_AGENT_BOT_UI_FLAG, {\n                isFetchingItem: false\n              });\n              return _context5.finish(13);\n\n            case 16:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[2, 10, 13, 16]]);\n    }));\n\n    function show(_x8, _x9) {\n      return _show.apply(this, arguments);\n    }\n\n    return show;\n  }(),\n  fetchAgentBotInbox: function () {\n    var _fetchAgentBotInbox = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(_ref7, inboxId) {\n      var commit, _yield$InboxesAPI$get, data, _ref8, _ref8$agent_bot, agentBot;\n\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              commit = _ref7.commit;\n              commit(types.SET_AGENT_BOT_UI_FLAG, {\n                isFetchingAgentBot: true\n              });\n              _context6.prev = 2;\n              _context6.next = 5;\n              return InboxesAPI.getAgentBot(inboxId);\n\n            case 5:\n              _yield$InboxesAPI$get = _context6.sent;\n              data = _yield$InboxesAPI$get.data;\n              _ref8 = data || {}, _ref8$agent_bot = _ref8.agent_bot, agentBot = _ref8$agent_bot === void 0 ? {} : _ref8$agent_bot;\n              commit(types.SET_AGENT_BOT_INBOX, {\n                agentBotId: agentBot.id,\n                inboxId: inboxId\n              });\n              _context6.next = 14;\n              break;\n\n            case 11:\n              _context6.prev = 11;\n              _context6.t0 = _context6[\"catch\"](2);\n              throwErrorMessage(_context6.t0);\n\n            case 14:\n              _context6.prev = 14;\n              commit(types.SET_AGENT_BOT_UI_FLAG, {\n                isFetchingAgentBot: false\n              });\n              return _context6.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[2, 11, 14, 17]]);\n    }));\n\n    function fetchAgentBotInbox(_x10, _x11) {\n      return _fetchAgentBotInbox.apply(this, arguments);\n    }\n\n    return fetchAgentBotInbox;\n  }(),\n  setAgentBotInbox: function () {\n    var _setAgentBotInbox = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(_ref9, _ref10) {\n      var commit, inboxId, botId;\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              commit = _ref9.commit;\n              inboxId = _ref10.inboxId, botId = _ref10.botId;\n              commit(types.SET_AGENT_BOT_UI_FLAG, {\n                isSettingAgentBot: true\n              });\n              _context7.prev = 3;\n              _context7.next = 6;\n              return InboxesAPI.setAgentBot(inboxId, botId);\n\n            case 6:\n              commit(types.SET_AGENT_BOT_INBOX, {\n                agentBotId: botId,\n                inboxId: inboxId\n              });\n              _context7.next = 12;\n              break;\n\n            case 9:\n              _context7.prev = 9;\n              _context7.t0 = _context7[\"catch\"](3);\n              throwErrorMessage(_context7.t0);\n\n            case 12:\n              _context7.prev = 12;\n              commit(types.SET_AGENT_BOT_UI_FLAG, {\n                isSettingAgentBot: false\n              });\n              return _context7.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[3, 9, 12, 15]]);\n    }));\n\n    function setAgentBotInbox(_x12, _x13) {\n      return _setAgentBotInbox.apply(this, arguments);\n    }\n\n    return setAgentBotInbox;\n  }()\n};\nexport var mutations = (_mutations = {}, _defineProperty(_mutations, types.SET_AGENT_BOT_UI_FLAG, function ($state, data) {\n  $state.uiFlags = _objectSpread(_objectSpread({}, $state.uiFlags), data);\n}), _defineProperty(_mutations, types.ADD_AGENT_BOT, MutationHelpers.setSingleRecord), _defineProperty(_mutations, types.SET_AGENT_BOTS, MutationHelpers.set), _defineProperty(_mutations, types.EDIT_AGENT_BOT, MutationHelpers.update), _defineProperty(_mutations, types.DELETE_AGENT_BOT, MutationHelpers.destroy), _defineProperty(_mutations, types.SET_AGENT_BOT_INBOX, function ($state, _ref11) {\n  var agentBotId = _ref11.agentBotId,\n      inboxId = _ref11.inboxId;\n  Vue.set($state.agentBotInbox, inboxId, agentBotId);\n}), _mutations);\nexport default {\n  namespaced: true,\n  actions: actions,\n  state: state,\n  getters: getters,\n  mutations: mutations\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/store/modules/agentBots.js"],"names":["Vue","MutationHelpers","types","AgentBotsAPI","InboxesAPI","throwErrorMessage","state","records","uiFlags","isFetching","isFetchingItem","isCreating","isDeleting","isUpdating","isFetchingAgentBot","isSettingAgentBot","agentBotInbox","getters","getBots","$state","getUIFlags","getBot","botId","filter","record","id","Number","bot","getActiveAgentBot","inboxId","associatedAgentBotId","actions","get","commit","SET_AGENT_BOT_UI_FLAG","response","SET_AGENT_BOTS","data","create","agentBotObj","ADD_AGENT_BOT","update","EDIT_AGENT_BOT","delete","DELETE_AGENT_BOT","show","fetchAgentBotInbox","getAgentBot","agent_bot","agentBot","SET_AGENT_BOT_INBOX","agentBotId","setAgentBotInbox","setAgentBot","mutations","setSingleRecord","set","destroy","namespaced"],"mappings":"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","sourcesContent":["import Vue from 'vue';\nimport * as MutationHelpers from 'shared/helpers/vuex/mutationHelpers';\nimport types from '../mutation-types';\nimport AgentBotsAPI from '../../api/agentBots';\nimport InboxesAPI from '../../api/inboxes';\nimport { throwErrorMessage } from '../utils/api';\n\nexport const state = {\n  records: [],\n  uiFlags: {\n    isFetching: false,\n    isFetchingItem: false,\n    isCreating: false,\n    isDeleting: false,\n    isUpdating: false,\n    isFetchingAgentBot: false,\n    isSettingAgentBot: false,\n  },\n  agentBotInbox: {},\n};\n\nexport const getters = {\n  getBots($state) {\n    return $state.records;\n  },\n  getUIFlags($state) {\n    return $state.uiFlags;\n  },\n  getBot: $state => botId => {\n    const [bot] = $state.records.filter(record => record.id === Number(botId));\n    return bot || {};\n  },\n  getActiveAgentBot: $state => inboxId => {\n    const associatedAgentBotId = $state.agentBotInbox[Number(inboxId)];\n    return getters.getBot($state)(associatedAgentBotId);\n  },\n};\n\nexport const actions = {\n  get: async ({ commit }) => {\n    commit(types.SET_AGENT_BOT_UI_FLAG, { isFetching: true });\n    try {\n      const response = await AgentBotsAPI.get();\n      commit(types.SET_AGENT_BOTS, response.data);\n    } catch (error) {\n      // Ignore error\n    } finally {\n      commit(types.SET_AGENT_BOT_UI_FLAG, { isFetching: false });\n    }\n  },\n  create: async ({ commit }, agentBotObj) => {\n    commit(types.SET_AGENT_BOT_UI_FLAG, { isCreating: true });\n    try {\n      const response = await AgentBotsAPI.create(agentBotObj);\n      commit(types.ADD_AGENT_BOT, response.data);\n      return response.data;\n    } catch (error) {\n      throwErrorMessage(error);\n    } finally {\n      commit(types.SET_AGENT_BOT_UI_FLAG, { isCreating: false });\n    }\n    return null;\n  },\n  update: async ({ commit }, { id, ...agentBotObj }) => {\n    commit(types.SET_AGENT_BOT_UI_FLAG, { isUpdating: true });\n    try {\n      const response = await AgentBotsAPI.update(id, agentBotObj);\n      commit(types.EDIT_AGENT_BOT, response.data);\n    } catch (error) {\n      throwErrorMessage(error);\n    } finally {\n      commit(types.SET_AGENT_BOT_UI_FLAG, { isUpdating: false });\n    }\n  },\n  delete: async ({ commit }, id) => {\n    commit(types.SET_AGENT_BOT_UI_FLAG, { isDeleting: true });\n    try {\n      await AgentBotsAPI.delete(id);\n      commit(types.DELETE_AGENT_BOT, id);\n    } catch (error) {\n      throwErrorMessage(error);\n    } finally {\n      commit(types.SET_AGENT_BOT_UI_FLAG, { isDeleting: false });\n    }\n  },\n  show: async ({ commit }, id) => {\n    commit(types.SET_AGENT_BOT_UI_FLAG, { isFetchingItem: true });\n    try {\n      const { data } = await AgentBotsAPI.show(id);\n      commit(types.ADD_AGENT_BOT, data);\n    } catch (error) {\n      throwErrorMessage(error);\n    } finally {\n      commit(types.SET_AGENT_BOT_UI_FLAG, { isFetchingItem: false });\n    }\n  },\n\n  fetchAgentBotInbox: async ({ commit }, inboxId) => {\n    commit(types.SET_AGENT_BOT_UI_FLAG, { isFetchingAgentBot: true });\n    try {\n      const { data } = await InboxesAPI.getAgentBot(inboxId);\n      const { agent_bot: agentBot = {} } = data || {};\n      commit(types.SET_AGENT_BOT_INBOX, { agentBotId: agentBot.id, inboxId });\n    } catch (error) {\n      throwErrorMessage(error);\n    } finally {\n      commit(types.SET_AGENT_BOT_UI_FLAG, { isFetchingAgentBot: false });\n    }\n  },\n\n  setAgentBotInbox: async ({ commit }, { inboxId, botId }) => {\n    commit(types.SET_AGENT_BOT_UI_FLAG, { isSettingAgentBot: true });\n    try {\n      await InboxesAPI.setAgentBot(inboxId, botId);\n      commit(types.SET_AGENT_BOT_INBOX, { agentBotId: botId, inboxId });\n    } catch (error) {\n      throwErrorMessage(error);\n    } finally {\n      commit(types.SET_AGENT_BOT_UI_FLAG, { isSettingAgentBot: false });\n    }\n  },\n};\n\nexport const mutations = {\n  [types.SET_AGENT_BOT_UI_FLAG]($state, data) {\n    $state.uiFlags = {\n      ...$state.uiFlags,\n      ...data,\n    };\n  },\n  [types.ADD_AGENT_BOT]: MutationHelpers.setSingleRecord,\n  [types.SET_AGENT_BOTS]: MutationHelpers.set,\n  [types.EDIT_AGENT_BOT]: MutationHelpers.update,\n  [types.DELETE_AGENT_BOT]: MutationHelpers.destroy,\n  [types.SET_AGENT_BOT_INBOX]($state, { agentBotId, inboxId }) {\n    Vue.set($state.agentBotInbox, inboxId, agentBotId);\n  },\n};\n\nexport default {\n  namespaced: true,\n  actions,\n  state,\n  getters,\n  mutations,\n};\n"]},"metadata":{},"sourceType":"module"}