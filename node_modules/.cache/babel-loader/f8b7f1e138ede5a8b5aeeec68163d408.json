{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.map.js\";\nexport var getters = {\n  uiFlags: function uiFlags(state) {\n    return function (helpCenterId) {\n      var uiFlags = state.articles.uiFlags.byId[helpCenterId];\n      if (uiFlags) return uiFlags;\n      return {\n        isFetching: false,\n        isUpdating: false,\n        isDeleting: false\n      };\n    };\n  },\n  isFetching: function isFetching(state) {\n    return state.uiFlags.isFetching;\n  },\n  articleById: function articleById() {\n    for (var _len = arguments.length, getterArguments = new Array(_len), _key = 0; _key < _len; _key++) {\n      getterArguments[_key] = arguments[_key];\n    }\n\n    return function (articleId) {\n      var state = getterArguments[0];\n      var article = state.articles.byId[articleId];\n      if (!article) return undefined;\n      return article;\n    };\n  },\n  allArticles: function allArticles() {\n    for (var _len2 = arguments.length, getterArguments = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      getterArguments[_key2] = arguments[_key2];\n    }\n\n    var state = getterArguments[0],\n        _getters = getterArguments[1];\n    var articles = state.articles.allIds.map(function (id) {\n      return _getters.articleById(id);\n    }).filter(function (article) {\n      return article !== undefined;\n    });\n    return articles;\n  },\n  articleStatus: function articleStatus() {\n    for (var _len3 = arguments.length, getterArguments = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      getterArguments[_key3] = arguments[_key3];\n    }\n\n    return function (articleId) {\n      var state = getterArguments[0];\n      var article = state.articles.byId[articleId];\n      if (!article) return undefined;\n      return article.status;\n    };\n  },\n  getMeta: function getMeta(state) {\n    return state.meta;\n  }\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/store/modules/helpCenterArticles/getters.js"],"names":["getters","uiFlags","state","helpCenterId","articles","byId","isFetching","isUpdating","isDeleting","articleById","getterArguments","articleId","article","undefined","allArticles","_getters","allIds","map","id","filter","articleStatus","status","getMeta","meta"],"mappings":";;AAAA,OAAO,IAAMA,OAAO,GAAG;AACrBC,EAAAA,OAAO,EAAE,iBAAAC,KAAK;AAAA,WAAI,UAAAC,YAAY,EAAI;AAChC,UAAMF,OAAO,GAAGC,KAAK,CAACE,QAAN,CAAeH,OAAf,CAAuBI,IAAvB,CAA4BF,YAA5B,CAAhB;AACA,UAAIF,OAAJ,EAAa,OAAOA,OAAP;AACb,aAAO;AAAEK,QAAAA,UAAU,EAAE,KAAd;AAAqBC,QAAAA,UAAU,EAAE,KAAjC;AAAwCC,QAAAA,UAAU,EAAE;AAApD,OAAP;AACD,KAJa;AAAA,GADO;AAMrBF,EAAAA,UAAU,EAAE,oBAAAJ,KAAK;AAAA,WAAIA,KAAK,CAACD,OAAN,CAAcK,UAAlB;AAAA,GANI;AAOrBG,EAAAA,WAAW,EAAE;AAAA,sCAAIC,eAAJ;AAAIA,MAAAA,eAAJ;AAAA;;AAAA,WAAwB,UAAAC,SAAS,EAAI;AAChD,UAAOT,KAAP,GAAgBQ,eAAhB;AACA,UAAME,OAAO,GAAGV,KAAK,CAACE,QAAN,CAAeC,IAAf,CAAoBM,SAApB,CAAhB;AACA,UAAI,CAACC,OAAL,EAAc,OAAOC,SAAP;AACd,aAAOD,OAAP;AACD,KALY;AAAA,GAPQ;AAarBE,EAAAA,WAAW,EAAE,uBAAwB;AAAA,uCAApBJ,eAAoB;AAApBA,MAAAA,eAAoB;AAAA;;AACnC,QAAOR,KAAP,GAA0BQ,eAA1B;AAAA,QAAcK,QAAd,GAA0BL,eAA1B;AACA,QAAMN,QAAQ,GAAGF,KAAK,CAACE,QAAN,CAAeY,MAAf,CACdC,GADc,CACV,UAAAC,EAAE,EAAI;AACT,aAAOH,QAAQ,CAACN,WAAT,CAAqBS,EAArB,CAAP;AACD,KAHc,EAIdC,MAJc,CAIP,UAAAP,OAAO;AAAA,aAAIA,OAAO,KAAKC,SAAhB;AAAA,KAJA,CAAjB;AAKA,WAAOT,QAAP;AACD,GArBoB;AAsBrBgB,EAAAA,aAAa,EAAE;AAAA,uCAAIV,eAAJ;AAAIA,MAAAA,eAAJ;AAAA;;AAAA,WAAwB,UAAAC,SAAS,EAAI;AAClD,UAAOT,KAAP,GAAgBQ,eAAhB;AACA,UAAME,OAAO,GAAGV,KAAK,CAACE,QAAN,CAAeC,IAAf,CAAoBM,SAApB,CAAhB;AACA,UAAI,CAACC,OAAL,EAAc,OAAOC,SAAP;AACd,aAAOD,OAAO,CAACS,MAAf;AACD,KALc;AAAA,GAtBM;AA4BrBC,EAAAA,OAAO,EAAE,iBAAApB,KAAK,EAAI;AAChB,WAAOA,KAAK,CAACqB,IAAb;AACD;AA9BoB,CAAhB","sourcesContent":["export const getters = {\n  uiFlags: state => helpCenterId => {\n    const uiFlags = state.articles.uiFlags.byId[helpCenterId];\n    if (uiFlags) return uiFlags;\n    return { isFetching: false, isUpdating: false, isDeleting: false };\n  },\n  isFetching: state => state.uiFlags.isFetching,\n  articleById: (...getterArguments) => articleId => {\n    const [state] = getterArguments;\n    const article = state.articles.byId[articleId];\n    if (!article) return undefined;\n    return article;\n  },\n  allArticles: (...getterArguments) => {\n    const [state, _getters] = getterArguments;\n    const articles = state.articles.allIds\n      .map(id => {\n        return _getters.articleById(id);\n      })\n      .filter(article => article !== undefined);\n    return articles;\n  },\n  articleStatus: (...getterArguments) => articleId => {\n    const [state] = getterArguments;\n    const article = state.articles.byId[articleId];\n    if (!article) return undefined;\n    return article.status;\n  },\n  getMeta: state => {\n    return state.meta;\n  },\n};\n"]},"metadata":{},"sourceType":"module"}