{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nexport default {\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    accountId: 'getCurrentAccountId',\n    notificationMetadata: 'notifications/getMeta'\n  })), {}, {\n    unreadCount: function unreadCount() {\n      if (!this.notificationMetadata.unreadCount) {\n        return '';\n      }\n\n      return this.notificationMetadata.unreadCount < 100 ? \"\".concat(this.notificationMetadata.unreadCount) : '99+';\n    },\n    isNotificationPanelActive: function isNotificationPanelActive() {\n      return this.$route.name === 'notifications_index';\n    }\n  }),\n  methods: {\n    openNotificationPanel: function openNotificationPanel() {\n      if (this.$route.name !== 'notifications_index') {\n        this.$emit('open-notification-panel');\n      }\n    }\n  }\n};","map":{"version":3,"sources":["NotificationBell.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,QAAA,kCACA,UAAA,CAAA;AACA,IAAA,SAAA,EAAA,qBADA;AAEA,IAAA,oBAAA,EAAA;AAFA,GAAA,CADA;AAKA,IAAA,WALA,yBAKA;AACA,UAAA,CAAA,KAAA,oBAAA,CAAA,WAAA,EAAA;AACA,eAAA,EAAA;AACA;;AAEA,aAAA,KAAA,oBAAA,CAAA,WAAA,GAAA,GAAA,aACA,KAAA,oBAAA,CAAA,WADA,IAEA,KAFA;AAGA,KAbA;AAcA,IAAA,yBAdA,uCAcA;AACA,aAAA,KAAA,MAAA,CAAA,IAAA,KAAA,qBAAA;AACA;AAhBA,IADA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,qBADA,mCACA;AACA,UAAA,KAAA,MAAA,CAAA,IAAA,KAAA,qBAAA,EAAA;AACA,aAAA,KAAA,CAAA,yBAAA;AACA;AACA;AALA;AAnBA,CAAA","sourcesContent":["<template>\n  <div class=\"notifications-link\">\n    <woot-button\n      class-names=\"notifications-link--button\"\n      variant=\"clear\"\n      color-scheme=\"secondary\"\n      :class=\"{ 'is-active': isNotificationPanelActive }\"\n      @click=\"openNotificationPanel\"\n    >\n      <fluent-icon icon=\"alert\" />\n      <span v-if=\"unreadCount\" class=\"badge warning\">{{ unreadCount }}</span>\n    </woot-button>\n  </div>\n</template>\n<script>\nimport { mapGetters } from 'vuex';\n\nexport default {\n  computed: {\n    ...mapGetters({\n      accountId: 'getCurrentAccountId',\n      notificationMetadata: 'notifications/getMeta',\n    }),\n    unreadCount() {\n      if (!this.notificationMetadata.unreadCount) {\n        return '';\n      }\n\n      return this.notificationMetadata.unreadCount < 100\n        ? `${this.notificationMetadata.unreadCount}`\n        : '99+';\n    },\n    isNotificationPanelActive() {\n      return this.$route.name === 'notifications_index';\n    },\n  },\n  methods: {\n    openNotificationPanel() {\n      if (this.$route.name !== 'notifications_index') {\n        this.$emit('open-notification-panel');\n      }\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.notifications-link {\n  margin-bottom: var(--space-small);\n}\n\n.badge {\n  position: absolute;\n  right: var(--space-minus-smaller);\n  top: var(--space-minus-smaller);\n}\n.notifications-link--button {\n  display: flex;\n  position: relative;\n  border-radius: var(--border-radius-large);\n  border: 1px solid transparent;\n  color: var(--s-600);\n  margin: var(--space-small) 0;\n\n  &:hover {\n    background: var(--w-50);\n    color: var(--s-600);\n  }\n\n  &:focus {\n    border-color: var(--w-500);\n  }\n\n  &.is-active {\n    background: var(--w-50);\n    color: var(--w-500);\n  }\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/components/layout/sidebarComponents"},"metadata":{},"sourceType":"module"}