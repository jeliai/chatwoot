{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport Thumbnail from '../../widgets/Thumbnail';\nexport default {\n  components: {\n    Thumbnail: Thumbnail\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    currentUser: 'getCurrentUser',\n    currentUserAvailability: 'getCurrentUserAvailability'\n  })), {}, {\n    statusOfAgent: function statusOfAgent() {\n      return this.currentUserAvailability || 'offline';\n    }\n  }),\n  methods: {\n    handleClick: function handleClick() {\n      this.$emit('toggle-menu');\n    }\n  }\n};","map":{"version":3,"sources":["AgentDetails.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,SAAA,MAAA,yBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA;AADA,GADA;AAIA,EAAA,QAAA,kCACA,UAAA,CAAA;AACA,IAAA,WAAA,EAAA,gBADA;AAEA,IAAA,uBAAA,EAAA;AAFA,GAAA,CADA;AAKA,IAAA,aALA,2BAKA;AACA,aAAA,KAAA,uBAAA,IAAA,SAAA;AACA;AAPA,IAJA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,WAAA,KAAA,CAAA,aAAA;AACA;AAHA;AAbA,CAAA","sourcesContent":["<template>\n  <woot-button\n    v-tooltip.right=\"$t(`SIDEBAR.PROFILE_SETTINGS`)\"\n    variant=\"link\"\n    class=\"current-user\"\n    @click=\"handleClick\"\n  >\n    <thumbnail\n      :src=\"currentUser.avatar_url\"\n      :username=\"currentUser.name\"\n      :status=\"statusOfAgent\"\n      should-show-status-always\n      size=\"32px\"\n    />\n  </woot-button>\n</template>\n<script>\nimport { mapGetters } from 'vuex';\nimport Thumbnail from '../../widgets/Thumbnail';\n\nexport default {\n  components: {\n    Thumbnail,\n  },\n  computed: {\n    ...mapGetters({\n      currentUser: 'getCurrentUser',\n      currentUserAvailability: 'getCurrentUserAvailability',\n    }),\n    statusOfAgent() {\n      return this.currentUserAvailability || 'offline';\n    },\n  },\n  methods: {\n    handleClick() {\n      this.$emit('toggle-menu');\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.current-user {\n  align-items: center;\n  display: flex;\n  border-radius: 50%;\n  border: 2px solid var(--white);\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/components/layout/sidebarComponents"},"metadata":{},"sourceType":"module"}