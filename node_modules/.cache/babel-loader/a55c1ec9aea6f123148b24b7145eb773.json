{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport emojis from './emojisGroup.json';\nimport FluentIcon from 'shared/components/FluentIcon/Index.vue';\nvar SEARCH_KEY = 'Search';\nexport default {\n  components: {\n    FluentIcon: FluentIcon\n  },\n  props: {\n    onClick: {\n      type: Function,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    return {\n      selectedKey: 'Search',\n      emojis: emojis,\n      search: ''\n    };\n  },\n  computed: {\n    categories: function categories() {\n      return _toConsumableArray(this.emojis);\n    },\n    filterEmojisByCategory: function filterEmojisByCategory() {\n      var _this = this;\n\n      var selectedCategoryName = this.emojis.find(function (category) {\n        return category.name === _this.selectedKey ? category.name : null;\n      });\n      return selectedCategoryName === null || selectedCategoryName === void 0 ? void 0 : selectedCategoryName.emojis;\n    },\n    filterAllEmojisBySearch: function filterAllEmojisBySearch() {\n      var _this2 = this;\n\n      return this.emojis.map(function (category) {\n        var allEmojis = category.emojis.filter(function (emoji) {\n          return emoji.slug.replaceAll('_', ' ').includes(_this2.search.toLowerCase());\n        });\n        return allEmojis.length > 0 ? _objectSpread(_objectSpread({}, category), {}, {\n          emojis: allEmojis\n        }) : _objectSpread(_objectSpread({}, category), {}, {\n          emojis: []\n        });\n      });\n    },\n    hasNoSearch: function hasNoSearch() {\n      return this.selectedKey !== SEARCH_KEY && this.search === '';\n    },\n    hasEmptySearchResult: function hasEmptySearchResult() {\n      return this.filterAllEmojisBySearch.every(function (category) {\n        return category.emojis.length === 0;\n      });\n    }\n  },\n  watch: {\n    search: function search() {\n      this.selectedKey = 'Search';\n    },\n    selectedKey: function selectedKey() {\n      return this.selectedKey === 'Search' ? this.focusSearchInput() : null;\n    }\n  },\n  mounted: function mounted() {\n    this.focusSearchInput();\n  },\n  methods: {\n    changeCategory: function changeCategory(category) {\n      this.search = '';\n      this.$refs.emojiItem.scrollTo({\n        top: 0\n      });\n      this.selectedKey = category;\n    },\n    getFirstEmojiByCategoryName: function getFirstEmojiByCategoryName(categoryName) {\n      var categoryItem = this.emojis.find(function (category) {\n        return category.name === categoryName ? category : null;\n      });\n      return categoryItem ? categoryItem.emojis[0].emoji : '';\n    },\n    focusSearchInput: function focusSearchInput() {\n      this.$refs.searchbar.focus();\n    }\n  }\n};","map":{"version":3,"sources":["EmojiInput.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div role=\"dialog\" class=\"emoji-dialog\">\n    <div class=\"emoji-list--wrap\">\n      <div class=\"emoji-search--wrap\">\n        <input\n          ref=\"searchbar\"\n          v-model=\"search\"\n          type=\"text\"\n          class=\"emoji-search--input\"\n          :placeholder=\"$t('EMOJI.PLACEHOLDER')\"\n        />\n      </div>\n      <div v-if=\"hasNoSearch\" ref=\"emojiItem\" class=\"emoji-item\">\n        <h5 class=\"emoji-category--title\">\n          {{ selectedKey }}\n        </h5>\n        <div class=\"emoji--row\">\n          <button\n            v-for=\"item in filterEmojisByCategory\"\n            :key=\"item.slug\"\n            v-dompurify-html=\"item.emoji\"\n            class=\"emoji--item\"\n            track-by=\"$index\"\n            @click=\"onClick(item.emoji)\"\n          />\n        </div>\n      </div>\n      <div v-else ref=\"emojiItem\" class=\"emoji-item\">\n        <div v-for=\"category in filterAllEmojisBySearch\" :key=\"category.slug\">\n          <h5 v-if=\"category.emojis.length > 0\" class=\"emoji-category--title\">\n            {{ category.name }}\n          </h5>\n          <div v-if=\"category.emojis.length > 0\" class=\"emoji--row\">\n            <button\n              v-for=\"item in category.emojis\"\n              :key=\"item.slug\"\n              v-dompurify-html=\"item.emoji\"\n              class=\"emoji--item\"\n              track-by=\"$index\"\n              @click=\"onClick(item.emoji)\"\n            />\n          </div>\n        </div>\n        <div v-if=\"hasEmptySearchResult\" class=\"empty-message\">\n          <div class=\"emoji-icon\">\n            <fluent-icon icon=\"emoji\" size=\"48\" />\n          </div>\n          <span class=\"empty-message--text\">\n            {{ $t('EMOJI.NOT_FOUND') }}\n          </span>\n        </div>\n      </div>\n\n      <div class=\"emoji-dialog--footer\" role=\"menu\">\n        <ul>\n          <li>\n            <button\n              class=\"emoji--item\"\n              :class=\"{ active: selectedKey === 'Search' }\"\n              @click=\"changeCategory('Search')\"\n            >\n              <fluent-icon icon=\"search\" size=\"16\" />\n            </button>\n          </li>\n          <li\n            v-for=\"category in categories\"\n            :key=\"category.slug\"\n            @click=\"changeCategory(category.name)\"\n          >\n            <button\n              v-dompurify-html=\"getFirstEmojiByCategoryName(category.name)\"\n              class=\"emoji--item\"\n              :class=\"{ active: selectedKey === category.name }\"\n              @click=\"changeCategory(category.name)\"\n            />\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport emojis from './emojisGroup.json';\nimport FluentIcon from 'shared/components/FluentIcon/Index.vue';\nconst SEARCH_KEY = 'Search';\n\nexport default {\n  components: { FluentIcon },\n  props: {\n    onClick: {\n      type: Function,\n      default: () => {},\n    },\n  },\n  data() {\n    return {\n      selectedKey: 'Search',\n      emojis,\n      search: '',\n    };\n  },\n  computed: {\n    categories() {\n      return [...this.emojis];\n    },\n    filterEmojisByCategory() {\n      const selectedCategoryName = this.emojis.find(category =>\n        category.name === this.selectedKey ? category.name : null\n      );\n      return selectedCategoryName?.emojis;\n    },\n    filterAllEmojisBySearch() {\n      return this.emojis.map(category => {\n        const allEmojis = category.emojis.filter(emoji =>\n          emoji.slug.replaceAll('_', ' ').includes(this.search.toLowerCase())\n        );\n        return allEmojis.length > 0\n          ? { ...category, emojis: allEmojis }\n          : { ...category, emojis: [] };\n      });\n    },\n    hasNoSearch() {\n      return this.selectedKey !== SEARCH_KEY && this.search === '';\n    },\n    hasEmptySearchResult() {\n      return this.filterAllEmojisBySearch.every(\n        category => category.emojis.length === 0\n      );\n    },\n  },\n  watch: {\n    search() {\n      this.selectedKey = 'Search';\n    },\n    selectedKey() {\n      return this.selectedKey === 'Search' ? this.focusSearchInput() : null;\n    },\n  },\n  mounted() {\n    this.focusSearchInput();\n  },\n  methods: {\n    changeCategory(category) {\n      this.search = '';\n      this.$refs.emojiItem.scrollTo({ top: 0 });\n      this.selectedKey = category;\n    },\n    getFirstEmojiByCategoryName(categoryName) {\n      const categoryItem = this.emojis.find(category =>\n        category.name === categoryName ? category : null\n      );\n      return categoryItem ? categoryItem.emojis[0].emoji : '';\n    },\n    focusSearchInput() {\n      this.$refs.searchbar.focus();\n    },\n  },\n};\n</script>\n<style lang=\"scss\">\n/**\n * All the units used below are pixels due to variable name conflict in widget and dashboard\n **/\n@import '~dashboard/assets/scss/variables';\n@import '~dashboard/assets/scss/mixins';\n\n$space-smaller: 4px;\n$space-small: 8px;\n$space-slab: 12px;\n$space-normal: 16px;\n$space-two: 20px;\n$space-medium: 24px;\n$space-large: 28px;\n$space-larger: 32px;\n\n$font-size-tiny: 12px;\n$font-size-small: 14px;\n$font-size-default: 16px;\n$font-size-medium: 18px;\n\n$color-bg: #ebf0f5;\n\n$border-radius-normal: 5px;\n\n.emoji-dialog {\n  @include elegant-card;\n  background: $color-white;\n  border-radius: $space-small;\n  box-sizing: content-box;\n  height: 300px;\n  position: absolute;\n  right: 0;\n  top: -95px;\n  width: 320px;\n  z-index: 1;\n\n  &::before {\n    @include arrow(bottom, $color-bg, $space-slab);\n    bottom: -$space-slab;\n    position: absolute;\n    right: $space-two;\n  }\n}\n\n.emoji-list--wrap {\n  display: flex;\n  flex-direction: column;\n}\n\n.emoji--item {\n  background: transparent;\n  border: 0;\n  border-radius: $space-smaller;\n  cursor: pointer;\n  font-size: $font-size-medium;\n  height: $space-medium;\n  margin: 0;\n  padding: 0 $space-smaller;\n\n  &:hover {\n    background: var(--s-75);\n  }\n}\n\n.emoji--row {\n  box-sizing: border-box;\n  padding: $space-smaller;\n\n  .emoji--item {\n    height: 26px;\n    line-height: 1.5;\n    margin: $space-smaller;\n    width: 26px;\n  }\n}\n\n.emoji-search--wrap {\n  margin: $space-small;\n  position: sticky;\n  top: $space-small;\n\n  .emoji-search--input {\n    background-color: $color-bg;\n    border: 1px solid transparent;\n    border-radius: $border-radius-normal;\n    font-size: $font-size-small;\n    height: $space-larger;\n    margin: 0;\n    padding: $space-small;\n    width: 100%;\n\n    &:focus {\n      box-shadow: 0 0 0 1px $color-woot, 0 0 2px 3px $color-primary-light;\n    }\n  }\n}\n\n.empty-message {\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  height: 212px;\n  justify-content: center;\n\n  .emoji-icon {\n    color: var(--s-200);\n    margin-bottom: $space-small;\n  }\n  .empty-message--text {\n    color: var(--s-200);\n    font-size: $font-size-small;\n    font-weight: 500;\n  }\n}\n\n.emoji-item {\n  height: 212px;\n  overflow-y: auto;\n}\n\n.emoji-category--title {\n  color: $color-heading;\n  font-size: $font-size-small;\n  font-weight: 500;\n  line-height: 1.5;\n  margin: 0;\n  padding: $space-smaller $space-small;\n  text-transform: capitalize;\n}\n\n.emoji-dialog--footer {\n  background-color: $color-bg;\n  bottom: 0;\n  padding: 0 $space-smaller;\n  position: sticky;\n\n  ul {\n    display: flex;\n    list-style: none;\n    margin: 0;\n    overflow: auto;\n    padding: $space-smaller 0;\n\n    > li {\n      align-items: center;\n      cursor: pointer;\n      display: flex;\n      justify-content: center;\n      padding: $space-smaller;\n    }\n\n    li .active {\n      background: $color-white;\n    }\n    .emoji--item {\n      align-items: center;\n      display: flex;\n      font-size: $font-size-small;\n\n      &:hover {\n        background: $color-bg;\n      }\n    }\n  }\n}\n</style>\n"],"sourceRoot":"app/javascript/shared/components/emoji"},"metadata":{},"sourceType":"module"}