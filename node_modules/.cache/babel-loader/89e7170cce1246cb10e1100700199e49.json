{"ast":null,"code":"function findScript(src) {\n  var scripts = Array.prototype.slice.call(window.document.querySelectorAll('script'));\n  return scripts.find(function (s) {\n    return s.src === src;\n  });\n}\n\nexport function loadScript(src, attributes) {\n  var found = findScript(src);\n\n  if (found !== undefined) {\n    var status_1 = found === null || found === void 0 ? void 0 : found.getAttribute('status');\n\n    if (status_1 === 'loaded') {\n      return Promise.resolve(found);\n    }\n\n    if (status_1 === 'loading') {\n      return new Promise(function (resolve, reject) {\n        found.addEventListener('load', function () {\n          return resolve(found);\n        });\n        found.addEventListener('error', function (err) {\n          return reject(err);\n        });\n      });\n    }\n  }\n\n  return new Promise(function (resolve, reject) {\n    var _a;\n\n    var script = global.window.document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = src;\n    script.async = true;\n    script.setAttribute('status', 'loading');\n\n    for (var _i = 0, _b = Object.entries(attributes !== null && attributes !== void 0 ? attributes : {}); _i < _b.length; _i++) {\n      var _c = _b[_i],\n          k = _c[0],\n          v = _c[1];\n      script.setAttribute(k, v);\n    }\n\n    script.onload = function () {\n      script.onerror = script.onload = null;\n      script.setAttribute('status', 'loaded');\n      resolve(script);\n    };\n\n    script.onerror = function () {\n      script.onerror = script.onload = null;\n      script.setAttribute('status', 'error');\n      reject(new Error(\"Failed to load \" + src));\n    };\n\n    var tag = global.window.document.getElementsByTagName('script')[0];\n    (_a = tag.parentElement) === null || _a === void 0 ? void 0 : _a.insertBefore(script, tag);\n  });\n}\nexport function unloadScript(src) {\n  var found = findScript(src);\n\n  if (found !== undefined) {\n    found.remove();\n  }\n\n  return Promise.resolve();\n}","map":null,"metadata":{},"sourceType":"module"}