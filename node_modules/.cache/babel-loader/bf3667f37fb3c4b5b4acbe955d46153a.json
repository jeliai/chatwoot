{"ast":null,"code":"import \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { required, minLength, email } from 'vuelidate/lib/validators';\nimport { mapGetters } from 'vuex';\nimport { clearCookiesOnLogout } from '../../../../store/utils/api';\nimport NotificationSettings from './NotificationSettings';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport ChangePassword from './ChangePassword';\nimport MessageSignature from './MessageSignature';\nimport globalConfigMixin from 'shared/mixins/globalConfigMixin';\nimport uiSettingsMixin, { isEditorHotKeyEnabled } from 'dashboard/mixins/uiSettings';\nimport PreviewCard from 'dashboard/components/ui/PreviewCard.vue';\nexport default {\n  components: {\n    NotificationSettings: NotificationSettings,\n    ChangePassword: ChangePassword,\n    MessageSignature: MessageSignature,\n    PreviewCard: PreviewCard\n  },\n  mixins: [alertMixin, globalConfigMixin, uiSettingsMixin],\n  data: function data() {\n    return {\n      avatarFile: '',\n      avatarUrl: '',\n      name: '',\n      displayName: '',\n      email: '',\n      isProfileUpdating: false,\n      errorMessage: '',\n      keyOptions: [{\n        key: 'enter',\n        src: '/assets/images/dashboard/editor/enter-editor.png',\n        heading: this.$t('PROFILE_SETTINGS.FORM.SEND_MESSAGE.CARD.ENTER_KEY.HEADING'),\n        content: this.$t('PROFILE_SETTINGS.FORM.SEND_MESSAGE.CARD.ENTER_KEY.CONTENT')\n      }, {\n        key: 'cmd_enter',\n        src: '/assets/images/dashboard/editor/cmd-editor.png',\n        heading: this.$t('PROFILE_SETTINGS.FORM.SEND_MESSAGE.CARD.CMD_ENTER_KEY.HEADING'),\n        content: this.$t('PROFILE_SETTINGS.FORM.SEND_MESSAGE.CARD.CMD_ENTER_KEY.CONTENT')\n      }]\n    };\n  },\n  validations: {\n    name: {\n      required: required,\n      minLength: minLength(1)\n    },\n    displayName: {},\n    email: {\n      required: required,\n      email: email\n    }\n  },\n  computed: _objectSpread({}, mapGetters({\n    currentUser: 'getCurrentUser',\n    currentUserId: 'getCurrentUserID',\n    globalConfig: 'globalConfig/get'\n  })),\n  watch: {\n    currentUserId: function currentUserId(newCurrentUserId, prevCurrentUserId) {\n      if (prevCurrentUserId !== newCurrentUserId) {\n        this.initializeUser();\n      }\n    }\n  },\n  mounted: function mounted() {\n    if (this.currentUserId) {\n      this.initializeUser();\n    }\n  },\n  methods: {\n    initializeUser: function initializeUser() {\n      this.name = this.currentUser.name;\n      this.email = this.currentUser.email;\n      this.avatarUrl = this.currentUser.avatar_url;\n      this.displayName = this.currentUser.display_name;\n    },\n    isEditorHotKeyEnabled: isEditorHotKeyEnabled,\n    updateUser: function updateUser() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var hasEmailChanged, _error$response, _error$response$data;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.$v.$touch();\n\n                if (!_this.$v.$invalid) {\n                  _context.next = 4;\n                  break;\n                }\n\n                _this.showAlert(_this.$t('PROFILE_SETTINGS.FORM.ERROR'));\n\n                return _context.abrupt(\"return\");\n\n              case 4:\n                _this.isProfileUpdating = true;\n                hasEmailChanged = _this.currentUser.email !== _this.email;\n                _context.prev = 6;\n                _context.next = 9;\n                return _this.$store.dispatch('updateProfile', {\n                  name: _this.name,\n                  email: _this.email,\n                  avatar: _this.avatarFile,\n                  displayName: _this.displayName\n                });\n\n              case 9:\n                _this.isProfileUpdating = false;\n\n                if (hasEmailChanged) {\n                  clearCookiesOnLogout();\n                  _this.errorMessage = _this.$t('PROFILE_SETTINGS.AFTER_EMAIL_CHANGED');\n                }\n\n                _this.errorMessage = _this.$t('PROFILE_SETTINGS.UPDATE_SUCCESS');\n                _context.next = 18;\n                break;\n\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context[\"catch\"](6);\n                _this.errorMessage = _this.$t('RESET_PASSWORD.API.ERROR_MESSAGE');\n\n                if (_context.t0 !== null && _context.t0 !== void 0 && (_error$response = _context.t0.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.error) {\n                  _this.errorMessage = _context.t0.response.data.error;\n                }\n\n              case 18:\n                _context.prev = 18;\n                _this.isProfileUpdating = false;\n\n                _this.showAlert(_this.errorMessage);\n\n                return _context.finish(18);\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[6, 14, 18, 22]]);\n      }))();\n    },\n    handleImageUpload: function handleImageUpload(_ref) {\n      var file = _ref.file,\n          url = _ref.url;\n      this.avatarFile = file;\n      this.avatarUrl = url;\n    },\n    deleteAvatar: function deleteAvatar() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return _this2.$store.dispatch('deleteAvatar');\n\n              case 3:\n                _this2.avatarUrl = '';\n                _this2.avatarFile = '';\n\n                _this2.showAlert(_this2.$t('PROFILE_SETTINGS.AVATAR_DELETE_SUCCESS'));\n\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](0);\n\n                _this2.showAlert(_this2.$t('PROFILE_SETTINGS.AVATAR_DELETE_FAILED'));\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 8]]);\n      }))();\n    },\n    showDeleteButton: function showDeleteButton() {\n      return this.avatarUrl && !this.avatarUrl.includes('www.gravatar.com');\n    },\n    toggleEditorMessageKey: function toggleEditorMessageKey(key) {\n      this.updateUISettings({\n        editor_message_key: key\n      });\n      this.showAlert(this.$t('PROFILE_SETTINGS.FORM.SEND_MESSAGE.UPDATE_SUCCESS'));\n    }\n  }\n};","map":{"version":3,"sources":["Index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"columns profile--settings\">\n    <form @submit.prevent=\"updateUser('profile')\">\n      <div class=\"small-12 row profile--settings--row\">\n        <div class=\"columns small-3\">\n          <h4 class=\"block-title\">\n            {{ $t('PROFILE_SETTINGS.FORM.PROFILE_SECTION.TITLE') }}\n          </h4>\n          <p>{{ $t('PROFILE_SETTINGS.FORM.PROFILE_SECTION.NOTE') }}</p>\n        </div>\n        <div class=\"columns small-9 medium-5\">\n          <woot-avatar-uploader\n            :label=\"$t('PROFILE_SETTINGS.FORM.PROFILE_IMAGE.LABEL')\"\n            :src=\"avatarUrl\"\n            @change=\"handleImageUpload\"\n          />\n          <div v-if=\"showDeleteButton\" class=\"avatar-delete-btn\">\n            <woot-button\n              type=\"button\"\n              color-scheme=\"alert\"\n              variant=\"hollow\"\n              size=\"small\"\n              @click=\"deleteAvatar\"\n            >\n              {{ $t('PROFILE_SETTINGS.DELETE_AVATAR') }}\n            </woot-button>\n          </div>\n          <label :class=\"{ error: $v.name.$error }\">\n            {{ $t('PROFILE_SETTINGS.FORM.NAME.LABEL') }}\n            <input\n              v-model=\"name\"\n              type=\"text\"\n              :placeholder=\"$t('PROFILE_SETTINGS.FORM.NAME.PLACEHOLDER')\"\n              @input=\"$v.name.$touch\"\n            />\n            <span v-if=\"$v.name.$error\" class=\"message\">\n              {{ $t('PROFILE_SETTINGS.FORM.NAME.ERROR') }}\n            </span>\n          </label>\n          <label :class=\"{ error: $v.displayName.$error }\">\n            {{ $t('PROFILE_SETTINGS.FORM.DISPLAY_NAME.LABEL') }}\n            <input\n              v-model=\"displayName\"\n              type=\"text\"\n              :placeholder=\"\n                $t('PROFILE_SETTINGS.FORM.DISPLAY_NAME.PLACEHOLDER')\n              \"\n              @input=\"$v.displayName.$touch\"\n            />\n          </label>\n          <label\n            v-if=\"!globalConfig.disableUserProfileUpdate\"\n            :class=\"{ error: $v.email.$error }\"\n          >\n            {{ $t('PROFILE_SETTINGS.FORM.EMAIL.LABEL') }}\n            <input\n              v-model.trim=\"email\"\n              type=\"email\"\n              :placeholder=\"$t('PROFILE_SETTINGS.FORM.EMAIL.PLACEHOLDER')\"\n              @input=\"$v.email.$touch\"\n            />\n            <span v-if=\"$v.email.$error\" class=\"message\">\n              {{ $t('PROFILE_SETTINGS.FORM.EMAIL.ERROR') }}\n            </span>\n          </label>\n          <woot-button type=\"submit\" :is-loading=\"isProfileUpdating\">\n            {{ $t('PROFILE_SETTINGS.BTN_TEXT') }}\n          </woot-button>\n        </div>\n      </div>\n    </form>\n    <message-signature />\n    <div class=\"profile--settings--row row\">\n      <div class=\"columns small-3\">\n        <h4 class=\"block-title\">\n          {{ $t('PROFILE_SETTINGS.FORM.SEND_MESSAGE.TITLE') }}\n        </h4>\n        <p>\n          {{ $t('PROFILE_SETTINGS.FORM.SEND_MESSAGE.NOTE') }}\n        </p>\n      </div>\n      <div class=\"columns small-9 medium-5 card-preview\">\n        <button\n          v-for=\"keyOption in keyOptions\"\n          :key=\"keyOption.key\"\n          class=\"preview-button\"\n          @click=\"toggleEditorMessageKey(keyOption.key)\"\n        >\n          <preview-card\n            :heading=\"keyOption.heading\"\n            :content=\"keyOption.content\"\n            :src=\"keyOption.src\"\n            :active=\"isEditorHotKeyEnabled(uiSettings, keyOption.key)\"\n          />\n        </button>\n      </div>\n    </div>\n    <change-password v-if=\"!globalConfig.disableUserProfileUpdate\" />\n    <notification-settings />\n    <div class=\"profile--settings--row row\">\n      <div class=\"columns small-3\">\n        <h4 class=\"block-title\">\n          {{ $t('PROFILE_SETTINGS.FORM.ACCESS_TOKEN.TITLE') }}\n        </h4>\n        <p>\n          {{\n            useInstallationName(\n              $t('PROFILE_SETTINGS.FORM.ACCESS_TOKEN.NOTE'),\n              globalConfig.installationName\n            )\n          }}\n        </p>\n      </div>\n      <div class=\"columns small-9 medium-5\">\n        <woot-code :script=\"currentUser.access_token\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { required, minLength, email } from 'vuelidate/lib/validators';\nimport { mapGetters } from 'vuex';\nimport { clearCookiesOnLogout } from '../../../../store/utils/api';\nimport NotificationSettings from './NotificationSettings';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport ChangePassword from './ChangePassword';\nimport MessageSignature from './MessageSignature';\nimport globalConfigMixin from 'shared/mixins/globalConfigMixin';\nimport uiSettingsMixin, {\n  isEditorHotKeyEnabled,\n} from 'dashboard/mixins/uiSettings';\nimport PreviewCard from 'dashboard/components/ui/PreviewCard.vue';\n\nexport default {\n  components: {\n    NotificationSettings,\n    ChangePassword,\n    MessageSignature,\n    PreviewCard,\n  },\n  mixins: [alertMixin, globalConfigMixin, uiSettingsMixin],\n  data() {\n    return {\n      avatarFile: '',\n      avatarUrl: '',\n      name: '',\n      displayName: '',\n      email: '',\n      isProfileUpdating: false,\n      errorMessage: '',\n      keyOptions: [\n        {\n          key: 'enter',\n          src: '/assets/images/dashboard/editor/enter-editor.png',\n          heading: this.$t(\n            'PROFILE_SETTINGS.FORM.SEND_MESSAGE.CARD.ENTER_KEY.HEADING'\n          ),\n          content: this.$t(\n            'PROFILE_SETTINGS.FORM.SEND_MESSAGE.CARD.ENTER_KEY.CONTENT'\n          ),\n        },\n        {\n          key: 'cmd_enter',\n          src: '/assets/images/dashboard/editor/cmd-editor.png',\n          heading: this.$t(\n            'PROFILE_SETTINGS.FORM.SEND_MESSAGE.CARD.CMD_ENTER_KEY.HEADING'\n          ),\n          content: this.$t(\n            'PROFILE_SETTINGS.FORM.SEND_MESSAGE.CARD.CMD_ENTER_KEY.CONTENT'\n          ),\n        },\n      ],\n    };\n  },\n  validations: {\n    name: {\n      required,\n      minLength: minLength(1),\n    },\n    displayName: {},\n    email: {\n      required,\n      email,\n    },\n  },\n  computed: {\n    ...mapGetters({\n      currentUser: 'getCurrentUser',\n      currentUserId: 'getCurrentUserID',\n      globalConfig: 'globalConfig/get',\n    }),\n  },\n  watch: {\n    currentUserId(newCurrentUserId, prevCurrentUserId) {\n      if (prevCurrentUserId !== newCurrentUserId) {\n        this.initializeUser();\n      }\n    },\n  },\n  mounted() {\n    if (this.currentUserId) {\n      this.initializeUser();\n    }\n  },\n  methods: {\n    initializeUser() {\n      this.name = this.currentUser.name;\n      this.email = this.currentUser.email;\n      this.avatarUrl = this.currentUser.avatar_url;\n      this.displayName = this.currentUser.display_name;\n    },\n    isEditorHotKeyEnabled,\n    async updateUser() {\n      this.$v.$touch();\n      if (this.$v.$invalid) {\n        this.showAlert(this.$t('PROFILE_SETTINGS.FORM.ERROR'));\n        return;\n      }\n\n      this.isProfileUpdating = true;\n      const hasEmailChanged = this.currentUser.email !== this.email;\n      try {\n        await this.$store.dispatch('updateProfile', {\n          name: this.name,\n          email: this.email,\n          avatar: this.avatarFile,\n          displayName: this.displayName,\n        });\n        this.isProfileUpdating = false;\n        if (hasEmailChanged) {\n          clearCookiesOnLogout();\n          this.errorMessage = this.$t('PROFILE_SETTINGS.AFTER_EMAIL_CHANGED');\n        }\n        this.errorMessage = this.$t('PROFILE_SETTINGS.UPDATE_SUCCESS');\n      } catch (error) {\n        this.errorMessage = this.$t('RESET_PASSWORD.API.ERROR_MESSAGE');\n        if (error?.response?.data?.error) {\n          this.errorMessage = error.response.data.error;\n        }\n      } finally {\n        this.isProfileUpdating = false;\n        this.showAlert(this.errorMessage);\n      }\n    },\n    handleImageUpload({ file, url }) {\n      this.avatarFile = file;\n      this.avatarUrl = url;\n    },\n    async deleteAvatar() {\n      try {\n        await this.$store.dispatch('deleteAvatar');\n        this.avatarUrl = '';\n        this.avatarFile = '';\n        this.showAlert(this.$t('PROFILE_SETTINGS.AVATAR_DELETE_SUCCESS'));\n      } catch (error) {\n        this.showAlert(this.$t('PROFILE_SETTINGS.AVATAR_DELETE_FAILED'));\n      }\n    },\n    showDeleteButton() {\n      return this.avatarUrl && !this.avatarUrl.includes('www.gravatar.com');\n    },\n    toggleEditorMessageKey(key) {\n      this.updateUISettings({ editor_message_key: key });\n      this.showAlert(\n        this.$t('PROFILE_SETTINGS.FORM.SEND_MESSAGE.UPDATE_SUCCESS')\n      );\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import '~dashboard/assets/scss/variables.scss';\n@import '~dashboard/assets/scss/mixins.scss';\n\n.profile--settings {\n  overflow: auto;\n  padding: 24px;\n}\n\n.profile--settings--row {\n  @include border-normal-bottom;\n  align-items: center;\n  display: flex;\n  padding: $space-normal;\n\n  .small-3 {\n    padding: $space-normal $space-medium $space-normal 0;\n  }\n\n  .small-9 {\n    padding: $space-normal;\n  }\n\n  .card-preview {\n    display: flex;\n    flex-direction: row;\n\n    .preview-button {\n      cursor: pointer;\n      margin-right: var(--space-normal);\n    }\n  }\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/settings/profile"},"metadata":{},"sourceType":"module"}