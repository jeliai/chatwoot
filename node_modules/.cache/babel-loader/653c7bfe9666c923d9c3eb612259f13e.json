{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport alertMixin from 'shared/mixins/alertMixin';\nimport inboxMixin from 'shared/mixins/inboxMixin';\nimport SettingsSection from '../../../../../components/SettingsSection';\nimport ImapSettings from '../ImapSettings';\nimport SmtpSettings from '../SmtpSettings';\nexport default {\n  components: {\n    SettingsSection: SettingsSection,\n    ImapSettings: ImapSettings,\n    SmtpSettings: SmtpSettings\n  },\n  mixins: [inboxMixin, alertMixin],\n  props: {\n    inbox: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    return {\n      hmacMandatory: false\n    };\n  },\n  watch: {\n    inbox: function inbox() {\n      this.setDefaults();\n    }\n  },\n  mounted: function mounted() {\n    this.setDefaults();\n  },\n  methods: {\n    setDefaults: function setDefaults() {\n      this.hmacMandatory = this.inbox.hmac_mandatory || false;\n    },\n    handleHmacFlag: function handleHmacFlag() {\n      this.updateInbox();\n    },\n    updateInbox: function updateInbox() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var payload;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                payload = {\n                  id: _this.inbox.id,\n                  formData: false,\n                  channel: {\n                    hmac_mandatory: _this.hmacMandatory\n                  }\n                };\n                _context.next = 4;\n                return _this.$store.dispatch('inboxes/updateInbox', payload);\n\n              case 4:\n                _this.showAlert(_this.$t('INBOX_MGMT.EDIT.API.SUCCESS_MESSAGE'));\n\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n\n                _this.showAlert(_this.$t('INBOX_MGMT.EDIT.API.SUCCESS_MESSAGE'));\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"sources":["ConfigurationPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA,OAAA,UAAA,MAAA,0BAAA;AACA,OAAA,UAAA,MAAA,0BAAA;AACA,OAAA,eAAA,MAAA,2CAAA;AACA,OAAA,YAAA,MAAA,iBAAA;AACA,OAAA,YAAA,MAAA,iBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,eAAA,EAAA,eADA;AAEA,IAAA,YAAA,EAAA,YAFA;AAGA,IAAA,YAAA,EAAA;AAHA,GADA;AAMA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,UAAA,CANA;AAOA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA;AADA,GAPA;AAaA,EAAA,IAbA,kBAaA;AACA,WAAA;AACA,MAAA,aAAA,EAAA;AADA,KAAA;AAGA,GAjBA;AAkBA,EAAA,KAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,WAAA,WAAA;AACA;AAHA,GAlBA;AAuBA,EAAA,OAvBA,qBAuBA;AACA,SAAA,WAAA;AACA,GAzBA;AA0BA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,WAAA,aAAA,GAAA,KAAA,KAAA,CAAA,cAAA,IAAA,KAAA;AACA,KAHA;AAIA,IAAA,cAJA,4BAIA;AACA,WAAA,WAAA;AACA,KANA;AAOA,IAAA,WAPA,yBAOA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,gBAAA,OAFA,GAEA;AACA,kBAAA,EAAA,EAAA,KAAA,CAAA,KAAA,CAAA,EADA;AAEA,kBAAA,QAAA,EAAA,KAFA;AAGA,kBAAA,OAAA,EAAA;AACA,oBAAA,cAAA,EAAA,KAAA,CAAA;AADA;AAHA,iBAFA;AAAA;AAAA,uBASA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,qBAAA,EAAA,OAAA,CATA;;AAAA;AAUA,gBAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,EAAA,CAAA,qCAAA,CAAA;;AAVA;AAAA;;AAAA;AAAA;AAAA;;AAYA,gBAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,EAAA,CAAA,qCAAA,CAAA;;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AArBA;AA1BA,CAAA","sourcesContent":["<template>\n  <div v-if=\"isATwilioChannel\" class=\"settings--content\">\n    <settings-section\n      :title=\"$t('INBOX_MGMT.ADD.TWILIO.API_CALLBACK.TITLE')\"\n      :sub-title=\"$t('INBOX_MGMT.ADD.TWILIO.API_CALLBACK.SUBTITLE')\"\n    >\n      <woot-code :script=\"inbox.callback_webhook_url\" lang=\"html\" />\n    </settings-section>\n  </div>\n  <div v-else-if=\"isALineChannel\" class=\"settings--content\">\n    <settings-section\n      :title=\"$t('INBOX_MGMT.ADD.LINE_CHANNEL.API_CALLBACK.TITLE')\"\n      :sub-title=\"$t('INBOX_MGMT.ADD.LINE_CHANNEL.API_CALLBACK.SUBTITLE')\"\n    >\n      <woot-code :script=\"inbox.callback_webhook_url\" lang=\"html\" />\n    </settings-section>\n  </div>\n  <div v-else-if=\"isAWebWidgetInbox\">\n    <div class=\"settings--content\">\n      <settings-section\n        :title=\"$t('INBOX_MGMT.SETTINGS_POPUP.MESSENGER_HEADING')\"\n        :sub-title=\"$t('INBOX_MGMT.SETTINGS_POPUP.MESSENGER_SUB_HEAD')\"\n      >\n        <woot-code :script=\"inbox.web_widget_script\" />\n      </settings-section>\n\n      <settings-section\n        :title=\"$t('INBOX_MGMT.SETTINGS_POPUP.HMAC_VERIFICATION')\"\n        :sub-title=\"$t('INBOX_MGMT.SETTINGS_POPUP.HMAC_DESCRIPTION')\"\n      >\n        <woot-code :script=\"inbox.hmac_token\" />\n      </settings-section>\n      <settings-section\n        :title=\"$t('INBOX_MGMT.SETTINGS_POPUP.HMAC_MANDATORY_VERIFICATION')\"\n        :sub-title=\"$t('INBOX_MGMT.SETTINGS_POPUP.HMAC_MANDATORY_DESCRIPTION')\"\n      >\n        <div class=\"enter-to-send--checkbox\">\n          <input\n            id=\"hmacMandatory\"\n            v-model=\"hmacMandatory\"\n            type=\"checkbox\"\n            @change=\"handleHmacFlag\"\n          />\n          <label for=\"hmacMandatory\">\n            {{ $t('INBOX_MGMT.EDIT.ENABLE_HMAC.LABEL') }}\n          </label>\n        </div>\n      </settings-section>\n    </div>\n  </div>\n  <div v-else-if=\"isAPIInbox\" class=\"settings--content\">\n    <settings-section\n      :title=\"$t('INBOX_MGMT.SETTINGS_POPUP.INBOX_IDENTIFIER')\"\n      :sub-title=\"$t('INBOX_MGMT.SETTINGS_POPUP.INBOX_IDENTIFIER_SUB_TEXT')\"\n    >\n      <woot-code :script=\"inbox.inbox_identifier\" />\n    </settings-section>\n\n    <settings-section\n      :title=\"$t('INBOX_MGMT.SETTINGS_POPUP.HMAC_VERIFICATION')\"\n      :sub-title=\"$t('INBOX_MGMT.SETTINGS_POPUP.HMAC_DESCRIPTION')\"\n    >\n      <woot-code :script=\"inbox.hmac_token\" />\n    </settings-section>\n    <settings-section\n      :title=\"$t('INBOX_MGMT.SETTINGS_POPUP.HMAC_MANDATORY_VERIFICATION')\"\n      :sub-title=\"$t('INBOX_MGMT.SETTINGS_POPUP.HMAC_MANDATORY_DESCRIPTION')\"\n    >\n      <div class=\"enter-to-send--checkbox\">\n        <input\n          id=\"hmacMandatory\"\n          v-model=\"hmacMandatory\"\n          type=\"checkbox\"\n          @change=\"handleHmacFlag\"\n        />\n        <label for=\"hmacMandatory\">\n          {{ $t('INBOX_MGMT.EDIT.ENABLE_HMAC.LABEL') }}\n        </label>\n      </div>\n    </settings-section>\n  </div>\n  <div v-else-if=\"isAnEmailChannel\">\n    <div class=\"settings--content\">\n      <settings-section\n        :title=\"$t('INBOX_MGMT.SETTINGS_POPUP.FORWARD_EMAIL_TITLE')\"\n        :sub-title=\"$t('INBOX_MGMT.SETTINGS_POPUP.FORWARD_EMAIL_SUB_TEXT')\"\n      >\n        <woot-code :script=\"inbox.forward_to_email\" />\n      </settings-section>\n    </div>\n    <imap-settings :inbox=\"inbox\" />\n    <smtp-settings v-if=\"inbox.imap_enabled\" :inbox=\"inbox\" />\n  </div>\n  <div v-else-if=\"isAWhatsAppChannel && !isATwilioChannel\">\n    <div v-if=\"inbox.provider_config\" class=\"settings--content\">\n      <settings-section\n        :title=\"$t('INBOX_MGMT.SETTINGS_POPUP.WHATSAPP_SECTION_TITLE')\"\n        :sub-title=\"$t('INBOX_MGMT.SETTINGS_POPUP.WHATSAPP_SECTION_SUBHEADER')\"\n      >\n        <woot-code :script=\"inbox.provider_config.api_key\" />\n      </settings-section>\n    </div>\n  </div>\n</template>\n\n<script>\nimport alertMixin from 'shared/mixins/alertMixin';\nimport inboxMixin from 'shared/mixins/inboxMixin';\nimport SettingsSection from '../../../../../components/SettingsSection';\nimport ImapSettings from '../ImapSettings';\nimport SmtpSettings from '../SmtpSettings';\n\nexport default {\n  components: {\n    SettingsSection,\n    ImapSettings,\n    SmtpSettings,\n  },\n  mixins: [inboxMixin, alertMixin],\n  props: {\n    inbox: {\n      type: Object,\n      default: () => ({}),\n    },\n  },\n  data() {\n    return {\n      hmacMandatory: false,\n    };\n  },\n  watch: {\n    inbox() {\n      this.setDefaults();\n    },\n  },\n  mounted() {\n    this.setDefaults();\n  },\n  methods: {\n    setDefaults() {\n      this.hmacMandatory = this.inbox.hmac_mandatory || false;\n    },\n    handleHmacFlag() {\n      this.updateInbox();\n    },\n    async updateInbox() {\n      try {\n        const payload = {\n          id: this.inbox.id,\n          formData: false,\n          channel: {\n            hmac_mandatory: this.hmacMandatory,\n          },\n        };\n        await this.$store.dispatch('inboxes/updateInbox', payload);\n        this.showAlert(this.$t('INBOX_MGMT.EDIT.API.SUCCESS_MESSAGE'));\n      } catch (error) {\n        this.showAlert(this.$t('INBOX_MGMT.EDIT.API.SUCCESS_MESSAGE'));\n      }\n    },\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/settings/inbox/settingsPage"},"metadata":{},"sourceType":"module"}