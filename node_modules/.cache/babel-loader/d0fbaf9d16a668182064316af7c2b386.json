{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nexport var isEnter = function isEnter(e) {\n  return e.keyCode === 13;\n};\nexport var isEscape = function isEscape(e) {\n  return e.keyCode === 27;\n};\nexport var hasPressedShift = function hasPressedShift(e) {\n  return e.shiftKey;\n};\nexport var hasPressedCommand = function hasPressedCommand(e) {\n  return e.metaKey;\n};\nexport var hasPressedEnterAndNotCmdOrShift = function hasPressedEnterAndNotCmdOrShift(e) {\n  return isEnter(e) && !hasPressedCommand(e) && !hasPressedShift(e);\n};\nexport var hasPressedCommandAndEnter = function hasPressedCommandAndEnter(e) {\n  return e.metaKey && e.keyCode === 13;\n};\nexport var hasPressedCommandAndForwardSlash = function hasPressedCommandAndForwardSlash(e) {\n  return e.metaKey && e.keyCode === 191;\n};\nexport var hasPressedAltAndCKey = function hasPressedAltAndCKey(e) {\n  return e.altKey && e.keyCode === 67;\n};\nexport var hasPressedAltAndVKey = function hasPressedAltAndVKey(e) {\n  return e.altKey && e.keyCode === 86;\n};\nexport var hasPressedAltAndRKey = function hasPressedAltAndRKey(e) {\n  return e.altKey && e.keyCode === 82;\n};\nexport var hasPressedAltAndSKey = function hasPressedAltAndSKey(e) {\n  return e.altKey && e.keyCode === 83;\n};\nexport var hasPressedAltAndBKey = function hasPressedAltAndBKey(e) {\n  return e.altKey && e.keyCode === 66;\n};\nexport var hasPressedAltAndNKey = function hasPressedAltAndNKey(e) {\n  return e.altKey && e.keyCode === 78;\n};\nexport var hasPressedAltAndAKey = function hasPressedAltAndAKey(e) {\n  return e.altKey && e.keyCode === 65;\n};\nexport var hasPressedAltAndPKey = function hasPressedAltAndPKey(e) {\n  return e.altKey && e.keyCode === 80;\n};\nexport var hasPressedAltAndLKey = function hasPressedAltAndLKey(e) {\n  return e.altKey && e.keyCode === 76;\n};\nexport var hasPressedAltAndEKey = function hasPressedAltAndEKey(e) {\n  return e.altKey && e.keyCode === 69;\n};\nexport var hasPressedCommandPlusAltAndEKey = function hasPressedCommandPlusAltAndEKey(e) {\n  return e.metaKey && e.altKey && e.keyCode === 69;\n};\nexport var hasPressedAltAndOKey = function hasPressedAltAndOKey(e) {\n  return e.altKey && e.keyCode === 79;\n};\nexport var hasPressedAltAndJKey = function hasPressedAltAndJKey(e) {\n  return e.altKey && e.keyCode === 74;\n};\nexport var hasPressedAltAndKKey = function hasPressedAltAndKKey(e) {\n  return e.altKey && e.keyCode === 75;\n};\nexport var hasPressedAltAndMKey = function hasPressedAltAndMKey(e) {\n  return e.altKey && e.keyCode === 77;\n};\nexport var hasPressedArrowUpKey = function hasPressedArrowUpKey(e) {\n  return e.keyCode === 38;\n};\nexport var hasPressedArrowDownKey = function hasPressedArrowDownKey(e) {\n  return e.keyCode === 40;\n};\nexport var hasPressedCommandPlusKKey = function hasPressedCommandPlusKKey(e) {\n  return e.metaKey && e.keyCode === 75;\n};\nexport var buildHotKeys = function buildHotKeys(e) {\n  var key = e.key.toLowerCase();\n\n  if (['shift', 'meta', 'alt', 'control'].includes(key)) {\n    return key;\n  }\n\n  var hotKeyPattern = '';\n\n  if (e.altKey) {\n    hotKeyPattern += 'alt+';\n  }\n\n  if (e.ctrlKey) {\n    hotKeyPattern += 'ctrl+';\n  }\n\n  if (e.metaKey && !e.ctrlKey) {\n    hotKeyPattern += 'meta+';\n  }\n\n  if (e.shiftKey) {\n    hotKeyPattern += 'shift+';\n  }\n\n  hotKeyPattern += key;\n  return hotKeyPattern;\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/shared/helpers/KeyboardHelpers.js"],"names":["isEnter","e","keyCode","isEscape","hasPressedShift","shiftKey","hasPressedCommand","metaKey","hasPressedEnterAndNotCmdOrShift","hasPressedCommandAndEnter","hasPressedCommandAndForwardSlash","hasPressedAltAndCKey","altKey","hasPressedAltAndVKey","hasPressedAltAndRKey","hasPressedAltAndSKey","hasPressedAltAndBKey","hasPressedAltAndNKey","hasPressedAltAndAKey","hasPressedAltAndPKey","hasPressedAltAndLKey","hasPressedAltAndEKey","hasPressedCommandPlusAltAndEKey","hasPressedAltAndOKey","hasPressedAltAndJKey","hasPressedAltAndKKey","hasPressedAltAndMKey","hasPressedArrowUpKey","hasPressedArrowDownKey","hasPressedCommandPlusKKey","buildHotKeys","key","toLowerCase","includes","hotKeyPattern","ctrlKey"],"mappings":"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","sourcesContent":["export const isEnter = e => {\n  return e.keyCode === 13;\n};\n\nexport const isEscape = e => {\n  return e.keyCode === 27;\n};\n\nexport const hasPressedShift = e => {\n  return e.shiftKey;\n};\n\nexport const hasPressedCommand = e => {\n  return e.metaKey;\n};\n\nexport const hasPressedEnterAndNotCmdOrShift = e => {\n  return isEnter(e) && !hasPressedCommand(e) && !hasPressedShift(e);\n};\n\nexport const hasPressedCommandAndEnter = e => {\n  return e.metaKey && e.keyCode === 13;\n};\n\nexport const hasPressedCommandAndForwardSlash = e => {\n  return e.metaKey && e.keyCode === 191;\n};\n\nexport const hasPressedAltAndCKey = e => {\n  return e.altKey && e.keyCode === 67;\n};\n\nexport const hasPressedAltAndVKey = e => {\n  return e.altKey && e.keyCode === 86;\n};\n\nexport const hasPressedAltAndRKey = e => {\n  return e.altKey && e.keyCode === 82;\n};\n\nexport const hasPressedAltAndSKey = e => {\n  return e.altKey && e.keyCode === 83;\n};\n\nexport const hasPressedAltAndBKey = e => {\n  return e.altKey && e.keyCode === 66;\n};\n\nexport const hasPressedAltAndNKey = e => {\n  return e.altKey && e.keyCode === 78;\n};\n\nexport const hasPressedAltAndAKey = e => {\n  return e.altKey && e.keyCode === 65;\n};\n\nexport const hasPressedAltAndPKey = e => {\n  return e.altKey && e.keyCode === 80;\n};\n\nexport const hasPressedAltAndLKey = e => {\n  return e.altKey && e.keyCode === 76;\n};\n\nexport const hasPressedAltAndEKey = e => {\n  return e.altKey && e.keyCode === 69;\n};\n\nexport const hasPressedCommandPlusAltAndEKey = e => {\n  return e.metaKey && e.altKey && e.keyCode === 69;\n};\n\nexport const hasPressedAltAndOKey = e => {\n  return e.altKey && e.keyCode === 79;\n};\n\nexport const hasPressedAltAndJKey = e => {\n  return e.altKey && e.keyCode === 74;\n};\n\nexport const hasPressedAltAndKKey = e => {\n  return e.altKey && e.keyCode === 75;\n};\n\nexport const hasPressedAltAndMKey = e => {\n  return e.altKey && e.keyCode === 77;\n};\n\nexport const hasPressedArrowUpKey = e => {\n  return e.keyCode === 38;\n};\n\nexport const hasPressedArrowDownKey = e => {\n  return e.keyCode === 40;\n};\n\nexport const hasPressedCommandPlusKKey = e => {\n  return e.metaKey && e.keyCode === 75;\n};\n\nexport const buildHotKeys = e => {\n  const key = e.key.toLowerCase();\n  if (['shift', 'meta', 'alt', 'control'].includes(key)) {\n    return key;\n  }\n  let hotKeyPattern = '';\n  if (e.altKey) {\n    hotKeyPattern += 'alt+';\n  }\n  if (e.ctrlKey) {\n    hotKeyPattern += 'ctrl+';\n  }\n  if (e.metaKey && !e.ctrlKey) {\n    hotKeyPattern += 'meta+';\n  }\n  if (e.shiftKey) {\n    hotKeyPattern += 'shift+';\n  }\n  hotKeyPattern += key;\n  return hotKeyPattern;\n};\n"]},"metadata":{},"sourceType":"module"}