{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n!function (e, t) {\n  \"object\" == (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) && \"object\" == (typeof module === \"undefined\" ? \"undefined\" : _typeof(module)) ? module.exports = t() : \"function\" == typeof define && define.amd ? define([], t) : \"object\" == (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) ? exports.analyticsVideoPlugins = t() : e.analyticsVideoPlugins = t();\n}(window, function () {\n  return function (e) {\n    var t = {};\n\n    function a(n) {\n      if (t[n]) return t[n].exports;\n      var i = t[n] = {\n        i: n,\n        l: !1,\n        exports: {}\n      };\n      return e[n].call(i.exports, i, i.exports, a), i.l = !0, i.exports;\n    }\n\n    return a.m = e, a.c = t, a.d = function (e, t, n) {\n      a.o(e, t) || Object.defineProperty(e, t, {\n        enumerable: !0,\n        get: n\n      });\n    }, a.r = function (e) {\n      \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n        value: \"Module\"\n      }), Object.defineProperty(e, \"__esModule\", {\n        value: !0\n      });\n    }, a.t = function (e, t) {\n      if (1 & t && (e = a(e)), 8 & t) return e;\n      if (4 & t && \"object\" == _typeof(e) && e && e.__esModule) return e;\n      var n = Object.create(null);\n      if (a.r(n), Object.defineProperty(n, \"default\", {\n        enumerable: !0,\n        value: e\n      }), 2 & t && \"string\" != typeof e) for (var i in e) {\n        a.d(n, i, function (t) {\n          return e[t];\n        }.bind(null, i));\n      }\n      return n;\n    }, a.n = function (e) {\n      var t = e && e.__esModule ? function () {\n        return e.default;\n      } : function () {\n        return e;\n      };\n      return a.d(t, \"a\", t), t;\n    }, a.o = function (e, t) {\n      return Object.prototype.hasOwnProperty.call(e, t);\n    }, a.p = \"\", a(a.s = 2);\n  }([function (e, t, a) {\n    \"use strict\";\n\n    a.r(t);\n    var n = \"function\" == typeof fetch ? fetch.bind() : function (e, t) {\n      return t = t || {}, new Promise(function (a, n) {\n        var i = new XMLHttpRequest();\n\n        for (var r in i.open(t.method || \"get\", e, !0), t.headers) {\n          i.setRequestHeader(r, t.headers[r]);\n        }\n\n        function o() {\n          var e,\n              t = [],\n              a = [],\n              n = {};\n          return i.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm, function (i, r, o) {\n            t.push(r = r.toLowerCase()), a.push([r, o]), e = n[r], n[r] = e ? e + \",\" + o : o;\n          }), {\n            ok: 2 == (i.status / 100 | 0),\n            status: i.status,\n            statusText: i.statusText,\n            url: i.responseURL,\n            clone: o,\n            text: function text() {\n              return Promise.resolve(i.responseText);\n            },\n            json: function json() {\n              return Promise.resolve(i.responseText).then(JSON.parse);\n            },\n            blob: function blob() {\n              return Promise.resolve(new Blob([i.response]));\n            },\n            headers: {\n              keys: function keys() {\n                return t;\n              },\n              entries: function entries() {\n                return a;\n              },\n              get: function get(e) {\n                return n[e.toLowerCase()];\n              },\n              has: function has(e) {\n                return e.toLowerCase() in n;\n              }\n            }\n          };\n        }\n\n        i.withCredentials = \"include\" == t.credentials, i.onload = function () {\n          a(o());\n        }, i.onerror = n, i.send(t.body);\n      });\n    };\n    t.default = n;\n  }, function (e, t, a) {\n    \"use strict\";\n\n    Object.defineProperty(t, \"__esModule\", {\n      value: !0\n    });\n\n    var n = function () {\n      function e(e, t) {\n        for (var a = 0; a < t.length; a++) {\n          var n = t[a];\n          n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);\n        }\n      }\n\n      return function (t, a, n) {\n        return a && e(t.prototype, a), n && e(t, n), t;\n      };\n    }();\n\n    var i = function () {\n      function e(t, a) {\n        !function (e, t) {\n          if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n        }(this, e), this.pluginName = t;\n      }\n\n      return n(e, [{\n        key: \"track\",\n        value: function value(e, t) {\n          window.analytics.track(e, t, {\n            integration: {\n              name: this.pluginName\n            }\n          });\n        }\n      }]), e;\n    }();\n\n    t.default = i;\n  }, function (e, t, a) {\n    \"use strict\";\n\n    Object.defineProperty(t, \"__esModule\", {\n      value: !0\n    }), t.YouTubeAnalytics = t.VimeoAnalytics = void 0;\n    var n = r(a(3)),\n        i = r(a(4));\n\n    function r(e) {\n      return e && e.__esModule ? e : {\n        default: e\n      };\n    }\n\n    t.VimeoAnalytics = n.default, t.YouTubeAnalytics = i.default;\n  }, function (e, t, a) {\n    \"use strict\";\n\n    Object.defineProperty(t, \"__esModule\", {\n      value: !0\n    });\n\n    var n = function () {\n      function e(e, t) {\n        for (var a = 0; a < t.length; a++) {\n          var n = t[a];\n          n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);\n        }\n      }\n\n      return function (t, a, n) {\n        return a && e(t.prototype, a), n && e(t, n), t;\n      };\n    }(),\n        i = r(a(0));\n\n    function r(e) {\n      return e && e.__esModule ? e : {\n        default: e\n      };\n    }\n\n    var o = function (e) {\n      function t(e, a) {\n        !function (e, t) {\n          if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n        }(this, t);\n\n        var n = function (e, t) {\n          if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n          return !t || \"object\" != _typeof(t) && \"function\" != typeof t ? e : t;\n        }(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, \"VimeoAnalytics\"));\n\n        return n.authToken = a, n.player = e, n.metadata = {\n          content: {},\n          playback: {\n            videoPlayer: \"Vimeo\"\n          }\n        }, n.mostRecentHeartbeat = 0, n.isPaused = !1, n;\n      }\n\n      return function (e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + _typeof(t));\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t);\n      }(t, e), n(t, [{\n        key: \"initialize\",\n        value: function value() {\n          var e = this,\n              t = {\n            loaded: this.retrieveMetadata,\n            play: this.trackPlay,\n            pause: this.trackPause,\n            ended: this.trackEnded,\n            timeupdate: this.trackHeartbeat\n          };\n\n          for (var a in t) {\n            this.registerHandler(a, t[a]);\n          }\n\n          this.player.getVideoId().then(function (t) {\n            e.retrieveMetadata({\n              id: t\n            });\n          }).catch(console.error);\n        }\n      }, {\n        key: \"registerHandler\",\n        value: function value(e, t) {\n          var a = this;\n          this.player.on(e, function (e) {\n            a.updateMetadata(e), t.call(a, e);\n          });\n        }\n      }, {\n        key: \"trackPlay\",\n        value: function value() {\n          this.isPaused ? (this.track(\"Video Playback Resumed\", this.metadata.playback), this.isPaused = !1) : (this.track(\"Video Playback Started\", this.metadata.playback), this.track(\"Video Content Started\", this.metadata.content));\n        }\n      }, {\n        key: \"trackEnded\",\n        value: function value() {\n          this.track(\"Video Playback Completed\", this.metadata.playback), this.track(\"Video Content Completed\", this.metadata.content);\n        }\n      }, {\n        key: \"trackHeartbeat\",\n        value: function value() {\n          var e = this.mostRecentHeartbeat,\n              t = this.metadata.playback.position;\n          t !== e && t - e >= 10 && (this.track(\"Video Content Playing\", this.metadata.content), this.mostRecentHeartbeat = Math.floor(t));\n        }\n      }, {\n        key: \"trackPause\",\n        value: function value() {\n          this.isPaused = !0, this.track(\"Video Playback Paused\", this.metadata.playback);\n        }\n      }, {\n        key: \"retrieveMetadata\",\n        value: function value(e) {\n          var t = this;\n          return new Promise(function (a, n) {\n            var r = e.id;\n            (0, i.default)(\"https://api.vimeo.com/videos/\" + r, {\n              headers: {\n                Authorization: \"Bearer \" + t.authToken\n              }\n            }).then(function (e) {\n              return e.ok ? e.json() : n(e);\n            }).then(function (e) {\n              t.metadata.content.title = e.name, t.metadata.content.description = e.description, t.metadata.content.publisher = e.user.name, t.metadata.playback.position = 0, t.metadata.playback.totalLength = e.duration;\n            }).catch(function (e) {\n              return console.error(\"Request to Vimeo API Failed with: \", e), n(e);\n            });\n          });\n        }\n      }, {\n        key: \"updateMetadata\",\n        value: function value(e) {\n          var t = this;\n          return new Promise(function (a, n) {\n            t.player.getVolume().then(function (n) {\n              n && (t.metadata.playback.sound = 100 * n), t.metadata.playback.position = e.seconds, a();\n            }).catch(n);\n          });\n        }\n      }]), t;\n    }(r(a(1)).default);\n\n    t.default = o;\n  }, function (e, t, a) {\n    \"use strict\";\n\n    Object.defineProperty(t, \"__esModule\", {\n      value: !0\n    });\n\n    var n = function () {\n      function e(e, t) {\n        for (var a = 0; a < t.length; a++) {\n          var n = t[a];\n          n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);\n        }\n      }\n\n      return function (t, a, n) {\n        return a && e(t.prototype, a), n && e(t, n), t;\n      };\n    }(),\n        i = o(a(0)),\n        r = o(a(1));\n\n    function o(e) {\n      return e && e.__esModule ? e : {\n        default: e\n      };\n    }\n\n    var s = function (e) {\n      function t(e, a) {\n        !function (e, t) {\n          if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n        }(this, t);\n\n        var n = function (e, t) {\n          if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n          return !t || \"object\" != _typeof(t) && \"function\" != typeof t ? e : t;\n        }(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, \"YoutubeAnalytics\"));\n\n        return n.player = e, n.apiKey = a, n.playerLoaded = !1, n.playbackStarted = !1, n.contentStarted = !1, n.isPaused = !1, n.isBuffering = !1, n.isSeeking = !1, n.lastRecordedTime = {\n          timeReported: Date.now(),\n          timeElapsed: 0\n        }, n.metadata = [{\n          playback: {\n            video_player: \"youtube\"\n          },\n          content: {}\n        }], n.playlistIndex = 0, n;\n      }\n\n      return function (e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + _typeof(t));\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t);\n      }(t, e), n(t, [{\n        key: \"initialize\",\n        value: function value() {\n          window.segmentYoutubeOnStateChange = this.onPlayerStateChange.bind(this), window.segmentYoutubeOnReady = this.onPlayerReady.bind(this), this.player.addEventListener(\"onReady\", \"segmentYoutubeOnReady\"), this.player.addEventListener(\"onStateChange\", \"segmentYoutubeOnStateChange\");\n        }\n      }, {\n        key: \"onPlayerReady\",\n        value: function value(e) {\n          this.retrieveMetadata();\n        }\n      }, {\n        key: \"onPlayerStateChange\",\n        value: function value(e) {\n          var t = this.player.getCurrentTime();\n\n          switch (this.metadata[this.playlistIndex] && (this.metadata[this.playlistIndex].playback.position = this.metadata[this.playlistIndex].content.position = t, this.metadata[this.playlistIndex].playback.quality = this.player.getPlaybackQuality(), this.metadata[this.playlistIndex].playback.sound = this.player.isMuted() ? 0 : this.player.getVolume()), e.data) {\n            case -1:\n              if (this.playerLoaded) break;\n              this.retrieveMetadata(), this.playerLoaded = !0;\n              break;\n\n            case YT.PlayerState.BUFFERING:\n              this.handleBuffer();\n              break;\n\n            case YT.PlayerState.PLAYING:\n              this.handlePlay();\n              break;\n\n            case YT.PlayerState.PAUSED:\n              this.handlePause();\n              break;\n\n            case YT.PlayerState.ENDED:\n              this.handleEnd();\n          }\n\n          this.lastRecordedTime = {\n            timeReported: Date.now(),\n            timeElapsed: 1e3 * this.player.getCurrentTime()\n          };\n        }\n      }, {\n        key: \"retrieveMetadata\",\n        value: function value() {\n          var e = this;\n          return new Promise(function (t, a) {\n            var n = e.player.getVideoData(),\n                r = e.player.getPlaylist() || [n.video_id],\n                o = r.join();\n            (0, i.default)(\"https://www.googleapis.com/youtube/v3/videos?id=\" + o + \"&part=snippet,contentDetails&key=\" + e.apiKey).then(function (e) {\n              if (!e.ok) {\n                var t = new Error(\"Segment request to Youtube API failed (likely due to a bad API Key. Events will still be sent but will not contain video metadata)\");\n                throw t.response = e, t;\n              }\n\n              return e.json();\n            }).then(function (a) {\n              e.metadata = [];\n\n              for (var n = 0, i = 0; i < r.length; i++) {\n                var o = a.items[i];\n                e.metadata.push({\n                  content: {\n                    title: o.snippet.title,\n                    description: o.snippet.description,\n                    keywords: o.snippet.tags,\n                    channel: o.snippet.channelTitle,\n                    airdate: o.snippet.publishedAt\n                  }\n                }), n += l(o.contentDetails.duration);\n              }\n\n              for (i = 0; i < r.length; i++) {\n                e.metadata[i].playback = {\n                  total_length: n,\n                  video_player: \"youtube\"\n                };\n              }\n\n              t();\n            }).catch(function (t) {\n              e.metadata = r.map(function (e) {\n                return {\n                  playback: {\n                    video_player: \"youtube\"\n                  },\n                  content: {}\n                };\n              }), a(t);\n            });\n          });\n        }\n      }, {\n        key: \"handleBuffer\",\n        value: function value() {\n          var e = this.determineSeek();\n          this.playbackStarted || (this.playbackStarted = !0, this.track(\"Video Playback Started\", this.metadata[this.playlistIndex].playback)), e && !this.isSeeking && (this.isSeeking = !0, this.track(\"Video Playback Seek Started\", this.metadata[this.playlistIndex].playback)), this.isSeeking && (this.track(\"Video Playback Seek Completed\", this.metadata[this.playlistIndex].playback), this.isSeeking = !1);\n          var t = this.player.getPlaylist();\n          t && 0 === this.player.getCurrentTime() && this.player.getPlaylistIndex() !== this.playlistIndex && (this.contentStarted = !1, this.playlistIndex === t.length - 1 && 0 === this.player.getPlaylistIndex() && (this.track(\"Video Playback Completed\", this.metadata[this.player.getPlaylistIndex()].playback), this.track(\"Video Playback Started\", this.metadata[this.player.getPlaylistIndex()].playback))), this.track(\"Video Playback Buffer Started\", this.metadata[this.playlistIndex].playback), this.isBuffering = !0;\n        }\n      }, {\n        key: \"handlePlay\",\n        value: function value() {\n          this.contentStarted || (this.playlistIndex = this.player.getPlaylistIndex(), -1 === this.playlistIndex && (this.playlistIndex = 0), this.track(\"Video Content Started\", this.metadata[this.playlistIndex].content), this.contentStarted = !0), this.isBuffering && (this.track(\"Video Playback Buffer Completed\", this.metadata[this.playlistIndex].playback), this.isBuffering = !1), this.isPaused && (this.track(\"Video Playback Resumed\", this.metadata[this.playlistIndex].playback), this.isPaused = !1);\n        }\n      }, {\n        key: \"handlePause\",\n        value: function value() {\n          var e = this.determineSeek();\n          this.isBuffering && (this.track(\"Video Playback Buffer Completed\", this.metadata[this.playlistIndex].playback), this.isBuffering = !1), this.isPaused || (e ? (this.track(\"Video Playback Seek Started\", this.metadata[this.playlistIndex].playback), this.isSeeking = !0) : (this.track(\"Video Playback Paused\", this.metadata[this.playlistIndex].playback), this.isPaused = !0));\n        }\n      }, {\n        key: \"handleEnd\",\n        value: function value() {\n          this.track(\"Video Content Completed\", this.metadata[this.playlistIndex].content), this.contentStarted = !1;\n          var e = this.player.getPlaylistIndex(),\n              t = this.player.getPlaylist();\n          (t && e === t.length - 1 || -1 === e) && (this.track(\"Video Playback Completed\", this.metadata[this.playlistIndex].playback), this.playbackStarted = !1);\n        }\n      }, {\n        key: \"determineSeek\",\n        value: function value() {\n          var e = this.isPaused || this.isBuffering ? 0 : Date.now() - this.lastRecordedTime.timeReported,\n              t = 1e3 * this.player.getCurrentTime() - this.lastRecordedTime.timeElapsed;\n          return Math.abs(e - t) > 2e3;\n        }\n      }]), t;\n    }(r.default);\n\n    function l(e) {\n      var t = e.match(/PT(\\d+H)?(\\d+M)?(\\d+S)?/);\n      return t = t.slice(1).map(function (e) {\n        if (null != e) return e.replace(/\\D/, \"\");\n      }), 3600 * (parseInt(t[0]) || 0) + 60 * (parseInt(t[1]) || 0) + (parseInt(t[2]) || 0);\n    }\n\n    t.default = s;\n  }]);\n});","map":null,"metadata":{},"sourceType":"module"}