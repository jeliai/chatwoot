{"ast":null,"code":"import \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport fromUnixTime from 'date-fns/fromUnixTime';\nimport format from 'date-fns/format';\nexport var downloadCsvFile = function downloadCsvFile(fileName, content) {\n  var contentType = 'data:text/csv;charset=utf-8;';\n  var blob = new Blob([content], {\n    type: contentType\n  });\n  var url = URL.createObjectURL(blob);\n  var link = document.createElement('a');\n  link.setAttribute('download', fileName);\n  link.setAttribute('href', url);\n  link.click();\n  return link;\n};\nexport var generateFileName = function generateFileName(_ref) {\n  var type = _ref.type,\n      to = _ref.to,\n      _ref$businessHours = _ref.businessHours,\n      businessHours = _ref$businessHours === void 0 ? false : _ref$businessHours;\n  var name = \"\".concat(type, \"-report-\").concat(format(fromUnixTime(to), 'dd-MM-yyyy'));\n\n  if (businessHours) {\n    name = \"\".concat(name, \"-business-hours\");\n  }\n\n  return \"\".concat(name, \".csv\");\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/helper/downloadHelper.js"],"names":["fromUnixTime","format","downloadCsvFile","fileName","content","contentType","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","setAttribute","click","generateFileName","to","businessHours","name"],"mappings":";;;;;;AAAA,OAAOA,YAAP,MAAyB,uBAAzB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,QAAD,EAAWC,OAAX,EAAuB;AACpD,MAAMC,WAAW,GAAG,8BAApB;AACA,MAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACH,OAAD,CAAT,EAAoB;AAAEI,IAAAA,IAAI,EAAEH;AAAR,GAApB,CAAb;AACA,MAAMI,GAAG,GAAGC,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CAAZ;AAEA,MAAMM,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAb;AACAF,EAAAA,IAAI,CAACG,YAAL,CAAkB,UAAlB,EAA8BZ,QAA9B;AACAS,EAAAA,IAAI,CAACG,YAAL,CAAkB,MAAlB,EAA0BN,GAA1B;AACAG,EAAAA,IAAI,CAACI,KAAL;AACA,SAAOJ,IAAP;AACD,CAVM;AAYP,OAAO,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAyC;AAAA,MAAtCT,IAAsC,QAAtCA,IAAsC;AAAA,MAAhCU,EAAgC,QAAhCA,EAAgC;AAAA,gCAA5BC,aAA4B;AAAA,MAA5BA,aAA4B,mCAAZ,KAAY;AACvE,MAAIC,IAAI,aAAMZ,IAAN,qBAAqBP,MAAM,CAACD,YAAY,CAACkB,EAAD,CAAb,EAAmB,YAAnB,CAA3B,CAAR;;AACA,MAAIC,aAAJ,EAAmB;AACjBC,IAAAA,IAAI,aAAMA,IAAN,oBAAJ;AACD;;AACD,mBAAUA,IAAV;AACD,CANM","sourcesContent":["import fromUnixTime from 'date-fns/fromUnixTime';\nimport format from 'date-fns/format';\n\nexport const downloadCsvFile = (fileName, content) => {\n  const contentType = 'data:text/csv;charset=utf-8;';\n  const blob = new Blob([content], { type: contentType });\n  const url = URL.createObjectURL(blob);\n\n  const link = document.createElement('a');\n  link.setAttribute('download', fileName);\n  link.setAttribute('href', url);\n  link.click();\n  return link;\n};\n\nexport const generateFileName = ({ type, to, businessHours = false }) => {\n  let name = `${type}-report-${format(fromUnixTime(to), 'dd-MM-yyyy')}`;\n  if (businessHours) {\n    name = `${name}-business-hours`;\n  }\n  return `${name}.csv`;\n};\n"]},"metadata":{},"sourceType":"module"}