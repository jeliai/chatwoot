{"ast":null,"code":"var _mutations;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport Vue from 'vue';\nimport AssignableAgentsAPI from '../../api/assignableAgents';\nvar state = {\n  records: {},\n  uiFlags: {\n    isFetching: false\n  }\n};\nexport var types = {\n  SET_INBOX_ASSIGNABLE_AGENTS_UI_FLAG: 'SET_INBOX_ASSIGNABLE_AGENTS_UI_FLAG',\n  SET_INBOX_ASSIGNABLE_AGENTS: 'SET_INBOX_ASSIGNABLE_AGENTS'\n};\nexport var getters = {\n  getAssignableAgents: function getAssignableAgents($state) {\n    return function (inboxId) {\n      var allAgents = $state.records[inboxId] || [];\n      var verifiedAgents = allAgents.filter(function (record) {\n        return record.confirmed;\n      });\n      return verifiedAgents;\n    };\n  },\n  getUIFlags: function getUIFlags($state) {\n    return $state.uiFlags;\n  }\n};\nexport var actions = {\n  fetch: function fetch(_ref, inboxIds) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, _yield$AssignableAgen, payload;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              commit(types.SET_INBOX_ASSIGNABLE_AGENTS_UI_FLAG, {\n                isFetching: true\n              });\n              _context.prev = 2;\n              _context.next = 5;\n              return AssignableAgentsAPI.get(inboxIds);\n\n            case 5:\n              _yield$AssignableAgen = _context.sent;\n              payload = _yield$AssignableAgen.data.payload;\n              commit(types.SET_INBOX_ASSIGNABLE_AGENTS, {\n                inboxId: inboxIds.join(','),\n                members: payload\n              });\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](2);\n              throw new Error(_context.t0);\n\n            case 13:\n              _context.prev = 13;\n              commit(types.SET_INBOX_ASSIGNABLE_AGENTS_UI_FLAG, {\n                isFetching: false\n              });\n              return _context.finish(13);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 10, 13, 16]]);\n    }))();\n  }\n};\nexport var mutations = (_mutations = {}, _defineProperty(_mutations, types.SET_INBOX_ASSIGNABLE_AGENTS_UI_FLAG, function ($state, data) {\n  $state.uiFlags = _objectSpread(_objectSpread({}, $state.uiFlags), data);\n}), _defineProperty(_mutations, types.SET_INBOX_ASSIGNABLE_AGENTS, function ($state, _ref2) {\n  var inboxId = _ref2.inboxId,\n      members = _ref2.members;\n  Vue.set($state.records, inboxId, members);\n}), _mutations);\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/store/modules/inboxAssignableAgents.js"],"names":["Vue","AssignableAgentsAPI","state","records","uiFlags","isFetching","types","SET_INBOX_ASSIGNABLE_AGENTS_UI_FLAG","SET_INBOX_ASSIGNABLE_AGENTS","getters","getAssignableAgents","$state","inboxId","allAgents","verifiedAgents","filter","record","confirmed","getUIFlags","actions","fetch","inboxIds","commit","get","payload","data","join","members","Error","mutations","set","namespaced"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AAEA,OAAOC,mBAAP,MAAgC,4BAAhC;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,OAAO,EAAE,EADG;AAEZC,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAE;AADL;AAFG,CAAd;AAOA,OAAO,IAAMC,KAAK,GAAG;AACnBC,EAAAA,mCAAmC,EAAE,qCADlB;AAEnBC,EAAAA,2BAA2B,EAAE;AAFV,CAAd;AAKP,OAAO,IAAMC,OAAO,GAAG;AACrBC,EAAAA,mBAAmB,EAAE,6BAAAC,MAAM;AAAA,WAAI,UAAAC,OAAO,EAAI;AACxC,UAAMC,SAAS,GAAGF,MAAM,CAACR,OAAP,CAAeS,OAAf,KAA2B,EAA7C;AACA,UAAME,cAAc,GAAGD,SAAS,CAACE,MAAV,CAAiB,UAAAC,MAAM;AAAA,eAAIA,MAAM,CAACC,SAAX;AAAA,OAAvB,CAAvB;AACA,aAAOH,cAAP;AACD,KAJ0B;AAAA,GADN;AAMrBI,EAAAA,UANqB,sBAMVP,MANU,EAMF;AACjB,WAAOA,MAAM,CAACP,OAAd;AACD;AARoB,CAAhB;AAWP,OAAO,IAAMe,OAAO,GAAG;AACfC,EAAAA,KADe,uBACGC,QADH,EACa;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAApBC,cAAAA,MAAoB,QAApBA,MAAoB;AAChCA,cAAAA,MAAM,CAAChB,KAAK,CAACC,mCAAP,EAA4C;AAAEF,gBAAAA,UAAU,EAAE;AAAd,eAA5C,CAAN;AADgC;AAAA;AAAA,qBAKpBJ,mBAAmB,CAACsB,GAApB,CAAwBF,QAAxB,CALoB;;AAAA;AAAA;AAIpBG,cAAAA,OAJoB,yBAI5BC,IAJ4B,CAIpBD,OAJoB;AAM9BF,cAAAA,MAAM,CAAChB,KAAK,CAACE,2BAAP,EAAoC;AACxCI,gBAAAA,OAAO,EAAES,QAAQ,CAACK,IAAT,CAAc,GAAd,CAD+B;AAExCC,gBAAAA,OAAO,EAAEH;AAF+B,eAApC,CAAN;AAN8B;AAAA;;AAAA;AAAA;AAAA;AAAA,oBAWxB,IAAII,KAAJ,aAXwB;;AAAA;AAAA;AAa9BN,cAAAA,MAAM,CAAChB,KAAK,CAACC,mCAAP,EAA4C;AAAEF,gBAAAA,UAAU,EAAE;AAAd,eAA5C,CAAN;AAb8B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAejC;AAhBoB,CAAhB;AAmBP,OAAO,IAAMwB,SAAS,iDACnBvB,KAAK,CAACC,mCADa,YACwBI,MADxB,EACgCc,IADhC,EACsC;AACxDd,EAAAA,MAAM,CAACP,OAAP,mCACKO,MAAM,CAACP,OADZ,GAEKqB,IAFL;AAID,CANmB,+BAOnBnB,KAAK,CAACE,2BAPa,EAOiB,UAACG,MAAD,SAAkC;AAAA,MAAvBC,OAAuB,SAAvBA,OAAuB;AAAA,MAAde,OAAc,SAAdA,OAAc;AACrE3B,EAAAA,GAAG,CAAC8B,GAAJ,CAAQnB,MAAM,CAACR,OAAf,EAAwBS,OAAxB,EAAiCe,OAAjC;AACD,CATmB,cAAf;AAYP,eAAe;AACbI,EAAAA,UAAU,EAAE,IADC;AAEb7B,EAAAA,KAAK,EAALA,KAFa;AAGbO,EAAAA,OAAO,EAAPA,OAHa;AAIbU,EAAAA,OAAO,EAAPA,OAJa;AAKbU,EAAAA,SAAS,EAATA;AALa,CAAf","sourcesContent":["import Vue from 'vue';\n\nimport AssignableAgentsAPI from '../../api/assignableAgents';\n\nconst state = {\n  records: {},\n  uiFlags: {\n    isFetching: false,\n  },\n};\n\nexport const types = {\n  SET_INBOX_ASSIGNABLE_AGENTS_UI_FLAG: 'SET_INBOX_ASSIGNABLE_AGENTS_UI_FLAG',\n  SET_INBOX_ASSIGNABLE_AGENTS: 'SET_INBOX_ASSIGNABLE_AGENTS',\n};\n\nexport const getters = {\n  getAssignableAgents: $state => inboxId => {\n    const allAgents = $state.records[inboxId] || [];\n    const verifiedAgents = allAgents.filter(record => record.confirmed);\n    return verifiedAgents;\n  },\n  getUIFlags($state) {\n    return $state.uiFlags;\n  },\n};\n\nexport const actions = {\n  async fetch({ commit }, inboxIds) {\n    commit(types.SET_INBOX_ASSIGNABLE_AGENTS_UI_FLAG, { isFetching: true });\n    try {\n      const {\n        data: { payload },\n      } = await AssignableAgentsAPI.get(inboxIds);\n      commit(types.SET_INBOX_ASSIGNABLE_AGENTS, {\n        inboxId: inboxIds.join(','),\n        members: payload,\n      });\n    } catch (error) {\n      throw new Error(error);\n    } finally {\n      commit(types.SET_INBOX_ASSIGNABLE_AGENTS_UI_FLAG, { isFetching: false });\n    }\n  },\n};\n\nexport const mutations = {\n  [types.SET_INBOX_ASSIGNABLE_AGENTS_UI_FLAG]($state, data) {\n    $state.uiFlags = {\n      ...$state.uiFlags,\n      ...data,\n    };\n  },\n  [types.SET_INBOX_ASSIGNABLE_AGENTS]: ($state, { inboxId, members }) => {\n    Vue.set($state.records, inboxId, members);\n  },\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations,\n};\n"]},"metadata":{},"sourceType":"module"}