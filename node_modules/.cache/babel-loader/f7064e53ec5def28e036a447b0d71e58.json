{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\n/* eslint no-param-reassign: 0 */\nimport getUuid from 'widget/helpers/uuid';\nimport { MESSAGE_STATUS, MESSAGE_TYPE } from 'shared/constants/messages';\nexport default (function () {\n  if (!Array.prototype.last) {\n    Object.assign(Array.prototype, {\n      last: function last() {\n        return this[this.length - 1];\n      }\n    });\n  }\n});\nexport var isEmptyObject = function isEmptyObject(obj) {\n  return Object.keys(obj).length === 0 && obj.constructor === Object;\n};\nexport var isJSONValid = function isJSONValid(value) {\n  try {\n    JSON.parse(value);\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\nexport var getTypingUsersText = function getTypingUsersText() {\n  var users = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var count = users.length;\n\n  if (count === 1) {\n    var _users = _slicedToArray(users, 1),\n        _user = _users[0];\n\n    return \"\".concat(_user.name, \" is typing\");\n  }\n\n  if (count === 2) {\n    var _users2 = _slicedToArray(users, 2),\n        first = _users2[0],\n        second = _users2[1];\n\n    return \"\".concat(first.name, \" and \").concat(second.name, \" are typing\");\n  }\n\n  var _users3 = _slicedToArray(users, 1),\n      user = _users3[0];\n\n  var rest = users.length - 1;\n  return \"\".concat(user.name, \" and \").concat(rest, \" others are typing\");\n};\nexport var createPendingMessage = function createPendingMessage(data) {\n  var timestamp = Math.floor(new Date().getTime() / 1000);\n  var tempMessageId = getUuid();\n  var message = data.message,\n      file = data.file;\n  var tempAttachments = [{\n    id: tempMessageId\n  }];\n\n  var pendingMessage = _objectSpread(_objectSpread({}, data), {}, {\n    content: message || null,\n    id: tempMessageId,\n    echo_id: tempMessageId,\n    status: MESSAGE_STATUS.PROGRESS,\n    created_at: timestamp,\n    message_type: MESSAGE_TYPE.OUTGOING,\n    conversation_id: data.conversationId,\n    attachments: file ? tempAttachments : null\n  });\n\n  return pendingMessage;\n};\nexport var convertToAttributeSlug = function convertToAttributeSlug(text) {\n  return text.toLowerCase().replace(/[^\\w ]+/g, '').replace(/ +/g, '_');\n};\nexport var convertToCategorySlug = function convertToCategorySlug(text) {\n  return text.toLowerCase().replace(/[^\\w ]+/g, '').replace(/ +/g, '-');\n};\nexport var convertToPortalSlug = function convertToPortalSlug(text) {\n  return text.toLowerCase().replace(/[^\\w ]+/g, '').replace(/ +/g, '-');\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/helper/commons.js"],"names":["getUuid","MESSAGE_STATUS","MESSAGE_TYPE","Array","prototype","last","Object","assign","length","isEmptyObject","obj","keys","constructor","isJSONValid","value","JSON","parse","e","getTypingUsersText","users","count","user","name","first","second","rest","createPendingMessage","data","timestamp","Math","floor","Date","getTime","tempMessageId","message","file","tempAttachments","id","pendingMessage","content","echo_id","status","PROGRESS","created_at","message_type","OUTGOING","conversation_id","conversationId","attachments","convertToAttributeSlug","text","toLowerCase","replace","convertToCategorySlug","convertToPortalSlug"],"mappings":"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","sourcesContent":["/* eslint no-param-reassign: 0 */\n\nimport getUuid from 'widget/helpers/uuid';\nimport { MESSAGE_STATUS, MESSAGE_TYPE } from 'shared/constants/messages';\n\nexport default () => {\n  if (!Array.prototype.last) {\n    Object.assign(Array.prototype, {\n      last() {\n        return this[this.length - 1];\n      },\n    });\n  }\n};\n\nexport const isEmptyObject = obj =>\n  Object.keys(obj).length === 0 && obj.constructor === Object;\n\nexport const isJSONValid = value => {\n  try {\n    JSON.parse(value);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const getTypingUsersText = (users = []) => {\n  const count = users.length;\n  if (count === 1) {\n    const [user] = users;\n    return `${user.name} is typing`;\n  }\n\n  if (count === 2) {\n    const [first, second] = users;\n    return `${first.name} and ${second.name} are typing`;\n  }\n\n  const [user] = users;\n  const rest = users.length - 1;\n  return `${user.name} and ${rest} others are typing`;\n};\n\nexport const createPendingMessage = data => {\n  const timestamp = Math.floor(new Date().getTime() / 1000);\n  const tempMessageId = getUuid();\n  const { message, file } = data;\n  const tempAttachments = [{ id: tempMessageId }];\n  const pendingMessage = {\n    ...data,\n    content: message || null,\n    id: tempMessageId,\n    echo_id: tempMessageId,\n    status: MESSAGE_STATUS.PROGRESS,\n    created_at: timestamp,\n    message_type: MESSAGE_TYPE.OUTGOING,\n    conversation_id: data.conversationId,\n    attachments: file ? tempAttachments : null,\n  };\n\n  return pendingMessage;\n};\n\nexport const convertToAttributeSlug = text => {\n  return text\n    .toLowerCase()\n    .replace(/[^\\w ]+/g, '')\n    .replace(/ +/g, '_');\n};\n\nexport const convertToCategorySlug = text => {\n  return text\n    .toLowerCase()\n    .replace(/[^\\w ]+/g, '')\n    .replace(/ +/g, '-');\n};\n\nexport const convertToPortalSlug = text => {\n  return text\n    .toLowerCase()\n    .replace(/[^\\w ]+/g, '')\n    .replace(/ +/g, '-');\n};\n"]},"metadata":{},"sourceType":"module"}