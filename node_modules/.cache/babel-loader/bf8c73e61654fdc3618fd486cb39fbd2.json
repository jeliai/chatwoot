{"ast":null,"code":"import \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport Spinner from 'shared/components/Spinner.vue';\nimport ArticleHeader from 'dashboard/routes/dashboard/helpcenter/components/Header/ArticleHeader';\nimport EmptyState from 'dashboard/components/widgets/EmptyState';\nimport ArticleTable from '../../components/ArticleTable';\nexport default {\n  components: {\n    ArticleHeader: ArticleHeader,\n    ArticleTable: ArticleTable,\n    EmptyState: EmptyState,\n    Spinner: Spinner\n  },\n  data: function data() {\n    return {\n      pageNumber: 1\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    articles: 'articles/allArticles',\n    categories: 'categories/allCategories',\n    uiFlags: 'articles/uiFlags',\n    meta: 'articles/getMeta',\n    isFetching: 'articles/isFetching',\n    currentUserId: 'getCurrentUserID'\n  })), {}, {\n    selectedCategory: function selectedCategory() {\n      var _this = this;\n\n      return this.categories.find(function (category) {\n        return category.slug === _this.selectedCategorySlug;\n      });\n    },\n    shouldShowEmptyState: function shouldShowEmptyState() {\n      return !this.isFetching && !this.articles.length;\n    },\n    shouldShowLoader: function shouldShowLoader() {\n      return this.isFetching && !this.articles.length;\n    },\n    selectedPortalSlug: function selectedPortalSlug() {\n      return this.$route.params.portalSlug;\n    },\n    selectedCategorySlug: function selectedCategorySlug() {\n      var categorySlug = this.$route.params.categorySlug;\n      return categorySlug;\n    },\n    articleType: function articleType() {\n      return this.$route.path.split('/').pop();\n    },\n    headerTitle: function headerTitle() {\n      switch (this.articleType) {\n        case 'mine':\n          return this.$t('HELP_CENTER.HEADER.TITLES.MINE');\n\n        case 'draft':\n          return this.$t('HELP_CENTER.HEADER.TITLES.DRAFT');\n\n        case 'archived':\n          return this.$t('HELP_CENTER.HEADER.TITLES.ARCHIVED');\n\n        default:\n          if (this.$route.name === 'show_category') {\n            return this.headerTitleInCategoryView;\n          }\n\n          return this.$t('HELP_CENTER.HEADER.TITLES.ALL_ARTICLES');\n      }\n    },\n    status: function status() {\n      switch (this.articleType) {\n        case 'draft':\n          return 0;\n\n        case 'published':\n          return 1;\n\n        case 'archived':\n          return 2;\n\n        default:\n          return undefined;\n      }\n    },\n    author: function author() {\n      if (this.articleType === 'mine') {\n        return this.currentUserId;\n      }\n\n      return null;\n    },\n    headerTitleInCategoryView: function headerTitleInCategoryView() {\n      return this.categories && this.categories.length ? this.selectedCategory.name : '';\n    }\n  }),\n  watch: {\n    $route: function $route() {\n      this.pageNumber = 1;\n      this.fetchArticles();\n    }\n  },\n  mounted: function mounted() {\n    this.fetchArticles();\n  },\n  methods: {\n    newArticlePage: function newArticlePage() {\n      this.$router.push({\n        name: 'new_article'\n      });\n    },\n    fetchArticles: function fetchArticles() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          pageNumber = _ref.pageNumber;\n\n      this.$store.dispatch('articles/index', {\n        pageNumber: pageNumber || this.pageNumber,\n        portalSlug: this.$route.params.portalSlug,\n        locale: this.$route.params.locale,\n        status: this.status,\n        author_id: this.author,\n        category_slug: this.selectedCategorySlug\n      });\n    },\n    onPageChange: function onPageChange(pageNumber) {\n      this.fetchArticles({\n        pageNumber: pageNumber\n      });\n    }\n  }\n};","map":{"version":3,"sources":["ListAllArticles.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container overflow-auto\">\n    <article-header\n      :header-title=\"headerTitle\"\n      :count=\"meta.count\"\n      selected-value=\"Published\"\n      @newArticlePage=\"newArticlePage\"\n    />\n    <article-table\n      :articles=\"articles\"\n      :current-page=\"Number(meta.currentPage)\"\n      :total-count=\"Number(meta.count)\"\n      @page-change=\"onPageChange\"\n    />\n    <div v-if=\"shouldShowLoader\" class=\"articles--loader\">\n      <spinner />\n      <span>{{ $t('HELP_CENTER.TABLE.LOADING_MESSAGE') }}</span>\n    </div>\n    <empty-state\n      v-else-if=\"shouldShowEmptyState\"\n      :title=\"$t('HELP_CENTER.TABLE.NO_ARTICLES')\"\n    />\n  </div>\n</template>\n<script>\nimport { mapGetters } from 'vuex';\n\nimport Spinner from 'shared/components/Spinner.vue';\nimport ArticleHeader from 'dashboard/routes/dashboard/helpcenter/components/Header/ArticleHeader';\nimport EmptyState from 'dashboard/components/widgets/EmptyState';\nimport ArticleTable from '../../components/ArticleTable';\nexport default {\n  components: {\n    ArticleHeader,\n    ArticleTable,\n    EmptyState,\n    Spinner,\n  },\n  data() {\n    return {\n      pageNumber: 1,\n    };\n  },\n  computed: {\n    ...mapGetters({\n      articles: 'articles/allArticles',\n      categories: 'categories/allCategories',\n      uiFlags: 'articles/uiFlags',\n      meta: 'articles/getMeta',\n      isFetching: 'articles/isFetching',\n      currentUserId: 'getCurrentUserID',\n    }),\n    selectedCategory() {\n      return this.categories.find(\n        category => category.slug === this.selectedCategorySlug\n      );\n    },\n    shouldShowEmptyState() {\n      return !this.isFetching && !this.articles.length;\n    },\n    shouldShowLoader() {\n      return this.isFetching && !this.articles.length;\n    },\n    selectedPortalSlug() {\n      return this.$route.params.portalSlug;\n    },\n    selectedCategorySlug() {\n      const { categorySlug } = this.$route.params;\n      return categorySlug;\n    },\n    articleType() {\n      return this.$route.path.split('/').pop();\n    },\n    headerTitle() {\n      switch (this.articleType) {\n        case 'mine':\n          return this.$t('HELP_CENTER.HEADER.TITLES.MINE');\n        case 'draft':\n          return this.$t('HELP_CENTER.HEADER.TITLES.DRAFT');\n        case 'archived':\n          return this.$t('HELP_CENTER.HEADER.TITLES.ARCHIVED');\n        default:\n          if (this.$route.name === 'show_category') {\n            return this.headerTitleInCategoryView;\n          }\n          return this.$t('HELP_CENTER.HEADER.TITLES.ALL_ARTICLES');\n      }\n    },\n    status() {\n      switch (this.articleType) {\n        case 'draft':\n          return 0;\n        case 'published':\n          return 1;\n        case 'archived':\n          return 2;\n        default:\n          return undefined;\n      }\n    },\n    author() {\n      if (this.articleType === 'mine') {\n        return this.currentUserId;\n      }\n      return null;\n    },\n    headerTitleInCategoryView() {\n      return this.categories && this.categories.length\n        ? this.selectedCategory.name\n        : '';\n    },\n  },\n  watch: {\n    $route() {\n      this.pageNumber = 1;\n      this.fetchArticles();\n    },\n  },\n  mounted() {\n    this.fetchArticles();\n  },\n\n  methods: {\n    newArticlePage() {\n      this.$router.push({ name: 'new_article' });\n    },\n    fetchArticles({ pageNumber } = {}) {\n      this.$store.dispatch('articles/index', {\n        pageNumber: pageNumber || this.pageNumber,\n        portalSlug: this.$route.params.portalSlug,\n        locale: this.$route.params.locale,\n        status: this.status,\n        author_id: this.author,\n        category_slug: this.selectedCategorySlug,\n      });\n    },\n    onPageChange(pageNumber) {\n      this.fetchArticles({ pageNumber });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  padding: 0 var(--space-normal);\n  width: 100%;\n  overflow: auto;\n  .articles--loader {\n    align-items: center;\n    display: flex;\n    font-size: var(--font-size-default);\n    justify-content: center;\n    padding: var(--space-big);\n  }\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/helpcenter/pages/articles"},"metadata":{},"sourceType":"module"}