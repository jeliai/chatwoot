{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport mentionSelectionKeyboardMixin from '../mentions/mentionSelectionKeyboardMixin';\nexport default {\n  mixins: [mentionSelectionKeyboardMixin],\n  props: {\n    searchKey: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      selectedIndex: 0\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    agents: 'agents/getVerifiedAgents'\n  })), {}, {\n    items: function items() {\n      var _this = this;\n\n      if (!this.searchKey) {\n        return this.agents;\n      }\n\n      return this.agents.filter(function (agent) {\n        return agent.name.toLocaleLowerCase().includes(_this.searchKey.toLocaleLowerCase());\n      });\n    }\n  }),\n  watch: {\n    items: function items(newListOfAgents) {\n      if (newListOfAgents.length < this.selectedIndex + 1) {\n        this.selectedIndex = 0;\n      }\n    }\n  },\n  methods: {\n    getTopSpacing: function getTopSpacing() {\n      if (this.items.length <= 4) {\n        return -(this.items.length * 5 + 1.7);\n      }\n\n      return -20;\n    },\n    handleKeyboardEvent: function handleKeyboardEvent(e) {\n      this.processKeyDownEvent(e);\n      this.$el.scrollTop = 50 * this.selectedIndex;\n    },\n    onHover: function onHover(index) {\n      this.selectedIndex = index;\n    },\n    onAgentSelect: function onAgentSelect(index) {\n      this.selectedIndex = index;\n      this.onSelect();\n    },\n    onSelect: function onSelect() {\n      this.$emit('click', this.items[this.selectedIndex]);\n    }\n  }\n};","map":{"version":3,"sources":["TagAgents.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,6BAAA,MAAA,2CAAA;AACA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,6BAAA,CADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AADA,GAFA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AAAA,MAAA,aAAA,EAAA;AAAA,KAAA;AACA,GAVA;AAWA,EAAA,QAAA,kCACA,UAAA,CAAA;AAAA,IAAA,MAAA,EAAA;AAAA,GAAA,CADA;AAEA,IAAA,KAFA,mBAEA;AAAA;;AACA,UAAA,CAAA,KAAA,SAAA,EAAA;AACA,eAAA,KAAA,MAAA;AACA;;AAEA,aAAA,KAAA,MAAA,CAAA,MAAA,CAAA,UAAA,KAAA;AAAA,eACA,KAAA,CAAA,IAAA,CACA,iBADA,GAEA,QAFA,CAEA,KAAA,CAAA,SAAA,CAAA,iBAAA,EAFA,CADA;AAAA,OAAA,CAAA;AAKA;AAZA,IAXA;AAyBA,EAAA,KAAA,EAAA;AACA,IAAA,KADA,iBACA,eADA,EACA;AACA,UAAA,eAAA,CAAA,MAAA,GAAA,KAAA,aAAA,GAAA,CAAA,EAAA;AACA,aAAA,aAAA,GAAA,CAAA;AACA;AACA;AALA,GAzBA;AAiCA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AACA,UAAA,KAAA,KAAA,CAAA,MAAA,IAAA,CAAA,EAAA;AACA,eAAA,EAAA,KAAA,KAAA,CAAA,MAAA,GAAA,CAAA,GAAA,GAAA,CAAA;AACA;;AACA,aAAA,CAAA,EAAA;AACA,KANA;AAOA,IAAA,mBAPA,+BAOA,CAPA,EAOA;AACA,WAAA,mBAAA,CAAA,CAAA;AACA,WAAA,GAAA,CAAA,SAAA,GAAA,KAAA,KAAA,aAAA;AACA,KAVA;AAWA,IAAA,OAXA,mBAWA,KAXA,EAWA;AACA,WAAA,aAAA,GAAA,KAAA;AACA,KAbA;AAcA,IAAA,aAdA,yBAcA,KAdA,EAcA;AACA,WAAA,aAAA,GAAA,KAAA;AACA,WAAA,QAAA;AACA,KAjBA;AAkBA,IAAA,QAlBA,sBAkBA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA,KAAA,CAAA,KAAA,aAAA,CAAA;AACA;AApBA;AAjCA,CAAA","sourcesContent":["<template>\n  <ul\n    v-if=\"items.length\"\n    class=\"vertical dropdown menu mention--box\"\n    :style=\"{ top: getTopSpacing() + 'rem' }\"\n    :class=\"{ 'with-bottom-border': items.length <= 4 }\"\n  >\n    <li\n      v-for=\"(agent, index) in items\"\n      :id=\"`mention-item-${index}`\"\n      :key=\"agent.id\"\n      :class=\"{ active: index === selectedIndex }\"\n      @click=\"onAgentSelect(index)\"\n      @mouseover=\"onHover(index)\"\n    >\n      <div class=\"mention--thumbnail\">\n        <woot-thumbnail\n          :src=\"agent.thumbnail\"\n          :username=\"agent.name\"\n          size=\"32px\"\n        />\n      </div>\n      <div class=\"mention--metadata text-truncate\">\n        <h5 class=\"text-block-title mention--user-name text-truncate\">\n          {{ agent.name }}\n        </h5>\n        <div class=\"text-truncate mention--email text-truncate\">\n          {{ agent.email }}\n        </div>\n      </div>\n    </li>\n  </ul>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport mentionSelectionKeyboardMixin from '../mentions/mentionSelectionKeyboardMixin';\nexport default {\n  mixins: [mentionSelectionKeyboardMixin],\n  props: {\n    searchKey: {\n      type: String,\n      default: '',\n    },\n  },\n  data() {\n    return { selectedIndex: 0 };\n  },\n  computed: {\n    ...mapGetters({ agents: 'agents/getVerifiedAgents' }),\n    items() {\n      if (!this.searchKey) {\n        return this.agents;\n      }\n\n      return this.agents.filter(agent =>\n        agent.name\n          .toLocaleLowerCase()\n          .includes(this.searchKey.toLocaleLowerCase())\n      );\n    },\n  },\n  watch: {\n    items(newListOfAgents) {\n      if (newListOfAgents.length < this.selectedIndex + 1) {\n        this.selectedIndex = 0;\n      }\n    },\n  },\n\n  methods: {\n    getTopSpacing() {\n      if (this.items.length <= 4) {\n        return -(this.items.length * 5 + 1.7);\n      }\n      return -20;\n    },\n    handleKeyboardEvent(e) {\n      this.processKeyDownEvent(e);\n      this.$el.scrollTop = 50 * this.selectedIndex;\n    },\n    onHover(index) {\n      this.selectedIndex = index;\n    },\n    onAgentSelect(index) {\n      this.selectedIndex = index;\n      this.onSelect();\n    },\n    onSelect() {\n      this.$emit('click', this.items[this.selectedIndex]);\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.mention--box {\n  background: var(--white);\n  border-top: 1px solid var(--color-border);\n  font-size: var(--font-size-small);\n  left: 0;\n  line-height: 1.2;\n  max-height: 20rem;\n  overflow: auto;\n  padding: var(--space-small) var(--space-small) 0 var(--space-small);\n  position: absolute;\n  width: 100%;\n  z-index: 100;\n\n  &.with-bottom-border {\n    border-bottom: var(--space-small) solid var(--white);\n\n    li {\n      &:last-child {\n        margin-bottom: 0;\n      }\n    }\n  }\n\n  li {\n    align-items: center;\n    border-radius: var(--border-radius-normal);\n    display: flex;\n    padding: var(--space-small);\n\n    &.active {\n      background: var(--s-50);\n\n      .mention--user-name {\n        color: var(--s-900);\n      }\n      .mention--email {\n        color: var(--s-800);\n      }\n    }\n\n    &:last-child {\n      margin-bottom: var(--space-small);\n    }\n  }\n}\n\n.mention--thumbnail {\n  margin-right: var(--space-small);\n}\n\n.mention--user-name {\n  margin-bottom: 0;\n}\n\n.mention--email {\n  color: var(--s-700);\n  font-size: var(--font-size-mini);\n}\n\n.mention--metadata {\n  flex: 1;\n  max-width: 100%;\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/components/widgets/conversation"},"metadata":{},"sourceType":"module"}