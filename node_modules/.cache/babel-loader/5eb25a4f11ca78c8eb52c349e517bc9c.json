{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { mapGetters } from 'vuex';\nexport default {\n  computed: _objectSpread({}, mapGetters({\n    accountId: 'getCurrentAccountId'\n  })),\n  methods: {\n    addAccountScoping: function addAccountScoping(url) {\n      return \"/app/accounts/\".concat(this.accountId, \"/\").concat(url);\n    }\n  }\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/mixins/account.js"],"names":["mapGetters","computed","accountId","methods","addAccountScoping","url"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,MAA3B;AAEA,eAAe;AACbC,EAAAA,QAAQ,oBACHD,UAAU,CAAC;AACZE,IAAAA,SAAS,EAAE;AADC,GAAD,CADP,CADK;AAMbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,iBADO,6BACWC,GADX,EACgB;AACrB,qCAAwB,KAAKH,SAA7B,cAA0CG,GAA1C;AACD;AAHM;AANI,CAAf","sourcesContent":["import { mapGetters } from 'vuex';\n\nexport default {\n  computed: {\n    ...mapGetters({\n      accountId: 'getCurrentAccountId',\n    }),\n  },\n  methods: {\n    addAccountScoping(url) {\n      return `/app/accounts/${this.accountId}/${url}`;\n    },\n  },\n};\n"]},"metadata":{},"sourceType":"module"}