{"ast":null,"code":"import \"core-js/modules/es.array.slice.js\";\nimport MessageFormatter from '../helpers/MessageFormatter';\nexport default {\n  methods: {\n    formatMessage: function formatMessage(message, isATweet, isAPrivateNote) {\n      var messageFormatter = new MessageFormatter(message, isATweet, isAPrivateNote);\n      return messageFormatter.formattedMessage;\n    },\n    getPlainText: function getPlainText(message, isATweet) {\n      var messageFormatter = new MessageFormatter(message, isATweet);\n      return messageFormatter.plainText;\n    },\n    truncateMessage: function truncateMessage() {\n      var description = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n      if (description.length < 100) {\n        return description;\n      }\n\n      return \"\".concat(description.slice(0, 97), \"...\");\n    }\n  }\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/shared/mixins/messageFormatterMixin.js"],"names":["MessageFormatter","methods","formatMessage","message","isATweet","isAPrivateNote","messageFormatter","formattedMessage","getPlainText","plainText","truncateMessage","description","length","slice"],"mappings":";AAAA,OAAOA,gBAAP,MAA6B,6BAA7B;AAEA,eAAe;AACbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,aADO,yBACOC,OADP,EACgBC,QADhB,EAC0BC,cAD1B,EAC0C;AAC/C,UAAMC,gBAAgB,GAAG,IAAIN,gBAAJ,CACvBG,OADuB,EAEvBC,QAFuB,EAGvBC,cAHuB,CAAzB;AAKA,aAAOC,gBAAgB,CAACC,gBAAxB;AACD,KARM;AASPC,IAAAA,YATO,wBASML,OATN,EASeC,QATf,EASyB;AAC9B,UAAME,gBAAgB,GAAG,IAAIN,gBAAJ,CAAqBG,OAArB,EAA8BC,QAA9B,CAAzB;AACA,aAAOE,gBAAgB,CAACG,SAAxB;AACD,KAZM;AAaPC,IAAAA,eAbO,6BAa2B;AAAA,UAAlBC,WAAkB,uEAAJ,EAAI;;AAChC,UAAIA,WAAW,CAACC,MAAZ,GAAqB,GAAzB,EAA8B;AAC5B,eAAOD,WAAP;AACD;;AAED,uBAAUA,WAAW,CAACE,KAAZ,CAAkB,CAAlB,EAAqB,EAArB,CAAV;AACD;AAnBM;AADI,CAAf","sourcesContent":["import MessageFormatter from '../helpers/MessageFormatter';\n\nexport default {\n  methods: {\n    formatMessage(message, isATweet, isAPrivateNote) {\n      const messageFormatter = new MessageFormatter(\n        message,\n        isATweet,\n        isAPrivateNote\n      );\n      return messageFormatter.formattedMessage;\n    },\n    getPlainText(message, isATweet) {\n      const messageFormatter = new MessageFormatter(message, isATweet);\n      return messageFormatter.plainText;\n    },\n    truncateMessage(description = '') {\n      if (description.length < 100) {\n        return description;\n      }\n\n      return `${description.slice(0, 97)}...`;\n    },\n  },\n};\n"]},"metadata":{},"sourceType":"module"}