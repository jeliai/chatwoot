{"ast":null,"code":"var _mutations;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"core-js/modules/es.array.filter.js\";\nimport Vue from 'vue';\nimport * as types from '../mutation-types';\nvar state = {\n  currentPage: {\n    me: 0,\n    unassigned: 0,\n    all: 0,\n    appliedFilters: 0\n  },\n  hasEndReached: {\n    me: false,\n    unassigned: false,\n    all: false\n  }\n};\nexport var getters = {\n  getHasEndReached: function getHasEndReached($state) {\n    return function (filter) {\n      return $state.hasEndReached[filter];\n    };\n  },\n  getCurrentPageFilter: function getCurrentPageFilter($state) {\n    return function (filter) {\n      return $state.currentPage[filter];\n    };\n  },\n  getCurrentPage: function getCurrentPage($state) {\n    return $state.currentPage;\n  }\n};\nexport var actions = {\n  setCurrentPage: function setCurrentPage(_ref, _ref2) {\n    var commit = _ref.commit;\n    var filter = _ref2.filter,\n        page = _ref2.page;\n    commit(types.default.SET_CURRENT_PAGE, {\n      filter: filter,\n      page: page\n    });\n  },\n  setEndReached: function setEndReached(_ref3, _ref4) {\n    var commit = _ref3.commit;\n    var filter = _ref4.filter;\n    commit(types.default.SET_CONVERSATION_END_REACHED, {\n      filter: filter\n    });\n  },\n  reset: function reset(_ref5) {\n    var commit = _ref5.commit;\n    commit(types.default.CLEAR_CONVERSATION_PAGE);\n  }\n};\nexport var mutations = (_mutations = {}, _defineProperty(_mutations, types.default.SET_CURRENT_PAGE, function ($state, _ref6) {\n  var filter = _ref6.filter,\n      page = _ref6.page;\n  Vue.set($state.currentPage, filter, page);\n}), _defineProperty(_mutations, types.default.SET_CONVERSATION_END_REACHED, function ($state, _ref7) {\n  var filter = _ref7.filter;\n\n  if (filter === 'all') {\n    Vue.set($state.hasEndReached, 'unassigned', true);\n    Vue.set($state.hasEndReached, 'me', true);\n  }\n\n  Vue.set($state.hasEndReached, filter, true);\n}), _defineProperty(_mutations, types.default.CLEAR_CONVERSATION_PAGE, function ($state) {\n  $state.currentPage = {\n    me: 0,\n    unassigned: 0,\n    all: 0,\n    appliedFilters: 0\n  };\n  $state.hasEndReached = {\n    me: false,\n    unassigned: false,\n    all: false,\n    appliedFilters: false\n  };\n}), _mutations);\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/store/modules/conversationPage.js"],"names":["Vue","types","state","currentPage","me","unassigned","all","appliedFilters","hasEndReached","getters","getHasEndReached","$state","filter","getCurrentPageFilter","getCurrentPage","actions","setCurrentPage","commit","page","default","SET_CURRENT_PAGE","setEndReached","SET_CONVERSATION_END_REACHED","reset","CLEAR_CONVERSATION_PAGE","mutations","set","namespaced"],"mappings":";;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAO,KAAKC,KAAZ,MAAuB,mBAAvB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,WAAW,EAAE;AACXC,IAAAA,EAAE,EAAE,CADO;AAEXC,IAAAA,UAAU,EAAE,CAFD;AAGXC,IAAAA,GAAG,EAAE,CAHM;AAIXC,IAAAA,cAAc,EAAE;AAJL,GADD;AAOZC,EAAAA,aAAa,EAAE;AACbJ,IAAAA,EAAE,EAAE,KADS;AAEbC,IAAAA,UAAU,EAAE,KAFC;AAGbC,IAAAA,GAAG,EAAE;AAHQ;AAPH,CAAd;AAcA,OAAO,IAAMG,OAAO,GAAG;AACrBC,EAAAA,gBAAgB,EAAE,0BAAAC,MAAM;AAAA,WAAI,UAAAC,MAAM,EAAI;AACpC,aAAOD,MAAM,CAACH,aAAP,CAAqBI,MAArB,CAAP;AACD,KAFuB;AAAA,GADH;AAIrBC,EAAAA,oBAAoB,EAAE,8BAAAF,MAAM;AAAA,WAAI,UAAAC,MAAM,EAAI;AACxC,aAAOD,MAAM,CAACR,WAAP,CAAmBS,MAAnB,CAAP;AACD,KAF2B;AAAA,GAJP;AAOrBE,EAAAA,cAAc,EAAE,wBAAAH,MAAM,EAAI;AACxB,WAAOA,MAAM,CAACR,WAAd;AACD;AAToB,CAAhB;AAYP,OAAO,IAAMY,OAAO,GAAG;AACrBC,EAAAA,cADqB,uCACwB;AAAA,QAA5BC,MAA4B,QAA5BA,MAA4B;AAAA,QAAhBL,MAAgB,SAAhBA,MAAgB;AAAA,QAARM,IAAQ,SAARA,IAAQ;AAC3CD,IAAAA,MAAM,CAAChB,KAAK,CAACkB,OAAN,CAAcC,gBAAf,EAAiC;AAAER,MAAAA,MAAM,EAANA,MAAF;AAAUM,MAAAA,IAAI,EAAJA;AAAV,KAAjC,CAAN;AACD,GAHoB;AAIrBG,EAAAA,aAJqB,uCAIiB;AAAA,QAAtBJ,MAAsB,SAAtBA,MAAsB;AAAA,QAAVL,MAAU,SAAVA,MAAU;AACpCK,IAAAA,MAAM,CAAChB,KAAK,CAACkB,OAAN,CAAcG,4BAAf,EAA6C;AAAEV,MAAAA,MAAM,EAANA;AAAF,KAA7C,CAAN;AACD,GANoB;AAOrBW,EAAAA,KAPqB,wBAOH;AAAA,QAAVN,MAAU,SAAVA,MAAU;AAChBA,IAAAA,MAAM,CAAChB,KAAK,CAACkB,OAAN,CAAcK,uBAAf,CAAN;AACD;AAToB,CAAhB;AAYP,OAAO,IAAMC,SAAS,iDACnBxB,KAAK,CAACkB,OAAN,CAAcC,gBADK,EACc,UAACT,MAAD,SAA8B;AAAA,MAAnBC,MAAmB,SAAnBA,MAAmB;AAAA,MAAXM,IAAW,SAAXA,IAAW;AAC9DlB,EAAAA,GAAG,CAAC0B,GAAJ,CAAQf,MAAM,CAACR,WAAf,EAA4BS,MAA5B,EAAoCM,IAApC;AACD,CAHmB,+BAInBjB,KAAK,CAACkB,OAAN,CAAcG,4BAJK,EAI0B,UAACX,MAAD,SAAwB;AAAA,MAAbC,MAAa,SAAbA,MAAa;;AACpE,MAAIA,MAAM,KAAK,KAAf,EAAsB;AACpBZ,IAAAA,GAAG,CAAC0B,GAAJ,CAAQf,MAAM,CAACH,aAAf,EAA8B,YAA9B,EAA4C,IAA5C;AACAR,IAAAA,GAAG,CAAC0B,GAAJ,CAAQf,MAAM,CAACH,aAAf,EAA8B,IAA9B,EAAoC,IAApC;AACD;;AACDR,EAAAA,GAAG,CAAC0B,GAAJ,CAAQf,MAAM,CAACH,aAAf,EAA8BI,MAA9B,EAAsC,IAAtC;AACD,CAVmB,+BAWnBX,KAAK,CAACkB,OAAN,CAAcK,uBAXK,EAWqB,UAAAb,MAAM,EAAI;AACjDA,EAAAA,MAAM,CAACR,WAAP,GAAqB;AACnBC,IAAAA,EAAE,EAAE,CADe;AAEnBC,IAAAA,UAAU,EAAE,CAFO;AAGnBC,IAAAA,GAAG,EAAE,CAHc;AAInBC,IAAAA,cAAc,EAAE;AAJG,GAArB;AAOAI,EAAAA,MAAM,CAACH,aAAP,GAAuB;AACrBJ,IAAAA,EAAE,EAAE,KADiB;AAErBC,IAAAA,UAAU,EAAE,KAFS;AAGrBC,IAAAA,GAAG,EAAE,KAHgB;AAIrBC,IAAAA,cAAc,EAAE;AAJK,GAAvB;AAMD,CAzBmB,cAAf;AA4BP,eAAe;AACboB,EAAAA,UAAU,EAAE,IADC;AAEbzB,EAAAA,KAAK,EAALA,KAFa;AAGbO,EAAAA,OAAO,EAAPA,OAHa;AAIbM,EAAAA,OAAO,EAAPA,OAJa;AAKbU,EAAAA,SAAS,EAATA;AALa,CAAf","sourcesContent":["import Vue from 'vue';\nimport * as types from '../mutation-types';\n\nconst state = {\n  currentPage: {\n    me: 0,\n    unassigned: 0,\n    all: 0,\n    appliedFilters: 0,\n  },\n  hasEndReached: {\n    me: false,\n    unassigned: false,\n    all: false,\n  },\n};\n\nexport const getters = {\n  getHasEndReached: $state => filter => {\n    return $state.hasEndReached[filter];\n  },\n  getCurrentPageFilter: $state => filter => {\n    return $state.currentPage[filter];\n  },\n  getCurrentPage: $state => {\n    return $state.currentPage;\n  },\n};\n\nexport const actions = {\n  setCurrentPage({ commit }, { filter, page }) {\n    commit(types.default.SET_CURRENT_PAGE, { filter, page });\n  },\n  setEndReached({ commit }, { filter }) {\n    commit(types.default.SET_CONVERSATION_END_REACHED, { filter });\n  },\n  reset({ commit }) {\n    commit(types.default.CLEAR_CONVERSATION_PAGE);\n  },\n};\n\nexport const mutations = {\n  [types.default.SET_CURRENT_PAGE]: ($state, { filter, page }) => {\n    Vue.set($state.currentPage, filter, page);\n  },\n  [types.default.SET_CONVERSATION_END_REACHED]: ($state, { filter }) => {\n    if (filter === 'all') {\n      Vue.set($state.hasEndReached, 'unassigned', true);\n      Vue.set($state.hasEndReached, 'me', true);\n    }\n    Vue.set($state.hasEndReached, filter, true);\n  },\n  [types.default.CLEAR_CONVERSATION_PAGE]: $state => {\n    $state.currentPage = {\n      me: 0,\n      unassigned: 0,\n      all: 0,\n      appliedFilters: 0,\n    };\n\n    $state.hasEndReached = {\n      me: false,\n      unassigned: false,\n      all: false,\n      appliedFilters: false,\n    };\n  },\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations,\n};\n"]},"metadata":{},"sourceType":"module"}