{"ast":null,"code":"import \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { required, minLength } from 'vuelidate/lib/validators';\nimport { mapGetters } from 'vuex';\nimport WootSubmitButton from '../../../../components/buttons/FormSubmitButton';\nimport Modal from '../../../../components/Modal';\nimport Auth from '../../../../api/auth';\nexport default {\n  components: {\n    WootSubmitButton: WootSubmitButton,\n    Modal: Modal\n  },\n  props: {\n    id: {\n      type: Number,\n      required: true\n    },\n    name: {\n      type: String,\n      required: true\n    },\n    email: {\n      type: String,\n      default: ''\n    },\n    type: {\n      type: String,\n      default: ''\n    },\n    onClose: {\n      type: Function,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      roles: [{\n        name: 'administrator',\n        label: this.$t('AGENT_MGMT.AGENT_TYPES.ADMINISTRATOR')\n      }, {\n        name: 'agent',\n        label: this.$t('AGENT_MGMT.AGENT_TYPES.AGENT')\n      }],\n      agentName: this.name,\n      agentType: this.type,\n      agentCredentials: {\n        email: this.email\n      },\n      show: true\n    };\n  },\n  validations: {\n    agentName: {\n      required: required,\n      minLength: minLength(1)\n    },\n    agentType: {\n      required: required\n    }\n  },\n  computed: _objectSpread({\n    pageTitle: function pageTitle() {\n      return \"\".concat(this.$t('AGENT_MGMT.EDIT.TITLE'), \" - \").concat(this.name);\n    }\n  }, mapGetters({\n    uiFlags: 'agents/getUIFlags'\n  })),\n  methods: {\n    showAlert: function showAlert(message) {\n      bus.$emit('newToastMessage', message);\n    },\n    editAgent: function editAgent() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _this.$store.dispatch('agents/update', {\n                  id: _this.id,\n                  name: _this.agentName,\n                  role: _this.agentType\n                });\n\n              case 3:\n                _this.showAlert(_this.$t('AGENT_MGMT.EDIT.API.SUCCESS_MESSAGE'));\n\n                _this.onClose();\n\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n\n                _this.showAlert(_this.$t('AGENT_MGMT.EDIT.API.ERROR_MESSAGE'));\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }))();\n    },\n    resetPassword: function resetPassword() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return Auth.resetPassword(_this2.agentCredentials);\n\n              case 3:\n                _this2.showAlert(_this2.$t('AGENT_MGMT.EDIT.PASSWORD_RESET.ADMIN_SUCCESS_MESSAGE'));\n\n                _context2.next = 9;\n                break;\n\n              case 6:\n                _context2.prev = 6;\n                _context2.t0 = _context2[\"catch\"](0);\n\n                _this2.showAlert(_this2.$t('AGENT_MGMT.EDIT.PASSWORD_RESET.ERROR_MESSAGE'));\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 6]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"sources":["EditAgent.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <modal :show.sync=\"show\" :on-close=\"onClose\">\n    <div class=\"column content-box\">\n      <woot-modal-header :header-title=\"pageTitle\" />\n      <form class=\"row medium-8\" @submit.prevent=\"editAgent()\">\n        <div class=\"medium-12 columns\">\n          <label :class=\"{ error: $v.agentName.$error }\">\n            {{ $t('AGENT_MGMT.EDIT.FORM.NAME.LABEL') }}\n            <input\n              v-model.trim=\"agentName\"\n              type=\"text\"\n              :placeholder=\"$t('AGENT_MGMT.EDIT.FORM.NAME.PLACEHOLDER')\"\n              @input=\"$v.agentName.$touch\"\n            />\n          </label>\n        </div>\n\n        <div class=\"medium-12 columns\">\n          <label :class=\"{ error: $v.agentType.$error }\">\n            {{ $t('AGENT_MGMT.EDIT.FORM.AGENT_TYPE.LABEL') }}\n            <select v-model=\"agentType\">\n              <option v-for=\"role in roles\" :key=\"role.name\" :value=\"role.name\">\n                {{ role.label }}\n              </option>\n            </select>\n            <span v-if=\"$v.agentType.$error\" class=\"message\">\n              {{ $t('AGENT_MGMT.EDIT.FORM.AGENT_TYPE.ERROR') }}\n            </span>\n          </label>\n        </div>\n        <div class=\"medium-12 modal-footer\">\n          <div class=\"medium-6 columns\">\n            <woot-submit-button\n              :disabled=\"\n                $v.agentType.$invalid ||\n                  $v.agentName.$invalid ||\n                  uiFlags.isUpdating\n              \"\n              :button-text=\"$t('AGENT_MGMT.EDIT.FORM.SUBMIT')\"\n              :loading=\"uiFlags.isUpdating\"\n            />\n            <button class=\"button clear\" @click.prevent=\"onClose\">\n              {{ $t('AGENT_MGMT.EDIT.CANCEL_BUTTON_TEXT') }}\n            </button>\n          </div>\n          <div class=\"medium-6 columns text-right\">\n            <woot-button\n              icon=\"lock-closed\"\n              variant=\"clear\"\n              @click.prevent=\"resetPassword\"\n            >\n              {{ $t('AGENT_MGMT.EDIT.PASSWORD_RESET.ADMIN_RESET_BUTTON') }}\n            </woot-button>\n          </div>\n        </div>\n      </form>\n    </div>\n  </modal>\n</template>\n\n<script>\nimport { required, minLength } from 'vuelidate/lib/validators';\nimport { mapGetters } from 'vuex';\nimport WootSubmitButton from '../../../../components/buttons/FormSubmitButton';\nimport Modal from '../../../../components/Modal';\nimport Auth from '../../../../api/auth';\n\nexport default {\n  components: {\n    WootSubmitButton,\n    Modal,\n  },\n  props: {\n    id: {\n      type: Number,\n      required: true,\n    },\n    name: {\n      type: String,\n      required: true,\n    },\n    email: {\n      type: String,\n      default: '',\n    },\n    type: {\n      type: String,\n      default: '',\n    },\n    onClose: {\n      type: Function,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      roles: [\n        {\n          name: 'administrator',\n          label: this.$t('AGENT_MGMT.AGENT_TYPES.ADMINISTRATOR'),\n        },\n        {\n          name: 'agent',\n          label: this.$t('AGENT_MGMT.AGENT_TYPES.AGENT'),\n        },\n      ],\n      agentName: this.name,\n      agentType: this.type,\n      agentCredentials: {\n        email: this.email,\n      },\n      show: true,\n    };\n  },\n  validations: {\n    agentName: {\n      required,\n      minLength: minLength(1),\n    },\n    agentType: {\n      required,\n    },\n  },\n  computed: {\n    pageTitle() {\n      return `${this.$t('AGENT_MGMT.EDIT.TITLE')} - ${this.name}`;\n    },\n    ...mapGetters({\n      uiFlags: 'agents/getUIFlags',\n    }),\n  },\n  methods: {\n    showAlert(message) {\n      bus.$emit('newToastMessage', message);\n    },\n    async editAgent() {\n      try {\n        await this.$store.dispatch('agents/update', {\n          id: this.id,\n          name: this.agentName,\n          role: this.agentType,\n        });\n        this.showAlert(this.$t('AGENT_MGMT.EDIT.API.SUCCESS_MESSAGE'));\n        this.onClose();\n      } catch (error) {\n        this.showAlert(this.$t('AGENT_MGMT.EDIT.API.ERROR_MESSAGE'));\n      }\n    },\n    async resetPassword() {\n      try {\n        await Auth.resetPassword(this.agentCredentials);\n        this.showAlert(\n          this.$t('AGENT_MGMT.EDIT.PASSWORD_RESET.ADMIN_SUCCESS_MESSAGE')\n        );\n      } catch (error) {\n        this.showAlert(this.$t('AGENT_MGMT.EDIT.PASSWORD_RESET.ERROR_MESSAGE'));\n      }\n    },\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/settings/agents"},"metadata":{},"sourceType":"module"}