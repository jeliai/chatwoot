{"ast":null,"code":"import \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport LoadingState from 'dashboard/components/widgets/LoadingState';\nimport { mapGetters } from 'vuex';\nexport default {\n  components: {\n    LoadingState: LoadingState\n  },\n  props: {\n    value: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      iframeLoading: true\n    };\n  },\n  computed: _objectSpread({}, mapGetters({\n    globalConfig: 'globalConfig/get'\n  })),\n  mounted: function mounted() {\n    var _this = this;\n\n    window.onmessage = function (e) {\n      if (typeof e.data !== 'string' || !e.data.startsWith('chatwoot-csml-editor:update')) {\n        return;\n      }\n\n      var csmlContent = e.data.replace('chatwoot-csml-editor:update', '');\n\n      _this.$emit('input', csmlContent);\n    };\n  },\n  methods: {\n    onEditorLoad: function onEditorLoad() {\n      var frameElement = document.getElementById(\"csml-editor--frame\");\n      var eventData = {\n        event: 'editorContext',\n        data: this.value || ''\n      };\n      frameElement.contentWindow.postMessage(JSON.stringify(eventData), '*');\n      this.iframeLoading = false;\n    }\n  }\n};","map":{"version":3,"sources":["CSMLMonacoEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeA,OAAA,YAAA,MAAA,2CAAA;AACA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,YAAA,EAAA;AAAA,GADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AADA,GAFA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,aAAA,EAAA;AADA,KAAA;AAGA,GAZA;AAaA,EAAA,QAAA,oBACA,UAAA,CAAA;AACA,IAAA,YAAA,EAAA;AADA,GAAA,CADA,CAbA;AAkBA,EAAA,OAlBA,qBAkBA;AAAA;;AACA,IAAA,MAAA,CAAA,SAAA,GAAA,UAAA,CAAA,EAAA;AACA,UACA,OAAA,CAAA,CAAA,IAAA,KAAA,QAAA,IACA,CAAA,CAAA,CAAA,IAAA,CAAA,UAAA,CAAA,6BAAA,CAFA,EAGA;AACA;AACA;;AACA,UAAA,WAAA,GAAA,CAAA,CAAA,IAAA,CAAA,OAAA,CAAA,6BAAA,EAAA,EAAA,CAAA;;AACA,MAAA,KAAA,CAAA,KAAA,CAAA,OAAA,EAAA,WAAA;AACA,KATA;AAUA,GA7BA;AA8BA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA,UAAA,YAAA,GAAA,QAAA,CAAA,cAAA,sBAAA;AACA,UAAA,SAAA,GAAA;AACA,QAAA,KAAA,EAAA,eADA;AAEA,QAAA,IAAA,EAAA,KAAA,KAAA,IAAA;AAFA,OAAA;AAIA,MAAA,YAAA,CAAA,aAAA,CAAA,WAAA,CAAA,IAAA,CAAA,SAAA,CAAA,SAAA,CAAA,EAAA,GAAA;AACA,WAAA,aAAA,GAAA,KAAA;AACA;AATA;AA9BA,CAAA","sourcesContent":["<template>\n  <div class=\"csml-editor--container\">\n    <loading-state\n      v-if=\"iframeLoading\"\n      :message=\"$t('AGENT_BOTS.LOADING_EDITOR')\"\n      class=\"dashboard-app_loading-container\"\n    />\n    <iframe\n      id=\"csml-editor--frame\"\n      :src=\"globalConfig.csmlEditorHost\"\n      @load=\"onEditorLoad\"\n    />\n  </div>\n</template>\n<script>\nimport LoadingState from 'dashboard/components/widgets/LoadingState';\nimport { mapGetters } from 'vuex';\n\nexport default {\n  components: { LoadingState },\n  props: {\n    value: {\n      type: String,\n      default: '',\n    },\n  },\n  data() {\n    return {\n      iframeLoading: true,\n    };\n  },\n  computed: {\n    ...mapGetters({\n      globalConfig: 'globalConfig/get',\n    }),\n  },\n  mounted() {\n    window.onmessage = e => {\n      if (\n        typeof e.data !== 'string' ||\n        !e.data.startsWith('chatwoot-csml-editor:update')\n      ) {\n        return;\n      }\n      const csmlContent = e.data.replace('chatwoot-csml-editor:update', '');\n      this.$emit('input', csmlContent);\n    };\n  },\n  methods: {\n    onEditorLoad() {\n      const frameElement = document.getElementById(`csml-editor--frame`);\n      const eventData = {\n        event: 'editorContext',\n        data: this.value || '',\n      };\n      frameElement.contentWindow.postMessage(JSON.stringify(eventData), '*');\n      this.iframeLoading = false;\n    },\n  },\n};\n</script>\n\n<style scoped>\n#csml-editor--frame {\n  border: 0;\n  width: 100%;\n  height: 100%;\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/settings/agentBots/components"},"metadata":{},"sourceType":"module"}