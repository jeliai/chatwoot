{"ast":null,"code":"import \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport Auth from './Auth';\nimport Confirmation from './Confirmation';\nimport PasswordEdit from './PasswordEdit';\nimport ResetPassword from './ResetPassword';\nimport { frontendURL } from '../../helper/URLHelper';\n\nvar Signup = function Signup() {\n  return import('./Signup');\n};\n\nexport default {\n  routes: [{\n    path: frontendURL('auth/signup'),\n    name: 'auth_signup',\n    component: Signup,\n    meta: {\n      requireSignupEnabled: true\n    }\n  }, {\n    path: frontendURL('auth'),\n    name: 'auth',\n    component: Auth,\n    children: [{\n      path: 'confirmation',\n      name: 'auth_confirmation',\n      component: Confirmation,\n      props: function props(route) {\n        return {\n          config: route.query.config,\n          confirmationToken: route.query.confirmation_token,\n          redirectUrl: route.query.route_url\n        };\n      }\n    }, {\n      path: 'password/edit',\n      name: 'auth_password_edit',\n      component: PasswordEdit,\n      props: function props(route) {\n        return {\n          config: route.query.config,\n          resetPasswordToken: route.query.reset_password_token,\n          redirectUrl: route.query.route_url\n        };\n      }\n    }, {\n      path: 'reset/password',\n      name: 'auth_reset_password',\n      component: ResetPassword\n    }]\n  }]\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/routes/auth/auth.routes.js"],"names":["Auth","Confirmation","PasswordEdit","ResetPassword","frontendURL","Signup","routes","path","name","component","meta","requireSignupEnabled","children","props","route","config","query","confirmationToken","confirmation_token","redirectUrl","route_url","resetPasswordToken","reset_password_token"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,WAAT,QAA4B,wBAA5B;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,SAAM,OAAO,UAAP,CAAN;AAAA,CAAf;;AAEA,eAAe;AACbC,EAAAA,MAAM,EAAE,CACN;AACEC,IAAAA,IAAI,EAAEH,WAAW,CAAC,aAAD,CADnB;AAEEI,IAAAA,IAAI,EAAE,aAFR;AAGEC,IAAAA,SAAS,EAAEJ,MAHb;AAIEK,IAAAA,IAAI,EAAE;AAAEC,MAAAA,oBAAoB,EAAE;AAAxB;AAJR,GADM,EAON;AACEJ,IAAAA,IAAI,EAAEH,WAAW,CAAC,MAAD,CADnB;AAEEI,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,SAAS,EAAET,IAHb;AAIEY,IAAAA,QAAQ,EAAE,CACR;AACEL,MAAAA,IAAI,EAAE,cADR;AAEEC,MAAAA,IAAI,EAAE,mBAFR;AAGEC,MAAAA,SAAS,EAAER,YAHb;AAIEY,MAAAA,KAAK,EAAE,eAAAC,KAAK;AAAA,eAAK;AACfC,UAAAA,MAAM,EAAED,KAAK,CAACE,KAAN,CAAYD,MADL;AAEfE,UAAAA,iBAAiB,EAAEH,KAAK,CAACE,KAAN,CAAYE,kBAFhB;AAGfC,UAAAA,WAAW,EAAEL,KAAK,CAACE,KAAN,CAAYI;AAHV,SAAL;AAAA;AAJd,KADQ,EAWR;AACEb,MAAAA,IAAI,EAAE,eADR;AAEEC,MAAAA,IAAI,EAAE,oBAFR;AAGEC,MAAAA,SAAS,EAAEP,YAHb;AAIEW,MAAAA,KAAK,EAAE,eAAAC,KAAK;AAAA,eAAK;AACfC,UAAAA,MAAM,EAAED,KAAK,CAACE,KAAN,CAAYD,MADL;AAEfM,UAAAA,kBAAkB,EAAEP,KAAK,CAACE,KAAN,CAAYM,oBAFjB;AAGfH,UAAAA,WAAW,EAAEL,KAAK,CAACE,KAAN,CAAYI;AAHV,SAAL;AAAA;AAJd,KAXQ,EAqBR;AACEb,MAAAA,IAAI,EAAE,gBADR;AAEEC,MAAAA,IAAI,EAAE,qBAFR;AAGEC,MAAAA,SAAS,EAAEN;AAHb,KArBQ;AAJZ,GAPM;AADK,CAAf","sourcesContent":["import Auth from './Auth';\nimport Confirmation from './Confirmation';\nimport PasswordEdit from './PasswordEdit';\nimport ResetPassword from './ResetPassword';\nimport { frontendURL } from '../../helper/URLHelper';\n\nconst Signup = () => import('./Signup');\n\nexport default {\n  routes: [\n    {\n      path: frontendURL('auth/signup'),\n      name: 'auth_signup',\n      component: Signup,\n      meta: { requireSignupEnabled: true },\n    },\n    {\n      path: frontendURL('auth'),\n      name: 'auth',\n      component: Auth,\n      children: [\n        {\n          path: 'confirmation',\n          name: 'auth_confirmation',\n          component: Confirmation,\n          props: route => ({\n            config: route.query.config,\n            confirmationToken: route.query.confirmation_token,\n            redirectUrl: route.query.route_url,\n          }),\n        },\n        {\n          path: 'password/edit',\n          name: 'auth_password_edit',\n          component: PasswordEdit,\n          props: route => ({\n            config: route.query.config,\n            resetPasswordToken: route.query.reset_password_token,\n            redirectUrl: route.query.route_url,\n          }),\n        },\n        {\n          path: 'reset/password',\n          name: 'auth_reset_password',\n          component: ResetPassword,\n        },\n      ],\n    },\n  ],\n};\n"]},"metadata":{},"sourceType":"module"}