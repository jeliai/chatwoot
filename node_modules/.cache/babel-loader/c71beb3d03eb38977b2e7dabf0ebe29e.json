{"ast":null,"code":"import \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.promise.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport { required } from 'vuelidate/lib/validators';\nimport WootMessageEditor from 'dashboard/components/widgets/WootWriter/Editor';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport campaignMixin from 'shared/mixins/campaignMixin';\nimport { URLPattern } from 'urlpattern-polyfill';\nexport default {\n  components: {\n    WootMessageEditor: WootMessageEditor\n  },\n  mixins: [alertMixin, campaignMixin],\n  props: {\n    selectedCampaign: {\n      type: Object,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    return {\n      title: '',\n      message: '',\n      selectedSender: '',\n      selectedInbox: null,\n      endPoint: '',\n      timeOnPage: 10,\n      triggerOnlyDuringBusinessHours: false,\n      show: true,\n      enabled: true,\n      senderList: []\n    };\n  },\n  validations: {\n    title: {\n      required: required\n    },\n    message: {\n      required: required\n    },\n    selectedSender: {\n      required: required\n    },\n    endPoint: {\n      required: required,\n      shouldBeAValidURLPattern: function shouldBeAValidURLPattern(value) {\n        try {\n          // eslint-disable-next-line\n          new URLPattern(value);\n          return true;\n        } catch (error) {\n          return false;\n        }\n      },\n      shouldStartWithHTTP: function shouldStartWithHTTP(value) {\n        if (value) {\n          return value.startsWith('https://') || value.startsWith('http://');\n        }\n\n        return false;\n      }\n    },\n    timeOnPage: {\n      required: required\n    },\n    selectedInbox: {\n      required: required\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    uiFlags: 'campaigns/getUIFlags',\n    inboxes: 'inboxes/getTwilioInboxes'\n  })), {}, {\n    inboxes: function inboxes() {\n      if (this.isOngoingType) {\n        return this.$store.getters['inboxes/getWebsiteInboxes'];\n      }\n\n      return this.$store.getters['inboxes/getSMSInboxes'];\n    },\n    pageTitle: function pageTitle() {\n      return \"\".concat(this.$t('CAMPAIGN.EDIT.TITLE'), \" - \").concat(this.selectedCampaign.title);\n    },\n    sendersAndBotList: function sendersAndBotList() {\n      return [{\n        id: 0,\n        name: 'Bot'\n      }].concat(_toConsumableArray(this.senderList));\n    }\n  }),\n  mounted: function mounted() {\n    this.setFormValues();\n  },\n  methods: {\n    onClose: function onClose() {\n      this.$emit('on-close');\n    },\n    loadInboxMembers: function loadInboxMembers() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var response, inboxMembers, _error$response, errorMessage;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _this.$store.dispatch('inboxMembers/get', {\n                  inboxId: _this.selectedInbox\n                });\n\n              case 3:\n                response = _context.sent;\n                inboxMembers = response.data.payload;\n                _this.senderList = inboxMembers;\n                _context.next = 12;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                errorMessage = (_context.t0 === null || _context.t0 === void 0 ? void 0 : (_error$response = _context.t0.response) === null || _error$response === void 0 ? void 0 : _error$response.message) || _this.$t('CAMPAIGN.ADD.API.ERROR_MESSAGE');\n\n                _this.showAlert(errorMessage);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8]]);\n      }))();\n    },\n    onChangeInbox: function onChangeInbox() {\n      this.loadInboxMembers();\n    },\n    setFormValues: function setFormValues() {\n      var _this$selectedCampaig = this.selectedCampaign,\n          title = _this$selectedCampaig.title,\n          message = _this$selectedCampaig.message,\n          enabled = _this$selectedCampaig.enabled,\n          triggerOnlyDuringBusinessHours = _this$selectedCampaig.trigger_only_during_business_hours,\n          inboxId = _this$selectedCampaig.inbox.id,\n          _this$selectedCampaig2 = _this$selectedCampaig.trigger_rules,\n          endPoint = _this$selectedCampaig2.url,\n          timeOnPage = _this$selectedCampaig2.time_on_page,\n          sender = _this$selectedCampaig.sender;\n      this.title = title;\n      this.message = message;\n      this.endPoint = endPoint;\n      this.timeOnPage = timeOnPage;\n      this.selectedInbox = inboxId;\n      this.triggerOnlyDuringBusinessHours = triggerOnlyDuringBusinessHours;\n      this.selectedSender = sender && sender.id || 0;\n      this.enabled = enabled;\n      this.loadInboxMembers();\n    },\n    editCampaign: function editCampaign() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this2.$v.$touch();\n\n                if (!_this2.$v.$invalid) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 3:\n                _context2.prev = 3;\n                _context2.next = 6;\n                return _this2.$store.dispatch('campaigns/update', {\n                  id: _this2.selectedCampaign.id,\n                  title: _this2.title,\n                  message: _this2.message,\n                  inbox_id: _this2.$route.params.inboxId,\n                  trigger_only_during_business_hours: // eslint-disable-next-line prettier/prettier\n                  _this2.triggerOnlyDuringBusinessHours,\n                  sender_id: _this2.selectedSender || null,\n                  enabled: _this2.enabled,\n                  trigger_rules: {\n                    url: _this2.endPoint,\n                    time_on_page: _this2.timeOnPage\n                  }\n                });\n\n              case 6:\n                _this2.showAlert(_this2.$t('CAMPAIGN.EDIT.API.SUCCESS_MESSAGE'));\n\n                _this2.onClose();\n\n                _context2.next = 13;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](3);\n\n                _this2.showAlert(_this2.$t('CAMPAIGN.EDIT.API.ERROR_MESSAGE'));\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[3, 10]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"sources":["EditCampaign.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgHA,SAAA,UAAA,QAAA,MAAA;AACA,SAAA,QAAA,QAAA,0BAAA;AACA,OAAA,iBAAA,MAAA,gDAAA;AACA,OAAA,UAAA,MAAA,0BAAA;AACA,OAAA,aAAA,MAAA,6BAAA;AACA,SAAA,UAAA,QAAA,qBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,iBAAA,EAAA;AADA,GADA;AAIA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,CAJA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,gBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA;AADA,GALA;AAWA,EAAA,IAXA,kBAWA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,cAAA,EAAA,EAHA;AAIA,MAAA,aAAA,EAAA,IAJA;AAKA,MAAA,QAAA,EAAA,EALA;AAMA,MAAA,UAAA,EAAA,EANA;AAOA,MAAA,8BAAA,EAAA,KAPA;AAQA,MAAA,IAAA,EAAA,IARA;AASA,MAAA,OAAA,EAAA,IATA;AAUA,MAAA,UAAA,EAAA;AAVA,KAAA;AAYA,GAxBA;AAyBA,EAAA,WAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,QAAA,EAAA;AADA,KADA;AAIA,IAAA,OAAA,EAAA;AACA,MAAA,QAAA,EAAA;AADA,KAJA;AAOA,IAAA,cAAA,EAAA;AACA,MAAA,QAAA,EAAA;AADA,KAPA;AAUA,IAAA,QAAA,EAAA;AACA,MAAA,QAAA,EAAA,QADA;AAEA,MAAA,wBAFA,oCAEA,KAFA,EAEA;AACA,YAAA;AACA;AACA,cAAA,UAAA,CAAA,KAAA;AACA,iBAAA,IAAA;AACA,SAJA,CAIA,OAAA,KAAA,EAAA;AACA,iBAAA,KAAA;AACA;AACA,OAVA;AAWA,MAAA,mBAXA,+BAWA,KAXA,EAWA;AACA,YAAA,KAAA,EAAA;AACA,iBAAA,KAAA,CAAA,UAAA,CAAA,UAAA,KAAA,KAAA,CAAA,UAAA,CAAA,SAAA,CAAA;AACA;;AACA,eAAA,KAAA;AACA;AAhBA,KAVA;AA4BA,IAAA,UAAA,EAAA;AACA,MAAA,QAAA,EAAA;AADA,KA5BA;AA+BA,IAAA,aAAA,EAAA;AACA,MAAA,QAAA,EAAA;AADA;AA/BA,GAzBA;AA4DA,EAAA,QAAA,kCACA,UAAA,CAAA;AACA,IAAA,OAAA,EAAA,sBADA;AAEA,IAAA,OAAA,EAAA;AAFA,GAAA,CADA;AAKA,IAAA,OALA,qBAKA;AACA,UAAA,KAAA,aAAA,EAAA;AACA,eAAA,KAAA,MAAA,CAAA,OAAA,CAAA,2BAAA,CAAA;AACA;;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,uBAAA,CAAA;AACA,KAVA;AAWA,IAAA,SAXA,uBAWA;AACA,uBAAA,KAAA,EAAA,CAAA,qBAAA,CAAA,gBACA,KAAA,gBAAA,CAAA,KADA;AAGA,KAfA;AAgBA,IAAA,iBAhBA,+BAgBA;AACA,cACA;AACA,QAAA,EAAA,EAAA,CADA;AAEA,QAAA,IAAA,EAAA;AAFA,OADA,4BAKA,KAAA,UALA;AAOA;AAxBA,IA5DA;AAsFA,EAAA,OAtFA,qBAsFA;AACA,SAAA,aAAA;AACA,GAxFA;AAyFA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,WAAA,KAAA,CAAA,UAAA;AACA,KAHA;AAKA,IAAA,gBALA,8BAKA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,kBAAA,EAAA;AACA,kBAAA,OAAA,EAAA,KAAA,CAAA;AADA,iBAAA,CAFA;;AAAA;AAEA,gBAAA,QAFA;AAMA,gBAAA,YANA,GAOA,QAPA,CAMA,IANA,CAMA,OANA;AAQA,gBAAA,KAAA,CAAA,UAAA,GAAA,YAAA;AARA;AAAA;;AAAA;AAAA;AAAA;AAUA,gBAAA,YAVA,GAWA,0FAAA,QAAA,oEAAA,OAAA,KAAA,KAAA,CAAA,EAAA,CAAA,gCAAA,CAXA;;AAYA,gBAAA,KAAA,CAAA,SAAA,CAAA,YAAA;;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA,KAnBA;AAoBA,IAAA,aApBA,2BAoBA;AACA,WAAA,gBAAA;AACA,KAtBA;AAuBA,IAAA,aAvBA,2BAuBA;AACA,kCAQA,KAAA,gBARA;AAAA,UACA,KADA,yBACA,KADA;AAAA,UAEA,OAFA,yBAEA,OAFA;AAAA,UAGA,OAHA,yBAGA,OAHA;AAAA,UAIA,8BAJA,yBAIA,kCAJA;AAAA,UAKA,OALA,yBAKA,KALA,CAKA,EALA;AAAA,yDAMA,aANA;AAAA,UAMA,QANA,0BAMA,GANA;AAAA,UAMA,UANA,0BAMA,YANA;AAAA,UAOA,MAPA,yBAOA,MAPA;AASA,WAAA,KAAA,GAAA,KAAA;AACA,WAAA,OAAA,GAAA,OAAA;AACA,WAAA,QAAA,GAAA,QAAA;AACA,WAAA,UAAA,GAAA,UAAA;AACA,WAAA,aAAA,GAAA,OAAA;AACA,WAAA,8BAAA,GAAA,8BAAA;AACA,WAAA,cAAA,GAAA,MAAA,IAAA,MAAA,CAAA,EAAA,IAAA,CAAA;AACA,WAAA,OAAA,GAAA,OAAA;AACA,WAAA,gBAAA;AACA,KA1CA;AA2CA,IAAA,YA3CA,0BA2CA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MAAA,CAAA,EAAA,CAAA,MAAA;;AADA,qBAEA,MAAA,CAAA,EAAA,CAAA,QAFA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA,uBAMA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,kBAAA,EAAA;AACA,kBAAA,EAAA,EAAA,MAAA,CAAA,gBAAA,CAAA,EADA;AAEA,kBAAA,KAAA,EAAA,MAAA,CAAA,KAFA;AAGA,kBAAA,OAAA,EAAA,MAAA,CAAA,OAHA;AAIA,kBAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,OAJA;AAKA,kBAAA,kCAAA,EACA;AACA,kBAAA,MAAA,CAAA,8BAPA;AAQA,kBAAA,SAAA,EAAA,MAAA,CAAA,cAAA,IAAA,IARA;AASA,kBAAA,OAAA,EAAA,MAAA,CAAA,OATA;AAUA,kBAAA,aAAA,EAAA;AACA,oBAAA,GAAA,EAAA,MAAA,CAAA,QADA;AAEA,oBAAA,YAAA,EAAA,MAAA,CAAA;AAFA;AAVA,iBAAA,CANA;;AAAA;AAqBA,gBAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,EAAA,CAAA,mCAAA,CAAA;;AACA,gBAAA,MAAA,CAAA,OAAA;;AAtBA;AAAA;;AAAA;AAAA;AAAA;;AAwBA,gBAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,EAAA,CAAA,iCAAA,CAAA;;AAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0BA;AArEA;AAzFA,CAAA","sourcesContent":["<template>\n  <div class=\"column content-box\">\n    <woot-modal-header :header-title=\"pageTitle\" />\n    <form class=\"row\" @submit.prevent=\"editCampaign\">\n      <div class=\"medium-12 columns\">\n        <woot-input\n          v-model=\"title\"\n          :label=\"$t('CAMPAIGN.ADD.FORM.TITLE.LABEL')\"\n          type=\"text\"\n          :class=\"{ error: $v.title.$error }\"\n          :error=\"$v.title.$error ? $t('CAMPAIGN.ADD.FORM.TITLE.ERROR') : ''\"\n          :placeholder=\"$t('CAMPAIGN.ADD.FORM.TITLE.PLACEHOLDER')\"\n          @blur=\"$v.title.$touch\"\n        />\n        <label class=\"editor-wrap\">\n          {{ $t('CAMPAIGN.ADD.FORM.MESSAGE.LABEL') }}\n          <woot-message-editor\n            v-model.trim=\"message\"\n            class=\"message-editor\"\n            :is-format-mode=\"true\"\n            :class=\"{ editor_warning: $v.message.$error }\"\n            :placeholder=\"$t('CAMPAIGN.ADD.FORM.MESSAGE.PLACEHOLDER')\"\n            @input=\"$v.message.$touch\"\n          />\n          <span v-if=\"$v.message.$error\" class=\"editor-warning__message\">\n            {{ $t('CAMPAIGN.ADD.FORM.MESSAGE.ERROR') }}\n          </span>\n        </label>\n\n        <label :class=\"{ error: $v.selectedInbox.$error }\">\n          {{ $t('CAMPAIGN.ADD.FORM.INBOX.LABEL') }}\n          <select v-model=\"selectedInbox\" @change=\"onChangeInbox($event)\">\n            <option v-for=\"item in inboxes\" :key=\"item.id\" :value=\"item.id\">\n              {{ item.name }}\n            </option>\n          </select>\n          <span v-if=\"$v.selectedInbox.$error\" class=\"message\">\n            {{ $t('CAMPAIGN.ADD.FORM.INBOX.ERROR') }}\n          </span>\n        </label>\n\n        <label :class=\"{ error: $v.selectedSender.$error }\">\n          {{ $t('CAMPAIGN.ADD.FORM.SENT_BY.LABEL') }}\n          <select v-model=\"selectedSender\">\n            <option\n              v-for=\"sender in sendersAndBotList\"\n              :key=\"sender.name\"\n              :value=\"sender.id\"\n            >\n              {{ sender.name }}\n            </option>\n          </select>\n          <span v-if=\"$v.selectedSender.$error\" class=\"message\">\n            {{ $t('CAMPAIGN.ADD.FORM.SENT_BY.ERROR') }}\n          </span>\n        </label>\n        <woot-input\n          v-model=\"endPoint\"\n          :label=\"$t('CAMPAIGN.ADD.FORM.END_POINT.LABEL')\"\n          type=\"text\"\n          :class=\"{ error: $v.endPoint.$error }\"\n          :error=\"\n            $v.endPoint.$error ? $t('CAMPAIGN.ADD.FORM.END_POINT.ERROR') : ''\n          \"\n          :placeholder=\"$t('CAMPAIGN.ADD.FORM.END_POINT.PLACEHOLDER')\"\n          @blur=\"$v.endPoint.$touch\"\n        />\n        <woot-input\n          v-model=\"timeOnPage\"\n          :label=\"$t('CAMPAIGN.ADD.FORM.TIME_ON_PAGE.LABEL')\"\n          type=\"text\"\n          :class=\"{ error: $v.timeOnPage.$error }\"\n          :error=\"\n            $v.timeOnPage.$error\n              ? $t('CAMPAIGN.ADD.FORM.TIME_ON_PAGE.ERROR')\n              : ''\n          \"\n          :placeholder=\"$t('CAMPAIGN.ADD.FORM.TIME_ON_PAGE.PLACEHOLDER')\"\n          @blur=\"$v.timeOnPage.$touch\"\n        />\n        <label>\n          <input\n            v-model=\"enabled\"\n            type=\"checkbox\"\n            value=\"enabled\"\n            name=\"enabled\"\n          />\n          {{ $t('CAMPAIGN.ADD.FORM.ENABLED') }}\n        </label>\n        <label v-if=\"isOngoingType\">\n          <input\n            v-model=\"triggerOnlyDuringBusinessHours\"\n            type=\"checkbox\"\n            value=\"triggerOnlyDuringBusinessHours\"\n            name=\"triggerOnlyDuringBusinessHours\"\n          />\n          {{ $t('CAMPAIGN.ADD.FORM.TRIGGER_ONLY_BUSINESS_HOURS') }}\n        </label>\n      </div>\n      <div class=\"modal-footer\">\n        <woot-button :is-loading=\"uiFlags.isCreating\">\n          {{ $t('CAMPAIGN.EDIT.UPDATE_BUTTON_TEXT') }}\n        </woot-button>\n        <woot-button variant=\"clear\" @click.prevent=\"onClose\">\n          {{ $t('CAMPAIGN.ADD.CANCEL_BUTTON_TEXT') }}\n        </woot-button>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport { required } from 'vuelidate/lib/validators';\nimport WootMessageEditor from 'dashboard/components/widgets/WootWriter/Editor';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport campaignMixin from 'shared/mixins/campaignMixin';\nimport { URLPattern } from 'urlpattern-polyfill';\n\nexport default {\n  components: {\n    WootMessageEditor,\n  },\n  mixins: [alertMixin, campaignMixin],\n  props: {\n    selectedCampaign: {\n      type: Object,\n      default: () => {},\n    },\n  },\n  data() {\n    return {\n      title: '',\n      message: '',\n      selectedSender: '',\n      selectedInbox: null,\n      endPoint: '',\n      timeOnPage: 10,\n      triggerOnlyDuringBusinessHours: false,\n      show: true,\n      enabled: true,\n      senderList: [],\n    };\n  },\n  validations: {\n    title: {\n      required,\n    },\n    message: {\n      required,\n    },\n    selectedSender: {\n      required,\n    },\n    endPoint: {\n      required,\n      shouldBeAValidURLPattern(value) {\n        try {\n          // eslint-disable-next-line\n          new URLPattern(value);\n          return true;\n        } catch (error) {\n          return false;\n        }\n      },\n      shouldStartWithHTTP(value) {\n        if (value) {\n          return value.startsWith('https://') || value.startsWith('http://');\n        }\n        return false;\n      },\n    },\n    timeOnPage: {\n      required,\n    },\n    selectedInbox: {\n      required,\n    },\n  },\n  computed: {\n    ...mapGetters({\n      uiFlags: 'campaigns/getUIFlags',\n      inboxes: 'inboxes/getTwilioInboxes',\n    }),\n    inboxes() {\n      if (this.isOngoingType) {\n        return this.$store.getters['inboxes/getWebsiteInboxes'];\n      }\n      return this.$store.getters['inboxes/getSMSInboxes'];\n    },\n    pageTitle() {\n      return `${this.$t('CAMPAIGN.EDIT.TITLE')} - ${\n        this.selectedCampaign.title\n      }`;\n    },\n    sendersAndBotList() {\n      return [\n        {\n          id: 0,\n          name: 'Bot',\n        },\n        ...this.senderList,\n      ];\n    },\n  },\n  mounted() {\n    this.setFormValues();\n  },\n  methods: {\n    onClose() {\n      this.$emit('on-close');\n    },\n\n    async loadInboxMembers() {\n      try {\n        const response = await this.$store.dispatch('inboxMembers/get', {\n          inboxId: this.selectedInbox,\n        });\n        const {\n          data: { payload: inboxMembers },\n        } = response;\n        this.senderList = inboxMembers;\n      } catch (error) {\n        const errorMessage =\n          error?.response?.message || this.$t('CAMPAIGN.ADD.API.ERROR_MESSAGE');\n        this.showAlert(errorMessage);\n      }\n    },\n    onChangeInbox() {\n      this.loadInboxMembers();\n    },\n    setFormValues() {\n      const {\n        title,\n        message,\n        enabled,\n        trigger_only_during_business_hours: triggerOnlyDuringBusinessHours,\n        inbox: { id: inboxId },\n        trigger_rules: { url: endPoint, time_on_page: timeOnPage },\n        sender,\n      } = this.selectedCampaign;\n      this.title = title;\n      this.message = message;\n      this.endPoint = endPoint;\n      this.timeOnPage = timeOnPage;\n      this.selectedInbox = inboxId;\n      this.triggerOnlyDuringBusinessHours = triggerOnlyDuringBusinessHours;\n      this.selectedSender = (sender && sender.id) || 0;\n      this.enabled = enabled;\n      this.loadInboxMembers();\n    },\n    async editCampaign() {\n      this.$v.$touch();\n      if (this.$v.$invalid) {\n        return;\n      }\n      try {\n        await this.$store.dispatch('campaigns/update', {\n          id: this.selectedCampaign.id,\n          title: this.title,\n          message: this.message,\n          inbox_id: this.$route.params.inboxId,\n          trigger_only_during_business_hours:\n            // eslint-disable-next-line prettier/prettier\n            this.triggerOnlyDuringBusinessHours,\n          sender_id: this.selectedSender || null,\n          enabled: this.enabled,\n          trigger_rules: {\n            url: this.endPoint,\n            time_on_page: this.timeOnPage,\n          },\n        });\n        this.showAlert(this.$t('CAMPAIGN.EDIT.API.SUCCESS_MESSAGE'));\n        this.onClose();\n      } catch (error) {\n        this.showAlert(this.$t('CAMPAIGN.EDIT.API.ERROR_MESSAGE'));\n      }\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n::v-deep .ProseMirror-woot-style {\n  height: 8rem;\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/settings/campaigns"},"metadata":{},"sourceType":"module"}