{"ast":null,"code":"import \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport { DEFAULT_REDIRECT_URL } from '../constants';\nexport var frontendURL = function frontendURL(path, params) {\n  var stringifiedParams = params ? \"?\".concat(new URLSearchParams(params)) : '';\n  return \"/app/\".concat(path).concat(stringifiedParams);\n};\n\nvar getSSOAccountPath = function getSSOAccountPath(_ref) {\n  var ssoAccountId = _ref.ssoAccountId,\n      user = _ref.user;\n\n  var _ref2 = user || {},\n      _ref2$accounts = _ref2.accounts,\n      accounts = _ref2$accounts === void 0 ? [] : _ref2$accounts,\n      _ref2$account_id = _ref2.account_id,\n      account_id = _ref2$account_id === void 0 ? null : _ref2$account_id;\n\n  var ssoAccount = accounts.find(function (account) {\n    return account.id === Number(ssoAccountId);\n  });\n  var accountPath = '';\n\n  if (ssoAccount) {\n    accountPath = \"accounts/\".concat(ssoAccountId);\n  } else if (accounts.length) {\n    // If the account id is not found, redirect to the first account\n    var accountId = account_id || accounts[0].id;\n    accountPath = \"accounts/\".concat(accountId);\n  }\n\n  return accountPath;\n};\n\nexport var getLoginRedirectURL = function getLoginRedirectURL(_ref3) {\n  var ssoAccountId = _ref3.ssoAccountId,\n      ssoConversationId = _ref3.ssoConversationId,\n      user = _ref3.user;\n  var accountPath = getSSOAccountPath({\n    ssoAccountId: ssoAccountId,\n    user: user\n  });\n\n  if (accountPath) {\n    if (ssoConversationId) {\n      return frontendURL(\"\".concat(accountPath, \"/conversations/\").concat(ssoConversationId));\n    }\n\n    return frontendURL(\"\".concat(accountPath, \"/dashboard\"));\n  }\n\n  return DEFAULT_REDIRECT_URL;\n};\nexport var conversationUrl = function conversationUrl(_ref4) {\n  var accountId = _ref4.accountId,\n      activeInbox = _ref4.activeInbox,\n      id = _ref4.id,\n      label = _ref4.label,\n      teamId = _ref4.teamId,\n      _ref4$conversationTyp = _ref4.conversationType,\n      conversationType = _ref4$conversationTyp === void 0 ? '' : _ref4$conversationTyp,\n      foldersId = _ref4.foldersId;\n  var url = \"accounts/\".concat(accountId, \"/conversations/\").concat(id);\n\n  if (activeInbox) {\n    url = \"accounts/\".concat(accountId, \"/inbox/\").concat(activeInbox, \"/conversations/\").concat(id);\n  } else if (label) {\n    url = \"accounts/\".concat(accountId, \"/label/\").concat(label, \"/conversations/\").concat(id);\n  } else if (teamId) {\n    url = \"accounts/\".concat(accountId, \"/team/\").concat(teamId, \"/conversations/\").concat(id);\n  } else if (foldersId && foldersId !== 0) {\n    url = \"accounts/\".concat(accountId, \"/custom_view/\").concat(foldersId, \"/conversations/\").concat(id);\n  } else if (conversationType === 'mention') {\n    url = \"accounts/\".concat(accountId, \"/mentions/conversations/\").concat(id);\n  } else if (conversationType === 'unattended') {\n    url = \"accounts/\".concat(accountId, \"/unattended/conversations/\").concat(id);\n  }\n\n  return url;\n};\nexport var conversationListPageURL = function conversationListPageURL(_ref5) {\n  var accountId = _ref5.accountId,\n      _ref5$conversationTyp = _ref5.conversationType,\n      conversationType = _ref5$conversationTyp === void 0 ? '' : _ref5$conversationTyp,\n      inboxId = _ref5.inboxId,\n      label = _ref5.label,\n      teamId = _ref5.teamId,\n      customViewId = _ref5.customViewId;\n  var url = \"accounts/\".concat(accountId, \"/dashboard\");\n\n  if (label) {\n    url = \"accounts/\".concat(accountId, \"/label/\").concat(label);\n  } else if (teamId) {\n    url = \"accounts/\".concat(accountId, \"/team/\").concat(teamId);\n  } else if (inboxId) {\n    url = \"accounts/\".concat(accountId, \"/inbox/\").concat(inboxId);\n  } else if (customViewId) {\n    url = \"accounts/\".concat(accountId, \"/custom_view/\").concat(customViewId);\n  } else if (conversationType) {\n    var urlMap = {\n      mention: 'mentions/conversations',\n      unattended: 'unattended/conversations'\n    };\n    url = \"accounts/\".concat(accountId, \"/\").concat(urlMap[conversationType]);\n  }\n\n  return frontendURL(url);\n};\nexport var isValidURL = function isValidURL(value) {\n  /* eslint-disable no-useless-escape */\n  var URL_REGEX = /^https?:\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)$/gm;\n  return URL_REGEX.test(value);\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/helper/URLHelper.js"],"names":["DEFAULT_REDIRECT_URL","frontendURL","path","params","stringifiedParams","URLSearchParams","getSSOAccountPath","ssoAccountId","user","accounts","account_id","ssoAccount","find","account","id","Number","accountPath","length","accountId","getLoginRedirectURL","ssoConversationId","conversationUrl","activeInbox","label","teamId","conversationType","foldersId","url","conversationListPageURL","inboxId","customViewId","urlMap","mention","unattended","isValidURL","value","URL_REGEX","test"],"mappings":";;;;;;;;AAAA,SAASA,oBAAT,QAAqC,cAArC;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAOC,MAAP,EAAkB;AAC3C,MAAMC,iBAAiB,GAAGD,MAAM,cAAO,IAAIE,eAAJ,CAAoBF,MAApB,CAAP,IAAuC,EAAvE;AACA,wBAAeD,IAAf,SAAsBE,iBAAtB;AACD,CAHM;;AAKP,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB,OAA4B;AAAA,MAAzBC,YAAyB,QAAzBA,YAAyB;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AACpD,cAA6CA,IAAI,IAAI,EAArD;AAAA,6BAAQC,QAAR;AAAA,MAAQA,QAAR,+BAAmB,EAAnB;AAAA,+BAAuBC,UAAvB;AAAA,MAAuBA,UAAvB,iCAAoC,IAApC;;AACA,MAAMC,UAAU,GAAGF,QAAQ,CAACG,IAAT,CACjB,UAAAC,OAAO;AAAA,WAAIA,OAAO,CAACC,EAAR,KAAeC,MAAM,CAACR,YAAD,CAAzB;AAAA,GADU,CAAnB;AAGA,MAAIS,WAAW,GAAG,EAAlB;;AACA,MAAIL,UAAJ,EAAgB;AACdK,IAAAA,WAAW,sBAAeT,YAAf,CAAX;AACD,GAFD,MAEO,IAAIE,QAAQ,CAACQ,MAAb,EAAqB;AAC1B;AACA,QAAMC,SAAS,GAAGR,UAAU,IAAID,QAAQ,CAAC,CAAD,CAAR,CAAYK,EAA5C;AACAE,IAAAA,WAAW,sBAAeE,SAAf,CAAX;AACD;;AACD,SAAOF,WAAP;AACD,CAdD;;AAgBA,OAAO,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB,QAI7B;AAAA,MAHJZ,YAGI,SAHJA,YAGI;AAAA,MAFJa,iBAEI,SAFJA,iBAEI;AAAA,MADJZ,IACI,SADJA,IACI;AACJ,MAAMQ,WAAW,GAAGV,iBAAiB,CAAC;AAAEC,IAAAA,YAAY,EAAZA,YAAF;AAAgBC,IAAAA,IAAI,EAAJA;AAAhB,GAAD,CAArC;;AACA,MAAIQ,WAAJ,EAAiB;AACf,QAAII,iBAAJ,EAAuB;AACrB,aAAOnB,WAAW,WAAIe,WAAJ,4BAAiCI,iBAAjC,EAAlB;AACD;;AACD,WAAOnB,WAAW,WAAIe,WAAJ,gBAAlB;AACD;;AACD,SAAOhB,oBAAP;AACD,CAbM;AAeP,OAAO,IAAMqB,eAAe,GAAG,SAAlBA,eAAkB,QAQzB;AAAA,MAPJH,SAOI,SAPJA,SAOI;AAAA,MANJI,WAMI,SANJA,WAMI;AAAA,MALJR,EAKI,SALJA,EAKI;AAAA,MAJJS,KAII,SAJJA,KAII;AAAA,MAHJC,MAGI,SAHJA,MAGI;AAAA,oCAFJC,gBAEI;AAAA,MAFJA,gBAEI,sCAFe,EAEf;AAAA,MADJC,SACI,SADJA,SACI;AACJ,MAAIC,GAAG,sBAAeT,SAAf,4BAA0CJ,EAA1C,CAAP;;AACA,MAAIQ,WAAJ,EAAiB;AACfK,IAAAA,GAAG,sBAAeT,SAAf,oBAAkCI,WAAlC,4BAA+DR,EAA/D,CAAH;AACD,GAFD,MAEO,IAAIS,KAAJ,EAAW;AAChBI,IAAAA,GAAG,sBAAeT,SAAf,oBAAkCK,KAAlC,4BAAyDT,EAAzD,CAAH;AACD,GAFM,MAEA,IAAIU,MAAJ,EAAY;AACjBG,IAAAA,GAAG,sBAAeT,SAAf,mBAAiCM,MAAjC,4BAAyDV,EAAzD,CAAH;AACD,GAFM,MAEA,IAAIY,SAAS,IAAIA,SAAS,KAAK,CAA/B,EAAkC;AACvCC,IAAAA,GAAG,sBAAeT,SAAf,0BAAwCQ,SAAxC,4BAAmEZ,EAAnE,CAAH;AACD,GAFM,MAEA,IAAIW,gBAAgB,KAAK,SAAzB,EAAoC;AACzCE,IAAAA,GAAG,sBAAeT,SAAf,qCAAmDJ,EAAnD,CAAH;AACD,GAFM,MAEA,IAAIW,gBAAgB,KAAK,YAAzB,EAAuC;AAC5CE,IAAAA,GAAG,sBAAeT,SAAf,uCAAqDJ,EAArD,CAAH;AACD;;AACD,SAAOa,GAAP;AACD,CAxBM;AA0BP,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,QAOjC;AAAA,MANJV,SAMI,SANJA,SAMI;AAAA,oCALJO,gBAKI;AAAA,MALJA,gBAKI,sCALe,EAKf;AAAA,MAJJI,OAII,SAJJA,OAII;AAAA,MAHJN,KAGI,SAHJA,KAGI;AAAA,MAFJC,MAEI,SAFJA,MAEI;AAAA,MADJM,YACI,SADJA,YACI;AACJ,MAAIH,GAAG,sBAAeT,SAAf,eAAP;;AACA,MAAIK,KAAJ,EAAW;AACTI,IAAAA,GAAG,sBAAeT,SAAf,oBAAkCK,KAAlC,CAAH;AACD,GAFD,MAEO,IAAIC,MAAJ,EAAY;AACjBG,IAAAA,GAAG,sBAAeT,SAAf,mBAAiCM,MAAjC,CAAH;AACD,GAFM,MAEA,IAAIK,OAAJ,EAAa;AAClBF,IAAAA,GAAG,sBAAeT,SAAf,oBAAkCW,OAAlC,CAAH;AACD,GAFM,MAEA,IAAIC,YAAJ,EAAkB;AACvBH,IAAAA,GAAG,sBAAeT,SAAf,0BAAwCY,YAAxC,CAAH;AACD,GAFM,MAEA,IAAIL,gBAAJ,EAAsB;AAC3B,QAAMM,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE,wBADI;AAEbC,MAAAA,UAAU,EAAE;AAFC,KAAf;AAIAN,IAAAA,GAAG,sBAAeT,SAAf,cAA4Ba,MAAM,CAACN,gBAAD,CAAlC,CAAH;AACD;;AACD,SAAOxB,WAAW,CAAC0B,GAAD,CAAlB;AACD,CAzBM;AA2BP,OAAO,IAAMO,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AACjC;AACA,MAAMC,SAAS,GAAG,6GAAlB;AACA,SAAOA,SAAS,CAACC,IAAV,CAAeF,KAAf,CAAP;AACD,CAJM","sourcesContent":["import { DEFAULT_REDIRECT_URL } from '../constants';\n\nexport const frontendURL = (path, params) => {\n  const stringifiedParams = params ? `?${new URLSearchParams(params)}` : '';\n  return `/app/${path}${stringifiedParams}`;\n};\n\nconst getSSOAccountPath = ({ ssoAccountId, user }) => {\n  const { accounts = [], account_id = null } = user || {};\n  const ssoAccount = accounts.find(\n    account => account.id === Number(ssoAccountId)\n  );\n  let accountPath = '';\n  if (ssoAccount) {\n    accountPath = `accounts/${ssoAccountId}`;\n  } else if (accounts.length) {\n    // If the account id is not found, redirect to the first account\n    const accountId = account_id || accounts[0].id;\n    accountPath = `accounts/${accountId}`;\n  }\n  return accountPath;\n};\n\nexport const getLoginRedirectURL = ({\n  ssoAccountId,\n  ssoConversationId,\n  user,\n}) => {\n  const accountPath = getSSOAccountPath({ ssoAccountId, user });\n  if (accountPath) {\n    if (ssoConversationId) {\n      return frontendURL(`${accountPath}/conversations/${ssoConversationId}`);\n    }\n    return frontendURL(`${accountPath}/dashboard`);\n  }\n  return DEFAULT_REDIRECT_URL;\n};\n\nexport const conversationUrl = ({\n  accountId,\n  activeInbox,\n  id,\n  label,\n  teamId,\n  conversationType = '',\n  foldersId,\n}) => {\n  let url = `accounts/${accountId}/conversations/${id}`;\n  if (activeInbox) {\n    url = `accounts/${accountId}/inbox/${activeInbox}/conversations/${id}`;\n  } else if (label) {\n    url = `accounts/${accountId}/label/${label}/conversations/${id}`;\n  } else if (teamId) {\n    url = `accounts/${accountId}/team/${teamId}/conversations/${id}`;\n  } else if (foldersId && foldersId !== 0) {\n    url = `accounts/${accountId}/custom_view/${foldersId}/conversations/${id}`;\n  } else if (conversationType === 'mention') {\n    url = `accounts/${accountId}/mentions/conversations/${id}`;\n  } else if (conversationType === 'unattended') {\n    url = `accounts/${accountId}/unattended/conversations/${id}`;\n  }\n  return url;\n};\n\nexport const conversationListPageURL = ({\n  accountId,\n  conversationType = '',\n  inboxId,\n  label,\n  teamId,\n  customViewId,\n}) => {\n  let url = `accounts/${accountId}/dashboard`;\n  if (label) {\n    url = `accounts/${accountId}/label/${label}`;\n  } else if (teamId) {\n    url = `accounts/${accountId}/team/${teamId}`;\n  } else if (inboxId) {\n    url = `accounts/${accountId}/inbox/${inboxId}`;\n  } else if (customViewId) {\n    url = `accounts/${accountId}/custom_view/${customViewId}`;\n  } else if (conversationType) {\n    const urlMap = {\n      mention: 'mentions/conversations',\n      unattended: 'unattended/conversations',\n    };\n    url = `accounts/${accountId}/${urlMap[conversationType]}`;\n  }\n  return frontendURL(url);\n};\n\nexport const isValidURL = value => {\n  /* eslint-disable no-useless-escape */\n  const URL_REGEX = /^https?:\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)$/gm;\n  return URL_REGEX.test(value);\n};\n"]},"metadata":{},"sourceType":"module"}