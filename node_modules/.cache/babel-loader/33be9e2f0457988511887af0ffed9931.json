{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport ContactInfoPanel from '../components/ContactInfoPanel.vue';\nimport ContactNotes from 'dashboard/modules/notes/NotesOnContactPage';\nimport SettingsHeader from '../../settings/SettingsHeader.vue';\nimport Spinner from 'shared/components/Spinner';\nimport Thumbnail from 'dashboard/components/widgets/Thumbnail';\nexport default {\n  components: {\n    ContactInfoPanel: ContactInfoPanel,\n    ContactNotes: ContactNotes,\n    SettingsHeader: SettingsHeader,\n    Spinner: Spinner,\n    Thumbnail: Thumbnail\n  },\n  props: {\n    contactId: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      selectedTabIndex: 0\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    uiFlags: 'contacts/getUIFlags'\n  })), {}, {\n    tabs: function tabs() {\n      return [{\n        key: 0,\n        name: this.$t('NOTES.HEADER.TITLE')\n      }];\n    },\n    showEmptySearchResult: function showEmptySearchResult() {\n      var hasEmptyResults = !!this.searchQuery && this.records.length === 0;\n      return hasEmptyResults;\n    },\n    contact: function contact() {\n      return this.$store.getters['contacts/getContact'](this.contactId);\n    },\n    backUrl: function backUrl() {\n      return \"/app/accounts/\".concat(this.$route.params.accountId, \"/contacts\");\n    }\n  }),\n  mounted: function mounted() {\n    this.fetchContactDetails();\n  },\n  methods: {\n    onClickTabChange: function onClickTabChange(index) {\n      this.selectedTabIndex = index;\n    },\n    fetchContactDetails: function fetchContactDetails() {\n      var id = this.contactId;\n      this.$store.dispatch('contacts/show', {\n        id: id\n      });\n    }\n  }\n};","map":{"version":3,"sources":["ContactManageView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,gBAAA,MAAA,oCAAA;AACA,OAAA,YAAA,MAAA,4CAAA;AACA,OAAA,cAAA,MAAA,mCAAA;AACA,OAAA,OAAA,MAAA,2BAAA;AACA,OAAA,SAAA,MAAA,wCAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,gBAAA,EAAA,gBADA;AAEA,IAAA,YAAA,EAAA,YAFA;AAGA,IAAA,cAAA,EAAA,cAHA;AAIA,IAAA,OAAA,EAAA,OAJA;AAKA,IAAA,SAAA,EAAA;AALA,GADA;AAQA,EAAA,KAAA,EAAA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CADA;AAEA,MAAA,QAAA,EAAA;AAFA;AADA,GARA;AAcA,EAAA,IAdA,kBAcA;AACA,WAAA;AACA,MAAA,gBAAA,EAAA;AADA,KAAA;AAGA,GAlBA;AAmBA,EAAA,QAAA,kCACA,UAAA,CAAA;AACA,IAAA,OAAA,EAAA;AADA,GAAA,CADA;AAIA,IAAA,IAJA,kBAIA;AACA,aAAA,CACA;AACA,QAAA,GAAA,EAAA,CADA;AAEA,QAAA,IAAA,EAAA,KAAA,EAAA,CAAA,oBAAA;AAFA,OADA,CAAA;AAMA,KAXA;AAYA,IAAA,qBAZA,mCAYA;AACA,UAAA,eAAA,GAAA,CAAA,CAAA,KAAA,WAAA,IAAA,KAAA,OAAA,CAAA,MAAA,KAAA,CAAA;AACA,aAAA,eAAA;AACA,KAfA;AAgBA,IAAA,OAhBA,qBAgBA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,qBAAA,EAAA,KAAA,SAAA,CAAA;AACA,KAlBA;AAmBA,IAAA,OAnBA,qBAmBA;AACA,qCAAA,KAAA,MAAA,CAAA,MAAA,CAAA,SAAA;AACA;AArBA,IAnBA;AA0CA,EAAA,OA1CA,qBA0CA;AACA,SAAA,mBAAA;AACA,GA5CA;AA6CA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,4BACA,KADA,EACA;AACA,WAAA,gBAAA,GAAA,KAAA;AACA,KAHA;AAIA,IAAA,mBAJA,iCAIA;AACA,UAAA,EAAA,GAAA,IAAA,CAAA,SAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,eAAA,EAAA;AAAA,QAAA,EAAA,EAAA;AAAA,OAAA;AACA;AAPA;AA7CA,CAAA","sourcesContent":["<template>\n  <div class=\"view-box columns bg-white\">\n    <settings-header\n      button-route=\"new\"\n      :header-title=\"contact.name\"\n      show-back-button\n      :back-button-label=\"$t('CONTACT_PROFILE.BACK_BUTTON')\"\n      :back-url=\"backUrl\"\n      :show-new-button=\"false\"\n    >\n      <thumbnail\n        v-if=\"contact.thumbnail\"\n        :src=\"contact.thumbnail\"\n        :username=\"contact.name\"\n        size=\"32px\"\n        class=\"margin-right-small\"\n      />\n    </settings-header>\n\n    <div\n      v-if=\"uiFlags.isFetchingItem\"\n      class=\"text-center p-normal fs-default h-full\"\n    >\n      <spinner size=\"\" />\n      <span>{{ $t('CONTACT_PROFILE.LOADING') }}</span>\n    </div>\n    <div\n      v-else-if=\"contact.id\"\n      class=\"overflow-hidden column contact--dashboard-content\"\n    >\n      <div class=\"row h-full\">\n        <contact-info-panel :show-avatar=\"false\" :contact=\"contact\" />\n        <div class=\"small-12 medium-9 h-full\">\n          <woot-tabs :index=\"selectedTabIndex\" @change=\"onClickTabChange\">\n            <woot-tabs-item\n              v-for=\"tab in tabs\"\n              :key=\"tab.key\"\n              :name=\"tab.name\"\n              :show-badge=\"false\"\n            />\n          </woot-tabs>\n          <div class=\"tab-content overflow-auto\">\n            <contact-notes\n              v-if=\"selectedTabIndex === 0\"\n              :contact-id=\"Number(contactId)\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport ContactInfoPanel from '../components/ContactInfoPanel.vue';\nimport ContactNotes from 'dashboard/modules/notes/NotesOnContactPage';\nimport SettingsHeader from '../../settings/SettingsHeader.vue';\nimport Spinner from 'shared/components/Spinner';\nimport Thumbnail from 'dashboard/components/widgets/Thumbnail';\n\nexport default {\n  components: {\n    ContactInfoPanel,\n    ContactNotes,\n    SettingsHeader,\n    Spinner,\n    Thumbnail,\n  },\n  props: {\n    contactId: {\n      type: [String, Number],\n      required: true,\n    },\n  },\n  data() {\n    return {\n      selectedTabIndex: 0,\n    };\n  },\n  computed: {\n    ...mapGetters({\n      uiFlags: 'contacts/getUIFlags',\n    }),\n    tabs() {\n      return [\n        {\n          key: 0,\n          name: this.$t('NOTES.HEADER.TITLE'),\n        },\n      ];\n    },\n    showEmptySearchResult() {\n      const hasEmptyResults = !!this.searchQuery && this.records.length === 0;\n      return hasEmptyResults;\n    },\n    contact() {\n      return this.$store.getters['contacts/getContact'](this.contactId);\n    },\n    backUrl() {\n      return `/app/accounts/${this.$route.params.accountId}/contacts`;\n    },\n  },\n  mounted() {\n    this.fetchContactDetails();\n  },\n  methods: {\n    onClickTabChange(index) {\n      this.selectedTabIndex = index;\n    },\n    fetchContactDetails() {\n      const { contactId: id } = this;\n      this.$store.dispatch('contacts/show', { id });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import '~dashboard/assets/scss/mixins';\n\n.left {\n  border-right: 1px solid var(--color-border);\n  overflow: auto;\n}\n\n.right {\n  padding: var(--space-normal);\n}\n\n.tab-content {\n  background: var(--color-background-light);\n  height: calc(100% - 40px);\n  padding: var(--space-normal);\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/contacts/pages"},"metadata":{},"sourceType":"module"}