{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"core-js/modules/es.number.constructor.js\";\nimport Vue from 'vue';\nimport * as types from '../mutation-types';\nvar state = {\n  records: {}\n};\nexport var getters = {\n  getConversationMetadata: function getConversationMetadata($state) {\n    return function (id) {\n      return $state.records[Number(id)] || {};\n    };\n  }\n};\nexport var actions = {};\nexport var mutations = _defineProperty({}, types.default.SET_CONVERSATION_METADATA, function ($state, _ref) {\n  var id = _ref.id,\n      data = _ref.data;\n  Vue.set($state.records, id, data);\n});\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/store/modules/conversationMetadata.js"],"names":["Vue","types","state","records","getters","getConversationMetadata","$state","id","Number","actions","mutations","default","SET_CONVERSATION_METADATA","data","set","namespaced"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAO,KAAKC,KAAZ,MAAuB,mBAAvB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,OAAO,EAAE;AADG,CAAd;AAIA,OAAO,IAAMC,OAAO,GAAG;AACrBC,EAAAA,uBAAuB,EAAE,iCAAAC,MAAM;AAAA,WAAI,UAAAC,EAAE,EAAI;AACvC,aAAOD,MAAM,CAACH,OAAP,CAAeK,MAAM,CAACD,EAAD,CAArB,KAA8B,EAArC;AACD,KAF8B;AAAA;AADV,CAAhB;AAMP,OAAO,IAAME,OAAO,GAAG,EAAhB;AAEP,OAAO,IAAMC,SAAS,uBACnBT,KAAK,CAACU,OAAN,CAAcC,yBADK,EACuB,UAACN,MAAD,QAA0B;AAAA,MAAfC,EAAe,QAAfA,EAAe;AAAA,MAAXM,IAAW,QAAXA,IAAW;AACnEb,EAAAA,GAAG,CAACc,GAAJ,CAAQR,MAAM,CAACH,OAAf,EAAwBI,EAAxB,EAA4BM,IAA5B;AACD,CAHmB,CAAf;AAMP,eAAe;AACbE,EAAAA,UAAU,EAAE,IADC;AAEbb,EAAAA,KAAK,EAALA,KAFa;AAGbE,EAAAA,OAAO,EAAPA,OAHa;AAIbK,EAAAA,OAAO,EAAPA,OAJa;AAKbC,EAAAA,SAAS,EAATA;AALa,CAAf","sourcesContent":["import Vue from 'vue';\nimport * as types from '../mutation-types';\n\nconst state = {\n  records: {},\n};\n\nexport const getters = {\n  getConversationMetadata: $state => id => {\n    return $state.records[Number(id)] || {};\n  },\n};\n\nexport const actions = {};\n\nexport const mutations = {\n  [types.default.SET_CONVERSATION_METADATA]: ($state, { id, data }) => {\n    Vue.set($state.records, id, data);\n  },\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations,\n};\n"]},"metadata":{},"sourceType":"module"}