{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nexport var isPhoneE164 = function isPhoneE164(value) {\n  return !!value.match(/^\\+[1-9]\\d{1,14}$/);\n};\nexport var isPhoneE164OrEmpty = function isPhoneE164OrEmpty(value) {\n  return isPhoneE164(value) || value === '';\n};\nexport var shouldBeUrl = function shouldBeUrl() {\n  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return value ? value.startsWith('http') : true;\n};\nexport var isValidPassword = function isValidPassword(value) {\n  var containsUppercase = /[A-Z]/.test(value);\n  var containsLowercase = /[a-z]/.test(value);\n  var containsNumber = /[0-9]/.test(value);\n  var containsSpecialCharacter = /[!@#$%^&*()_+\\-=[\\]{}|'\"/\\\\.,`<>:;?~]/.test(value);\n  return containsUppercase && containsLowercase && containsNumber && containsSpecialCharacter;\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/shared/helpers/Validators.js"],"names":["isPhoneE164","value","match","isPhoneE164OrEmpty","shouldBeUrl","startsWith","isValidPassword","containsUppercase","test","containsLowercase","containsNumber","containsSpecialCharacter"],"mappings":";;;AAAA,OAAO,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK;AAAA,SAAI,CAAC,CAACA,KAAK,CAACC,KAAN,CAAY,mBAAZ,CAAN;AAAA,CAAzB;AACP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAF,KAAK;AAAA,SAAID,WAAW,CAACC,KAAD,CAAX,IAAsBA,KAAK,KAAK,EAApC;AAAA,CAAhC;AACP,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc;AAAA,MAACH,KAAD,uEAAS,EAAT;AAAA,SACzBA,KAAK,GAAGA,KAAK,CAACI,UAAN,CAAiB,MAAjB,CAAH,GAA8B,IADV;AAAA,CAApB;AAEP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAL,KAAK,EAAI;AACtC,MAAMM,iBAAiB,GAAG,QAAQC,IAAR,CAAaP,KAAb,CAA1B;AACA,MAAMQ,iBAAiB,GAAG,QAAQD,IAAR,CAAaP,KAAb,CAA1B;AACA,MAAMS,cAAc,GAAG,QAAQF,IAAR,CAAaP,KAAb,CAAvB;AACA,MAAMU,wBAAwB,GAAG,wCAAwCH,IAAxC,CAC/BP,KAD+B,CAAjC;AAGA,SACEM,iBAAiB,IACjBE,iBADA,IAEAC,cAFA,IAGAC,wBAJF;AAMD,CAbM","sourcesContent":["export const isPhoneE164 = value => !!value.match(/^\\+[1-9]\\d{1,14}$/);\nexport const isPhoneE164OrEmpty = value => isPhoneE164(value) || value === '';\nexport const shouldBeUrl = (value = '') =>\n  value ? value.startsWith('http') : true;\nexport const isValidPassword = value => {\n  const containsUppercase = /[A-Z]/.test(value);\n  const containsLowercase = /[a-z]/.test(value);\n  const containsNumber = /[0-9]/.test(value);\n  const containsSpecialCharacter = /[!@#$%^&*()_+\\-=[\\]{}|'\"/\\\\.,`<>:;?~]/.test(\n    value\n  );\n  return (\n    containsUppercase &&\n    containsLowercase &&\n    containsNumber &&\n    containsSpecialCharacter\n  );\n};\n"]},"metadata":{},"sourceType":"module"}