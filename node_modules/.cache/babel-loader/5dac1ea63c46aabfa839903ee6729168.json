{"ast":null,"code":"import \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.promise.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport SettingsSection from 'dashboard/components/SettingsSection';\nimport BusinessDay from './BusinessDay';\nimport { timeSlotParse, timeSlotTransform, defaultTimeSlot, timeZoneOptions } from '../helpers/businessHour';\nvar DEFAULT_TIMEZONE = {\n  label: 'America/Los_Angeles',\n  key: 'America/Los_Angeles'\n};\nexport default {\n  components: {\n    SettingsSection: SettingsSection,\n    BusinessDay: BusinessDay\n  },\n  mixins: [alertMixin],\n  props: {\n    inbox: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    return {\n      isBusinessHoursEnabled: false,\n      unavailableMessage: this.$t('INBOX_MGMT.BUSINESS_HOURS.UNAVAILABLE_MESSAGE_DEFAULT'),\n      timeZone: DEFAULT_TIMEZONE,\n      dayNames: {\n        0: 'Sunday',\n        1: 'Monday',\n        2: 'Tuesday',\n        3: 'Wednesday',\n        4: 'Thursday',\n        5: 'Friday',\n        6: 'Saturday'\n      },\n      timeSlots: _toConsumableArray(defaultTimeSlot)\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    uiFlags: 'inboxes/getUIFlags'\n  })), {}, {\n    hasError: function hasError() {\n      if (!this.isBusinessHoursEnabled) return false;\n      return this.timeSlots.filter(function (slot) {\n        return slot.from && !slot.valid;\n      }).length > 0;\n    },\n    timeZones: function timeZones() {\n      return _toConsumableArray(timeZoneOptions());\n    }\n  }),\n  watch: {\n    inbox: function inbox() {\n      this.setDefaults();\n    }\n  },\n  mounted: function mounted() {\n    this.setDefaults();\n  },\n  methods: {\n    setDefaults: function setDefaults() {\n      var _this$inbox = this.inbox,\n          _this$inbox$working_h = _this$inbox.working_hours_enabled,\n          isEnabled = _this$inbox$working_h === void 0 ? false : _this$inbox$working_h,\n          unavailableMessage = _this$inbox.out_of_office_message,\n          _this$inbox$working_h2 = _this$inbox.working_hours,\n          timeSlots = _this$inbox$working_h2 === void 0 ? [] : _this$inbox$working_h2,\n          timeZone = _this$inbox.timezone;\n      var slots = timeSlotParse(timeSlots).length ? timeSlotParse(timeSlots) : defaultTimeSlot;\n      this.isBusinessHoursEnabled = isEnabled;\n      this.unavailableMessage = unavailableMessage || this.$t('INBOX_MGMT.BUSINESS_HOURS.UNAVAILABLE_MESSAGE_DEFAULT');\n      this.timeSlots = slots;\n      this.timeZone = this.timeZones.find(function (item) {\n        return timeZone === item.value;\n      }) || DEFAULT_TIMEZONE;\n    },\n    onSlotUpdate: function onSlotUpdate(slotIndex, slotData) {\n      this.timeSlots = this.timeSlots.map(function (item) {\n        return item.day === slotIndex ? slotData : item;\n      });\n    },\n    updateInbox: function updateInbox() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var payload;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                payload = {\n                  id: _this.inbox.id,\n                  formData: false,\n                  working_hours_enabled: _this.isBusinessHoursEnabled,\n                  out_of_office_message: _this.unavailableMessage,\n                  working_hours: timeSlotTransform(_this.timeSlots),\n                  timezone: _this.timeZone.value,\n                  channel: {}\n                };\n                _context.next = 4;\n                return _this.$store.dispatch('inboxes/updateInbox', payload);\n\n              case 4:\n                _this.showAlert(_this.$t('INBOX_MGMT.EDIT.API.SUCCESS_MESSAGE'));\n\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n\n                _this.showAlert(_this.$t('INBOX_MGMT.EDIT.API.SUCCESS_MESSAGE'));\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"sources":["WeeklyAvailability.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"settings--content\">\n    <settings-section\n      :title=\"$t('INBOX_MGMT.BUSINESS_HOURS.TITLE')\"\n      :sub-title=\"$t('INBOX_MGMT.BUSINESS_HOURS.SUBTITLE')\"\n    >\n      <form @submit.prevent=\"updateInbox\">\n        <label for=\"toggle-business-hours\" class=\"toggle-input-wrap\">\n          <input\n            v-model=\"isBusinessHoursEnabled\"\n            type=\"checkbox\"\n            name=\"toggle-business-hours\"\n          />\n          {{ $t('INBOX_MGMT.BUSINESS_HOURS.TOGGLE_AVAILABILITY') }}\n        </label>\n        <p>{{ $t('INBOX_MGMT.BUSINESS_HOURS.TOGGLE_HELP') }}</p>\n        <div v-if=\"isBusinessHoursEnabled\" class=\"business-hours-wrap\">\n          <label class=\"unavailable-input-wrap\">\n            {{ $t('INBOX_MGMT.BUSINESS_HOURS.UNAVAILABLE_MESSAGE_LABEL') }}\n            <textarea v-model=\"unavailableMessage\" type=\"text\" />\n          </label>\n          <div class=\"timezone-input-wrap\">\n            <label>\n              {{ $t('INBOX_MGMT.BUSINESS_HOURS.TIMEZONE_LABEL') }}\n            </label>\n            <multiselect\n              v-model=\"timeZone\"\n              :options=\"timeZones\"\n              deselect-label=\"\"\n              select-label=\"\"\n              selected-label=\"\"\n              track-by=\"value\"\n              label=\"label\"\n              :close-on-select=\"true\"\n              :placeholder=\"$t('INBOX_MGMT.BUSINESS_HOURS.DAY.CHOOSE')\"\n              :allow-empty=\"false\"\n            />\n          </div>\n\n          <label>\n            {{ $t('INBOX_MGMT.BUSINESS_HOURS.WEEKLY_TITLE') }}\n          </label>\n          <business-day\n            v-for=\"timeSlot in timeSlots\"\n            :key=\"timeSlot.day\"\n            :day-name=\"dayNames[timeSlot.day]\"\n            :time-slot=\"timeSlot\"\n            @update=\"data => onSlotUpdate(timeSlot.day, data)\"\n          />\n        </div>\n        <woot-submit-button\n          :button-text=\"$t('INBOX_MGMT.BUSINESS_HOURS.UPDATE')\"\n          :loading=\"uiFlags.isUpdating\"\n          :disabled=\"hasError\"\n        />\n      </form>\n    </settings-section>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport SettingsSection from 'dashboard/components/SettingsSection';\nimport BusinessDay from './BusinessDay';\nimport {\n  timeSlotParse,\n  timeSlotTransform,\n  defaultTimeSlot,\n  timeZoneOptions,\n} from '../helpers/businessHour';\n\nconst DEFAULT_TIMEZONE = {\n  label: 'America/Los_Angeles',\n  key: 'America/Los_Angeles',\n};\n\nexport default {\n  components: {\n    SettingsSection,\n    BusinessDay,\n  },\n  mixins: [alertMixin],\n  props: {\n    inbox: {\n      type: Object,\n      default: () => ({}),\n    },\n  },\n  data() {\n    return {\n      isBusinessHoursEnabled: false,\n      unavailableMessage: this.$t(\n        'INBOX_MGMT.BUSINESS_HOURS.UNAVAILABLE_MESSAGE_DEFAULT'\n      ),\n      timeZone: DEFAULT_TIMEZONE,\n      dayNames: {\n        0: 'Sunday',\n        1: 'Monday',\n        2: 'Tuesday',\n        3: 'Wednesday',\n        4: 'Thursday',\n        5: 'Friday',\n        6: 'Saturday',\n      },\n      timeSlots: [...defaultTimeSlot],\n    };\n  },\n  computed: {\n    ...mapGetters({ uiFlags: 'inboxes/getUIFlags' }),\n    hasError() {\n      if (!this.isBusinessHoursEnabled) return false;\n      return this.timeSlots.filter(slot => slot.from && !slot.valid).length > 0;\n    },\n    timeZones() {\n      return [...timeZoneOptions()];\n    },\n  },\n  watch: {\n    inbox() {\n      this.setDefaults();\n    },\n  },\n  mounted() {\n    this.setDefaults();\n  },\n  methods: {\n    setDefaults() {\n      const {\n        working_hours_enabled: isEnabled = false,\n        out_of_office_message: unavailableMessage,\n        working_hours: timeSlots = [],\n        timezone: timeZone,\n      } = this.inbox;\n      const slots = timeSlotParse(timeSlots).length\n        ? timeSlotParse(timeSlots)\n        : defaultTimeSlot;\n      this.isBusinessHoursEnabled = isEnabled;\n      this.unavailableMessage =\n        unavailableMessage ||\n        this.$t('INBOX_MGMT.BUSINESS_HOURS.UNAVAILABLE_MESSAGE_DEFAULT');\n      this.timeSlots = slots;\n      this.timeZone =\n        this.timeZones.find(item => timeZone === item.value) ||\n        DEFAULT_TIMEZONE;\n    },\n    onSlotUpdate(slotIndex, slotData) {\n      this.timeSlots = this.timeSlots.map(item =>\n        item.day === slotIndex ? slotData : item\n      );\n    },\n    async updateInbox() {\n      try {\n        const payload = {\n          id: this.inbox.id,\n          formData: false,\n          working_hours_enabled: this.isBusinessHoursEnabled,\n          out_of_office_message: this.unavailableMessage,\n          working_hours: timeSlotTransform(this.timeSlots),\n          timezone: this.timeZone.value,\n          channel: {},\n        };\n        await this.$store.dispatch('inboxes/updateInbox', payload);\n        this.showAlert(this.$t('INBOX_MGMT.EDIT.API.SUCCESS_MESSAGE'));\n      } catch (error) {\n        this.showAlert(this.$t('INBOX_MGMT.EDIT.API.SUCCESS_MESSAGE'));\n      }\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n.timezone-input-wrap {\n  max-width: 60rem;\n\n  &::v-deep .multiselect {\n    margin-top: var(--space-small);\n  }\n}\n\n.unavailable-input-wrap {\n  max-width: 60rem;\n\n  textarea {\n    min-height: var(--space-jumbo);\n    margin-top: var(--space-small);\n  }\n}\n\n.business-hours-wrap {\n  margin-bottom: var(--space-medium);\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/settings/inbox/components"},"metadata":{},"sourceType":"module"}