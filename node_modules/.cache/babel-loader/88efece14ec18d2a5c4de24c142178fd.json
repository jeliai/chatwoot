{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport globalConfigMixin from 'shared/mixins/globalConfigMixin';\n\nvar _ref = window.globalConfig || {},\n    logoThumbnail = _ref.LOGO_THUMBNAIL,\n    brandName = _ref.BRAND_NAME,\n    widgetBrandURL = _ref.WIDGET_BRAND_URL;\n\nexport default {\n  mixins: [globalConfigMixin],\n  props: {\n    disableBranding: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      globalConfig: {\n        brandName: brandName,\n        logoThumbnail: logoThumbnail,\n        widgetBrandURL: widgetBrandURL\n      }\n    };\n  },\n  computed: {\n    brandRedirectURL: function brandRedirectURL() {\n      try {\n        var referrerHost = this.$store.getters['appConfig/getReferrerHost'];\n        var baseURL = \"jelibot.com\";\n\n        if (referrerHost) {\n          return \"\".concat(baseURL, \"&utm_referrer=\").concat(referrerHost);\n        }\n\n        return baseURL;\n      } catch (e) {// Suppressing the error as getter is not defined in some cases\n      }\n\n      return '';\n    }\n  }\n};","map":{"version":3,"sources":["Branding.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAyBA,OAAA,iBAAA,MAAA,iCAAA;;AAEA,WAIA,MAAA,CAAA,YAAA,IAAA,EAJA;AAAA,IACA,aADA,QACA,cADA;AAAA,IAEA,SAFA,QAEA,UAFA;AAAA,IAGA,cAHA,QAGA,gBAHA;;AAMA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,iBAAA,CADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AADA,GAFA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,YAAA,EAAA;AACA,QAAA,SAAA,EAAA,SADA;AAEA,QAAA,aAAA,EAAA,aAFA;AAGA,QAAA,cAAA,EAAA;AAHA;AADA,KAAA;AAOA,GAhBA;AAiBA,EAAA,QAAA,EAAA;AACA,IAAA,gBADA,8BACA;AACA,UAAA;AACA,YAAA,YAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,2BAAA,CAAA;AACA,YAAA,OAAA,gBAAA;;AACA,YAAA,YAAA,EAAA;AACA,2BAAA,OAAA,2BAAA,YAAA;AACA;;AACA,eAAA,OAAA;AACA,OAPA,CAOA,OAAA,CAAA,EAAA,CACA;AACA;;AACA,aAAA,EAAA;AACA;AAbA;AAjBA,CAAA","sourcesContent":["<template>\n  <div\n    v-if=\"globalConfig.brandName && !disableBranding\"\n    class=\"px-0 py-3 flex justify-center\"\n  >\n    <a\n      :href=\"brandRedirectURL\"\n      rel=\"noreferrer noopener nofollow\"\n      target=\"_blank\"\n      class=\"branding--link justify-center\"\n    >\n      <img\n        class=\"branding--image\"\n        :alt=\"globalConfig.brandName\"\n        :src=\"globalConfig.logoThumbnail\"\n      />\n      <span>\n        {{ useInstallationName($t('POWERED_BY'), globalConfig.brandName) }}\n      </span>\n    </a>\n  </div>\n  <div v-else class=\"p-3\" />\n</template>\n\n<script>\nimport globalConfigMixin from 'shared/mixins/globalConfigMixin';\n\nconst {\n  LOGO_THUMBNAIL: logoThumbnail,\n  BRAND_NAME: brandName,\n  WIDGET_BRAND_URL: widgetBrandURL,\n} = window.globalConfig || {};\n\nexport default {\n  mixins: [globalConfigMixin],\n  props: {\n    disableBranding: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      globalConfig: {\n        brandName,\n        logoThumbnail,\n        widgetBrandURL,\n      },\n    };\n  },\n  computed: {\n    brandRedirectURL() {\n      try {\n        const referrerHost = this.$store.getters['appConfig/getReferrerHost'];\n        const baseURL = `jelibot.com`;\n        if (referrerHost) {\n          return `${baseURL}&utm_referrer=${referrerHost}`;\n        }\n        return baseURL;\n      } catch (e) {\n        // Suppressing the error as getter is not defined in some cases\n      }\n      return '';\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import '~widget/assets/scss/variables.scss';\n\n.branding--image {\n  margin-right: $space-smaller;\n  max-width: $space-slab;\n  max-height: $space-slab;\n}\n\n.branding--link {\n  color: $color-light-gray;\n  cursor: pointer;\n  display: inline-flex;\n  filter: grayscale(1);\n  font-size: $font-size-small;\n  opacity: 0.9;\n  text-decoration: none;\n\n  &:hover {\n    filter: grayscale(0);\n    opacity: 1;\n    color: $color-gray;\n  }\n}\n</style>\n"],"sourceRoot":"app/javascript/shared/components"},"metadata":{},"sourceType":"module"}