{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport Auth from '../api/auth';\n\nvar parseErrorCode = function parseErrorCode(error) {\n  return Promise.reject(error);\n};\n\nexport default (function (axios) {\n  var _ref = window.chatwootConfig || {},\n      _ref$apiHost = _ref.apiHost,\n      apiHost = _ref$apiHost === void 0 ? '' : _ref$apiHost;\n\n  var wootApi = axios.create({\n    baseURL: \"\".concat(apiHost, \"/\")\n  }); // Add Auth Headers to requests if logged in\n\n  if (Auth.hasAuthCookie()) {\n    var _Auth$getAuthData = Auth.getAuthData(),\n        accessToken = _Auth$getAuthData['access-token'],\n        tokenType = _Auth$getAuthData['token-type'],\n        client = _Auth$getAuthData.client,\n        expiry = _Auth$getAuthData.expiry,\n        uid = _Auth$getAuthData.uid;\n\n    Object.assign(wootApi.defaults.headers.common, {\n      'access-token': accessToken,\n      'token-type': tokenType,\n      client: client,\n      expiry: expiry,\n      uid: uid\n    });\n  } // Response parsing interceptor\n\n\n  wootApi.interceptors.response.use(function (response) {\n    return response;\n  }, function (error) {\n    return parseErrorCode(error);\n  });\n  return wootApi;\n});","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/helper/APIHelper.js"],"names":["Auth","parseErrorCode","error","Promise","reject","axios","window","chatwootConfig","apiHost","wootApi","create","baseURL","hasAuthCookie","getAuthData","accessToken","tokenType","client","expiry","uid","Object","assign","defaults","headers","common","interceptors","response","use"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,aAAjB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK;AAAA,SAAIC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAJ;AAAA,CAA5B;;AAEA,gBAAe,UAAAG,KAAK,EAAI;AACtB,aAAyBC,MAAM,CAACC,cAAP,IAAyB,EAAlD;AAAA,0BAAQC,OAAR;AAAA,MAAQA,OAAR,6BAAkB,EAAlB;;AACA,MAAMC,OAAO,GAAGJ,KAAK,CAACK,MAAN,CAAa;AAAEC,IAAAA,OAAO,YAAKH,OAAL;AAAT,GAAb,CAAhB,CAFsB,CAGtB;;AACA,MAAIR,IAAI,CAACY,aAAL,EAAJ,EAA0B;AACxB,4BAMIZ,IAAI,CAACa,WAAL,EANJ;AAAA,QACkBC,WADlB,qBACE,cADF;AAAA,QAEgBC,SAFhB,qBAEE,YAFF;AAAA,QAGEC,MAHF,qBAGEA,MAHF;AAAA,QAIEC,MAJF,qBAIEA,MAJF;AAAA,QAKEC,GALF,qBAKEA,GALF;;AAOAC,IAAAA,MAAM,CAACC,MAAP,CAAcX,OAAO,CAACY,QAAR,CAAiBC,OAAjB,CAAyBC,MAAvC,EAA+C;AAC7C,sBAAgBT,WAD6B;AAE7C,oBAAcC,SAF+B;AAG7CC,MAAAA,MAAM,EAANA,MAH6C;AAI7CC,MAAAA,MAAM,EAANA,MAJ6C;AAK7CC,MAAAA,GAAG,EAAHA;AAL6C,KAA/C;AAOD,GAnBqB,CAoBtB;;;AACAT,EAAAA,OAAO,CAACe,YAAR,CAAqBC,QAArB,CAA8BC,GAA9B,CACE,UAAAD,QAAQ;AAAA,WAAIA,QAAJ;AAAA,GADV,EAEE,UAAAvB,KAAK;AAAA,WAAID,cAAc,CAACC,KAAD,CAAlB;AAAA,GAFP;AAIA,SAAOO,OAAP;AACD,CA1BD","sourcesContent":["import Auth from '../api/auth';\n\nconst parseErrorCode = error => Promise.reject(error);\n\nexport default axios => {\n  const { apiHost = '' } = window.chatwootConfig || {};\n  const wootApi = axios.create({ baseURL: `${apiHost}/` });\n  // Add Auth Headers to requests if logged in\n  if (Auth.hasAuthCookie()) {\n    const {\n      'access-token': accessToken,\n      'token-type': tokenType,\n      client,\n      expiry,\n      uid,\n    } = Auth.getAuthData();\n    Object.assign(wootApi.defaults.headers.common, {\n      'access-token': accessToken,\n      'token-type': tokenType,\n      client,\n      expiry,\n      uid,\n    });\n  }\n  // Response parsing interceptor\n  wootApi.interceptors.response.use(\n    response => response,\n    error => parseErrorCode(error)\n  );\n  return wootApi;\n};\n"]},"metadata":{},"sourceType":"module"}