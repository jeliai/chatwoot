{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/* global axios */\nimport ApiClient from './ApiClient';\n\nvar getTimeOffset = function getTimeOffset() {\n  return -new Date().getTimezoneOffset() / 60;\n};\n\nvar ReportsAPI = /*#__PURE__*/function (_ApiClient) {\n  _inherits(ReportsAPI, _ApiClient);\n\n  var _super = _createSuper(ReportsAPI);\n\n  function ReportsAPI() {\n    _classCallCheck(this, ReportsAPI);\n\n    return _super.call(this, 'reports', {\n      accountScoped: true,\n      apiVersion: 'v2'\n    });\n  }\n\n  _createClass(ReportsAPI, [{\n    key: \"getReports\",\n    value: function getReports(metric, since, until) {\n      var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'account';\n      var id = arguments.length > 4 ? arguments[4] : undefined;\n      var group_by = arguments.length > 5 ? arguments[5] : undefined;\n      var business_hours = arguments.length > 6 ? arguments[6] : undefined;\n      return axios.get(\"\".concat(this.url), {\n        params: {\n          metric: metric,\n          since: since,\n          until: until,\n          type: type,\n          id: id,\n          group_by: group_by,\n          business_hours: business_hours,\n          timezone_offset: getTimeOffset()\n        }\n      });\n    }\n  }, {\n    key: \"getSummary\",\n    value: function getSummary(since, until) {\n      var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'account';\n      var id = arguments.length > 3 ? arguments[3] : undefined;\n      var group_by = arguments.length > 4 ? arguments[4] : undefined;\n      var business_hours = arguments.length > 5 ? arguments[5] : undefined;\n      return axios.get(\"\".concat(this.url, \"/summary\"), {\n        params: {\n          since: since,\n          until: until,\n          type: type,\n          id: id,\n          group_by: group_by,\n          business_hours: business_hours\n        }\n      });\n    }\n  }, {\n    key: \"getConversationMetric\",\n    value: function getConversationMetric() {\n      var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'account';\n      var page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      return axios.get(\"\".concat(this.url, \"/conversations\"), {\n        params: {\n          type: type,\n          page: page\n        }\n      });\n    }\n  }, {\n    key: \"getAgentReports\",\n    value: function getAgentReports(_ref) {\n      var since = _ref.from,\n          until = _ref.to,\n          businessHours = _ref.businessHours;\n      return axios.get(\"\".concat(this.url, \"/agents\"), {\n        params: {\n          since: since,\n          until: until,\n          business_hours: businessHours\n        }\n      });\n    }\n  }, {\n    key: \"getLabelReports\",\n    value: function getLabelReports(_ref2) {\n      var since = _ref2.from,\n          until = _ref2.to,\n          businessHours = _ref2.businessHours;\n      return axios.get(\"\".concat(this.url, \"/labels\"), {\n        params: {\n          since: since,\n          until: until,\n          business_hours: businessHours\n        }\n      });\n    }\n  }, {\n    key: \"getInboxReports\",\n    value: function getInboxReports(_ref3) {\n      var since = _ref3.from,\n          until = _ref3.to,\n          businessHours = _ref3.businessHours;\n      return axios.get(\"\".concat(this.url, \"/inboxes\"), {\n        params: {\n          since: since,\n          until: until,\n          business_hours: businessHours\n        }\n      });\n    }\n  }, {\n    key: \"getTeamReports\",\n    value: function getTeamReports(_ref4) {\n      var since = _ref4.from,\n          until = _ref4.to,\n          businessHours = _ref4.businessHours;\n      return axios.get(\"\".concat(this.url, \"/teams\"), {\n        params: {\n          since: since,\n          until: until,\n          business_hours: businessHours\n        }\n      });\n    }\n  }]);\n\n  return ReportsAPI;\n}(ApiClient);\n\nexport default new ReportsAPI();","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/api/reports.js"],"names":["ApiClient","getTimeOffset","Date","getTimezoneOffset","ReportsAPI","accountScoped","apiVersion","metric","since","until","type","id","group_by","business_hours","axios","get","url","params","timezone_offset","page","from","to","businessHours"],"mappings":"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","sourcesContent":["/* global axios */\nimport ApiClient from './ApiClient';\n\nconst getTimeOffset = () => -new Date().getTimezoneOffset() / 60;\n\nclass ReportsAPI extends ApiClient {\n  constructor() {\n    super('reports', { accountScoped: true, apiVersion: 'v2' });\n  }\n\n  getReports(\n    metric,\n    since,\n    until,\n    type = 'account',\n    id,\n    group_by,\n    business_hours\n  ) {\n    return axios.get(`${this.url}`, {\n      params: {\n        metric,\n        since,\n        until,\n        type,\n        id,\n        group_by,\n        business_hours,\n        timezone_offset: getTimeOffset(),\n      },\n    });\n  }\n\n  getSummary(since, until, type = 'account', id, group_by, business_hours) {\n    return axios.get(`${this.url}/summary`, {\n      params: {\n        since,\n        until,\n        type,\n        id,\n        group_by,\n        business_hours,\n      },\n    });\n  }\n\n  getConversationMetric(type = 'account', page = 1) {\n    return axios.get(`${this.url}/conversations`, {\n      params: {\n        type,\n        page,\n      },\n    });\n  }\n\n  getAgentReports({ from: since, to: until, businessHours }) {\n    return axios.get(`${this.url}/agents`, {\n      params: { since, until, business_hours: businessHours },\n    });\n  }\n\n  getLabelReports({ from: since, to: until, businessHours }) {\n    return axios.get(`${this.url}/labels`, {\n      params: { since, until, business_hours: businessHours },\n    });\n  }\n\n  getInboxReports({ from: since, to: until, businessHours }) {\n    return axios.get(`${this.url}/inboxes`, {\n      params: { since, until, business_hours: businessHours },\n    });\n  }\n\n  getTeamReports({ from: since, to: until, businessHours }) {\n    return axios.get(`${this.url}/teams`, {\n      params: { since, until, business_hours: businessHours },\n    });\n  }\n}\n\nexport default new ReportsAPI();\n"]},"metadata":{},"sourceType":"module"}