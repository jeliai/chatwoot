{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapActions } from 'vuex';\nimport { setHeader } from 'widget/helpers/axios';\nimport { IFrameHelper, RNHelper } from 'widget/helpers/utils';\nimport configMixin from './mixins/configMixin';\nimport availabilityMixin from 'widget/mixins/availability';\nimport { getLocale } from './helpers/urlParamsHelper';\nimport { isEmptyObject } from 'widget/helpers/utils';\nimport Spinner from 'shared/components/Spinner.vue';\nimport routerMixin from './mixins/routerMixin';\nimport { getExtraSpaceToScroll, loadedEventConfig } from './helpers/IframeEventHelper';\nimport { ON_AGENT_MESSAGE_RECEIVED, ON_CAMPAIGN_MESSAGE_CLICK, ON_UNREAD_MESSAGE_CLICK } from './constants/widgetBusEvents';\nimport { SDK_SET_BUBBLE_VISIBILITY } from '../shared/constants/sharedFrameEvents';\nexport default {\n  name: 'App',\n  components: {\n    Spinner: Spinner\n  },\n  mixins: [availabilityMixin, configMixin, routerMixin],\n  data: function data() {\n    return {\n      isMobile: false\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    activeCampaign: 'campaign/getActiveCampaign',\n    campaigns: 'campaign/getCampaigns',\n    conversationSize: 'conversation/getConversationSize',\n    currentUser: 'contacts/getCurrentUser',\n    hasFetched: 'agent/getHasFetched',\n    hideMessageBubble: 'appConfig/getHideMessageBubble',\n    isFetchingList: 'conversation/getIsFetchingList',\n    isRightAligned: 'appConfig/isRightAligned',\n    isWidgetOpen: 'appConfig/getIsWidgetOpen',\n    messageCount: 'conversation/getMessageCount',\n    unreadMessageCount: 'conversation/getUnreadMessageCount',\n    isWidgetStyleFlat: 'appConfig/isWidgetStyleFlat'\n  })), {}, {\n    isIFrame: function isIFrame() {\n      return IFrameHelper.isIFrame();\n    },\n    isRNWebView: function isRNWebView() {\n      return RNHelper.isRNWebView();\n    }\n  }),\n  watch: {\n    activeCampaign: function activeCampaign() {\n      this.setCampaignView();\n    }\n  },\n  mounted: function mounted() {\n    var _window$chatwootWebCh = window.chatwootWebChannel,\n        websiteToken = _window$chatwootWebCh.websiteToken,\n        locale = _window$chatwootWebCh.locale,\n        widgetColor = _window$chatwootWebCh.widgetColor;\n    this.setLocale(locale);\n    this.setWidgetColor(widgetColor);\n    setHeader(window.authToken);\n\n    if (this.isIFrame) {\n      this.registerListeners();\n      this.sendLoadedEvent();\n    } else {\n      this.fetchOldConversations();\n      this.fetchAvailableAgents(websiteToken);\n      this.setLocale(getLocale(window.location.search));\n    }\n\n    if (this.isRNWebView) {\n      this.registerListeners();\n      this.sendRNWebViewLoadedEvent();\n    }\n\n    this.$store.dispatch('conversationAttributes/getAttributes');\n    this.registerUnreadEvents();\n    this.registerCampaignEvents();\n  },\n  methods: _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, mapActions('appConfig', ['setAppConfig', 'setReferrerHost', 'setWidgetColor', 'setBubbleVisibility'])), mapActions('conversation', ['fetchOldConversations', 'setUserLastSeen'])), mapActions('campaign', ['initCampaigns', 'executeCampaign', 'resetCampaign'])), mapActions('agent', ['fetchAvailableAgents'])), {}, {\n    scrollConversationToBottom: function scrollConversationToBottom() {\n      var container = this.$el.querySelector('.conversation-wrap');\n      container.scrollTop = container.scrollHeight;\n    },\n    setBubbleLabel: function setBubbleLabel() {\n      IFrameHelper.sendMessage({\n        event: 'setBubbleLabel',\n        label: this.$t('BUBBLE.LABEL')\n      });\n    },\n    setIframeHeight: function setIframeHeight(isFixedHeight) {\n      this.$nextTick(function () {\n        var extraHeight = getExtraSpaceToScroll();\n        IFrameHelper.sendMessage({\n          event: 'updateIframeHeight',\n          isFixedHeight: isFixedHeight,\n          extraHeight: extraHeight\n        });\n      });\n    },\n    setLocale: function setLocale(localeWithVariation) {\n      var enabledLanguages = window.chatwootWebChannel.enabledLanguages;\n      var localeWithoutVariation = localeWithVariation.split('_')[0];\n      var hasLocaleWithoutVariation = enabledLanguages.some(function (lang) {\n        return lang.iso_639_1_code === localeWithoutVariation;\n      });\n      var hasLocaleWithVariation = enabledLanguages.some(function (lang) {\n        return lang.iso_639_1_code === localeWithVariation;\n      });\n\n      if (hasLocaleWithVariation) {\n        this.$root.$i18n.locale = localeWithVariation;\n      } else if (hasLocaleWithoutVariation) {\n        this.$root.$i18n.locale = localeWithoutVariation;\n      }\n    },\n    registerUnreadEvents: function registerUnreadEvents() {\n      var _this = this;\n\n      bus.$on(ON_AGENT_MESSAGE_RECEIVED, function () {\n        var routeName = _this.$route.name;\n\n        if ((_this.isWidgetOpen || !_this.isIFrame) && routeName === 'messages') {\n          _this.$store.dispatch('conversation/setUserLastSeen');\n        }\n\n        _this.setUnreadView();\n      });\n      bus.$on(ON_UNREAD_MESSAGE_CLICK, function () {\n        _this.replaceRoute('messages').then(function () {\n          return _this.unsetUnreadView();\n        });\n      });\n    },\n    registerCampaignEvents: function registerCampaignEvents() {\n      var _this2 = this;\n\n      bus.$on(ON_CAMPAIGN_MESSAGE_CLICK, function () {\n        if (_this2.shouldShowPreChatForm) {\n          _this2.replaceRoute('prechat-form');\n        } else {\n          _this2.replaceRoute('messages');\n\n          bus.$emit('execute-campaign', {\n            campaignId: _this2.activeCampaign.id\n          });\n        }\n\n        _this2.unsetUnreadView();\n      });\n      bus.$on('execute-campaign', function (campaignDetails) {\n        var customAttributes = campaignDetails.customAttributes,\n            campaignId = campaignDetails.campaignId;\n        var websiteToken = window.chatwootWebChannel.websiteToken;\n\n        _this2.executeCampaign({\n          campaignId: campaignId,\n          websiteToken: websiteToken,\n          customAttributes: customAttributes\n        });\n\n        _this2.replaceRoute('messages');\n      });\n    },\n    setCampaignView: function setCampaignView() {\n      var _this3 = this;\n\n      var messageCount = this.messageCount,\n          activeCampaign = this.activeCampaign;\n      var isCampaignReadyToExecute = !isEmptyObject(activeCampaign) && !messageCount;\n\n      if (this.isIFrame && isCampaignReadyToExecute) {\n        this.replaceRoute('campaigns').then(function () {\n          _this3.setIframeHeight(true);\n\n          IFrameHelper.sendMessage({\n            event: 'setUnreadMode'\n          });\n        });\n      }\n    },\n    setUnreadView: function setUnreadView() {\n      var _this4 = this;\n\n      var unreadMessageCount = this.unreadMessageCount;\n\n      if (this.isIFrame && unreadMessageCount > 0 && !this.isWidgetOpen) {\n        this.replaceRoute('unread-messages').then(function () {\n          _this4.setIframeHeight(true);\n\n          IFrameHelper.sendMessage({\n            event: 'setUnreadMode'\n          });\n        });\n        this.handleUnreadNotificationDot();\n      }\n    },\n    unsetUnreadView: function unsetUnreadView() {\n      if (this.isIFrame) {\n        IFrameHelper.sendMessage({\n          event: 'resetUnreadMode'\n        });\n        this.setIframeHeight(false);\n        this.handleUnreadNotificationDot();\n      }\n    },\n    handleUnreadNotificationDot: function handleUnreadNotificationDot() {\n      var unreadMessageCount = this.unreadMessageCount;\n\n      if (this.isIFrame) {\n        IFrameHelper.sendMessage({\n          event: 'handleNotificationDot',\n          unreadMessageCount: unreadMessageCount\n        });\n      }\n    },\n    createWidgetEvents: function createWidgetEvents(message) {\n      var eventName = message.eventName;\n      var isWidgetTriggerEvent = eventName === 'webwidget.triggered';\n\n      if (isWidgetTriggerEvent && ['unread-messages', 'campaigns'].includes(this.$route.name)) {\n        return;\n      }\n\n      this.$store.dispatch('events/create', {\n        name: eventName\n      });\n    },\n    registerListeners: function registerListeners() {\n      var _this5 = this;\n\n      var websiteToken = window.chatwootWebChannel.websiteToken;\n      window.addEventListener('message', function (e) {\n        if (!IFrameHelper.isAValidEvent(e)) {\n          return;\n        }\n\n        var message = IFrameHelper.getMessage(e);\n\n        if (message.event === 'config-set') {\n          _this5.setLocale(message.locale);\n\n          _this5.setBubbleLabel();\n\n          _this5.fetchOldConversations().then(function () {\n            return _this5.setUnreadView();\n          });\n\n          _this5.fetchAvailableAgents(websiteToken);\n\n          _this5.setAppConfig(message);\n\n          _this5.$store.dispatch('contacts/get');\n        } else if (message.event === 'widget-visible') {\n          _this5.scrollConversationToBottom();\n        } else if (message.event === 'change-url') {\n          var referrerURL = message.referrerURL,\n              referrerHost = message.referrerHost;\n\n          _this5.initCampaigns({\n            currentURL: referrerURL,\n            websiteToken: websiteToken,\n            isInBusinessHours: _this5.isInBusinessHours\n          });\n\n          window.referrerURL = referrerURL;\n\n          _this5.setReferrerHost(referrerHost);\n        } else if (message.event === 'toggle-close-button') {\n          _this5.isMobile = message.isMobile;\n        } else if (message.event === 'push-event') {\n          _this5.createWidgetEvents(message);\n        } else if (message.event === 'set-label') {\n          _this5.$store.dispatch('conversationLabels/create', message.label);\n        } else if (message.event === 'remove-label') {\n          _this5.$store.dispatch('conversationLabels/destroy', message.label);\n        } else if (message.event === 'set-user') {\n          _this5.$store.dispatch('contacts/setUser', message);\n        } else if (message.event === 'set-custom-attributes') {\n          _this5.$store.dispatch('contacts/setCustomAttributes', message.customAttributes);\n        } else if (message.event === 'delete-custom-attribute') {\n          _this5.$store.dispatch('contacts/deleteCustomAttribute', message.customAttribute);\n        } else if (message.event === 'set-locale') {\n          _this5.setLocale(message.locale);\n\n          _this5.setBubbleLabel();\n        } else if (message.event === 'toggle-open') {\n          _this5.$store.dispatch('appConfig/toggleWidgetOpen', message.isOpen);\n\n          var shouldShowMessageView = ['home'].includes(_this5.$route.name) && message.isOpen && _this5.messageCount;\n\n          var shouldShowHomeView = !message.isOpen && ['unread-messages', 'campaigns'].includes(_this5.$route.name);\n\n          if (shouldShowMessageView) {\n            _this5.replaceRoute('messages');\n          }\n\n          if (shouldShowHomeView) {\n            _this5.$store.dispatch('conversation/setUserLastSeen');\n\n            _this5.unsetUnreadView();\n\n            _this5.replaceRoute('home');\n          }\n\n          if (!message.isOpen) {\n            _this5.resetCampaign();\n          }\n        } else if (message.event === SDK_SET_BUBBLE_VISIBILITY) {\n          _this5.setBubbleVisibility(message.hideMessageBubble);\n        }\n      });\n    },\n    sendLoadedEvent: function sendLoadedEvent() {\n      IFrameHelper.sendMessage(loadedEventConfig());\n    },\n    sendRNWebViewLoadedEvent: function sendRNWebViewLoadedEvent() {\n      RNHelper.sendMessage(loadedEventConfig());\n    }\n  })\n};","map":{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AACA,SAAA,SAAA,QAAA,sBAAA;AACA,SAAA,YAAA,EAAA,QAAA,QAAA,sBAAA;AACA,OAAA,WAAA,MAAA,sBAAA;AACA,OAAA,iBAAA,MAAA,4BAAA;AACA,SAAA,SAAA,QAAA,2BAAA;AACA,SAAA,aAAA,QAAA,sBAAA;AACA,OAAA,OAAA,MAAA,+BAAA;AACA,OAAA,WAAA,MAAA,sBAAA;AACA,SACA,qBADA,EAEA,iBAFA,QAGA,6BAHA;AAIA,SACA,yBADA,EAEA,yBAFA,EAGA,uBAHA,QAIA,6BAJA;AAMA,SAAA,yBAAA,QAAA,uCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,KADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,OAAA,EAAA;AADA,GAFA;AAKA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,WAAA,EAAA,WAAA,CALA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,QAAA,EAAA;AADA,KAAA;AAGA,GAVA;AAWA,EAAA,QAAA,kCACA,UAAA,CAAA;AACA,IAAA,cAAA,EAAA,4BADA;AAEA,IAAA,SAAA,EAAA,uBAFA;AAGA,IAAA,gBAAA,EAAA,kCAHA;AAIA,IAAA,WAAA,EAAA,yBAJA;AAKA,IAAA,UAAA,EAAA,qBALA;AAMA,IAAA,iBAAA,EAAA,gCANA;AAOA,IAAA,cAAA,EAAA,gCAPA;AAQA,IAAA,cAAA,EAAA,0BARA;AASA,IAAA,YAAA,EAAA,2BATA;AAUA,IAAA,YAAA,EAAA,8BAVA;AAWA,IAAA,kBAAA,EAAA,oCAXA;AAYA,IAAA,iBAAA,EAAA;AAZA,GAAA,CADA;AAeA,IAAA,QAfA,sBAeA;AACA,aAAA,YAAA,CAAA,QAAA,EAAA;AACA,KAjBA;AAkBA,IAAA,WAlBA,yBAkBA;AACA,aAAA,QAAA,CAAA,WAAA,EAAA;AACA;AApBA,IAXA;AAiCA,EAAA,KAAA,EAAA;AACA,IAAA,cADA,4BACA;AACA,WAAA,eAAA;AACA;AAHA,GAjCA;AAsCA,EAAA,OAtCA,qBAsCA;AACA,gCAAA,MAAA,CAAA,kBAAA;AAAA,QAAA,YAAA,yBAAA,YAAA;AAAA,QAAA,MAAA,yBAAA,MAAA;AAAA,QAAA,WAAA,yBAAA,WAAA;AACA,SAAA,SAAA,CAAA,MAAA;AACA,SAAA,cAAA,CAAA,WAAA;AACA,IAAA,SAAA,CAAA,MAAA,CAAA,SAAA,CAAA;;AACA,QAAA,KAAA,QAAA,EAAA;AACA,WAAA,iBAAA;AACA,WAAA,eAAA;AACA,KAHA,MAGA;AACA,WAAA,qBAAA;AACA,WAAA,oBAAA,CAAA,YAAA;AACA,WAAA,SAAA,CAAA,SAAA,CAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA;AACA;;AACA,QAAA,KAAA,WAAA,EAAA;AACA,WAAA,iBAAA;AACA,WAAA,wBAAA;AACA;;AACA,SAAA,MAAA,CAAA,QAAA,CAAA,sCAAA;AACA,SAAA,oBAAA;AACA,SAAA,sBAAA;AACA,GA1DA;AA2DA,EAAA,OAAA,4EACA,UAAA,CAAA,WAAA,EAAA,CACA,cADA,EAEA,iBAFA,EAGA,gBAHA,EAIA,qBAJA,CAAA,CADA,GAOA,UAAA,CAAA,cAAA,EAAA,CAAA,uBAAA,EAAA,iBAAA,CAAA,CAPA,GAQA,UAAA,CAAA,UAAA,EAAA,CACA,eADA,EAEA,iBAFA,EAGA,eAHA,CAAA,CARA,GAaA,UAAA,CAAA,OAAA,EAAA,CAAA,sBAAA,CAAA,CAbA;AAcA,IAAA,0BAdA,wCAcA;AACA,UAAA,SAAA,GAAA,KAAA,GAAA,CAAA,aAAA,CAAA,oBAAA,CAAA;AACA,MAAA,SAAA,CAAA,SAAA,GAAA,SAAA,CAAA,YAAA;AACA,KAjBA;AAkBA,IAAA,cAlBA,4BAkBA;AACA,MAAA,YAAA,CAAA,WAAA,CAAA;AACA,QAAA,KAAA,EAAA,gBADA;AAEA,QAAA,KAAA,EAAA,KAAA,EAAA,CAAA,cAAA;AAFA,OAAA;AAIA,KAvBA;AAwBA,IAAA,eAxBA,2BAwBA,aAxBA,EAwBA;AACA,WAAA,SAAA,CAAA,YAAA;AACA,YAAA,WAAA,GAAA,qBAAA,EAAA;AACA,QAAA,YAAA,CAAA,WAAA,CAAA;AACA,UAAA,KAAA,EAAA,oBADA;AAEA,UAAA,aAAA,EAAA,aAFA;AAGA,UAAA,WAAA,EAAA;AAHA,SAAA;AAKA,OAPA;AAQA,KAjCA;AAkCA,IAAA,SAlCA,qBAkCA,mBAlCA,EAkCA;AACA,UAAA,gBAAA,GAAA,MAAA,CAAA,kBAAA,CAAA,gBAAA;AACA,UAAA,sBAAA,GAAA,mBAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA;AACA,UAAA,yBAAA,GAAA,gBAAA,CAAA,IAAA,CACA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,cAAA,KAAA,sBAAA;AAAA,OADA,CAAA;AAGA,UAAA,sBAAA,GAAA,gBAAA,CAAA,IAAA,CACA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,cAAA,KAAA,mBAAA;AAAA,OADA,CAAA;;AAIA,UAAA,sBAAA,EAAA;AACA,aAAA,KAAA,CAAA,KAAA,CAAA,MAAA,GAAA,mBAAA;AACA,OAFA,MAEA,IAAA,yBAAA,EAAA;AACA,aAAA,KAAA,CAAA,KAAA,CAAA,MAAA,GAAA,sBAAA;AACA;AACA,KAjDA;AAkDA,IAAA,oBAlDA,kCAkDA;AAAA;;AACA,MAAA,GAAA,CAAA,GAAA,CAAA,yBAAA,EAAA,YAAA;AACA,YAAA,SAAA,GAAA,KAAA,CAAA,MAAA,CAAA,IAAA;;AACA,YAAA,CAAA,KAAA,CAAA,YAAA,IAAA,CAAA,KAAA,CAAA,QAAA,KAAA,SAAA,KAAA,UAAA,EAAA;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,8BAAA;AACA;;AACA,QAAA,KAAA,CAAA,aAAA;AACA,OANA;AAOA,MAAA,GAAA,CAAA,GAAA,CAAA,uBAAA,EAAA,YAAA;AACA,QAAA,KAAA,CAAA,YAAA,CAAA,UAAA,EAAA,IAAA,CAAA;AAAA,iBAAA,KAAA,CAAA,eAAA,EAAA;AAAA,SAAA;AACA,OAFA;AAGA,KA7DA;AA8DA,IAAA,sBA9DA,oCA8DA;AAAA;;AACA,MAAA,GAAA,CAAA,GAAA,CAAA,yBAAA,EAAA,YAAA;AACA,YAAA,MAAA,CAAA,qBAAA,EAAA;AACA,UAAA,MAAA,CAAA,YAAA,CAAA,cAAA;AACA,SAFA,MAEA;AACA,UAAA,MAAA,CAAA,YAAA,CAAA,UAAA;;AACA,UAAA,GAAA,CAAA,KAAA,CAAA,kBAAA,EAAA;AAAA,YAAA,UAAA,EAAA,MAAA,CAAA,cAAA,CAAA;AAAA,WAAA;AACA;;AACA,QAAA,MAAA,CAAA,eAAA;AACA,OARA;AASA,MAAA,GAAA,CAAA,GAAA,CAAA,kBAAA,EAAA,UAAA,eAAA,EAAA;AACA,YAAA,gBAAA,GAAA,eAAA,CAAA,gBAAA;AAAA,YAAA,UAAA,GAAA,eAAA,CAAA,UAAA;AACA,YAAA,YAAA,GAAA,MAAA,CAAA,kBAAA,CAAA,YAAA;;AACA,QAAA,MAAA,CAAA,eAAA,CAAA;AAAA,UAAA,UAAA,EAAA,UAAA;AAAA,UAAA,YAAA,EAAA,YAAA;AAAA,UAAA,gBAAA,EAAA;AAAA,SAAA;;AACA,QAAA,MAAA,CAAA,YAAA,CAAA,UAAA;AACA,OALA;AAMA,KA9EA;AA+EA,IAAA,eA/EA,6BA+EA;AAAA;;AACA,UAAA,YAAA,GAAA,IAAA,CAAA,YAAA;AAAA,UAAA,cAAA,GAAA,IAAA,CAAA,cAAA;AACA,UAAA,wBAAA,GACA,CAAA,aAAA,CAAA,cAAA,CAAA,IAAA,CAAA,YADA;;AAEA,UAAA,KAAA,QAAA,IAAA,wBAAA,EAAA;AACA,aAAA,YAAA,CAAA,WAAA,EAAA,IAAA,CAAA,YAAA;AACA,UAAA,MAAA,CAAA,eAAA,CAAA,IAAA;;AACA,UAAA,YAAA,CAAA,WAAA,CAAA;AAAA,YAAA,KAAA,EAAA;AAAA,WAAA;AACA,SAHA;AAIA;AACA,KAzFA;AA0FA,IAAA,aA1FA,2BA0FA;AAAA;;AACA,UAAA,kBAAA,GAAA,IAAA,CAAA,kBAAA;;AAEA,UAAA,KAAA,QAAA,IAAA,kBAAA,GAAA,CAAA,IAAA,CAAA,KAAA,YAAA,EAAA;AACA,aAAA,YAAA,CAAA,iBAAA,EAAA,IAAA,CAAA,YAAA;AACA,UAAA,MAAA,CAAA,eAAA,CAAA,IAAA;;AACA,UAAA,YAAA,CAAA,WAAA,CAAA;AAAA,YAAA,KAAA,EAAA;AAAA,WAAA;AACA,SAHA;AAIA,aAAA,2BAAA;AACA;AACA,KApGA;AAqGA,IAAA,eArGA,6BAqGA;AACA,UAAA,KAAA,QAAA,EAAA;AACA,QAAA,YAAA,CAAA,WAAA,CAAA;AAAA,UAAA,KAAA,EAAA;AAAA,SAAA;AACA,aAAA,eAAA,CAAA,KAAA;AACA,aAAA,2BAAA;AACA;AACA,KA3GA;AA4GA,IAAA,2BA5GA,yCA4GA;AACA,UAAA,kBAAA,GAAA,IAAA,CAAA,kBAAA;;AACA,UAAA,KAAA,QAAA,EAAA;AACA,QAAA,YAAA,CAAA,WAAA,CAAA;AACA,UAAA,KAAA,EAAA,uBADA;AAEA,UAAA,kBAAA,EAAA;AAFA,SAAA;AAIA;AACA,KApHA;AAqHA,IAAA,kBArHA,8BAqHA,OArHA,EAqHA;AACA,UAAA,SAAA,GAAA,OAAA,CAAA,SAAA;AACA,UAAA,oBAAA,GAAA,SAAA,KAAA,qBAAA;;AACA,UACA,oBAAA,IACA,CAAA,iBAAA,EAAA,WAAA,EAAA,QAAA,CAAA,KAAA,MAAA,CAAA,IAAA,CAFA,EAGA;AACA;AACA;;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,eAAA,EAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA;AACA,KA/HA;AAgIA,IAAA,iBAhIA,+BAgIA;AAAA;;AACA,UAAA,YAAA,GAAA,MAAA,CAAA,kBAAA,CAAA,YAAA;AACA,MAAA,MAAA,CAAA,gBAAA,CAAA,SAAA,EAAA,UAAA,CAAA,EAAA;AACA,YAAA,CAAA,YAAA,CAAA,aAAA,CAAA,CAAA,CAAA,EAAA;AACA;AACA;;AACA,YAAA,OAAA,GAAA,YAAA,CAAA,UAAA,CAAA,CAAA,CAAA;;AACA,YAAA,OAAA,CAAA,KAAA,KAAA,YAAA,EAAA;AACA,UAAA,MAAA,CAAA,SAAA,CAAA,OAAA,CAAA,MAAA;;AACA,UAAA,MAAA,CAAA,cAAA;;AACA,UAAA,MAAA,CAAA,qBAAA,GAAA,IAAA,CAAA;AAAA,mBAAA,MAAA,CAAA,aAAA,EAAA;AAAA,WAAA;;AACA,UAAA,MAAA,CAAA,oBAAA,CAAA,YAAA;;AACA,UAAA,MAAA,CAAA,YAAA,CAAA,OAAA;;AACA,UAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,cAAA;AACA,SAPA,MAOA,IAAA,OAAA,CAAA,KAAA,KAAA,gBAAA,EAAA;AACA,UAAA,MAAA,CAAA,0BAAA;AACA,SAFA,MAEA,IAAA,OAAA,CAAA,KAAA,KAAA,YAAA,EAAA;AACA,cAAA,WAAA,GAAA,OAAA,CAAA,WAAA;AAAA,cAAA,YAAA,GAAA,OAAA,CAAA,YAAA;;AACA,UAAA,MAAA,CAAA,aAAA,CAAA;AACA,YAAA,UAAA,EAAA,WADA;AAEA,YAAA,YAAA,EAAA,YAFA;AAGA,YAAA,iBAAA,EAAA,MAAA,CAAA;AAHA,WAAA;;AAKA,UAAA,MAAA,CAAA,WAAA,GAAA,WAAA;;AACA,UAAA,MAAA,CAAA,eAAA,CAAA,YAAA;AACA,SATA,MASA,IAAA,OAAA,CAAA,KAAA,KAAA,qBAAA,EAAA;AACA,UAAA,MAAA,CAAA,QAAA,GAAA,OAAA,CAAA,QAAA;AACA,SAFA,MAEA,IAAA,OAAA,CAAA,KAAA,KAAA,YAAA,EAAA;AACA,UAAA,MAAA,CAAA,kBAAA,CAAA,OAAA;AACA,SAFA,MAEA,IAAA,OAAA,CAAA,KAAA,KAAA,WAAA,EAAA;AACA,UAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,2BAAA,EAAA,OAAA,CAAA,KAAA;AACA,SAFA,MAEA,IAAA,OAAA,CAAA,KAAA,KAAA,cAAA,EAAA;AACA,UAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,4BAAA,EAAA,OAAA,CAAA,KAAA;AACA,SAFA,MAEA,IAAA,OAAA,CAAA,KAAA,KAAA,UAAA,EAAA;AACA,UAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,kBAAA,EAAA,OAAA;AACA,SAFA,MAEA,IAAA,OAAA,CAAA,KAAA,KAAA,uBAAA,EAAA;AACA,UAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CACA,8BADA,EAEA,OAAA,CAAA,gBAFA;AAIA,SALA,MAKA,IAAA,OAAA,CAAA,KAAA,KAAA,yBAAA,EAAA;AACA,UAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CACA,gCADA,EAEA,OAAA,CAAA,eAFA;AAIA,SALA,MAKA,IAAA,OAAA,CAAA,KAAA,KAAA,YAAA,EAAA;AACA,UAAA,MAAA,CAAA,SAAA,CAAA,OAAA,CAAA,MAAA;;AACA,UAAA,MAAA,CAAA,cAAA;AACA,SAHA,MAGA,IAAA,OAAA,CAAA,KAAA,KAAA,aAAA,EAAA;AACA,UAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,4BAAA,EAAA,OAAA,CAAA,MAAA;;AAEA,cAAA,qBAAA,GACA,CAAA,MAAA,EAAA,QAAA,CAAA,MAAA,CAAA,MAAA,CAAA,IAAA,KACA,OAAA,CAAA,MADA,IAEA,MAAA,CAAA,YAHA;;AAIA,cAAA,kBAAA,GACA,CAAA,OAAA,CAAA,MAAA,IACA,CAAA,iBAAA,EAAA,WAAA,EAAA,QAAA,CAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAFA;;AAIA,cAAA,qBAAA,EAAA;AACA,YAAA,MAAA,CAAA,YAAA,CAAA,UAAA;AACA;;AACA,cAAA,kBAAA,EAAA;AACA,YAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,8BAAA;;AACA,YAAA,MAAA,CAAA,eAAA;;AACA,YAAA,MAAA,CAAA,YAAA,CAAA,MAAA;AACA;;AACA,cAAA,CAAA,OAAA,CAAA,MAAA,EAAA;AACA,YAAA,MAAA,CAAA,aAAA;AACA;AACA,SAtBA,MAsBA,IAAA,OAAA,CAAA,KAAA,KAAA,yBAAA,EAAA;AACA,UAAA,MAAA,CAAA,mBAAA,CAAA,OAAA,CAAA,iBAAA;AACA;AACA,OAvEA;AAwEA,KA1MA;AA2MA,IAAA,eA3MA,6BA2MA;AACA,MAAA,YAAA,CAAA,WAAA,CAAA,iBAAA,EAAA;AACA,KA7MA;AA8MA,IAAA,wBA9MA,sCA8MA;AACA,MAAA,QAAA,CAAA,WAAA,CAAA,iBAAA,EAAA;AACA;AAhNA;AA3DA,CAAA","sourcesContent":["<template>\n  <div\n    v-if=\"!conversationSize && isFetchingList\"\n    class=\"flex flex-1 items-center h-full bg-black-25 justify-center\"\n  >\n    <spinner size=\"\" />\n  </div>\n  <div\n    v-else\n    class=\"flex flex-col justify-end h-full\"\n    :class=\"{\n      'is-mobile': isMobile,\n      'is-widget-right': isRightAligned,\n      'is-bubble-hidden': hideMessageBubble,\n      'is-flat-design': isWidgetStyleFlat,\n    }\"\n  >\n    <router-view />\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex';\nimport { setHeader } from 'widget/helpers/axios';\nimport { IFrameHelper, RNHelper } from 'widget/helpers/utils';\nimport configMixin from './mixins/configMixin';\nimport availabilityMixin from 'widget/mixins/availability';\nimport { getLocale } from './helpers/urlParamsHelper';\nimport { isEmptyObject } from 'widget/helpers/utils';\nimport Spinner from 'shared/components/Spinner.vue';\nimport routerMixin from './mixins/routerMixin';\nimport {\n  getExtraSpaceToScroll,\n  loadedEventConfig,\n} from './helpers/IframeEventHelper';\nimport {\n  ON_AGENT_MESSAGE_RECEIVED,\n  ON_CAMPAIGN_MESSAGE_CLICK,\n  ON_UNREAD_MESSAGE_CLICK,\n} from './constants/widgetBusEvents';\n\nimport { SDK_SET_BUBBLE_VISIBILITY } from '../shared/constants/sharedFrameEvents';\n\nexport default {\n  name: 'App',\n  components: {\n    Spinner,\n  },\n  mixins: [availabilityMixin, configMixin, routerMixin],\n  data() {\n    return {\n      isMobile: false,\n    };\n  },\n  computed: {\n    ...mapGetters({\n      activeCampaign: 'campaign/getActiveCampaign',\n      campaigns: 'campaign/getCampaigns',\n      conversationSize: 'conversation/getConversationSize',\n      currentUser: 'contacts/getCurrentUser',\n      hasFetched: 'agent/getHasFetched',\n      hideMessageBubble: 'appConfig/getHideMessageBubble',\n      isFetchingList: 'conversation/getIsFetchingList',\n      isRightAligned: 'appConfig/isRightAligned',\n      isWidgetOpen: 'appConfig/getIsWidgetOpen',\n      messageCount: 'conversation/getMessageCount',\n      unreadMessageCount: 'conversation/getUnreadMessageCount',\n      isWidgetStyleFlat: 'appConfig/isWidgetStyleFlat',\n    }),\n    isIFrame() {\n      return IFrameHelper.isIFrame();\n    },\n    isRNWebView() {\n      return RNHelper.isRNWebView();\n    },\n  },\n  watch: {\n    activeCampaign() {\n      this.setCampaignView();\n    },\n  },\n  mounted() {\n    const { websiteToken, locale, widgetColor } = window.chatwootWebChannel;\n    this.setLocale(locale);\n    this.setWidgetColor(widgetColor);\n    setHeader(window.authToken);\n    if (this.isIFrame) {\n      this.registerListeners();\n      this.sendLoadedEvent();\n    } else {\n      this.fetchOldConversations();\n      this.fetchAvailableAgents(websiteToken);\n      this.setLocale(getLocale(window.location.search));\n    }\n    if (this.isRNWebView) {\n      this.registerListeners();\n      this.sendRNWebViewLoadedEvent();\n    }\n    this.$store.dispatch('conversationAttributes/getAttributes');\n    this.registerUnreadEvents();\n    this.registerCampaignEvents();\n  },\n  methods: {\n    ...mapActions('appConfig', [\n      'setAppConfig',\n      'setReferrerHost',\n      'setWidgetColor',\n      'setBubbleVisibility',\n    ]),\n    ...mapActions('conversation', ['fetchOldConversations', 'setUserLastSeen']),\n    ...mapActions('campaign', [\n      'initCampaigns',\n      'executeCampaign',\n      'resetCampaign',\n    ]),\n    ...mapActions('agent', ['fetchAvailableAgents']),\n    scrollConversationToBottom() {\n      const container = this.$el.querySelector('.conversation-wrap');\n      container.scrollTop = container.scrollHeight;\n    },\n    setBubbleLabel() {\n      IFrameHelper.sendMessage({\n        event: 'setBubbleLabel',\n        label: this.$t('BUBBLE.LABEL'),\n      });\n    },\n    setIframeHeight(isFixedHeight) {\n      this.$nextTick(() => {\n        const extraHeight = getExtraSpaceToScroll();\n        IFrameHelper.sendMessage({\n          event: 'updateIframeHeight',\n          isFixedHeight,\n          extraHeight,\n        });\n      });\n    },\n    setLocale(localeWithVariation) {\n      const { enabledLanguages } = window.chatwootWebChannel;\n      const localeWithoutVariation = localeWithVariation.split('_')[0];\n      const hasLocaleWithoutVariation = enabledLanguages.some(\n        lang => lang.iso_639_1_code === localeWithoutVariation\n      );\n      const hasLocaleWithVariation = enabledLanguages.some(\n        lang => lang.iso_639_1_code === localeWithVariation\n      );\n\n      if (hasLocaleWithVariation) {\n        this.$root.$i18n.locale = localeWithVariation;\n      } else if (hasLocaleWithoutVariation) {\n        this.$root.$i18n.locale = localeWithoutVariation;\n      }\n    },\n    registerUnreadEvents() {\n      bus.$on(ON_AGENT_MESSAGE_RECEIVED, () => {\n        const { name: routeName } = this.$route;\n        if ((this.isWidgetOpen || !this.isIFrame) && routeName === 'messages') {\n          this.$store.dispatch('conversation/setUserLastSeen');\n        }\n        this.setUnreadView();\n      });\n      bus.$on(ON_UNREAD_MESSAGE_CLICK, () => {\n        this.replaceRoute('messages').then(() => this.unsetUnreadView());\n      });\n    },\n    registerCampaignEvents() {\n      bus.$on(ON_CAMPAIGN_MESSAGE_CLICK, () => {\n        if (this.shouldShowPreChatForm) {\n          this.replaceRoute('prechat-form');\n        } else {\n          this.replaceRoute('messages');\n          bus.$emit('execute-campaign', { campaignId: this.activeCampaign.id });\n        }\n        this.unsetUnreadView();\n      });\n      bus.$on('execute-campaign', campaignDetails => {\n        const { customAttributes, campaignId } = campaignDetails;\n        const { websiteToken } = window.chatwootWebChannel;\n        this.executeCampaign({ campaignId, websiteToken, customAttributes });\n        this.replaceRoute('messages');\n      });\n    },\n    setCampaignView() {\n      const { messageCount, activeCampaign } = this;\n      const isCampaignReadyToExecute =\n        !isEmptyObject(activeCampaign) && !messageCount;\n      if (this.isIFrame && isCampaignReadyToExecute) {\n        this.replaceRoute('campaigns').then(() => {\n          this.setIframeHeight(true);\n          IFrameHelper.sendMessage({ event: 'setUnreadMode' });\n        });\n      }\n    },\n    setUnreadView() {\n      const { unreadMessageCount } = this;\n\n      if (this.isIFrame && unreadMessageCount > 0 && !this.isWidgetOpen) {\n        this.replaceRoute('unread-messages').then(() => {\n          this.setIframeHeight(true);\n          IFrameHelper.sendMessage({ event: 'setUnreadMode' });\n        });\n        this.handleUnreadNotificationDot();\n      }\n    },\n    unsetUnreadView() {\n      if (this.isIFrame) {\n        IFrameHelper.sendMessage({ event: 'resetUnreadMode' });\n        this.setIframeHeight(false);\n        this.handleUnreadNotificationDot();\n      }\n    },\n    handleUnreadNotificationDot() {\n      const { unreadMessageCount } = this;\n      if (this.isIFrame) {\n        IFrameHelper.sendMessage({\n          event: 'handleNotificationDot',\n          unreadMessageCount,\n        });\n      }\n    },\n    createWidgetEvents(message) {\n      const { eventName } = message;\n      const isWidgetTriggerEvent = eventName === 'webwidget.triggered';\n      if (\n        isWidgetTriggerEvent &&\n        ['unread-messages', 'campaigns'].includes(this.$route.name)\n      ) {\n        return;\n      }\n      this.$store.dispatch('events/create', { name: eventName });\n    },\n    registerListeners() {\n      const { websiteToken } = window.chatwootWebChannel;\n      window.addEventListener('message', e => {\n        if (!IFrameHelper.isAValidEvent(e)) {\n          return;\n        }\n        const message = IFrameHelper.getMessage(e);\n        if (message.event === 'config-set') {\n          this.setLocale(message.locale);\n          this.setBubbleLabel();\n          this.fetchOldConversations().then(() => this.setUnreadView());\n          this.fetchAvailableAgents(websiteToken);\n          this.setAppConfig(message);\n          this.$store.dispatch('contacts/get');\n        } else if (message.event === 'widget-visible') {\n          this.scrollConversationToBottom();\n        } else if (message.event === 'change-url') {\n          const { referrerURL, referrerHost } = message;\n          this.initCampaigns({\n            currentURL: referrerURL,\n            websiteToken,\n            isInBusinessHours: this.isInBusinessHours,\n          });\n          window.referrerURL = referrerURL;\n          this.setReferrerHost(referrerHost);\n        } else if (message.event === 'toggle-close-button') {\n          this.isMobile = message.isMobile;\n        } else if (message.event === 'push-event') {\n          this.createWidgetEvents(message);\n        } else if (message.event === 'set-label') {\n          this.$store.dispatch('conversationLabels/create', message.label);\n        } else if (message.event === 'remove-label') {\n          this.$store.dispatch('conversationLabels/destroy', message.label);\n        } else if (message.event === 'set-user') {\n          this.$store.dispatch('contacts/setUser', message);\n        } else if (message.event === 'set-custom-attributes') {\n          this.$store.dispatch(\n            'contacts/setCustomAttributes',\n            message.customAttributes\n          );\n        } else if (message.event === 'delete-custom-attribute') {\n          this.$store.dispatch(\n            'contacts/deleteCustomAttribute',\n            message.customAttribute\n          );\n        } else if (message.event === 'set-locale') {\n          this.setLocale(message.locale);\n          this.setBubbleLabel();\n        } else if (message.event === 'toggle-open') {\n          this.$store.dispatch('appConfig/toggleWidgetOpen', message.isOpen);\n\n          const shouldShowMessageView =\n            ['home'].includes(this.$route.name) &&\n            message.isOpen &&\n            this.messageCount;\n          const shouldShowHomeView =\n            !message.isOpen &&\n            ['unread-messages', 'campaigns'].includes(this.$route.name);\n\n          if (shouldShowMessageView) {\n            this.replaceRoute('messages');\n          }\n          if (shouldShowHomeView) {\n            this.$store.dispatch('conversation/setUserLastSeen');\n            this.unsetUnreadView();\n            this.replaceRoute('home');\n          }\n          if (!message.isOpen) {\n            this.resetCampaign();\n          }\n        } else if (message.event === SDK_SET_BUBBLE_VISIBILITY) {\n          this.setBubbleVisibility(message.hideMessageBubble);\n        }\n      });\n    },\n    sendLoadedEvent() {\n      IFrameHelper.sendMessage(loadedEventConfig());\n    },\n    sendRNWebViewLoadedEvent() {\n      RNHelper.sendMessage(loadedEventConfig());\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import '~widget/assets/scss/woot.scss';\n</style>\n"],"sourceRoot":"app/javascript/widget"},"metadata":{},"sourceType":"module"}