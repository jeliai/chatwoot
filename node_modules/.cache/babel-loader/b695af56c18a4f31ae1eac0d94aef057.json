{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport AppContainer from './Dashboard';\nimport settings from './settings/settings.routes';\nimport conversation from './conversation/conversation.routes';\nimport { routes as contactRoutes } from './contacts/routes';\nimport { routes as notificationRoutes } from './notifications/routes';\nimport { frontendURL } from '../../helper/URLHelper';\nimport helpcenterRoutes from './helpcenter/helpcenter.routes';\n\nvar Suspended = function Suspended() {\n  return import('./suspended/Index');\n};\n\nexport default {\n  routes: [].concat(_toConsumableArray(helpcenterRoutes.routes), [{\n    path: frontendURL('accounts/:account_id'),\n    component: AppContainer,\n    children: [].concat(_toConsumableArray(conversation.routes), _toConsumableArray(settings.routes), _toConsumableArray(contactRoutes), _toConsumableArray(notificationRoutes))\n  }, {\n    path: frontendURL('accounts/:accountId/suspended'),\n    name: 'account_suspended',\n    roles: ['administrator', 'agent'],\n    component: Suspended\n  }])\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/routes/dashboard/dashboard.routes.js"],"names":["AppContainer","settings","conversation","routes","contactRoutes","notificationRoutes","frontendURL","helpcenterRoutes","Suspended","path","component","children","name","roles"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,YAAP,MAAyB,aAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,SAASC,MAAM,IAAIC,aAAnB,QAAwC,mBAAxC;AACA,SAASD,MAAM,IAAIE,kBAAnB,QAA6C,wBAA7C;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAM,OAAO,mBAAP,CAAN;AAAA,CAAlB;;AAEA,eAAe;AACbL,EAAAA,MAAM,+BACDI,gBAAgB,CAACJ,MADhB,IAEJ;AACEM,IAAAA,IAAI,EAAEH,WAAW,CAAC,sBAAD,CADnB;AAEEI,IAAAA,SAAS,EAAEV,YAFb;AAGEW,IAAAA,QAAQ,+BACHT,YAAY,CAACC,MADV,sBAEHF,QAAQ,CAACE,MAFN,sBAGHC,aAHG,sBAIHC,kBAJG;AAHV,GAFI,EAYJ;AACEI,IAAAA,IAAI,EAAEH,WAAW,CAAC,+BAAD,CADnB;AAEEM,IAAAA,IAAI,EAAE,mBAFR;AAGEC,IAAAA,KAAK,EAAE,CAAC,eAAD,EAAkB,OAAlB,CAHT;AAIEH,IAAAA,SAAS,EAAEF;AAJb,GAZI;AADO,CAAf","sourcesContent":["import AppContainer from './Dashboard';\nimport settings from './settings/settings.routes';\nimport conversation from './conversation/conversation.routes';\nimport { routes as contactRoutes } from './contacts/routes';\nimport { routes as notificationRoutes } from './notifications/routes';\nimport { frontendURL } from '../../helper/URLHelper';\nimport helpcenterRoutes from './helpcenter/helpcenter.routes';\n\nconst Suspended = () => import('./suspended/Index');\n\nexport default {\n  routes: [\n    ...helpcenterRoutes.routes,\n    {\n      path: frontendURL('accounts/:account_id'),\n      component: AppContainer,\n      children: [\n        ...conversation.routes,\n        ...settings.routes,\n        ...contactRoutes,\n        ...notificationRoutes,\n      ],\n    },\n    {\n      path: frontendURL('accounts/:accountId/suspended'),\n      name: 'account_suspended',\n      roles: ['administrator', 'agent'],\n      component: Suspended,\n    },\n  ],\n};\n"]},"metadata":{},"sourceType":"module"}