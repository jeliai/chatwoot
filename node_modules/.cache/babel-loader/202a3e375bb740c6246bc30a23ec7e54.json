{"ast":null,"code":"export var INBOX_TYPES = {\n  WEB: 'Channel::WebWidget',\n  FB: 'Channel::FacebookPage',\n  TWITTER: 'Channel::TwitterProfile',\n  TWILIO: 'Channel::TwilioSms',\n  WHATSAPP: 'Channel::Whatsapp',\n  API: 'Channel::Api',\n  EMAIL: 'Channel::Email',\n  TELEGRAM: 'Channel::Telegram',\n  LINE: 'Channel::Line',\n  SMS: 'Channel::Sms'\n};\nexport default {\n  computed: {\n    channelType: function channelType() {\n      return this.inbox.channel_type;\n    },\n    whatsAppAPIProvider: function whatsAppAPIProvider() {\n      return this.inbox.provider || '';\n    },\n    isAPIInbox: function isAPIInbox() {\n      return this.channelType === INBOX_TYPES.API;\n    },\n    isATwitterInbox: function isATwitterInbox() {\n      return this.channelType === INBOX_TYPES.TWITTER;\n    },\n    isAFacebookInbox: function isAFacebookInbox() {\n      return this.channelType === INBOX_TYPES.FB;\n    },\n    isAWebWidgetInbox: function isAWebWidgetInbox() {\n      return this.channelType === INBOX_TYPES.WEB;\n    },\n    isATwilioChannel: function isATwilioChannel() {\n      return this.channelType === INBOX_TYPES.TWILIO;\n    },\n    isALineChannel: function isALineChannel() {\n      return this.channelType === INBOX_TYPES.LINE;\n    },\n    isAnEmailChannel: function isAnEmailChannel() {\n      return this.channelType === INBOX_TYPES.EMAIL;\n    },\n    isATelegramChannel: function isATelegramChannel() {\n      return this.channelType === INBOX_TYPES.TELEGRAM;\n    },\n    isATwilioSMSChannel: function isATwilioSMSChannel() {\n      var _this$inbox$medium = this.inbox.medium,\n          medium = _this$inbox$medium === void 0 ? '' : _this$inbox$medium;\n      return this.isATwilioChannel && medium === 'sms';\n    },\n    isASmsInbox: function isASmsInbox() {\n      return this.channelType === INBOX_TYPES.SMS || this.isATwilioSMSChannel;\n    },\n    isATwilioWhatsAppChannel: function isATwilioWhatsAppChannel() {\n      var _this$inbox$medium2 = this.inbox.medium,\n          medium = _this$inbox$medium2 === void 0 ? '' : _this$inbox$medium2;\n      return this.isATwilioChannel && medium === 'whatsapp';\n    },\n    isAWhatsAppCloudChannel: function isAWhatsAppCloudChannel() {\n      return this.channelType === INBOX_TYPES.WHATSAPP && this.whatsAppAPIProvider === 'whatsapp_cloud';\n    },\n    is360DialogWhatsAppChannel: function is360DialogWhatsAppChannel() {\n      return this.channelType === INBOX_TYPES.WHATSAPP && this.whatsAppAPIProvider === 'default';\n    },\n    chatAdditionalAttributes: function chatAdditionalAttributes() {\n      var _ref = this.chat || {},\n          additionalAttributes = _ref.additional_attributes;\n\n      return additionalAttributes || {};\n    },\n    isTwitterInboxTweet: function isTwitterInboxTweet() {\n      return this.chatAdditionalAttributes.type === 'tweet';\n    },\n    twilioBadge: function twilioBadge() {\n      return \"\".concat(this.isATwilioSMSChannel ? 'sms' : 'whatsapp');\n    },\n    twitterBadge: function twitterBadge() {\n      return \"\".concat(this.isTwitterInboxTweet ? 'twitter-tweet' : 'twitter-dm');\n    },\n    facebookBadge: function facebookBadge() {\n      return this.chatAdditionalAttributes.type || 'facebook';\n    },\n    inboxBadge: function inboxBadge() {\n      var badgeKey = '';\n\n      if (this.isATwitterInbox) {\n        badgeKey = this.twitterBadge;\n      } else if (this.isAFacebookInbox) {\n        badgeKey = this.facebookBadge;\n      } else if (this.isATwilioChannel) {\n        badgeKey = this.twilioBadge;\n      } else if (this.isAWhatsAppChannel) {\n        badgeKey = 'whatsapp';\n      }\n\n      return badgeKey || this.channelType;\n    },\n    isAWhatsAppChannel: function isAWhatsAppChannel() {\n      return this.channelType === INBOX_TYPES.WHATSAPP || this.isATwilioWhatsAppChannel;\n    }\n  }\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/shared/mixins/inboxMixin.js"],"names":["INBOX_TYPES","WEB","FB","TWITTER","TWILIO","WHATSAPP","API","EMAIL","TELEGRAM","LINE","SMS","computed","channelType","inbox","channel_type","whatsAppAPIProvider","provider","isAPIInbox","isATwitterInbox","isAFacebookInbox","isAWebWidgetInbox","isATwilioChannel","isALineChannel","isAnEmailChannel","isATelegramChannel","isATwilioSMSChannel","medium","isASmsInbox","isATwilioWhatsAppChannel","isAWhatsAppCloudChannel","is360DialogWhatsAppChannel","chatAdditionalAttributes","chat","additionalAttributes","additional_attributes","isTwitterInboxTweet","type","twilioBadge","twitterBadge","facebookBadge","inboxBadge","badgeKey","isAWhatsAppChannel"],"mappings":"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","sourcesContent":["export const INBOX_TYPES = {\n  WEB: 'Channel::WebWidget',\n  FB: 'Channel::FacebookPage',\n  TWITTER: 'Channel::TwitterProfile',\n  TWILIO: 'Channel::TwilioSms',\n  WHATSAPP: 'Channel::Whatsapp',\n  API: 'Channel::Api',\n  EMAIL: 'Channel::Email',\n  TELEGRAM: 'Channel::Telegram',\n  LINE: 'Channel::Line',\n  SMS: 'Channel::Sms',\n};\n\nexport default {\n  computed: {\n    channelType() {\n      return this.inbox.channel_type;\n    },\n    whatsAppAPIProvider() {\n      return this.inbox.provider || '';\n    },\n    isAPIInbox() {\n      return this.channelType === INBOX_TYPES.API;\n    },\n    isATwitterInbox() {\n      return this.channelType === INBOX_TYPES.TWITTER;\n    },\n    isAFacebookInbox() {\n      return this.channelType === INBOX_TYPES.FB;\n    },\n    isAWebWidgetInbox() {\n      return this.channelType === INBOX_TYPES.WEB;\n    },\n    isATwilioChannel() {\n      return this.channelType === INBOX_TYPES.TWILIO;\n    },\n    isALineChannel() {\n      return this.channelType === INBOX_TYPES.LINE;\n    },\n    isAnEmailChannel() {\n      return this.channelType === INBOX_TYPES.EMAIL;\n    },\n    isATelegramChannel() {\n      return this.channelType === INBOX_TYPES.TELEGRAM;\n    },\n    isATwilioSMSChannel() {\n      const { medium: medium = '' } = this.inbox;\n      return this.isATwilioChannel && medium === 'sms';\n    },\n    isASmsInbox() {\n      return this.channelType === INBOX_TYPES.SMS || this.isATwilioSMSChannel;\n    },\n    isATwilioWhatsAppChannel() {\n      const { medium: medium = '' } = this.inbox;\n      return this.isATwilioChannel && medium === 'whatsapp';\n    },\n    isAWhatsAppCloudChannel() {\n      return (\n        this.channelType === INBOX_TYPES.WHATSAPP &&\n        this.whatsAppAPIProvider === 'whatsapp_cloud'\n      );\n    },\n    is360DialogWhatsAppChannel() {\n      return (\n        this.channelType === INBOX_TYPES.WHATSAPP &&\n        this.whatsAppAPIProvider === 'default'\n      );\n    },\n    chatAdditionalAttributes() {\n      const { additional_attributes: additionalAttributes } = this.chat || {};\n      return additionalAttributes || {};\n    },\n    isTwitterInboxTweet() {\n      return this.chatAdditionalAttributes.type === 'tweet';\n    },\n    twilioBadge() {\n      return `${this.isATwilioSMSChannel ? 'sms' : 'whatsapp'}`;\n    },\n    twitterBadge() {\n      return `${this.isTwitterInboxTweet ? 'twitter-tweet' : 'twitter-dm'}`;\n    },\n    facebookBadge() {\n      return this.chatAdditionalAttributes.type || 'facebook';\n    },\n    inboxBadge() {\n      let badgeKey = '';\n      if (this.isATwitterInbox) {\n        badgeKey = this.twitterBadge;\n      } else if (this.isAFacebookInbox) {\n        badgeKey = this.facebookBadge;\n      } else if (this.isATwilioChannel) {\n        badgeKey = this.twilioBadge;\n      } else if (this.isAWhatsAppChannel) {\n        badgeKey = 'whatsapp';\n      }\n      return badgeKey || this.channelType;\n    },\n    isAWhatsAppChannel() {\n      return (\n        this.channelType === INBOX_TYPES.WHATSAPP ||\n        this.isATwilioWhatsAppChannel\n      );\n    },\n  },\n};\n"]},"metadata":{},"sourceType":"module"}