{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport alertMixin from 'shared/mixins/alertMixin';\nimport EmojiOrIcon from 'shared/components/EmojiOrIcon';\nimport { copyTextToClipboard } from 'shared/helpers/clipboard';\nexport default {\n  components: {\n    EmojiOrIcon: EmojiOrIcon\n  },\n  mixins: [alertMixin],\n  props: {\n    href: {\n      type: String,\n      default: ''\n    },\n    icon: {\n      type: String,\n      required: true\n    },\n    emoji: {\n      type: String,\n      required: true\n    },\n    value: {\n      type: String,\n      default: ''\n    },\n    showCopy: {\n      type: Boolean,\n      default: false\n    }\n  },\n  methods: {\n    onCopy: function onCopy(e) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return copyTextToClipboard(_this.value);\n\n              case 3:\n                _this.showAlert(_this.$t('CONTACT_PANEL.COPY_SUCCESSFUL'));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"sources":["ContactInfoRow.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,OAAA,UAAA,MAAA,0BAAA;AACA,OAAA,WAAA,MAAA,+BAAA;AACA,SAAA,mBAAA,QAAA,0BAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA;AADA,GADA;AAIA,EAAA,MAAA,EAAA,CAAA,UAAA,CAJA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KALA;AASA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KATA;AAaA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAjBA,GALA;AA2BA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,kBACA,CADA,EACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,CAAA,CAAA,cAAA;AADA;AAAA,uBAEA,mBAAA,CAAA,KAAA,CAAA,KAAA,CAFA;;AAAA;AAGA,gBAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,EAAA,CAAA,+BAAA,CAAA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AALA;AA3BA,CAAA","sourcesContent":["<template>\n  <div class=\"contact-info--row\">\n    <a v-if=\"href\" :href=\"href\" class=\"contact-info--details\">\n      <emoji-or-icon :icon=\"icon\" :emoji=\"emoji\" icon-size=\"14\" />\n      <span v-if=\"value\" class=\"text-truncate\" :title=\"value\">{{ value }}</span>\n      <span v-else class=\"text-muted\">{{\n        $t('CONTACT_PANEL.NOT_AVAILABLE')\n      }}</span>\n\n      <woot-button\n        v-if=\"showCopy\"\n        type=\"submit\"\n        variant=\"clear\"\n        size=\"tiny\"\n        color-scheme=\"secondary\"\n        icon=\"clipboard\"\n        class-names=\"copy-icon\"\n        @click=\"onCopy\"\n      />\n    </a>\n\n    <div v-else class=\"contact-info--details\">\n      <emoji-or-icon :icon=\"icon\" :emoji=\"emoji\" icon-size=\"14\" />\n      <span v-if=\"value\" class=\"text-truncate\">{{ value }}</span>\n      <span v-else class=\"text-muted\">{{\n        $t('CONTACT_PANEL.NOT_AVAILABLE')\n      }}</span>\n    </div>\n  </div>\n</template>\n<script>\nimport alertMixin from 'shared/mixins/alertMixin';\nimport EmojiOrIcon from 'shared/components/EmojiOrIcon';\nimport { copyTextToClipboard } from 'shared/helpers/clipboard';\n\nexport default {\n  components: {\n    EmojiOrIcon,\n  },\n  mixins: [alertMixin],\n  props: {\n    href: {\n      type: String,\n      default: '',\n    },\n    icon: {\n      type: String,\n      required: true,\n    },\n    emoji: {\n      type: String,\n      required: true,\n    },\n    value: {\n      type: String,\n      default: '',\n    },\n    showCopy: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  methods: {\n    async onCopy(e) {\n      e.preventDefault();\n      await copyTextToClipboard(this.value);\n      this.showAlert(this.$t('CONTACT_PANEL.COPY_SUCCESSFUL'));\n    },\n  },\n};\n</script>\n<style scoped lang=\"scss\">\n.contact-info--row {\n  margin-left: var(--space-minus-smaller);\n\n  .contact-info--icon {\n    font-size: var(--font-size-default);\n    min-width: var(--space-medium);\n  }\n}\n\n.contact-info--details {\n  display: flex;\n  align-items: center;\n  margin-bottom: var(--space-small);\n  color: var(--color-body);\n\n  .copy-icon {\n    margin-left: var(--space-smaller);\n  }\n\n  &.a {\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n}\n\n.contact-info--details .icon--emoji,\n.contact-info--details .icon--font {\n  display: inline-block;\n  width: var(--space-medium);\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/conversation/contact"},"metadata":{},"sourceType":"module"}