{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nexport var pWhile = function pWhile(condition, action) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _loop;\n\n    return __generator(this, function (_a) {\n      _loop = function loop(actionResult) {\n        return __awaiter(void 0, void 0, void 0, function () {\n          var _a;\n\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                if (!condition(actionResult)) return [3\n                /*break*/\n                , 2];\n                _a = _loop;\n                return [4\n                /*yield*/\n                , action()];\n\n              case 1:\n                return [2\n                /*return*/\n                , _a.apply(void 0, [_b.sent()])];\n\n              case 2:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      };\n\n      return [2\n      /*return*/\n      , _loop(undefined)];\n    });\n  });\n};","map":null,"metadata":{},"sourceType":"module"}