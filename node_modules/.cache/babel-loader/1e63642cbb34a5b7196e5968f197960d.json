{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/* eslint-disable max-classes-per-file */\nexport var DuplicateContactException = /*#__PURE__*/function (_Error) {\n  _inherits(DuplicateContactException, _Error);\n\n  var _super = _createSuper(DuplicateContactException);\n\n  function DuplicateContactException(data) {\n    var _this;\n\n    _classCallCheck(this, DuplicateContactException);\n\n    _this = _super.call(this, 'DUPLICATE_CONTACT');\n    _this.data = data;\n    _this.name = 'DuplicateContactException';\n    return _this;\n  }\n\n  return DuplicateContactException;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nexport var ExceptionWithMessage = /*#__PURE__*/function (_Error2) {\n  _inherits(ExceptionWithMessage, _Error2);\n\n  var _super2 = _createSuper(ExceptionWithMessage);\n\n  function ExceptionWithMessage(data) {\n    var _this2;\n\n    _classCallCheck(this, ExceptionWithMessage);\n\n    _this2 = _super2.call(this, 'ERROR_WITH_MESSAGE');\n    _this2.data = data;\n    _this2.name = 'ExceptionWithMessage';\n    return _this2;\n  }\n\n  return ExceptionWithMessage;\n}( /*#__PURE__*/_wrapNativeSuper(Error));","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/shared/helpers/CustomErrors.js"],"names":["DuplicateContactException","data","name","Error","ExceptionWithMessage"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,WAAaA,yBAAb;AAAA;;AAAA;;AACE,qCAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AAChB,8BAAM,mBAAN;AACA,UAAKA,IAAL,GAAYA,IAAZ;AACA,UAAKC,IAAL,GAAY,2BAAZ;AAHgB;AAIjB;;AALH;AAAA,iCAA+CC,KAA/C;AAOA,WAAaC,oBAAb;AAAA;;AAAA;;AACE,gCAAYH,IAAZ,EAAkB;AAAA;;AAAA;;AAChB,gCAAM,oBAAN;AACA,WAAKA,IAAL,GAAYA,IAAZ;AACA,WAAKC,IAAL,GAAY,sBAAZ;AAHgB;AAIjB;;AALH;AAAA,iCAA0CC,KAA1C","sourcesContent":["/* eslint-disable max-classes-per-file */\nexport class DuplicateContactException extends Error {\n  constructor(data) {\n    super('DUPLICATE_CONTACT');\n    this.data = data;\n    this.name = 'DuplicateContactException';\n  }\n}\nexport class ExceptionWithMessage extends Error {\n  constructor(data) {\n    super('ERROR_WITH_MESSAGE');\n    this.data = data;\n    this.name = 'ExceptionWithMessage';\n  }\n}\n"]},"metadata":{},"sourceType":"module"}