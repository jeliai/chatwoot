{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ChatOption from 'shared/components/ChatOption';\nimport darkModeMixin from 'widget/mixins/darkModeMixin.js';\nexport default {\n  components: {\n    ChatOption: ChatOption\n  },\n  mixins: [darkModeMixin],\n  props: {\n    title: {\n      type: String,\n      default: ''\n    },\n    options: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    selected: {\n      type: String,\n      default: ''\n    },\n    hideFields: {\n      type: Boolean,\n      default: false\n    }\n  },\n  methods: {\n    isSelected: function isSelected(option) {\n      return this.selected === option.id;\n    },\n    onClick: function onClick(selectedOption) {\n      this.$emit('click', selectedOption);\n    }\n  }\n};","map":{"version":3,"sources":["ChatOptions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,OAAA,UAAA,MAAA,8BAAA;AACA,OAAA,aAAA,MAAA,gCAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA;AADA,GADA;AAIA,EAAA,MAAA,EAAA,CAAA,aAAA,CAJA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA,KALA;AASA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAbA,GALA;AAuBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,MADA,EACA;AACA,aAAA,KAAA,QAAA,KAAA,MAAA,CAAA,EAAA;AACA,KAHA;AAIA,IAAA,OAJA,mBAIA,cAJA,EAIA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,cAAA;AACA;AANA;AAvBA,CAAA","sourcesContent":["<template>\n  <div\n    class=\"options-message chat-bubble agent\"\n    :class=\"$dm('bg-white', 'dark:bg-slate-700')\"\n  >\n    <div class=\"card-body\">\n      <h4 class=\"title\" :class=\"$dm('text-black-900', 'dark:text-slate-50')\">\n        {{ title }}\n      </h4>\n      <ul\n        v-if=\"!hideFields\"\n        class=\"options\"\n        :class=\"{ 'has-selected': !!selected }\"\n      >\n        <chat-option\n          v-for=\"option in options\"\n          :key=\"option.id\"\n          :action=\"option\"\n          :is-selected=\"isSelected(option)\"\n          @click=\"onClick\"\n        />\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ChatOption from 'shared/components/ChatOption';\nimport darkModeMixin from 'widget/mixins/darkModeMixin.js';\n\nexport default {\n  components: {\n    ChatOption,\n  },\n  mixins: [darkModeMixin],\n  props: {\n    title: {\n      type: String,\n      default: '',\n    },\n    options: {\n      type: Array,\n      default: () => [],\n    },\n    selected: {\n      type: String,\n      default: '',\n    },\n    hideFields: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  methods: {\n    isSelected(option) {\n      return this.selected === option.id;\n    },\n    onClick(selectedOption) {\n      this.$emit('click', selectedOption);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import '~dashboard/assets/scss/variables.scss';\n.has-selected {\n  .option-button:not(.is-selected) {\n    color: $color-light-gray;\n    cursor: initial;\n  }\n}\n</style>\n<style scoped lang=\"scss\">\n@import '~widget/assets/scss/variables.scss';\n\n.options-message {\n  max-width: 17rem;\n  padding: $space-small $space-normal;\n  border-radius: $space-small;\n  overflow: hidden;\n\n  .title {\n    font-size: $font-size-default;\n    font-weight: $font-weight-normal;\n    margin-top: $space-smaller;\n    margin-bottom: $space-smaller;\n    line-height: 1.5;\n  }\n\n  .options {\n    width: 100%;\n\n    > li {\n      list-style: none;\n      padding: 0;\n    }\n  }\n}\n</style>\n"],"sourceRoot":"app/javascript/shared/components"},"metadata":{},"sourceType":"module"}