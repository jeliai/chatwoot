{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.filter.js\";\nexport var getters = {\n  uiFlags: function uiFlags(state) {\n    return function (helpCenterId) {\n      var uiFlags = state.categories.uiFlags.byId[helpCenterId];\n      if (uiFlags) return uiFlags;\n      return {\n        isFetching: false,\n        isUpdating: false,\n        isDeleting: false\n      };\n    };\n  },\n  isFetching: function isFetching(state) {\n    return state.uiFlags.isFetching;\n  },\n  categoryById: function categoryById() {\n    for (var _len = arguments.length, getterArguments = new Array(_len), _key = 0; _key < _len; _key++) {\n      getterArguments[_key] = arguments[_key];\n    }\n\n    return function (categoryId) {\n      var state = getterArguments[0];\n      var category = state.categories.byId[categoryId];\n      if (!category) return undefined;\n      return category;\n    };\n  },\n  allCategories: function allCategories() {\n    for (var _len2 = arguments.length, getterArguments = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      getterArguments[_key2] = arguments[_key2];\n    }\n\n    var state = getterArguments[0],\n        _getters = getterArguments[1];\n    var categories = state.categories.allIds.map(function (id) {\n      return _getters.categoryById(id);\n    });\n    return categories;\n  },\n  categoriesByLocaleCode: function categoriesByLocaleCode() {\n    for (var _len3 = arguments.length, getterArguments = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      getterArguments[_key3] = arguments[_key3];\n    }\n\n    return function (localeCode) {\n      var state = getterArguments[0],\n          _getters = getterArguments[1];\n      var categories = state.categories.allIds.map(function (id) {\n        return _getters.categoryById(id);\n      });\n      return categories.filter(function (category) {\n        return category.locale === localeCode;\n      });\n    };\n  },\n  getMeta: function getMeta(state) {\n    return state.meta;\n  }\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/store/modules/helpCenterCategories/getters.js"],"names":["getters","uiFlags","state","helpCenterId","categories","byId","isFetching","isUpdating","isDeleting","categoryById","getterArguments","categoryId","category","undefined","allCategories","_getters","allIds","map","id","categoriesByLocaleCode","localeCode","filter","locale","getMeta","meta"],"mappings":";;AAAA,OAAO,IAAMA,OAAO,GAAG;AACrBC,EAAAA,OAAO,EAAE,iBAAAC,KAAK;AAAA,WAAI,UAAAC,YAAY,EAAI;AAChC,UAAMF,OAAO,GAAGC,KAAK,CAACE,UAAN,CAAiBH,OAAjB,CAAyBI,IAAzB,CAA8BF,YAA9B,CAAhB;AACA,UAAIF,OAAJ,EAAa,OAAOA,OAAP;AACb,aAAO;AAAEK,QAAAA,UAAU,EAAE,KAAd;AAAqBC,QAAAA,UAAU,EAAE,KAAjC;AAAwCC,QAAAA,UAAU,EAAE;AAApD,OAAP;AACD,KAJa;AAAA,GADO;AAMrBF,EAAAA,UAAU,EAAE,oBAAAJ,KAAK;AAAA,WAAIA,KAAK,CAACD,OAAN,CAAcK,UAAlB;AAAA,GANI;AAOrBG,EAAAA,YAAY,EAAE;AAAA,sCAAIC,eAAJ;AAAIA,MAAAA,eAAJ;AAAA;;AAAA,WAAwB,UAAAC,UAAU,EAAI;AAClD,UAAOT,KAAP,GAAgBQ,eAAhB;AACA,UAAME,QAAQ,GAAGV,KAAK,CAACE,UAAN,CAAiBC,IAAjB,CAAsBM,UAAtB,CAAjB;AACA,UAAI,CAACC,QAAL,EAAe,OAAOC,SAAP;AACf,aAAOD,QAAP;AACD,KALa;AAAA,GAPO;AAarBE,EAAAA,aAAa,EAAE,yBAAwB;AAAA,uCAApBJ,eAAoB;AAApBA,MAAAA,eAAoB;AAAA;;AACrC,QAAOR,KAAP,GAA0BQ,eAA1B;AAAA,QAAcK,QAAd,GAA0BL,eAA1B;AACA,QAAMN,UAAU,GAAGF,KAAK,CAACE,UAAN,CAAiBY,MAAjB,CAAwBC,GAAxB,CAA4B,UAAAC,EAAE,EAAI;AACnD,aAAOH,QAAQ,CAACN,YAAT,CAAsBS,EAAtB,CAAP;AACD,KAFkB,CAAnB;AAGA,WAAOd,UAAP;AACD,GAnBoB;AAoBrBe,EAAAA,sBAAsB,EAAE;AAAA,uCAAIT,eAAJ;AAAIA,MAAAA,eAAJ;AAAA;;AAAA,WAAwB,UAAAU,UAAU,EAAI;AAC5D,UAAOlB,KAAP,GAA0BQ,eAA1B;AAAA,UAAcK,QAAd,GAA0BL,eAA1B;AACA,UAAMN,UAAU,GAAGF,KAAK,CAACE,UAAN,CAAiBY,MAAjB,CAAwBC,GAAxB,CAA4B,UAAAC,EAAE,EAAI;AACnD,eAAOH,QAAQ,CAACN,YAAT,CAAsBS,EAAtB,CAAP;AACD,OAFkB,CAAnB;AAGA,aAAOd,UAAU,CAACiB,MAAX,CAAkB,UAAAT,QAAQ;AAAA,eAAIA,QAAQ,CAACU,MAAT,KAAoBF,UAAxB;AAAA,OAA1B,CAAP;AACD,KANuB;AAAA,GApBH;AA2BrBG,EAAAA,OAAO,EAAE,iBAAArB,KAAK,EAAI;AAChB,WAAOA,KAAK,CAACsB,IAAb;AACD;AA7BoB,CAAhB","sourcesContent":["export const getters = {\n  uiFlags: state => helpCenterId => {\n    const uiFlags = state.categories.uiFlags.byId[helpCenterId];\n    if (uiFlags) return uiFlags;\n    return { isFetching: false, isUpdating: false, isDeleting: false };\n  },\n  isFetching: state => state.uiFlags.isFetching,\n  categoryById: (...getterArguments) => categoryId => {\n    const [state] = getterArguments;\n    const category = state.categories.byId[categoryId];\n    if (!category) return undefined;\n    return category;\n  },\n  allCategories: (...getterArguments) => {\n    const [state, _getters] = getterArguments;\n    const categories = state.categories.allIds.map(id => {\n      return _getters.categoryById(id);\n    });\n    return categories;\n  },\n  categoriesByLocaleCode: (...getterArguments) => localeCode => {\n    const [state, _getters] = getterArguments;\n    const categories = state.categories.allIds.map(id => {\n      return _getters.categoryById(id);\n    });\n    return categories.filter(category => category.locale === localeCode);\n  },\n  getMeta: state => {\n    return state.meta;\n  },\n};\n"]},"metadata":{},"sourceType":"module"}