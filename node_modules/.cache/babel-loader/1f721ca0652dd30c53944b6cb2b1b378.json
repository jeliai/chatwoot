{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\nvar _mutations;\n\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport Vue from 'vue';\nimport TeamsAPI from '../../api/teams';\nexport var SET_TEAM_MEMBERS_UI_FLAG = 'SET_TEAM_MEMBERS_UI_FLAG';\nexport var ADD_AGENTS_TO_TEAM = 'ADD_AGENTS_TO_TEAM';\nexport var state = {\n  records: {},\n  uiFlags: {\n    isFetching: false,\n    isCreating: false,\n    isUpdating: false,\n    isDeleting: false\n  }\n};\nexport var getters = {\n  getUIFlags: function getUIFlags(_state) {\n    return _state.uiFlags;\n  },\n  getTeamMembers: function getTeamMembers($state) {\n    return function (id) {\n      return $state.records[id] || [];\n    };\n  }\n};\nexport var actions = {\n  get: function () {\n    var _get = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref, _ref2) {\n      var commit, teamId, _yield$TeamsAPI$getAg, data;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              teamId = _ref2.teamId;\n              commit(SET_TEAM_MEMBERS_UI_FLAG, {\n                isFetching: true\n              });\n              _context.prev = 3;\n              _context.next = 6;\n              return TeamsAPI.getAgents({\n                teamId: teamId\n              });\n\n            case 6:\n              _yield$TeamsAPI$getAg = _context.sent;\n              data = _yield$TeamsAPI$getAg.data;\n              commit(ADD_AGENTS_TO_TEAM, {\n                data: data,\n                teamId: teamId\n              });\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](3);\n              throw new Error(_context.t0);\n\n            case 14:\n              _context.prev = 14;\n              commit(SET_TEAM_MEMBERS_UI_FLAG, {\n                isFetching: false\n              });\n              return _context.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 11, 14, 17]]);\n    }));\n\n    function get(_x, _x2) {\n      return _get.apply(this, arguments);\n    }\n\n    return get;\n  }(),\n  create: function () {\n    var _create = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref3, _ref4) {\n      var commit, agentsList, teamId, _yield$TeamsAPI$addAg, data;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref3.commit;\n              agentsList = _ref4.agentsList, teamId = _ref4.teamId;\n              commit(SET_TEAM_MEMBERS_UI_FLAG, {\n                isCreating: true\n              });\n              _context2.prev = 3;\n              _context2.next = 6;\n              return TeamsAPI.addAgents({\n                agentsList: agentsList,\n                teamId: teamId\n              });\n\n            case 6:\n              _yield$TeamsAPI$addAg = _context2.sent;\n              data = _yield$TeamsAPI$addAg.data;\n              commit(ADD_AGENTS_TO_TEAM, {\n                teamId: teamId,\n                data: data\n              });\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](3);\n              throw new Error(_context2.t0);\n\n            case 14:\n              _context2.prev = 14;\n              commit(SET_TEAM_MEMBERS_UI_FLAG, {\n                isCreating: false\n              });\n              return _context2.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[3, 11, 14, 17]]);\n    }));\n\n    function create(_x3, _x4) {\n      return _create.apply(this, arguments);\n    }\n\n    return create;\n  }(),\n  update: function () {\n    var _update = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(_ref5, _ref6) {\n      var commit, agentsList, teamId, response;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref5.commit;\n              agentsList = _ref6.agentsList, teamId = _ref6.teamId;\n              commit(SET_TEAM_MEMBERS_UI_FLAG, {\n                isUpdating: true\n              });\n              _context3.prev = 3;\n              _context3.next = 6;\n              return TeamsAPI.updateAgents({\n                agentsList: agentsList,\n                teamId: teamId\n              });\n\n            case 6:\n              response = _context3.sent;\n              commit(ADD_AGENTS_TO_TEAM, response);\n              _context3.next = 13;\n              break;\n\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](3);\n              throw new Error(_context3.t0);\n\n            case 13:\n              _context3.prev = 13;\n              commit(SET_TEAM_MEMBERS_UI_FLAG, {\n                isUpdating: false\n              });\n              return _context3.finish(13);\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[3, 10, 13, 16]]);\n    }));\n\n    function update(_x5, _x6) {\n      return _update.apply(this, arguments);\n    }\n\n    return update;\n  }()\n};\nexport var mutations = (_mutations = {}, _defineProperty(_mutations, SET_TEAM_MEMBERS_UI_FLAG, function ($state, data) {\n  $state.uiFlags = _objectSpread(_objectSpread({}, $state.uiFlags), data);\n}), _defineProperty(_mutations, ADD_AGENTS_TO_TEAM, function ($state, _ref7) {\n  var data = _ref7.data,\n      teamId = _ref7.teamId;\n  Vue.set($state.records, teamId, data);\n}), _mutations);\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/store/modules/teamMembers.js"],"names":["Vue","TeamsAPI","SET_TEAM_MEMBERS_UI_FLAG","ADD_AGENTS_TO_TEAM","state","records","uiFlags","isFetching","isCreating","isUpdating","isDeleting","getters","getUIFlags","_state","getTeamMembers","$state","id","actions","get","commit","teamId","getAgents","data","Error","create","agentsList","addAgents","update","updateAgents","response","mutations","set","namespaced"],"mappings":"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","sourcesContent":["import Vue from 'vue';\nimport TeamsAPI from '../../api/teams';\n\nexport const SET_TEAM_MEMBERS_UI_FLAG = 'SET_TEAM_MEMBERS_UI_FLAG';\nexport const ADD_AGENTS_TO_TEAM = 'ADD_AGENTS_TO_TEAM';\n\nexport const state = {\n  records: {},\n  uiFlags: {\n    isFetching: false,\n    isCreating: false,\n    isUpdating: false,\n    isDeleting: false,\n  },\n};\n\nexport const getters = {\n  getUIFlags(_state) {\n    return _state.uiFlags;\n  },\n  getTeamMembers: $state => id => {\n    return $state.records[id] || [];\n  },\n};\n\nexport const actions = {\n  get: async ({ commit }, { teamId }) => {\n    commit(SET_TEAM_MEMBERS_UI_FLAG, { isFetching: true });\n    try {\n      const { data } = await TeamsAPI.getAgents({ teamId });\n      commit(ADD_AGENTS_TO_TEAM, { data, teamId });\n    } catch (error) {\n      throw new Error(error);\n    } finally {\n      commit(SET_TEAM_MEMBERS_UI_FLAG, { isFetching: false });\n    }\n  },\n  create: async ({ commit }, { agentsList, teamId }) => {\n    commit(SET_TEAM_MEMBERS_UI_FLAG, { isCreating: true });\n    try {\n      const { data } = await TeamsAPI.addAgents({ agentsList, teamId });\n      commit(ADD_AGENTS_TO_TEAM, { teamId, data });\n    } catch (error) {\n      throw new Error(error);\n    } finally {\n      commit(SET_TEAM_MEMBERS_UI_FLAG, { isCreating: false });\n    }\n  },\n  update: async ({ commit }, { agentsList, teamId }) => {\n    commit(SET_TEAM_MEMBERS_UI_FLAG, { isUpdating: true });\n    try {\n      const response = await TeamsAPI.updateAgents({\n        agentsList,\n        teamId,\n      });\n      commit(ADD_AGENTS_TO_TEAM, response);\n    } catch (error) {\n      throw new Error(error);\n    } finally {\n      commit(SET_TEAM_MEMBERS_UI_FLAG, { isUpdating: false });\n    }\n  },\n};\n\nexport const mutations = {\n  [SET_TEAM_MEMBERS_UI_FLAG]($state, data) {\n    $state.uiFlags = {\n      ...$state.uiFlags,\n      ...data,\n    };\n  },\n  [ADD_AGENTS_TO_TEAM]($state, { data, teamId }) {\n    Vue.set($state.records, teamId, data);\n  },\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations,\n};\n"]},"metadata":{},"sourceType":"module"}