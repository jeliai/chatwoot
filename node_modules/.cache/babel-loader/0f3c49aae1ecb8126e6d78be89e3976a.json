{"ast":null,"code":"function e(e) {\n  return \"string\" == typeof e ? e[0].toUpperCase() + e.substr(1) : e;\n}\n\nvar r = {\n  accepted: function accepted(e) {\n    return \"من فضلك اقبل ال \" + e.name;\n  },\n  after: function after(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" يجب أن يأتي بعد \" + a[0] + \".\" : e(n) + \" يجب أن يكون تاريخ أحدث\";\n  },\n  alpha: function alpha(r) {\n    return e(r.name) + \" يجب أن يحتوى على حروف أبجدية فقط.\";\n  },\n  alphanumeric: function alphanumeric(r) {\n    return e(r.name) + \" يمكن أن يحتوي على حروف أبجدية أو أرقام فقط.\";\n  },\n  before: function before(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" يجب أن يكون قبل \" + a[0] + \".\" : e(n) + \" يجب أن يكون تاريخ أقدم\";\n  },\n  between: function between(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args,\n        i = !(!Array.isArray(t) || !t[2]) && t[2];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" يجب أن يقع بين \" + t[0] + \" و \" + t[1] + \".\" : e(n) + \" يجب ان يكون طوله بين \" + t[0] + \" و \" + t[1] + \" حرف.\";\n  },\n  confirm: function confirm(r) {\n    var n = r.name;\n    r.args;\n    return e(n) + \" غير متطابق.\";\n  },\n  date: function date(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" ليس على الصيغة الصحيحة, من فضلك استخدم هذه الصيغة \" + a[0] : e(n) + \" ليس على الصيغة الصحيحة.\";\n  },\n  default: function _default(e) {\n    e.name;\n    return \"هذه القيمة غير مناسبة.\";\n  },\n  email: function email(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” ليس عنوان بريد الكتروني.\" : \"من فضلك أدخل عنوان بريد الكتروني مناسب.\";\n  },\n  endsWith: function endsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” لا تنتهي بنهاية صحيحة.\" : \"نهاية هذه القيمة ليست صحيحة.\";\n  },\n  in: function _in(r) {\n    var n = r.name,\n        a = r.value;\n    return \"string\" == typeof a && a ? \"“\" + e(a) + \"” ليس \" + n + \" صحيح.\" : \"هذه القيمة ليست \" + n + \" صحيح.\";\n  },\n  matches: function matches(r) {\n    return e(r.name) + \" ليست قيمة مسموح بها.\";\n  },\n  max: function max(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"يمكنك فقط ان تختار \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" لا يمكن أن يتجاوز \" + t[0] + \".\" : e(n) + \" لا يجب ان يزيد طوله عن \" + t[0] + \" حرف.\";\n  },\n  mime: function mime(r) {\n    var n = r.name,\n        a = r.args;\n    return e(n) + \" يجب ان يكون من نوع \" + (a[0] || \"لا يسمح بأي نوع.\");\n  },\n  min: function min(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"يجب أن تختار على الأقل \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" يجب أن يكون أكبر من \" + t[0] + \".\" : e(n) + \" يجب أن يكون طوله أكبر من \" + t[0] + \" حرف.\";\n  },\n  not: function not(e) {\n    var r = e.name;\n    return \"“\" + e.value + \"” ليست قيمة مسموح بها ك\" + r + \".\";\n  },\n  number: function number(r) {\n    return e(r.name) + \" يجب أن يكون رقم.\";\n  },\n  required: function required(r) {\n    return e(r.name) + \" ضروري.\";\n  },\n  startsWith: function startsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” لا تبدأ بقيمة صحيحة.\" : \"هذه القيمة لا تبدأ بقيمة صحيحة.\";\n  },\n  url: function url(e) {\n    e.name;\n    return \"من فضلك أدخل رابط صحيح.\";\n  }\n};\n\nfunction n(e) {\n  var n;\n  e.extend({\n    locales: (n = {}, n.ar = r, n)\n  });\n}\n\nvar a = {\n  accepted: function accepted(e) {\n    return \"Si us plau accepta els \" + e.name + \".\";\n  },\n  after: function after(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" ha de ser després de \" + a[0] + \".\" : e(n) + \" ha de ser una data posterior.\";\n  },\n  alpha: function alpha(r) {\n    return e(r.name) + \" només pot contenir lletres.\";\n  },\n  alphanumeric: function alphanumeric(r) {\n    return e(r.name) + \" només pot contenir lletres i números.\";\n  },\n  before: function before(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" ha de ser abans de \" + a[0] + \".\" : e(n) + \" ha de ser una data anterior\";\n  },\n  between: function between(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args,\n        i = !(!Array.isArray(t) || !t[2]) && t[2];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" ha d'estar entre \" + t[0] + \" i \" + t[1] + \".\" : e(n) + \" ha de tenir entre \" + t[0] + \" i \" + t[1] + \" caràcters.\";\n  },\n  confirm: function confirm(r) {\n    var n = r.name;\n    r.args;\n    return e(n) + \" no coincideix.\";\n  },\n  date: function date(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" no és una data vàlida, si us plau usi el format \" + a[0] : e(n) + \" no és una data vàlida.\";\n  },\n  default: function _default(e) {\n    e.name;\n    return \"Aquest camp no és vàlid.\";\n  },\n  email: function email(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” no és un correu electrònic vàlid.\" : \"Si us plau introdueixi un correu electrònic vàlid.\";\n  },\n  endsWith: function endsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” no acaba en un valor vàlid.\" : \"Aquest camp no acaba en un valor vàlid.\";\n  },\n  in: function _in(r) {\n    var n = r.name,\n        a = r.value;\n    return \"string\" == typeof a && a ? \"“\" + e(a) + \"” no és un \" + n + \" permès.\" : \"Això no és un \" + n + \" permès.\";\n  },\n  matches: function matches(r) {\n    return e(r.name) + \" no és un valor permès.\";\n  },\n  max: function max(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Només pots seleccionar \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" ha de ser menor o igual que \" + t[0] + \".\" : e(n) + \" ha de ser menor o igual que \" + t[0] + \" caràcters.\";\n  },\n  mime: function mime(r) {\n    var n = r.name,\n        a = r.args;\n    return e(n) + \" ha de ser de tipus: \" + (a[0] || \"No es permet el format d'arxius.\");\n  },\n  min: function min(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Necessites almenys \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" ha de contenir almenys \" + t[0] + \".\" : e(n) + \" ha de contenir almenys \" + t[0] + \" caràcters.\";\n  },\n  not: function not(e) {\n    var r = e.name;\n    return \"“\" + e.value + \"” no és un \" + r + \" permès.\";\n  },\n  number: function number(r) {\n    return e(r.name) + \" ha de ser un número.\";\n  },\n  required: function required(r) {\n    return e(r.name) + \" és requerit.\";\n  },\n  startsWith: function startsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” no comença amb un valor vàlid.\" : \"Aquest camp no comença amb un valor vàlid.\";\n  },\n  url: function url(e) {\n    e.name;\n    return \"Si us plau introdueixi una url vàlida.\";\n  }\n};\n\nfunction t(e) {\n  var r;\n  e.extend({\n    locales: (r = {}, r.ca = a, r)\n  });\n}\n\nvar i = {\n  accepted: function accepted(e) {\n    return \"Prosím potvrďte \" + e.name + \".\";\n  },\n  after: function after(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" musí bý po \" + a[0] + \".\" : e(n) + \" musí být pozdější datum.\";\n  },\n  alpha: function alpha(r) {\n    return e(r.name) + \" může obsahovat pouze písmena.\";\n  },\n  alphanumeric: function alphanumeric(r) {\n    return e(r.name) + \" může obsahovat pouze písmena a čísla.\";\n  },\n  before: function before(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" musí být před \" + a[0] + \".\" : e(n) + \" musí být dřívější datum.\";\n  },\n  between: function between(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args,\n        i = !(!Array.isArray(t) || !t[2]) && t[2];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" musí být mezi \" + t[0] + \" a \" + t[1] + \".\" : e(n) + \" délka musí být mezi \" + t[0] + \" a \" + t[1] + \" znaky.\";\n  },\n  confirm: function confirm(r) {\n    var n = r.name;\n    r.args;\n    return e(n) + \" se neshoduje.\";\n  },\n  date: function date(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" není platné datum, použijte formát \" + a[0] : e(n) + \" není platné datum.\";\n  },\n  default: function _default(e) {\n    e.name;\n    return \"Toto pole není vyplěno správně.\";\n  },\n  email: function email(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” není platná e-mailová adresa.\" : \"Zadejte platnou e-mailovou adresu.\";\n  },\n  endsWith: function endsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” nekončí správnou hodnotou.\" : \"Toto pole nekončí správnou hodnotou.\";\n  },\n  in: function _in(r) {\n    var n = r.name,\n        a = r.value;\n    return \"string\" == typeof a && a ? \"“\" + e(a) + \"” není povolená hodnota \" + n + \".\" : \"Toto není povolená hodnota \" + n + \".\";\n  },\n  matches: function matches(r) {\n    return e(r.name) + \" není povolená hodnota.\";\n  },\n  max: function max(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Můžete vybrat pouze \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" musí být menší nebo rovno \" + t[0] + \".\" : e(n) + \" musí být menší nebo rovno \" + t[0] + \" znaků.\";\n  },\n  mime: function mime(r) {\n    var n = r.name,\n        a = r.args;\n    return e(n) + \" musí být typ: \" + (a[0] || \"Žádné typy souborů nejsou povolené.\");\n  },\n  min: function min(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Je potřeba nejméně \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" musí být nejméně \" + t[0] + \".\" : e(n) + \" musí být nejméně \" + t[0] + \" znaků.\";\n  },\n  not: function not(e) {\n    var r = e.name;\n    return \"“\" + e.value + \"” není povolená hodnota \" + r + \".\";\n  },\n  number: function number(r) {\n    return e(r.name) + \" musí být číslo.\";\n  },\n  required: function required(r) {\n    return \"Pole \" + e(r.name) + \" je povinné.\";\n  },\n  startsWith: function startsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” nezačíná platnou hodnotou.\" : \"Toto pole nezačíná platnou hodnotou.\";\n  },\n  url: function url(e) {\n    e.name;\n    return \"Zadejte platnou URL adresu.\";\n  }\n};\n\nfunction u(e) {\n  var r;\n  e.extend({\n    locales: (r = {}, r.cs = i, r)\n  });\n}\n\nvar o = {\n  accepted: function accepted(e) {\n    return \"Accepter venligst \" + e.name + \".\";\n  },\n  after: function after(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" skal være efter \" + a[0] + \".\" : e(n) + \" skal være en senere dato.\";\n  },\n  alpha: function alpha(r) {\n    return e(r.name) + \" kan kun indeholde bogstaver.\";\n  },\n  alphanumeric: function alphanumeric(r) {\n    return e(r.name) + \" kan kun indeholde bogstaver og tal.\";\n  },\n  before: function before(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" skal være før \" + a[0] + \".\" : e(n) + \" skal være en tidligere dato.\";\n  },\n  between: function between(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args,\n        i = !(!Array.isArray(t) || !t[2]) && t[2];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" skal være mellem \" + t[0] + \" og \" + t[1] + \".\" : e(n) + \" skal være mellem \" + t[0] + \" og \" + t[1] + \" tegn.\";\n  },\n  confirm: function confirm(r) {\n    var n = r.name;\n    r.args;\n    return e(n) + \" matcher ikke.\";\n  },\n  date: function date(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" er ikke gyldig, brug venligst formatet \" + a[0] : e(n) + \" er ikke en gyldig dato.\";\n  },\n  default: function _default(e) {\n    e.name;\n    return \"Dette felt er ikke gyldigt.\";\n  },\n  email: function email(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” er ikke en gyldig email-adresse.\" : \"Indtast venligst en gyldig email-adresse.\";\n  },\n  endsWith: function endsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” slutter ikke med en gyldig værdi.\" : \"Dette felt slutter ikke med en gyldig værdi.\";\n  },\n  in: function _in(r) {\n    var n = r.name,\n        a = r.value;\n    return \"string\" == typeof a && a ? \"“\" + e(a) + \"” er ikke en tilladt \" + n + \".\" : \"Dette er ikke en tilladt \" + n + \".\";\n  },\n  matches: function matches(r) {\n    return e(r.name) + \" er ikke en gyldig værdi.\";\n  },\n  max: function max(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Du kan kun vælge \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" skal være mindre end eller lig \" + t[0] + \".\" : e(n) + \" skal være mindre end eller lig \" + t[0] + \" tegn.\";\n  },\n  mime: function mime(r) {\n    var n = r.name,\n        a = r.args;\n    return e(n) + \" skal være af typen: \" + (a[0] || \"Ingen tilladte filformater.\");\n  },\n  min: function min(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Du skal vælge mindst \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" skal være mere end \" + t[0] + \".\" : e(n) + \" skal være mere end \" + t[0] + \" tegn.\";\n  },\n  not: function not(e) {\n    var r = e.name;\n    return \"“\" + e.value + \"” er ikke en gyldig \" + r + \".\";\n  },\n  number: function number(r) {\n    return e(r.name) + \" skal være et tal.\";\n  },\n  required: function required(r) {\n    return e(r.name) + \" er påkrævet.\";\n  },\n  startsWith: function startsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” starter ikke med en gyldig værdi.\" : \"Dette felt starter ikke med en gyldig værdi.\";\n  },\n  url: function url(e) {\n    e.name;\n    return \"Indtast venligst en gyldig URL.\";\n  }\n};\n\nfunction s(e) {\n  var r;\n  e.extend({\n    locales: (r = {}, r.da = o, r)\n  });\n}\n\nvar l = {\n  accepted: function accepted(e) {\n    return e.name + \" erfordert Zustimmung.\";\n  },\n  after: function after(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" muss auf \" + a[0] + \" folgen.\" : e(n) + \" muss ein späteres Datum sein.\";\n  },\n  alpha: function alpha(r) {\n    return e(r.name) + \" darf nur Buchstaben enthalten.\";\n  },\n  alphanumeric: function alphanumeric(r) {\n    return e(r.name) + \" darf nur Buchstaben und Zahlen enthalten.\";\n  },\n  before: function before(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" muss vor \" + a[0] + \" sein.\" : e(n) + \" muss ein früheres Datum sein.\";\n  },\n  between: function between(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args,\n        i = !(!Array.isArray(t) || !t[2]) && t[2];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" muss zwischen \" + t[0] + \" und \" + t[1] + \".\" : e(n) + \" muss zwischen \" + t[0] + \" und \" + t[1] + \" Zeichen lang sein.\";\n  },\n  confirm: function confirm(r) {\n    var n = r.name;\n    r.args;\n    return e(n) + \" stimmt nicht überein.\";\n  },\n  date: function date(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" ist nicht korrekt, bitte das Format \" + a[0] + \" benutzen.\" : e(n) + \" ist kein gültiges Datum.\";\n  },\n  default: function _default(e) {\n    e.name;\n    return \"Das Feld hat einen Fehler.\";\n  },\n  email: function email(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"„\" + r + \"“ ist keine gültige E-Mail-Adresse.\" : \"Bitte eine gültige E-Mail-Adresse eingeben.\";\n  },\n  endsWith: function endsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"„\" + r + \"” endet nicht mit einem gültigen Wert.\" : \"Dieses Feld endet nicht mit einem gültigen Wert\";\n  },\n  in: function _in(r) {\n    var n = r.name,\n        a = r.value;\n    return \"string\" == typeof a && a ? \"„\" + e(a) + \"“ ist kein gültiger Wert für \" + n + \".\" : \"Dies ist kein gültiger Wert für \" + n + \".\";\n  },\n  matches: function matches(r) {\n    return e(r.name) + \" ist kein gültiger Wert.\";\n  },\n  max: function max(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Es dürfen nur \" + t[0] + \" \" + n + \" ausgewählt werden.\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" muss kleiner oder gleich \" + t[0] + \" sein.\" : e(n) + \" muss \" + t[0] + \" oder weniger Zeichen lang sein.\";\n  },\n  mime: function mime(r) {\n    var n = r.name,\n        a = r.args;\n    return e(n) + \" muss den Typ \" + (a[0] || \"Keine Dateien erlaubt\") + \" haben.\";\n  },\n  min: function min(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Es müssen mindestens \" + t[0] + \" \" + n + \" ausgewählt werden.\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" muss größer als \" + t[0] + \" sein.\" : e(n) + \" muss \" + t[0] + \" oder mehr Zeichen lang sein.\";\n  },\n  not: function not(e) {\n    var r = e.name;\n    return \"„\" + e.value + \"“ ist kein erlaubter Wert für \" + r + \".\";\n  },\n  number: function number(r) {\n    return e(r.name) + \" muss eine Zahl sein.\";\n  },\n  required: function required(r) {\n    return e(r.name) + \" ist ein Pflichtfeld.\";\n  },\n  startsWith: function startsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"„\" + r + \"” beginnt nicht mit einem gültigen Wert\" : \"Dieses Feld beginnt nicht mit einem gültigen Wert\";\n  },\n  url: function url(r) {\n    return e(r.name) + \" muss eine gültige URL sein.\";\n  }\n};\n\nfunction m(e) {\n  var r;\n  e.extend({\n    locales: (r = {}, r.de = l, r)\n  });\n}\n\nvar v = {\n  accepted: function accepted(e) {\n    return \"Please accept the \" + e.name + \".\";\n  },\n  after: function after(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" must be after \" + a[0] + \".\" : e(n) + \" must be a later date.\";\n  },\n  alpha: function alpha(r) {\n    return e(r.name) + \" can only contain alphabetical characters.\";\n  },\n  alphanumeric: function alphanumeric(r) {\n    return e(r.name) + \" can only contain letters and numbers.\";\n  },\n  before: function before(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" must be before \" + a[0] + \".\" : e(n) + \" must be an earlier date.\";\n  },\n  between: function between(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args,\n        i = !(!Array.isArray(t) || !t[2]) && t[2];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" must be between \" + t[0] + \" and \" + t[1] + \".\" : e(n) + \" must be between \" + t[0] + \" and \" + t[1] + \" characters long.\";\n  },\n  confirm: function confirm(r) {\n    var n = r.name;\n    r.args;\n    return e(n) + \" does not match.\";\n  },\n  date: function date(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" is not a valid date, please use the format \" + a[0] : e(n) + \" is not a valid date.\";\n  },\n  default: function _default(e) {\n    e.name;\n    return \"This field isn’t valid.\";\n  },\n  email: function email(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” is not a valid email address.\" : \"Please enter a valid email address.\";\n  },\n  endsWith: function endsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” doesn’t end with a valid value.\" : \"This field doesn’t end with a valid value.\";\n  },\n  in: function _in(r) {\n    var n = r.name,\n        a = r.value;\n    return \"string\" == typeof a && a ? \"“\" + e(a) + \"” is not an allowed \" + n + \".\" : \"This is not an allowed \" + n + \".\";\n  },\n  matches: function matches(r) {\n    return e(r.name) + \" is not an allowed value.\";\n  },\n  max: function max(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"You may only select \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" must be less than or equal to \" + t[0] + \".\" : e(n) + \" must be less than or equal to \" + t[0] + \" characters long.\";\n  },\n  mime: function mime(r) {\n    var n = r.name,\n        a = r.args;\n    return e(n) + \" must be of the type: \" + (a[0] || \"No file formats allowed.\");\n  },\n  min: function min(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"You need at least \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" must be at least \" + t[0] + \".\" : e(n) + \" must be at least \" + t[0] + \" characters long.\";\n  },\n  not: function not(e) {\n    var r = e.name;\n    return \"“\" + e.value + \"” is not an allowed \" + r + \".\";\n  },\n  number: function number(r) {\n    return e(r.name) + \" must be a number.\";\n  },\n  required: function required(r) {\n    return e(r.name) + \" is required.\";\n  },\n  startsWith: function startsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” doesn’t start with a valid value.\" : \"This field doesn’t start with a valid value.\";\n  },\n  url: function url(e) {\n    e.name;\n    return \"Please include a valid url.\";\n  }\n};\n\nfunction c(e) {\n  var r;\n  e.extend({\n    locales: (r = {}, r.en = v, r)\n  });\n}\n\nvar f = {\n  accepted: function accepted(e) {\n    return \"Por favor acepta los \" + e.name + \".\";\n  },\n  after: function after(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" debe ser luego de \" + a[0] + \".\" : e(n) + \" debe ser una fecha posterior.\";\n  },\n  alpha: function alpha(r) {\n    return e(r.name) + \" solo puede contener letras.\";\n  },\n  alphanumeric: function alphanumeric(r) {\n    return e(r.name) + \" solo puede contener letras y números.\";\n  },\n  before: function before(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" debe ser antes de \" + a[0] + \".\" : e(n) + \" debe ser una fecha anterior.\";\n  },\n  between: function between(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args,\n        i = !(!Array.isArray(t) || !t[2]) && t[2];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" debe estar entre \" + t[0] + \" y \" + t[1] + \".\" : e(n) + \" debe tener entre \" + t[0] + \" y \" + t[1] + \" caracteres.\";\n  },\n  confirm: function confirm(r) {\n    var n = r.name;\n    r.args;\n    return e(n) + \" no coincide.\";\n  },\n  date: function date(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" no es una fecha válida, por favor use el formato \" + a[0] : e(n) + \" no es una fecha válida.\";\n  },\n  default: function _default(e) {\n    e.name;\n    return \"Este campo no es válido.\";\n  },\n  email: function email(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” no es un correo electrónico válido.\" : \"Por favor introduzca un correo electrónico válido.\";\n  },\n  endsWith: function endsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” no termina en un valor válido.\" : \"Este campo no termina en un valor válido.\";\n  },\n  in: function _in(r) {\n    var n = r.name,\n        a = r.value;\n    return \"string\" == typeof a && a ? \"“\" + e(a) + \"” no es un \" + n + \" permitido.\" : \"Esto no es un \" + n + \" permitido.\";\n  },\n  matches: function matches(r) {\n    return e(r.name) + \" no es un valor permitido.\";\n  },\n  max: function max(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Solo puedes seleccionar \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" debe ser menor o igual que \" + t[0] + \".\" : e(n) + \" debe ser menor o igual que \" + t[0] + \" caracteres.\";\n  },\n  mime: function mime(r) {\n    var n = r.name,\n        a = r.args;\n    return e(n) + \" debe ser de tipo: \" + (a[0] || \"No se permite el formato de archivos.\");\n  },\n  min: function min(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Necesitas al menos \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" debe contener al menos \" + t[0] + \".\" : e(n) + \" debe contener al menos \" + t[0] + \" caracteres.\";\n  },\n  not: function not(e) {\n    var r = e.name;\n    return \"“\" + e.value + \"” no es un \" + r + \" permitido.\";\n  },\n  number: function number(r) {\n    return e(r.name) + \" debe ser un número.\";\n  },\n  required: function required(r) {\n    return e(r.name) + \" es requerido.\";\n  },\n  startsWith: function startsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” no comienza con un valor válido.\" : \"Este campo no comienza con un valor válido.\";\n  },\n  url: function url(e) {\n    e.name;\n    return \"Por favor introduzca una url válida.\";\n  }\n};\n\nfunction d(e) {\n  var r;\n  e.extend({\n    locales: (r = {}, r.es = f, r)\n  });\n}\n\nvar g = {\n  accepted: function accepted(e) {\n    return \"Merci d'accepter les \" + e.name + \".\";\n  },\n  after: function after(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" doit être postérieur à \" + a[0] + \".\" : e(n) + \" doit être une date ultérieure.\";\n  },\n  alpha: function alpha(r) {\n    return e(r.name) + \" peut uniquement contenir des lettres.\";\n  },\n  alphanumeric: function alphanumeric(r) {\n    return e(r.name) + \" peut uniquement contenir des lettres ou des chiffres\";\n  },\n  before: function before(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" doit être antérieur à \" + a[0] + \".\" : e(n) + \" doit être une date antérieure.\";\n  },\n  between: function between(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args,\n        i = !(!Array.isArray(t) || !t[2]) && t[2];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" doit être compris entre \" + t[0] + \" et \" + t[1] + \".\" : e(n) + \" doit être compris entre \" + t[0] + \" et \" + t[1] + \" caractères.\";\n  },\n  confirm: function confirm(r) {\n    var n = r.name;\n    r.args;\n    return e(n) + \" ne correspond pas.\";\n  },\n  date: function date(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" n'est pas valide.  Merci d'utiliser le format \" + a[0] : e(n) + \" n'est pas une date valide.\";\n  },\n  default: function _default(e) {\n    e.name;\n    return \"Ce champ n'est pas valide.\";\n  },\n  email: function email(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” n'est pas une adresse email valide.\" : \"Merci d'entrer une adresse email valide.\";\n  },\n  endsWith: function endsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” ne termine pas par une valeur correcte.\" : \"Ce champ ne termine pas par une valeur correcte.\";\n  },\n  in: function _in(r) {\n    var n = r.name,\n        a = r.value;\n    return \"string\" == typeof a && a ? \"“\" + e(a) + \"” n'est pas un(e) \" + n + \" autorisé(e).\" : \"Cette valeur n'est pas un(e) \" + n + \" autorisé(e).\";\n  },\n  matches: function matches(r) {\n    return e(r.name) + \" n'est pas une valeur autorisée.\";\n  },\n  max: function max(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Vous pouvez uniquement sélectionner \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" doit être inférieur ou égal à \" + t[0] + \".\" : e(n) + \" doit être inférieur ou égal à \" + t[0] + \" caractères.\";\n  },\n  mime: function mime(r) {\n    var n = r.name,\n        a = r.args;\n    return e(n) + \" doit être de type: \" + (a[0] || \"Aucun format autorisé.\");\n  },\n  min: function min(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Vous devez sélectionner au moins \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" doit être supérieur à \" + t[0] + \".\" : e(n) + \" doit être plus long que \" + t[0] + \" caractères.\";\n  },\n  not: function not(e) {\n    var r = e.name;\n    return \"“\" + e.value + \"” n'est pas un(e) \" + r + \" autorisé(e).\";\n  },\n  number: function number(r) {\n    return e(r.name) + \" doit être un nombre.\";\n  },\n  required: function required(r) {\n    return e(r.name) + \" est obligatoire.\";\n  },\n  startsWith: function startsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” ne commence pas par une valeur correcte.\" : \"Ce champ ne commence pas par une valeur correcte.\";\n  },\n  url: function url(e) {\n    e.name;\n    return \"Merci d'entrer une URL valide.\";\n  }\n};\n\nfunction y(e) {\n  var r;\n  e.extend({\n    locales: (r = {}, r.fr = g, r)\n  });\n}\n\nvar h = {\n  accepted: function accepted(e) {\n    return \"אנא קבל את ה\" + e.name + \".\";\n  },\n  after: function after(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" חייב להיות אחרי \" + a[0] + \".\" : e(n) + \" חייב להיות תאריך יותר מאוחר.\";\n  },\n  alpha: function alpha(r) {\n    return e(r.name) + \" יכול להכיל אותיות בלבד.\";\n  },\n  alphanumeric: function alphanumeric(r) {\n    return e(r.name) + \" יכול להכיל אותיות ומספרים בלבד.\";\n  },\n  before: function before(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" חייב להיות לפני \" + a[0] + \".\" : e(n) + \" חייב להיות תאריך יותר מוקדם.\";\n  },\n  between: function between(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args,\n        i = !(!Array.isArray(t) || !t[2]) && t[2];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" חייב להיות בין \" + t[0] + \" ו-\" + t[1] + \".\" : e(n) + \" חייב להיות בין \" + t[0] + \" ו-\" + t[1] + \" אותיות.\";\n  },\n  confirm: function confirm(r) {\n    var n = r.name;\n    r.args;\n    return e(n) + \" אינו תואם.\";\n  },\n  date: function date(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" אינו תאריך תקין, אנא השתמש בפורמט \" + a[0] : e(n) + \" אינו תאריך תקין.\";\n  },\n  default: function _default(e) {\n    e.name;\n    return \"השדה אינו תקין.\";\n  },\n  email: function email(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” אינו כתובת אימייל תקין.\" : \"אנא הכנס כתובת אימייל תקין.\";\n  },\n  endsWith: function endsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” אינו מסתיים בערך תקין.\" : \"שדה זו אינו מסתיים בערך תקין.\";\n  },\n  in: function _in(r) {\n    var n = r.name,\n        a = r.value;\n    return \"string\" == typeof a && a ? \"“\" + e(a) + \"” אינו \" + n + \" מורשה.\" : \"ערך זו איננו \" + n + \" מורשה.\";\n  },\n  matches: function matches(r) {\n    return e(r.name) + \" אינו ערך מורשה.\";\n  },\n  max: function max(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"אתה יכול לבחור רק \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" חייב להיות פחות או שוה ל-\" + t[0] + \".\" : e(n) + \" חייב להיות פחות או שוה ל-\" + t[0] + \" אותיות.\";\n  },\n  mime: function mime(r) {\n    var n = r.name,\n        a = r.args;\n    return e(n) + \" חייב להיות מסוג של: \" + (a[0] || \"סוגי קבצים לא מורשים.\");\n  },\n  min: function min(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"אתה צריך לפחות \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" חייב להיות לפחות \" + t[0] + \".\" : e(n) + \" חייב להיות לפחות \" + t[0] + \" אותיות.\";\n  },\n  not: function not(e) {\n    var r = e.name;\n    return \"“\" + e.value + \"” אינו \" + r + \" מורשה.\";\n  },\n  number: function number(r) {\n    return e(r.name) + \" חייב להיות מספר.\";\n  },\n  required: function required(r) {\n    return e(r.name) + \" נדרש.\";\n  },\n  startsWith: function startsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” אינו מתחיל בערך תקף.\" : \"שדה זה אינו מתחיל בערך תקף.\";\n  },\n  url: function url(e) {\n    e.name;\n    return \"אנא כלול כתובת אתר חוקית.\";\n  }\n};\n\nfunction A(e) {\n  var r;\n  e.extend({\n    locales: (r = {}, r.he = h, r)\n  });\n}\n\nvar p = {\n  accepted: function accepted(e) {\n    return \"Kérlek fogadd el a(z) \" + e.name + \" mezőt.\";\n  },\n  after: function after(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" után kell lennie \" + a[0] + \".\" : e(n) + \" későbbi dátumnak kell lennie.\";\n  },\n  alpha: function alpha(r) {\n    return e(r.name) + \" csak ábécé szerinti karaktereket tartalmazhat.\";\n  },\n  alphanumeric: function alphanumeric(r) {\n    return e(r.name) + \" csak betűket és számokat tartalmazhat.\";\n  },\n  before: function before(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" előtt kell lennie \" + a[0] + \".\" : e(n) + \" korábbi dátumnak kell lennie.\";\n  },\n  between: function between(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args,\n        i = !(!Array.isArray(t) || !t[2]) && t[2];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" között kell lennie \" + t[0] + \" és \" + t[1] + \".\" : e(n) + \" között kell lennie \" + t[0] + \" és \" + t[1] + \" karakter hosszú.\";\n  },\n  confirm: function confirm(r) {\n    var n = r.name;\n    r.args;\n    return e(n) + \" nem egyezik.\";\n  },\n  date: function date(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" nem érvényes dátum, kérlek használd a \" + a[0] + \" formátumot.\" : e(n) + \" nem érvényes dátum.\";\n  },\n  default: function _default(e) {\n    e.name;\n    return \"Ez a mező érvénytelen.\";\n  },\n  email: function email(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” nem érvényes e-mail cím.\" : \"Kérlek valós e-mail címet adj meg.\";\n  },\n  endsWith: function endsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” nem ér véget érvényes értékkel.\" : \"Ez a mező nem ér véget érvényes értékkel.\";\n  },\n  in: function _in(r) {\n    var n = r.name,\n        a = r.value;\n    return \"string\" == typeof a && a ? \"“\" + e(a) + \"” nem megengedett \" + n + \".\" : \"Ez nem megengedett \" + n + \".\";\n  },\n  matches: function matches(r) {\n    return e(r.name) + \" nem megengedett érték.\";\n  },\n  max: function max(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Csak választható \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" kisebbnek vagy egyenlőnek kell lennie \" + t[0] + \".\" : e(n) + \" kisebbnek vagy egyenlőnek kell lennie \" + t[0] + \" karakter hosszú.\";\n  },\n  mime: function mime(r) {\n    var n = r.name,\n        a = r.args;\n    return e(n) + \" típusúnak kell lennie: \" + (a[0] || \"Nem engedélyezett fájlformátumok.\");\n  },\n  min: function min(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Legalább szükséges \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" legalább \" + t[0] + \".\" : e(n) + \" legalább \" + t[0] + \" karakter hosszú.\";\n  },\n  not: function not(e) {\n    var r = e.name;\n    return \"“\" + e.value + \"” nem megengedett \" + r + \".\";\n  },\n  number: function number(r) {\n    return e(r.name) + \" számnak kell lennie.\";\n  },\n  required: function required(r) {\n    return e(r.name) + \" kötelező.\";\n  },\n  startsWith: function startsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” nem érvényes értékkel kezdődik.\" : \"Ez a mező nem érvényes értékkel kezdődik.\";\n  },\n  url: function url(e) {\n    e.name;\n    return \"Kérlek érvényes ulr-t adj meg.\";\n  }\n};\n\nfunction b(e) {\n  var r;\n  e.extend({\n    locales: (r = {}, r.hu = p, r)\n  });\n}\n\nvar k = {\n  accepted: function accepted(e) {\n    return \"Per favore, accetta il campo \" + e.name + \".\";\n  },\n  after: function after(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" deve essere una data successiva al \" + a[0] + \".\" : e(n) + \" deve essere una data successiva a quella attuale.\";\n  },\n  alpha: function alpha(r) {\n    return e(r.name) + \" può contenere solo lettere.\";\n  },\n  alphanumeric: function alphanumeric(r) {\n    return e(r.name) + \" può contenere solo lettere e numeri.\";\n  },\n  before: function before(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" deve essere una data precedente al \" + a[0] + \".\" : e(n) + \" deve essere una data precedente a quella attuale.\";\n  },\n  between: function between(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args,\n        i = !(!Array.isArray(t) || !t[2]) && t[2];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" deve essere tra \" + t[0] + \" e \" + t[1] + \".\" : e(n) + \" deve avere una lunghezza compresa tra \" + t[0] + \" e \" + t[1] + \" caratteri.\";\n  },\n  confirm: function confirm(r) {\n    var n = r.name;\n    r.args;\n    return e(n) + \" non corrisponde.\";\n  },\n  date: function date(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" non è una data valida. Per favore usa il formato \" + a[0] : e(n) + \" non è una data valida.\";\n  },\n  default: function _default(e) {\n    e.name;\n    return \"Questo campo non è valido.\";\n  },\n  email: function email(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” non è un indirizzo email valido.\" : \"Per favore, inserisci un indirizzo email valido.\";\n  },\n  endsWith: function endsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” non termina con un valore valido.\" : \"Questo campo non termina con un valore valido.\";\n  },\n  in: function _in(r) {\n    var n = r.name,\n        a = r.value;\n    return \"string\" == typeof a && a ? \"“\" + e(a) + \"” non è un valore valido per il campo \" + n + \".\" : n + \" invalido.\";\n  },\n  matches: function matches(r) {\n    return e(r.name) + \" invalido.\";\n  },\n  max: function max(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Puoi selezionare al massimo \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" deve essere inferiore o uguale a \" + t[0] + \".\" : e(n) + \" deve essere inferiore o uguale a \" + t[0] + \" caratteri.\";\n  },\n  mime: function mime(r) {\n    var n = r.name,\n        a = r.args;\n    return e(n) + \" deve essere del tipo: \" + (a[0] || \"Nessun formato file autorizzato.\");\n  },\n  min: function min(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Devi selezionare almeno \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" deve essere maggiore di \" + t[0] + \".\" : e(n) + \" deve essere più lungo di \" + t[0] + \" caratteri.\";\n  },\n  not: function not(e) {\n    var r = e.name;\n    return \"“\" + e.value + \"” non è un valore valido per il campo \" + r + \".\";\n  },\n  number: function number(r) {\n    return e(r.name) + \" deve essere un numero.\";\n  },\n  required: function required(r) {\n    return e(r.name) + \" è un campo obbligatorio.\";\n  },\n  startsWith: function startsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” non inizia con un valore valido.\" : \"Questo campo non inizia con un valore valido.\";\n  },\n  url: function url(e) {\n    e.name;\n    return \"Per favore inserisci un URL valido.\";\n  }\n};\n\nfunction N(e) {\n  var r;\n  e.extend({\n    locales: (r = {}, r.it = k, r)\n  });\n}\n\nvar z = {\n  accepted: function accepted(e) {\n    return e.name + \"を承認してください。\";\n  },\n  after: function after(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \"は \" + a[0] + \" 以降にしてください。\" : e(n) + \"はより後にしてください。\";\n  },\n  alpha: function alpha(r) {\n    return e(r.name) + \"にはアルファベットのみ使用できます。\";\n  },\n  alphanumeric: function alphanumeric(r) {\n    return e(r.name) + \"には英数字のみ使用できます。\";\n  },\n  before: function before(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \"は \" + a[0] + \" 以前にしてください。\" : e(n) + \"はより前にしてください。\";\n  },\n  between: function between(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args,\n        i = !(!Array.isArray(t) || !t[2]) && t[2];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \"は\" + t[0] + \"から\" + t[1] + \"の間でなければなりません。\" : e(n) + \"は\" + t[0] + \"文字から\" + t[1] + \"文字でなければなりません。\";\n  },\n  confirm: function confirm(r) {\n    var n = r.name;\n    r.args;\n    return e(n) + \"が一致しません。\";\n  },\n  date: function date(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \"は有効な形式ではありません。次のフォーマットで入力してください: \" + a[0] : e(n) + \"は有効な形式ではありません。\";\n  },\n  default: function _default(e) {\n    e.name;\n    return \"有効な値ではありません。\";\n  },\n  email: function email(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” は有効なメールアドレスではありません。\" : \"有効なメールアドレスを入力してください。\";\n  },\n  endsWith: function endsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” は有効な値で終わっていません。\" : \"有効な値で終わっていません。\";\n  },\n  in: function _in(r) {\n    var n = r.name,\n        a = r.value;\n    return \"string\" == typeof a && a ? \"“\" + e(a) + \"” は許可された\" + n + \"ではありません。\" : \"許可された\" + n + \"ではありません。\";\n  },\n  matches: function matches(r) {\n    return e(r.name) + \"は許可された値ではありません。\";\n  },\n  max: function max(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return n + \"は\" + t[0] + \"項目しか選択できません。\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \"は\" + t[0] + \"以下でなければなりません。\" : e(n) + \"は\" + t[0] + \"文字以下でなければなりません。\";\n  },\n  mime: function mime(r) {\n    var n = r.name,\n        a = r.args;\n    return e(n) + \"は次のファイル形式でなければなりません: \" + (a[0] || \"許可されたファイル形式がありません\");\n  },\n  min: function min(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return n + \"は\" + t[0] + \"項目以上選択してください。\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \"は\" + t[0] + \"以上でなければなりません。\" : e(n) + \"は\" + t[0] + \"文字以上でなければなりません。\";\n  },\n  not: function not(e) {\n    var r = e.name;\n    return \"“\" + e.value + \"” は許可された\" + r + \"ではありません。\";\n  },\n  number: function number(r) {\n    return e(r.name) + \"には数字のみ使用できます。\";\n  },\n  required: function required(r) {\n    return e(r.name) + \"は必須項目です。\";\n  },\n  startsWith: function startsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” は有効な値で始まっていません。\" : \"有効な値で始まっていません。\";\n  },\n  url: function url(e) {\n    e.name;\n    return \"有効なURLを入力してください。\";\n  }\n};\n\nfunction j(e) {\n  var r;\n  e.extend({\n    locales: (r = {}, r.ja = z, r)\n  });\n}\n\nvar w = {\n  accepted: function accepted(e) {\n    return e.name + \" 승인해 주세요.\";\n  },\n  after: function after(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" \" + a[0] + \" 이후이어야 합니다.\" : e(n) + \" 미래의 날짜이어야 합니다.\";\n  },\n  alpha: function alpha(r) {\n    return e(r.name) + \" 알파벳만 사용할 수 있습니다.\";\n  },\n  alphanumeric: function alphanumeric(r) {\n    return e(r.name) + \" 문자와 숫자만 사용할 수 있습니다.\";\n  },\n  before: function before(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" \" + a[0] + \" 이전이어야 합니다.\" : e(n) + \"이전이어야 합니다.\";\n  },\n  between: function between(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args,\n        i = !(!Array.isArray(t) || !t[2]) && t[2];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" \" + t[0] + \"와 \" + t[1] + \"사이이어야 합니다.\" : e(n) + \" \" + t[0] + \"자애서 \" + t[1] + \"자 사이이어야 합니다.\";\n  },\n  confirm: function confirm(r) {\n    var n = r.name;\n    r.args;\n    return e(n) + \" 일치하지 않습니다.\";\n  },\n  date: function date(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" 유효한 날짜 형식이 아닙니다. 다음과 같은 형식으로 입력해 주세요: \" + a[0] : e(n) + \"올바른 날짜 형식이 아닙니다.\";\n  },\n  default: function _default(e) {\n    e.name;\n    return \"유효하지 않은 값입니다.\";\n  },\n  email: function email(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” 유효한 이메일 주소가 아닙니다.\" : \"유효한 이메일 주소를 입력해 주세요.\";\n  },\n  endsWith: function endsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"”으로 끝내야합니다.\" : \"유효한 값으로 끝나지 않습니다.\";\n  },\n  in: function _in(r) {\n    var n = r.name,\n        a = r.value;\n    return \"string\" == typeof a && a ? \"“\" + e(a) + \"” 허용된 \" + n + \" 아닙니다.\" : n + \" 허용된 값이 아닙니다.\";\n  },\n  matches: function matches(r) {\n    return e(r.name) + \" 허용 된 값이 아닙니다.\";\n  },\n  max: function max(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return n + \" \" + t[0] + \"개의 항목만 선택 가능합니다.\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" \" + t[0] + \"이하이어야 합니다.\" : e(n) + \" \" + t[0] + \"자 이하이어야 합니다.\";\n  },\n  mime: function mime(r) {\n    var n = r.name,\n        a = r.args;\n    return e(n) + \" 다음과 같은 파일 형식이어야 합니다: \" + (a[0] || \"허용되는 파일 형식이 아닙니다.\");\n  },\n  min: function min(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return n + \" \" + t[0] + \" 이상 선택해 주세요.\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" \" + t[0] + \"이상이어야 합니다.\" : e(n) + \" \" + t[0] + \"자 이상이어야 합니다.\";\n  },\n  not: function not(e) {\n    var r = e.name;\n    return \"“\" + e.value + \"” 허용된 \" + r + \" 아닙니다.\";\n  },\n  number: function number(r) {\n    return e(r.name) + \" 숫자만 사용 가능합니다.\";\n  },\n  required: function required(r) {\n    return e(r.name) + \" 필수 항목입니다.\";\n  },\n  startsWith: function startsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” 유효한 값으로 시작하지 않습니다.\" : \"유효한 값으로 시작하지 않습니다.\";\n  },\n  url: function url(e) {\n    e.name;\n    return \"유효한 URL을 입력해 주세요.\";\n  }\n};\n\nfunction x(e) {\n  var r;\n  e.extend({\n    locales: (r = {}, r.ko = w, r)\n  });\n}\n\nvar W = {\n  accepted: function accepted(e) {\n    return \"Vennligst aksepter \" + e.name + \".\";\n  },\n  after: function after(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" må være etter \" + a[0] + \".\" : e(n) + \" må være på en senere dato.\";\n  },\n  alpha: function alpha(r) {\n    return e(r.name) + \" kan kun inneholde bokstaver.\";\n  },\n  alphanumeric: function alphanumeric(r) {\n    return e(r.name) + \" kan kun inneholde bokstaver og tall.\";\n  },\n  before: function before(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" må være før \" + a[0] + \".\" : e(n) + \" må være en tidligere dato.\";\n  },\n  between: function between(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args,\n        i = !(!Array.isArray(t) || !t[2]) && t[2];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" må være mellom \" + t[0] + \" og \" + t[1] + \".\" : e(n) + \" må være mellom \" + t[0] + \" og \" + t[1] + \" tegn.\";\n  },\n  confirm: function confirm(r) {\n    var n = r.name;\n    r.args;\n    return e(n) + \" matcher ikke.\";\n  },\n  date: function date(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" er ikke gyldig. Vennligst bruk formatet \" + a[0] : e(n) + \" er ikke en gyldig dato.\";\n  },\n  default: function _default(e) {\n    e.name;\n    return \"Dette feltet er ikke gyldig.\";\n  },\n  email: function email(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” er ikke en gyldig e-postadresse.\" : \"Vennligst skriv inn en gyldig e-postadresse.\";\n  },\n  endsWith: function endsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” slutter ikke med en gyldig verdi.\" : \"Dette feltet slutter ikke med en gyldig verdi.\";\n  },\n  in: function _in(r) {\n    var n = r.name,\n        a = r.value;\n    return \"string\" == typeof a && a ? \"“\" + e(a) + \"” er ikke et tillatt \" + n + \".\" : \"Dette er ikke et tillatt \" + n + \".\";\n  },\n  matches: function matches(r) {\n    return e(r.name) + \" er ikke en gyldig verdi.\";\n  },\n  max: function max(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Du kan kun velge \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" må være mindre eller lik \" + t[0] + \".\" : e(n) + \" må være mindre eller lik \" + t[0] + \" tegn.\";\n  },\n  mime: function mime(r) {\n    var n = r.name,\n        a = r.args;\n    return e(n) + \" må være av typen: \" + (a[0] || \"Ingen tillatte filformater.\");\n  },\n  min: function min(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Du skal velge minst \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" må være større enn \" + t[0] + \".\" : e(n) + \" må være minst \" + t[0] + \" tegn.\";\n  },\n  not: function not(e) {\n    var r = e.name;\n    return \"“\" + e.value + \"” er ikke et tillatt \" + r + \".\";\n  },\n  number: function number(r) {\n    return e(r.name) + \" må være et tall.\";\n  },\n  required: function required(r) {\n    return e(r.name) + \" er påkrevd.\";\n  },\n  startsWith: function startsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” starter ikke med en gyldig verdi.\" : \"Dette feltet starter ikke med en gyldig verdi.\";\n  },\n  url: function url(e) {\n    e.name;\n    return \"Vennligst skriv inn en gyldig URL.\";\n  }\n};\n\nfunction q(e) {\n  var r;\n  e.extend({\n    locales: (r = {}, r.nb = W, r)\n  });\n}\n\nvar P = {\n  accepted: function accepted(e) {\n    return \"Sta \" + e.name + \" toe.\";\n  },\n  after: function after(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" moet na \" + a[0] + \" zijn.\" : e(n) + \" moet een latere datum zijn.\";\n  },\n  alpha: function alpha(r) {\n    return e(r.name) + \" mag enkel letters bevatten.\";\n  },\n  alphanumeric: function alphanumeric(r) {\n    return e(r.name) + \" mag enkel letters en cijfers bevatten.\";\n  },\n  before: function before(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" moet voor \" + a[0] + \" zijn.\" : e(n) + \" moet een eerdere datum zijn.\";\n  },\n  between: function between(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args,\n        i = !(!Array.isArray(t) || !t[2]) && t[2];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" moet tussen \" + t[0] + \" en \" + t[1] + \" zitten.\" : e(n) + \" moet tussen \" + t[0] + \" en \" + t[1] + \" lang zijn.\";\n  },\n  confirm: function confirm(r) {\n    var n = r.name;\n    r.args;\n    return e(n) + \" komt niet overeen.\";\n  },\n  date: function date(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" is geen geldige datum, het juiste format is \" + a[0] : e(n) + \" is geen geldige datum.\";\n  },\n  default: function _default(e) {\n    e.name;\n    return \"De invoer voor dit veld is niet geldig\";\n  },\n  email: function email(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” is geen geldig e-mailadres.\" : \"Voer een geldig e-mailadres in.\";\n  },\n  endsWith: function endsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” eindigt niet op een geldige waarde.\" : \"Dit veld eindigt niet op een geldige waarde.\";\n  },\n  in: function _in(r) {\n    var n = r.name,\n        a = r.value;\n    return \"string\" == typeof a && a ? \"“\" + e(a) + \"” is niet toegestaan als \" + n + \".\" : \"Deze \" + n + \" is niet toegestaan.\";\n  },\n  matches: function matches(r) {\n    return e(r.name) + \" is niet toegestaan.\";\n  },\n  max: function max(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Je kunt maximaal \" + t[0] + \" selecteren als \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" moet kleiner of gelijk zijn aan \" + t[0] + \".\" : e(n) + \" mag maximaal \" + t[0] + \" karakters bevatten.\";\n  },\n  mime: function mime(r) {\n    var n = r.name,\n        a = r.args;\n    return e(n) + \" moet van dit type zijn: \" + (a[0] || \"Bestanden zijn niet toegestaan\");\n  },\n  min: function min(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Je moet tenminste \" + t[0] + \" selecteren als \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" moet groter zijn dan \" + t[0] + \".\" : e(n) + \" moet tenminste \" + t[0] + \" karakters bevatten.\";\n  },\n  not: function not(e) {\n    var r = e.name;\n    return \"“\" + e.value + \"” is geen geldige \" + r + \".\";\n  },\n  number: function number(r) {\n    return e(r.name) + \" moet een getal zijn.\";\n  },\n  required: function required(r) {\n    return e(r.name) + \" is verplicht.\";\n  },\n  startsWith: function startsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” begint niet met een geldige waarde.\" : \"Dit veld begint niet met een geldige waarde.\";\n  },\n  url: function url(e) {\n    e.name;\n    return \"Voer een geldige URL in.\";\n  }\n};\n\nfunction D(e) {\n  var r;\n  e.extend({\n    locales: (r = {}, r.nl = P, r)\n  });\n}\n\nvar T = {\n  accepted: function accepted(e) {\n    return \"Prašome priimti \" + e.name + \".\";\n  },\n  after: function after(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" turi būti po \" + a[0] + \".\" : e(n) + \" turi būti vėlesnė data.\";\n  },\n  alpha: function alpha(r) {\n    return e(r.name) + \" gali būti tik abėcėlės raidės.\";\n  },\n  alphanumeric: function alphanumeric(r) {\n    return e(r.name) + \" gali būti tik raidės ir skaičiai.\";\n  },\n  before: function before(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" turi būti prieš \" + a[0] + \".\" : e(n) + \" turi būti ankstesnė data.\";\n  },\n  between: function between(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args,\n        i = !(!Array.isArray(t) || !t[2]) && t[2];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" turi būti tarp \" + t[0] + \" ir \" + t[1] + \".\" : e(n) + \" turi būti tarp \" + t[0] + \" ir \" + t[1] + \" simbolių ilgio.\";\n  },\n  confirm: function confirm(r) {\n    var n = r.name;\n    r.args;\n    return e(n) + \" nesutampa.\";\n  },\n  date: function date(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" neteisinga data, naudokite formatą \" + a[0] : e(n) + \" neteisinga data.\";\n  },\n  default: function _default(e) {\n    e.name;\n    return \"Šis laukas nėra validus.\";\n  },\n  email: function email(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” nėra teisingas el. pašto adresas.\" : \"Prašome įvesti galiojantį el. pašto adresą.\";\n  },\n  endsWith: function endsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” nesibaigia galiojančia reikšme.\" : \"Šis laukas nesibaigia galiojančia reikšme.\";\n  },\n  in: function _in(r) {\n    var n = r.name,\n        a = r.value;\n    return \"string\" == typeof a && a ? \"“\" + e(a) + \"” nėra tinkamas \" + n + \".\" : \"Tai netinkamas \" + n + \".\";\n  },\n  matches: function matches(r) {\n    return e(r.name) + \" nėra leistina reikšmė.\";\n  },\n  max: function max(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Galite pasirinkti tik \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" turi būti mažesnis arba lygus \" + t[0] + \".\" : e(n) + \" turi turėti mažiau arba lygiai \" + t[0] + \" simbolių.\";\n  },\n  mime: function mime(r) {\n    var n = r.name,\n        a = r.args;\n    return e(n) + \" turi būti tokio tipo: \" + (a[0] || \"Neleidžiami jokie failų formatai.\");\n  },\n  min: function min(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Turi būti ne mažiau nei \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" turi būti ne mažiau nei \" + t[0] + \".\" : e(n) + \" turi būti ne mažiau \" + t[0] + \" simbolių.\";\n  },\n  not: function not(e) {\n    var r = e.name;\n    return \"“\" + e.value + \"” nėra leistinas \" + r + \".\";\n  },\n  number: function number(r) {\n    return e(r.name) + \" turi būti skaičius.\";\n  },\n  required: function required(r) {\n    return e(r.name) + \" yra privalomas.\";\n  },\n  startsWith: function startsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” neprasideda galiojančia reikšme.\" : \"Šis laukas neprasideda galiojančia reikšme.\";\n  },\n  url: function url(e) {\n    e.name;\n    return \"Įveskite galiojantį URL.\";\n  }\n};\n\nfunction L(e) {\n  var r;\n  e.extend({\n    locales: (r = {}, r.lt = T, r)\n  });\n}\n\nvar U = {\n  accepted: function accepted(e) {\n    return \"Proszę zaakceptować \" + e.name + \".\";\n  },\n  after: function after(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" musi być po \" + a[0] + \".\" : e(n) + \" musi być przyszłą datą.\";\n  },\n  alpha: function alpha(r) {\n    return e(r.name) + \" może zawierać wyłącznie znaki alfabetyczne.\";\n  },\n  alphanumeric: function alphanumeric(r) {\n    return e(r.name) + \" może zawierać wyłącznie liczby i litery.\";\n  },\n  before: function before(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" musi być przed \" + a[0] + \".\" : e(n) + \" musi być wczesniejszą datą.\";\n  },\n  between: function between(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args,\n        i = !(!Array.isArray(t) || !t[2]) && t[2];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" musi być pomiędzy \" + t[0] + \" oraz \" + t[1] + \".\" : e(n) + \" musi być pomiędzy \" + t[0] + \" oraz \" + t[1] + \" znaków.\";\n  },\n  confirm: function confirm(r) {\n    var n = r.name;\n    r.args;\n    return e(n) + \" nie pasuje.\";\n  },\n  date: function date(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" nie jest poprawną datą, proszę użyć formatu \" + a[0] : e(n) + \" nie jest poprawną datą.\";\n  },\n  default: function _default(e) {\n    e.name;\n    return \"Pole nie jest poprawne.\";\n  },\n  email: function email(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” nie jest poprawnym adresem email.\" : \"Proszę podać poprawny adres email.\";\n  },\n  endsWith: function endsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” nie kończy się z poprawną wartością.\" : \"Pole nie kończy się z poprawną wartością.\";\n  },\n  in: function _in(r) {\n    var n = r.name,\n        a = r.value;\n    return \"string\" == typeof a && a ? \"“\" + e(a) + \"” jest niedozwoloną wartością pola \" + n + \".\" : \"Wartość jest niedozwolona w polu \" + n + \".\";\n  },\n  matches: function matches(r) {\n    return e(r.name) + \" nie jest dozwoloną wartością.\";\n  },\n  max: function max(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Możesz wybrać maksymalnie \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" musi być mniejszy lub równy \" + t[0] + \".\" : e(n) + \" musi być mniejszy lub równy \" + t[0] + \" znaków.\";\n  },\n  mime: function mime(r) {\n    var n = r.name,\n        a = r.args;\n    return e(n) + \" musi być typem: \" + (a[0] || \"Niedozwolone formaty plików.\");\n  },\n  min: function min(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Potrzeba przynajmniej \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" musi mieć przynajmniej \" + t[0] + \".\" : e(n) + \" musi mieć przynajmniej \" + t[0] + \" znaków.\";\n  },\n  not: function not(e) {\n    var r = e.name;\n    return \"“\" + e.value + \"” jest niedozwoloną wartością \" + r + \".\";\n  },\n  number: function number(r) {\n    return e(r.name) + \" musi być liczbą.\";\n  },\n  required: function required(r) {\n    return e(r.name) + \" jest wymagane.\";\n  },\n  startsWith: function startsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” nie zaczyna się z poprawną wartością.\" : \"Pole nie zaczyna się z poprawną wartością.\";\n  },\n  url: function url(e) {\n    e.name;\n    return \"Proszę wprowadzić poprawny adres URL.\";\n  }\n};\n\nfunction V(e) {\n  var r;\n  e.extend({\n    locales: (r = {}, r.pl = U, r)\n  });\n}\n\nvar E = {\n  accepted: function accepted(e) {\n    return \"Por favor aceite o \" + e.name + \".\";\n  },\n  after: function after(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" deve ser posterior a \" + a[0] + \".\" : e(n) + \" deve ser uma data posterior.\";\n  },\n  alpha: function alpha(r) {\n    return e(r.name) + \" pode conter apenas letras.\";\n  },\n  alphanumeric: function alphanumeric(r) {\n    return e(r.name) + \" pode conter apenas letras e números.\";\n  },\n  before: function before(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" deve ser antes de \" + a[0] + \".\" : e(n) + \" deve ser uma data anterior.\";\n  },\n  between: function between(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args,\n        i = !(!Array.isArray(t) || !t[2]) && t[2];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" deve ser entre \" + t[0] + \" e \" + t[1] + \".\" : e(n) + \" deve ter entre \" + t[0] + \" e \" + t[1] + \" caracteres.\";\n  },\n  confirm: function confirm(r) {\n    var n = r.name;\n    r.args;\n    return e(n) + \" não corresponde.\";\n  },\n  date: function date(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" não é válido, por favor use o formato \" + a[0] : e(n) + \" não é uma data válida.\";\n  },\n  default: function _default(e) {\n    e.name;\n    return \"Este campo não é válido.\";\n  },\n  email: function email(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” não é um e-mail válido.\" : \"Por favor informe um e-mail válido.\";\n  },\n  endsWith: function endsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” não termina com um valor válido.\" : \"Este campo não termina com um valor válido.\";\n  },\n  in: function _in(r) {\n    var n = r.name,\n        a = r.value;\n    return \"string\" == typeof a && a ? \"“\" + e(a) + \"” não é um \" + n + \" permitido.\" : \"Isso não é um \" + n + \" permitido.\";\n  },\n  matches: function matches(r) {\n    return e(r.name) + \" não é um valor válido.\";\n  },\n  max: function max(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Você deve selecionar apenas \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" deve ser menor ou igual a \" + t[0] + \".\" : e(n) + \" deve ter no máximo \" + t[0] + \" caracteres.\";\n  },\n  mime: function mime(r) {\n    var n = r.name,\n        a = r.args;\n    return e(n) + \" deve ser no formato: \" + (a[0] || \"Formato de arquivo não permitido.\");\n  },\n  min: function min(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Você deve selecionar pelo menos \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" deve ser maior que \" + t[0] + \".\" : e(n) + \" deve ter mais de \" + t[0] + \" caracteres.\";\n  },\n  not: function not(e) {\n    var r = e.name;\n    return \"“\" + e.value + \"” não é um \" + r + \" válido.\";\n  },\n  number: function number(r) {\n    return e(r.name) + \" deve ser um número.\";\n  },\n  required: function required(r) {\n    return e(r.name) + \" é obrigatório.\";\n  },\n  startsWith: function startsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” não começa com um valor válido.\" : \"Este campo não começa com um valor válido.\";\n  },\n  url: function url(e) {\n    e.name;\n    return \"Por favor informe uma URL válida.\";\n  }\n};\n\nfunction R(e) {\n  var r;\n  e.extend({\n    locales: (r = {}, r.pt = E, r)\n  });\n}\n\nvar M = {\n  accepted: function accepted(e) {\n    return \"Пожалуйста, подтвердите \" + e.name + \".\";\n  },\n  after: function after(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" должна быть после \" + a[0] + \".\" : e(n) + \" должна быть дата после.\";\n  },\n  alpha: function alpha(r) {\n    return e(r.name) + \" может содержать только буквы.\";\n  },\n  alphanumeric: function alphanumeric(r) {\n    return e(r.name) + \" может содержать только буквы и цифры.\";\n  },\n  before: function before(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" должно быть раньше \" + a[0] + \".\" : e(n) + \" должно быть раньше.\";\n  },\n  between: function between(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    !(!Array.isArray(t) || !t[2]) && t[2];\n    return isNaN(a), e(n) + \" должно быть между \" + t[0] + \" и \" + t[1] + \".\";\n  },\n  confirm: function confirm(r) {\n    var n = r.name;\n    r.args;\n    return e(n) + \" не совпадает.\";\n  },\n  date: function date(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" не является допустимой датой, пожалуйста, используйте формат \" + a[0] : e(n) + \" не является допустимой датой.\";\n  },\n  default: function _default(e) {\n    e.name;\n    return \"Это поле не является допустимым.\";\n  },\n  email: function email(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” недействительный адрес электронной почты.\" : \"Пожалуйста, введите действительный адрес электронной почты.\";\n  },\n  endsWith: function endsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” не заканчивается допустимым значением.\" : \"Это поле не заканчивается допустимым значением.\";\n  },\n  in: function _in(r) {\n    var n = r.name,\n        a = r.value;\n    return \"string\" == typeof a && a ? \"“\" + e(a) + \"” является ошибочным для \" + n + \".\" : \"Выбранное значение для \" + n + \" ошибочно.\";\n  },\n  matches: function matches(r) {\n    return e(r.name) + \" не совпадает.\";\n  },\n  max: function max(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Вы можете выбрать только \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" должно быть меньше или равно \" + t[0] + \".\" : \"Количество символов \" + e(n) + \" должно быть меньше или равно \" + t[0] + \".\";\n  },\n  mime: function mime(r) {\n    var n = r.name,\n        a = r.args;\n    return e(n) + \" должно быть файлом одного из следующих типов: \" + (a[0] || \"Не допустимые форматы файлов.\");\n  },\n  min: function min(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Должно быть не менее \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" должно быть не менее \" + t[0] + \".\" : \"Количество символов \" + e(n) + \" должно быть не менее \" + t[0] + \".\";\n  },\n  not: function not(e) {\n    var r = e.name;\n    return \"“\" + e.value + \"” не является допустимым \" + r + \".\";\n  },\n  number: function number(r) {\n    return e(r.name) + \" должны быть числом.\";\n  },\n  required: function required(r) {\n    return e(r.name) + \" обязательное поле.\";\n  },\n  startsWith: function startsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” должно начинаться действительным значением.\" : \"Поле должно начинаться действительным значением.\";\n  },\n  url: function url(e) {\n    e.name;\n    return \"Пожалуйста, укажите действительный URL.\";\n  }\n};\n\nfunction B(e) {\n  var r;\n  e.extend({\n    locales: (r = {}, r.ru = M, r)\n  });\n}\n\nvar F = {\n  accepted: function accepted(e) {\n    return \"Prosím príjmi \" + e.name + \".\";\n  },\n  after: function after(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" musí byť neskôr ako \" + a[0] + \".\" : \"Pre \" + e(n) + \" je potrebné zvoliť neskorší dátum.\";\n  },\n  alpha: function alpha(r) {\n    return e(r.name) + \" môže obsahovať len písmená.\";\n  },\n  alphanumeric: function alphanumeric(r) {\n    return e(r.name) + \" môže obsahovať len písmená a čísla.\";\n  },\n  before: function before(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" musí byť skôr než \" + a[0] + \".\" : \"Pre \" + e(n) + \" je potrebné zvoliť skorší dátum.\";\n  },\n  between: function between(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args,\n        i = !(!Array.isArray(t) || !t[2]) && t[2];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" musí byť medzi \" + t[0] + \" a \" + t[1] + \".\" : e(n) + \" musí mať od \" + t[0] + \" do \" + t[1] + \" znakov.\";\n  },\n  confirm: function confirm(r) {\n    var n = r.name;\n    r.args;\n    return e(n) + \" sa nezhoduje.\";\n  },\n  date: function date(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" neobsahuje korektný dátum. Je potrebné použiť formát \" + a[0] : e(n) + \" neobsahuje korektný dátum.\";\n  },\n  default: function _default(e) {\n    e.name;\n    return \"Toto pole obsahuje chybu.\";\n  },\n  email: function email(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” nie je platná emailová adresa.\" : \"Prosím, uveď platnú emailovú adresu..\";\n  },\n  endsWith: function endsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” nekončí povolenou hodnotou.\" : \"Toto pole nekončí povolenou hodnotou.\";\n  },\n  in: function _in(r) {\n    var n = r.name,\n        a = r.value;\n    return \"string\" == typeof a && a ? \"“\" + e(a) + \"” nie je povolená hodnota pre \" + n + \".\" : \"Toto nie je povolená hodnota pre \" + n + \".\";\n  },\n  matches: function matches(r) {\n    return e(r.name) + \" nie je povolená hodnota.\";\n  },\n  max: function max(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Je možné vybrať najviac \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" musí byť nanajvýš \" + t[0] + \".\" : e(n) + \" musí obsahovať nanajvýš \" + t[0] + \" znakov.\";\n  },\n  mime: function mime(r) {\n    var n = r.name,\n        a = r.args;\n    return e(n) + \" musí byť typu: \" + (a[0] || \"Žiadne formáty nie sú povolené.\");\n  },\n  min: function min(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Je potrebné vybrať aspoň \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" musí byť aspoň \" + t[0] + \".\" : e(n) + \" musí obsahovať aspoň \" + t[0] + \" znakov.\";\n  },\n  not: function not(e) {\n    var r = e.name;\n    return \"“\" + e.value + \"” nie je povolená hodnota pre \" + r + \".\";\n  },\n  number: function number(r) {\n    return e(r.name) + \" musí byť číslo.\";\n  },\n  required: function required(r) {\n    return e(r.name) + \" je povinné pole.\";\n  },\n  startsWith: function startsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” nezačína povolenou hodnotou.\" : \"Toto pole nezačína povolenou hodnotou.\";\n  },\n  url: function url(e) {\n    e.name;\n    return \"Prosím, uveď platnú URL adresu.\";\n  }\n};\n\nfunction Z(e) {\n  var r;\n  e.extend({\n    locales: (r = {}, r.sk = F, r)\n  });\n}\n\nvar C = {\n  accepted: function accepted(e) {\n    return \"Molimo Vas da prihvatite \" + e.name + \".\";\n  },\n  after: function after(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" mora biti posle \" + a[0] + \".\" : e(n) + \" mora biti kasniji datum.\";\n  },\n  alpha: function alpha(r) {\n    return e(r.name) + \" može sadržati samo abecedne karaktere.\";\n  },\n  alphanumeric: function alphanumeric(r) {\n    return e(r.name) + \" može sadržati samo slova i brojeve.\";\n  },\n  before: function before(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" mora biti pre \" + a[0] + \".\" : e(n) + \" mora biti raniji datum.\";\n  },\n  between: function between(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args,\n        i = !(!Array.isArray(t) || !t[2]) && t[2];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" mora biti između \" + t[0] + \" i \" + t[1] + \".\" : e(n) + \" mora biti između \" + t[0] + \" i \" + t[1] + \" karaktera.\";\n  },\n  confirm: function confirm(r) {\n    var n = r.name;\n    r.args;\n    return e(n) + \" se ne podudara.\";\n  },\n  date: function date(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" nije važeći datum, koristite format \" + a[0] : e(n) + \" nije važeći datum.\";\n  },\n  default: function _default(e) {\n    e.name;\n    return \"Ovo polje nije važeće.\";\n  },\n  email: function email(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” nije važeća e-mail adresa.\" : \"Unesite ispravnu e-mail adresu.\";\n  },\n  endsWith: function endsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” se ne završava važećom vrednošću.\" : \"Ovo polje se ne završava važećom vrednošću.\";\n  },\n  in: function _in(r) {\n    var n = r.name,\n        a = r.value;\n    return \"string\" == typeof a && a ? \"“\" + e(a) + \"” nije dozvoljeno \" + n + \".\" : \"Ovo nije dozvoljeno \" + n + \".\";\n  },\n  matches: function matches(r) {\n    return e(r.name) + \" nije dozvoljena vrednost za ovo polje.\";\n  },\n  max: function max(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Možete odabrati samo \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" mora biti manje ili jednako \" + t[0] + \".\" : e(n) + \" mora biti manje ili jednako \" + t[0] + \" karaktera.\";\n  },\n  mime: function mime(r) {\n    var n = r.name,\n        a = r.args;\n    return e(n) + \" mora biti jedan sledecih formata: \" + (a[0] || \"Format datoteke nije dozvoljen.\");\n  },\n  min: function min(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Treba Vam bar \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" treba da ima najmanje \" + t[0] + \".\" : e(n) + \" treba da ima najmanje \" + t[0] + \" karaktera.\";\n  },\n  not: function not(e) {\n    var r = e.name;\n    return \"“\" + e.value + \"” nije dozvoljena vrednost za polje \" + r + \".\";\n  },\n  number: function number(r) {\n    return e(r.name) + \" mora biti broj.\";\n  },\n  required: function required(r) {\n    return e(r.name) + \" je obavezno polje.\";\n  },\n  startsWith: function startsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” ne počinje sa važećom vrednošću.\" : \"Ovo polje ne počinje sa važećom vrednošću.\";\n  },\n  url: function url(e) {\n    e.name;\n    return \"Unesite važeći url.\";\n  }\n};\n\nfunction I(e) {\n  var r;\n  e.extend({\n    locales: (r = {}, r.sr = C, r)\n  });\n}\n\nvar J = {\n  accepted: function accepted(e) {\n    return \"Var vänlig acceptera \" + e.name + \".\";\n  },\n  after: function after(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" måste vara efter \" + a[0] + \".\" : e(n) + \" måste vara ett senare datum.\";\n  },\n  alpha: function alpha(r) {\n    return e(r.name) + \" får bara innehålla bokstäver.\";\n  },\n  alphanumeric: function alphanumeric(r) {\n    return e(r.name) + \" får bara innehålla bokstäver och nummer.\";\n  },\n  before: function before(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" måste vara innan \" + a[0] + \".\" : e(n) + \" måste vara ett tidigare datum.\";\n  },\n  between: function between(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args,\n        i = !(!Array.isArray(t) || !t[2]) && t[2];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" måste vara mellan \" + t[0] + \" och \" + t[1] + \".\" : e(n) + \" måste vara mellan \" + t[0] + \" och \" + t[1] + \" tecken .\";\n  },\n  confirm: function confirm(r) {\n    var n = r.name;\n    r.args;\n    return e(n) + \" matchar inte.\";\n  },\n  date: function date(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" är inte ett giltigt datum, var vänlig och använd formatet \" + a[0] : e(n) + \" är inte ett giltigt datum.\";\n  },\n  default: function _default(e) {\n    e.name;\n    return \"Fältet är inte giltigt.\";\n  },\n  email: function email(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” är inte en giltigt e-postadress.\" : \"Var vänlig och ange en giltig e-postadress.\";\n  },\n  endsWith: function endsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” slutar inte med ett giltigt värde.\" : \"Detta fält slutar inte med ett giltigt värde.\";\n  },\n  in: function _in(r) {\n    var n = r.name,\n        a = r.value;\n    return \"string\" == typeof a && a ? \"“\" + e(a) + \"” är inte ett tillåtet \" + n + \".\" : \"Detta är inte ett tillåtet \" + n + \".\";\n  },\n  matches: function matches(r) {\n    return e(r.name) + \" är inte ett tillåtet värde.\";\n  },\n  max: function max(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Du får bara välja \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" måste vara mer än eller lika med \" + t[0] + \".\" : e(n) + \" måste vara mindre än eller lika med \" + t[0] + \" tecken.\";\n  },\n  mime: function mime(r) {\n    var n = r.name,\n        a = r.args;\n    return e(n) + \" måste vara av typen: \" + (a[0] || \"Inga filformat tillåtna.\");\n  },\n  min: function min(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Du måste välja minst \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" måste vara minst \" + t[0] + \".\" : e(n) + \" måste åtminstone vara \" + t[0] + \" tecken långt.\";\n  },\n  not: function not(e) {\n    var r = e.name;\n    return \"“\" + e.value + \"” är inte tillåtet \" + r + \".\";\n  },\n  number: function number(r) {\n    return e(r.name) + \" måste vara ett nummer.\";\n  },\n  required: function required(r) {\n    return e(r.name) + \" är obligatoriskt.\";\n  },\n  startsWith: function startsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” börjar inte med ett giltigt värde.\" : \"Detta fält börjar inte med ett giltigt värde.\";\n  },\n  url: function url(e) {\n    e.name;\n    return \"Vänligen ange en giltig url.\";\n  }\n};\n\nfunction K(e) {\n  var r;\n  e.extend({\n    locales: (r = {}, r.sv = J, r)\n  });\n}\n\nvar S = {\n  accepted: function accepted(r) {\n    return \"กรุณายอมรับ \" + e(r.name);\n  },\n  after: function after(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" ต้องเป็นวันที่หลังจาก \" + a[0] : e(n) + \" ต้องเป็นวันที่ยังไม่มาถึง\";\n  },\n  alpha: function alpha(r) {\n    return e(r.name) + \" มีได้เฉพาะตัวอักษรเท่านั้น\";\n  },\n  alphanumeric: function alphanumeric(r) {\n    return e(r.name) + \" มีได้เฉพาะตัวอักษรและตัวเลขเท่านั้น\";\n  },\n  before: function before(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" ต้องเป็นวันที่ก่อนหน้า \" + a[0] : e(n) + \" ต้องเป็นวันที่ผ่านมาแล้ว\";\n  },\n  between: function between(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args,\n        i = !(!Array.isArray(t) || !t[2]) && t[2];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" ต้องมีค่าระหว่าง \" + t[0] + \" ถึง \" + t[1] : e(n) + \" ต้องมีความยาว \" + t[0] + \" ถึง \" + t[1] + \" ตัว\";\n  },\n  confirm: function confirm(r) {\n    var n = r.name;\n    r.args;\n    return e(n) + \" ไม่ตรงกัน\";\n  },\n  date: function date(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" ไม่ใช่วันที่ที่ถูกต้อง กรุณาใช้ตามรูปแบบ \" + a[0] : e(n) + \" ไม่ใช่วันที่ที่ถูกต้อง\";\n  },\n  default: function _default(e) {\n    e.name;\n    return \"ข้อมูลช่องนี้ไม่ถูกต้อง\";\n  },\n  email: function email(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” ไม่ใช่ที่อยู่อีเมลที่ถูกต้อง\" : \"กรุณากรอกที่อยู่อีเมลให้ถูกต้อง\";\n  },\n  endsWith: function endsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” ไม่ได้ลงท้ายด้วยค่าที่ถูกต้อง\" : \"ข้อมูลช่องนี้ไม่ได้ลงท้ายด้วยค่าที่ถูกต้อง\";\n  },\n  in: function _in(r) {\n    var n = r.name,\n        a = r.value;\n    return \"string\" == typeof a && a ? \"“\" + e(a) + \"” ไม่ใช่ \" + n + \" ที่อนุญาตให้กรอก\" : \"นี่ไม่ใช่ \" + n + \" ที่อนุญาตให้กรอก\";\n  },\n  matches: function matches(r) {\n    return e(r.name) + \" ไม่ใช่ค่าที่อนุญาตให้กรอก\";\n  },\n  max: function max(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"คุณเลือกได้เพียง \" + t[0] + \" \" + n + \" เท่านั้น\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" ต้องมีไม่เกิน \" + t[0] : e(n) + \" ต้องยาวไม่เกิน \" + t[0] + \" ตัว\";\n  },\n  mime: function mime(r) {\n    var n = r.name,\n        a = r.args;\n    return e(n) + \" ต้องเป็นประเภท: \" + (a[0] || \"ไม่มีประเภทไฟล์ที่อนุญาต\");\n  },\n  min: function min(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"คุณต้องเลือกอย่างน้อย \" + t[0] + \" \" + n;\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" ต้องมีค่าอย่างน้อย \" + t[0] : e(n) + \" ต้องยาวอย่างน้อย \" + t[0] + \" ตัว\";\n  },\n  not: function not(e) {\n    var r = e.name;\n    return \"“\" + e.value + \"” ไม่ใช่ค่า \" + r + \" ที่อนุญาตให้กรอก\";\n  },\n  number: function number(r) {\n    return e(r.name) + \" ต้องเป็นตัวเลข\";\n  },\n  required: function required(r) {\n    return e(r.name) + \" จำเป็นต้องกรอก\";\n  },\n  startsWith: function startsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” ไม่ได้ขึ้นต้นด้วยค่าที่ถูกต้อง\" : \"ข้อมูลช่องนี้ไม่ได้ขึ้นต้นด้วยค่าที่ถูกต้อง\";\n  },\n  url: function url(e) {\n    e.name;\n    return \"กรุณาแนบลิงก์ให้ถูกต้อง\";\n  }\n};\n\nfunction O(e) {\n  var r;\n  e.extend({\n    locales: (r = {}, r.th = S, r)\n  });\n}\n\nvar Q = {\n  accepted: function accepted(e) {\n    return \"Lütfen \" + e.name + \"'i kabul edin..\";\n  },\n  after: function after(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \", \" + a[0] + \" sonrasında olmalıdır.\" : e(n) + \" daha sonraki bir tarih olmalıdır.\";\n  },\n  alpha: function alpha(r) {\n    return e(r.name) + \" yalnızca alfabetik karakterler içerebilir.\";\n  },\n  alphanumeric: function alphanumeric(r) {\n    return e(r.name) + \" yalnızca harf ve rakam içerebilir.\";\n  },\n  before: function before(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \", \" + a[0] + \" tarihinden önce olmalıdır.\" : e(n) + \" daha erken bir tarih olmalıdır.\";\n  },\n  between: function between(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args,\n        i = !(!Array.isArray(t) || !t[2]) && t[2];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \", \" + t[0] + \" ile \" + t[1] + \" arasında olmalıdır.\" : e(n) + \", \" + t[0] + \" ile \" + t[1] + \" karakter uzunluğunda olmalıdır.\";\n  },\n  confirm: function confirm(r) {\n    var n = r.name;\n    r.args;\n    return e(n) + \" eşleşmiyor.\";\n  },\n  date: function date(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" geçerli bir tarih değil, lütfen \" + a[0] + \" biçimini kullanın\" : e(n) + \" geçerli bir tarih değil.\";\n  },\n  default: function _default(e) {\n    e.name;\n    return \"Bu alan geçerli değil.\";\n  },\n  email: function email(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” geçerli bir e-posta adresi değil.\" : \"Lütfen geçerli bir e-posta adresi giriniz.\";\n  },\n  endsWith: function endsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” geçerli bir değerle bitmiyor.\" : \"Bu alan geçerli bir değerle bitmiyor.\";\n  },\n  in: function _in(r) {\n    var n = r.name,\n        a = r.value;\n    return \"string\" == typeof a && a ? \"“\" + e(a) + \"” izin verilen bir \" + n + \" değil.\" : \"Bu izin verilen bir \" + n + \" değil.\";\n  },\n  matches: function matches(r) {\n    return e(r.name) + \" izin verilen bir değer değil.\";\n  },\n  max: function max(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Yalnızca \" + t[0] + \" \" + n + \" seçebilirsiniz.\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \", \" + t[0] + \" değerinden küçük veya ona eşit olmalıdır.\" : e(n) + \", \" + t[0] + \" karakterden küçük veya ona eşit olmalıdır.\";\n  },\n  mime: function mime(r) {\n    var n = r.name,\n        a = r.args;\n    return e(n) + \" şu türde olmalıdır: \" + (a[0] || \"Dosya formatına izin verilmez.\");\n  },\n  min: function min(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"En az \" + t[0] + \" \" + n + \" gerekiyor.\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" en az \" + t[0] + \" olmalıdır.\" : e(n) + \" en az \" + t[0] + \" karakter uzunluğunda olmalıdır.\";\n  },\n  not: function not(e) {\n    var r = e.name;\n    return \"“\" + e.value + \"” izin verilen bir \" + r + \" değil.\";\n  },\n  number: function number(r) {\n    return e(r.name) + \" bir sayı olmalıdır.\";\n  },\n  required: function required(r) {\n    return e(r.name) + \" gerekli.\";\n  },\n  startsWith: function startsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” geçerli bir değerle başlamıyor.\" : \"Bu alan geçerli bir değerle başlamıyor.\";\n  },\n  url: function url(e) {\n    e.name;\n    return \"Lütfen geçerli bir url ekleyin.\";\n  }\n};\n\nfunction Y(e) {\n  var r;\n  e.extend({\n    locales: (r = {}, r.tr = Q, r)\n  });\n}\n\nvar G = {\n  accepted: function accepted(e) {\n    return e.name + \" phải được chấp nhận.\";\n  },\n  after: function after(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" phải sau ngày \" + a[0] + \".\" : e(n) + \" phải sau ngày hôm nay.\";\n  },\n  alpha: function alpha(r) {\n    return e(r.name) + \" chỉ có thể chứa các kí tự chữ.\";\n  },\n  alphanumeric: function alphanumeric(r) {\n    return e(r.name) + \" chỉ có thể chứa các kí tự chữ và số.\";\n  },\n  before: function before(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" phải trước ngày ngày \" + a[0] + \".\" : e(n) + \" phải trước ngày hôm nay.\";\n  },\n  between: function between(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args,\n        i = !(!Array.isArray(t) || !t[2]) && t[2];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" phải có giá trị nằm trong khoảng giữa \" + t[0] + \" and \" + t[1] + \".\" : e(n) + \" phải có giá trị dài từ \" + t[0] + \" đến \" + t[1] + \" ký tự.\";\n  },\n  confirm: function confirm(r) {\n    var n = r.name;\n    r.args;\n    return e(n) + \" không khớp.\";\n  },\n  date: function date(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" không phải là định dạng của ngày, vui lòng sử dụng định dạng \" + a[0] : e(n) + \" không phải là định dạng của ngày.\";\n  },\n  default: function _default(e) {\n    e.name;\n    return \"Trường này không hợp lệ.\";\n  },\n  email: function email(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” phải là một địa chỉ email hợp lệ.\" : \"Vui lòng nhập địa chỉ email hợp lệ.\";\n  },\n  endsWith: function endsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” phải kết thúc bằng giá trị hợp lệ.\" : \"Trường này phải kết thúc bằng giá trị hợp lệ.\";\n  },\n  in: function _in(r) {\n    var n = r.name,\n        a = r.value;\n    return \"string\" == typeof a && a ? \"“\" + e(a) + \"” phải khớp với \" + n + \".\" : n + \" phải khớp với giá trị cho phép.\";\n  },\n  matches: function matches(r) {\n    return e(r.name) + \" phải khớp với giá trị cho phép.\";\n  },\n  max: function max(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Bạn chỉ có thể chọn \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" phải nhỏ hơn hoặc bằng \" + t[0] + \".\" : e(n) + \" phải nhỏ hơn hoặc bằng \" + t[0] + \" ký tự.\";\n  },\n  mime: function mime(r) {\n    var n = r.name,\n        a = r.args;\n    return e(n) + \" phải chứa kiểu tệp phù hợp: \" + (a[0] || \"Không có định dạng tệp nào được cho phép.\");\n  },\n  min: function min(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"Phải chứa ít nhất \" + t[0] + \" \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" phải chứa ít nhất \" + t[0] + \".\" : e(n) + \" phải chứa ít nhất \" + t[0] + \" ký tự.\";\n  },\n  not: function not(e) {\n    var r = e.name;\n    return \"“\" + e.value + \"” phải là \" + r + \" hợp lệ.\";\n  },\n  number: function number(r) {\n    return e(r.name) + \" phải là số.\";\n  },\n  required: function required(r) {\n    return e(r.name) + \" là bắt buộc.\";\n  },\n  startsWith: function startsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” phải bắt đầu bằng giá trị hợp lệ.\" : \"Trường này phải bắt đầu bằng giá trị hợp lệ.\";\n  },\n  url: function url(e) {\n    e.name;\n    return \"Vui lòng nhập đúng định dạng url.\";\n  }\n};\n\nfunction H(e) {\n  var r;\n  e.extend({\n    locales: (r = {}, r.vi = G, r)\n  });\n}\n\nvar X = {\n  accepted: function accepted(e) {\n    return \"请同意\" + e.name + \"。\";\n  },\n  after: function after(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" 必须在 \" + a[0] + \" 之后。\" : e(n) + \" 必须是以后的日期。\";\n  },\n  alpha: function alpha(r) {\n    return e(r.name) + \" 只能包含字母。\";\n  },\n  alphanumeric: function alphanumeric(r) {\n    return e(r.name) + \" 只能包含字母或数字。\";\n  },\n  before: function before(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" 必须在 \" + a[0] + \" 之前\" : e(n) + \" 必须是以前的日期。\";\n  },\n  between: function between(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args,\n        i = !(!Array.isArray(t) || !t[2]) && t[2];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" 必须在 \" + t[0] + \" 和 \" + t[1] + \" 之间。\" : e(n) + \" 必须在 \" + t[0] + \" 和 \" + t[1] + \" 字符长度之间。\";\n  },\n  confirm: function confirm(r) {\n    var n = r.name;\n    r.args;\n    return e(n) + \" 不匹配。\";\n  },\n  date: function date(r) {\n    var n = r.name,\n        a = r.args;\n    return Array.isArray(a) && a.length ? e(n) + \" 日期无效，请使用 \" + a[0] + \" 格式。\" : e(n) + \" 日期无效。\";\n  },\n  default: function _default(e) {\n    e.name;\n    return \"此输入无效。\";\n  },\n  email: function email(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” 不是一个有效的电子邮箱地址。\" : \"请输入有效的电子邮箱地址。\";\n  },\n  endsWith: function endsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” 包含无效的结尾值。\" : \"无效的结尾值。\";\n  },\n  in: function _in(r) {\n    var n = r.name,\n        a = r.value;\n    return \"string\" == typeof a && a ? \"“\" + e(a) + \"” 是 \" + n + \" 不允许的值。\" : n + \" 包含不允许的值。\";\n  },\n  matches: function matches(r) {\n    return e(r.name) + \" 包含不允许的值。\";\n  },\n  max: function max(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"您最多可有 \" + t[0] + \" 个 \" + n + \"。\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" 必须小于或等于 \" + t[0] + \".\" : e(n) + \" 必须小于或等于 \" + t[0] + \" 字符长度.\";\n  },\n  mime: function mime(r) {\n    var n = r.name,\n        a = r.args;\n    return e(n) + \" 格式必须是: \" + (a[0] || \"无允许文件格式\");\n  },\n  min: function min(r) {\n    var n = r.name,\n        a = r.value,\n        t = r.args;\n    if (Array.isArray(a)) return \"您需要最少 \" + t[0] + \" 个 \" + n + \".\";\n    var i = !(!Array.isArray(t) || !t[1]) && t[1];\n    return !isNaN(a) && \"length\" !== i || \"value\" === i ? e(n) + \" 最少是 \" + t[0] + \".\" : e(n) + \" 最少 \" + t[0] + \" 字符长度。\";\n  },\n  not: function not(e) {\n    var r = e.name;\n    return \"“\" + e.value + \"” 是 \" + r + \" 不被允许的值。\";\n  },\n  number: function number(r) {\n    return e(r.name) + \" 必须是数字。\";\n  },\n  required: function required(r) {\n    return e(r.name) + \" 是必填项。\";\n  },\n  startsWith: function startsWith(e) {\n    e.name;\n    var r = e.value;\n    return r ? \"“\" + r + \"” 包含无效的起始值\" : \"无效的起始值\";\n  },\n  url: function url(e) {\n    e.name;\n    return \"请输入正确的网址。\";\n  }\n};\n\nfunction $(e) {\n  var r;\n  e.extend({\n    locales: (r = {}, r.zh = X, r)\n  });\n}\n\nexport { n as ar, t as ca, u as cs, s as da, m as de, c as en, d as es, y as fr, A as he, b as hu, N as it, j as ja, x as ko, L as lt, q as nb, D as nl, V as pl, R as pt, B as ru, Z as sk, I as sr, K as sv, O as th, Y as tr, H as vi, $ as zh };","map":null,"metadata":{},"sourceType":"module"}