{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"regenerator-runtime/runtime.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { AnalyticsBrowser } from '@june-so/analytics-next';\n\nvar AnalyticsHelper = /*#__PURE__*/function () {\n  function AnalyticsHelper() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        analyticsToken = _ref.token;\n\n    _classCallCheck(this, AnalyticsHelper);\n\n    this.analyticsToken = analyticsToken;\n    this.analytics = null;\n    this.user = {};\n  }\n\n  _createClass(AnalyticsHelper, [{\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$AnalyticsBrows, _yield$AnalyticsBrows2, analytics;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.analyticsToken) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                _context.next = 4;\n                return AnalyticsBrowser.load({\n                  writeKey: this.analyticsToken\n                });\n\n              case 4:\n                _yield$AnalyticsBrows = _context.sent;\n                _yield$AnalyticsBrows2 = _slicedToArray(_yield$AnalyticsBrows, 1);\n                analytics = _yield$AnalyticsBrows2[0];\n                this.analytics = analytics;\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"identify\",\n    value: function identify(user) {\n      if (!this.analytics) {\n        return;\n      }\n\n      this.user = user;\n      this.analytics.identify(this.user.email, {\n        userId: this.user.id,\n        email: this.user.email,\n        name: this.user.name,\n        avatar: this.user.avatar_url\n      });\n      var _this$user = this.user,\n          accounts = _this$user.accounts,\n          accountId = _this$user.account_id;\n\n      var _accounts$filter = accounts.filter(function (account) {\n        return account.id === accountId;\n      }),\n          _accounts$filter2 = _slicedToArray(_accounts$filter, 1),\n          currentAccount = _accounts$filter2[0];\n\n      if (currentAccount) {\n        this.analytics.group(currentAccount.id, this.user.id, {\n          name: currentAccount.name\n        });\n      }\n    }\n  }, {\n    key: \"track\",\n    value: function track(eventName) {\n      var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!this.analytics) {\n        return;\n      }\n\n      this.analytics.track({\n        userId: this.user.id,\n        event: eventName,\n        properties: properties\n      });\n    }\n  }, {\n    key: \"page\",\n    value: function page(params) {\n      if (!this.analytics) {\n        return;\n      }\n\n      this.analytics.page(params);\n    }\n  }]);\n\n  return AnalyticsHelper;\n}();\n\nimport * as _ANALYTICS_EVENTS from './events';\nexport { _ANALYTICS_EVENTS as ANALYTICS_EVENTS };\nexport default new AnalyticsHelper(window.analyticsConfig);","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/helper/AnalyticsHelper/index.js"],"names":["AnalyticsBrowser","AnalyticsHelper","analyticsToken","token","analytics","user","load","writeKey","identify","email","userId","id","name","avatar","avatar_url","accounts","accountId","account_id","filter","account","currentAccount","group","eventName","properties","track","event","params","page","ANALYTICS_EVENTS","window","analyticsConfig"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,gBAAT,QAAiC,yBAAjC;;IAEMC,e;AACJ,6BAA4C;AAAA,mFAAJ,EAAI;AAAA,QAAvBC,cAAuB,QAA9BC,KAA8B;;AAAA;;AAC1C,SAAKD,cAAL,GAAsBA,cAAtB;AACA,SAAKE,SAAL,GAAiB,IAAjB;AACA,SAAKC,IAAL,GAAY,EAAZ;AACD;;;;;0EAED;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBACO,KAAKH,cADZ;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,uBAK0BF,gBAAgB,CAACM,IAAjB,CAAsB;AAC5CC,kBAAAA,QAAQ,EAAE,KAAKL;AAD6B,iBAAtB,CAL1B;;AAAA;AAAA;AAAA;AAKOE,gBAAAA,SALP;AAQE,qBAAKA,SAAL,GAAiBA,SAAjB;;AARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAWA,kBAASC,IAAT,EAAe;AACb,UAAI,CAAC,KAAKD,SAAV,EAAqB;AACnB;AACD;;AACD,WAAKC,IAAL,GAAYA,IAAZ;AACA,WAAKD,SAAL,CAAeI,QAAf,CAAwB,KAAKH,IAAL,CAAUI,KAAlC,EAAyC;AACvCC,QAAAA,MAAM,EAAE,KAAKL,IAAL,CAAUM,EADqB;AAEvCF,QAAAA,KAAK,EAAE,KAAKJ,IAAL,CAAUI,KAFsB;AAGvCG,QAAAA,IAAI,EAAE,KAAKP,IAAL,CAAUO,IAHuB;AAIvCC,QAAAA,MAAM,EAAE,KAAKR,IAAL,CAAUS;AAJqB,OAAzC;AAOA,uBAA4C,KAAKT,IAAjD;AAAA,UAAQU,QAAR,cAAQA,QAAR;AAAA,UAA8BC,SAA9B,cAAkBC,UAAlB;;AACA,6BAAyBF,QAAQ,CAACG,MAAT,CACvB,UAAAC,OAAO;AAAA,eAAIA,OAAO,CAACR,EAAR,KAAeK,SAAnB;AAAA,OADgB,CAAzB;AAAA;AAAA,UAAOI,cAAP;;AAGA,UAAIA,cAAJ,EAAoB;AAClB,aAAKhB,SAAL,CAAeiB,KAAf,CAAqBD,cAAc,CAACT,EAApC,EAAwC,KAAKN,IAAL,CAAUM,EAAlD,EAAsD;AACpDC,UAAAA,IAAI,EAAEQ,cAAc,CAACR;AAD+B,SAAtD;AAGD;AACF;;;WAED,eAAMU,SAAN,EAAkC;AAAA,UAAjBC,UAAiB,uEAAJ,EAAI;;AAChC,UAAI,CAAC,KAAKnB,SAAV,EAAqB;AACnB;AACD;;AAED,WAAKA,SAAL,CAAeoB,KAAf,CAAqB;AACnBd,QAAAA,MAAM,EAAE,KAAKL,IAAL,CAAUM,EADC;AAEnBc,QAAAA,KAAK,EAAEH,SAFY;AAGnBC,QAAAA,UAAU,EAAVA;AAHmB,OAArB;AAKD;;;WAED,cAAKG,MAAL,EAAa;AACX,UAAI,CAAC,KAAKtB,SAAV,EAAqB;AACnB;AACD;;AAED,WAAKA,SAAL,CAAeuB,IAAf,CAAoBD,MAApB;AACD;;;;;;mCAG+B,U;8BAAtBE,gB;AAEZ,eAAe,IAAI3B,eAAJ,CAAoB4B,MAAM,CAACC,eAA3B,CAAf","sourcesContent":["import { AnalyticsBrowser } from '@june-so/analytics-next';\n\nclass AnalyticsHelper {\n  constructor({ token: analyticsToken } = {}) {\n    this.analyticsToken = analyticsToken;\n    this.analytics = null;\n    this.user = {};\n  }\n\n  async init() {\n    if (!this.analyticsToken) {\n      return;\n    }\n\n    let [analytics] = await AnalyticsBrowser.load({\n      writeKey: this.analyticsToken,\n    });\n    this.analytics = analytics;\n  }\n\n  identify(user) {\n    if (!this.analytics) {\n      return;\n    }\n    this.user = user;\n    this.analytics.identify(this.user.email, {\n      userId: this.user.id,\n      email: this.user.email,\n      name: this.user.name,\n      avatar: this.user.avatar_url,\n    });\n\n    const { accounts, account_id: accountId } = this.user;\n    const [currentAccount] = accounts.filter(\n      account => account.id === accountId\n    );\n    if (currentAccount) {\n      this.analytics.group(currentAccount.id, this.user.id, {\n        name: currentAccount.name,\n      });\n    }\n  }\n\n  track(eventName, properties = {}) {\n    if (!this.analytics) {\n      return;\n    }\n\n    this.analytics.track({\n      userId: this.user.id,\n      event: eventName,\n      properties,\n    });\n  }\n\n  page(params) {\n    if (!this.analytics) {\n      return;\n    }\n\n    this.analytics.page(params);\n  }\n}\n\nexport * as ANALYTICS_EVENTS from './events';\n\nexport default new AnalyticsHelper(window.analyticsConfig);\n"]},"metadata":{},"sourceType":"module"}