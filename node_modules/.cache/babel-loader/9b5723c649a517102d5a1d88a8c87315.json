{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport MacroItem from './MacroItem';\nimport accountMixin from 'dashboard/mixins/account.js';\nexport default {\n  components: {\n    MacroItem: MacroItem\n  },\n  mixins: [accountMixin],\n  props: {\n    conversationId: {\n      type: [Number, String],\n      required: true\n    }\n  },\n  computed: _objectSpread({}, mapGetters({\n    macros: ['macros/getMacros'],\n    uiFlags: 'macros/getUIFlags'\n  })),\n  mounted: function mounted() {\n    this.$store.dispatch('macros/get');\n  }\n};","map":{"version":3,"sources":["List.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,SAAA,MAAA,aAAA;AACA,OAAA,YAAA,MAAA,6BAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA;AADA,GADA;AAIA,EAAA,MAAA,EAAA,CAAA,YAAA,CAJA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,cAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CADA;AAEA,MAAA,QAAA,EAAA;AAFA;AADA,GALA;AAWA,EAAA,QAAA,oBACA,UAAA,CAAA;AACA,IAAA,MAAA,EAAA,CAAA,kBAAA,CADA;AAEA,IAAA,OAAA,EAAA;AAFA,GAAA,CADA,CAXA;AAiBA,EAAA,OAjBA,qBAiBA;AACA,SAAA,MAAA,CAAA,QAAA,CAAA,YAAA;AACA;AAnBA,CAAA","sourcesContent":["<template>\n  <div>\n    <div\n      v-if=\"!uiFlags.isFetching && !macros.length\"\n      class=\"macros_list--empty-state\"\n    >\n      <p class=\"no-items-error-message\">\n        {{ $t('MACROS.LIST.404') }}\n      </p>\n      <router-link :to=\"addAccountScoping('settings/macros')\">\n        <woot-button\n          variant=\"smooth\"\n          icon=\"add\"\n          size=\"tiny\"\n          class=\"macros_add-button\"\n        >\n          {{ $t('MACROS.HEADER_BTN_TXT') }}\n        </woot-button>\n      </router-link>\n    </div>\n    <woot-loading-state\n      v-if=\"uiFlags.isFetching\"\n      :message=\"$t('MACROS.LOADING')\"\n    />\n    <div v-if=\"!uiFlags.isFetching && macros.length\" class=\"macros-list\">\n      <macro-item\n        v-for=\"macro in macros\"\n        :key=\"macro.id\"\n        :macro=\"macro\"\n        :conversation-id=\"conversationId\"\n      />\n    </div>\n  </div>\n</template>\n<script>\nimport { mapGetters } from 'vuex';\nimport MacroItem from './MacroItem';\nimport accountMixin from 'dashboard/mixins/account.js';\n\nexport default {\n  components: {\n    MacroItem,\n  },\n  mixins: [accountMixin],\n  props: {\n    conversationId: {\n      type: [Number, String],\n      required: true,\n    },\n  },\n  computed: {\n    ...mapGetters({\n      macros: ['macros/getMacros'],\n      uiFlags: 'macros/getUIFlags',\n    }),\n  },\n  mounted() {\n    this.$store.dispatch('macros/get');\n  },\n};\n</script>\n<style scoped lang=\"scss\">\n.macros-list {\n  padding: var(--space-smaller);\n}\n.macros_list--empty-state {\n  padding: var(--space-slab);\n  p {\n    margin: 0;\n  }\n}\n.macros_add-button {\n  margin: var(--space-small) auto 0;\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/conversation/Macros"},"metadata":{},"sourceType":"module"}