{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport LoadingState from 'dashboard/components/widgets/LoadingState';\nexport default {\n  components: {\n    LoadingState: LoadingState\n  },\n  props: {\n    config: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    currentChat: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    return {\n      iframeLoading: true\n    };\n  },\n  computed: {\n    dashboardAppContext: function dashboardAppContext() {\n      return {\n        conversation: this.currentChat,\n        contact: this.$store.getters['contacts/getContact'](this.contactId),\n        currentAgent: this.currentAgent\n      };\n    },\n    contactId: function contactId() {\n      var _this$currentChat, _this$currentChat$met, _this$currentChat$met2;\n\n      return (_this$currentChat = this.currentChat) === null || _this$currentChat === void 0 ? void 0 : (_this$currentChat$met = _this$currentChat.meta) === null || _this$currentChat$met === void 0 ? void 0 : (_this$currentChat$met2 = _this$currentChat$met.sender) === null || _this$currentChat$met2 === void 0 ? void 0 : _this$currentChat$met2.id;\n    },\n    currentAgent: function currentAgent() {\n      var _this$$store$getters$ = this.$store.getters.getCurrentUser,\n          id = _this$$store$getters$.id,\n          name = _this$$store$getters$.name,\n          email = _this$$store$getters$.email;\n      return {\n        id: id,\n        name: name,\n        email: email\n      };\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    window.onmessage = function (e) {\n      if (typeof e.data !== 'string' || e.data !== 'chatwoot-dashboard-app:fetch-info') {\n        return;\n      }\n\n      _this.onIframeLoad(0);\n    };\n  },\n  methods: {\n    onIframeLoad: function onIframeLoad(index) {\n      var frameElement = document.getElementById(\"dashboard-app--frame-\".concat(index));\n      var eventData = {\n        event: 'appContext',\n        data: this.dashboardAppContext\n      };\n      frameElement.contentWindow.postMessage(JSON.stringify(eventData), '*');\n      this.iframeLoading = false;\n    }\n  }\n};","map":{"version":3,"sources":["Frame.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA,OAAA,YAAA,MAAA,2CAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,YAAA,EAAA;AADA,GADA;AAIA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA,KADA;AAKA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA;AALA,GAJA;AAcA,EAAA,IAdA,kBAcA;AACA,WAAA;AACA,MAAA,aAAA,EAAA;AADA,KAAA;AAGA,GAlBA;AAmBA,EAAA,QAAA,EAAA;AACA,IAAA,mBADA,iCACA;AACA,aAAA;AACA,QAAA,YAAA,EAAA,KAAA,WADA;AAEA,QAAA,OAAA,EAAA,KAAA,MAAA,CAAA,OAAA,CAAA,qBAAA,EAAA,KAAA,SAAA,CAFA;AAGA,QAAA,YAAA,EAAA,KAAA;AAHA,OAAA;AAKA,KAPA;AAQA,IAAA,SARA,uBAQA;AAAA;;AACA,kCAAA,KAAA,WAAA,+EAAA,kBAAA,IAAA,oFAAA,sBAAA,MAAA,2DAAA,uBAAA,EAAA;AACA,KAVA;AAWA,IAAA,YAXA,0BAWA;AACA,kCAAA,KAAA,MAAA,CAAA,OAAA,CAAA,cAAA;AAAA,UAAA,EAAA,yBAAA,EAAA;AAAA,UAAA,IAAA,yBAAA,IAAA;AAAA,UAAA,KAAA,yBAAA,KAAA;AACA,aAAA;AAAA,QAAA,EAAA,EAAA,EAAA;AAAA,QAAA,IAAA,EAAA,IAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAAA;AACA;AAdA,GAnBA;AAoCA,EAAA,OApCA,qBAoCA;AAAA;;AACA,IAAA,MAAA,CAAA,SAAA,GAAA,UAAA,CAAA,EAAA;AACA,UACA,OAAA,CAAA,CAAA,IAAA,KAAA,QAAA,IACA,CAAA,CAAA,IAAA,KAAA,mCAFA,EAGA;AACA;AACA;;AACA,MAAA,KAAA,CAAA,YAAA,CAAA,CAAA;AACA,KARA;AASA,GA9CA;AA+CA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,KADA,EACA;AACA,UAAA,YAAA,GAAA,QAAA,CAAA,cAAA,gCACA,KADA,EAAA;AAGA,UAAA,SAAA,GAAA;AAAA,QAAA,KAAA,EAAA,YAAA;AAAA,QAAA,IAAA,EAAA,KAAA;AAAA,OAAA;AACA,MAAA,YAAA,CAAA,aAAA,CAAA,WAAA,CAAA,IAAA,CAAA,SAAA,CAAA,SAAA,CAAA,EAAA,GAAA;AACA,WAAA,aAAA,GAAA,KAAA;AACA;AARA;AA/CA,CAAA","sourcesContent":["<template>\n  <div class=\"dashboard-app--container\">\n    <div\n      v-for=\"(configItem, index) in config\"\n      :key=\"index\"\n      class=\"dashboard-app--list\"\n    >\n      <loading-state\n        v-if=\"iframeLoading\"\n        :message=\"$t('DASHBOARD_APPS.LOADING_MESSAGE')\"\n        class=\"dashboard-app_loading-container\"\n      />\n      <iframe\n        v-if=\"configItem.type === 'frame' && configItem.url\"\n        :id=\"`dashboard-app--frame-${index}`\"\n        :src=\"configItem.url\"\n        @load=\"() => onIframeLoad(index)\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport LoadingState from 'dashboard/components/widgets/LoadingState';\nexport default {\n  components: {\n    LoadingState,\n  },\n  props: {\n    config: {\n      type: Array,\n      default: () => [],\n    },\n    currentChat: {\n      type: Object,\n      default: () => ({}),\n    },\n  },\n  data() {\n    return {\n      iframeLoading: true,\n    };\n  },\n  computed: {\n    dashboardAppContext() {\n      return {\n        conversation: this.currentChat,\n        contact: this.$store.getters['contacts/getContact'](this.contactId),\n        currentAgent: this.currentAgent,\n      };\n    },\n    contactId() {\n      return this.currentChat?.meta?.sender?.id;\n    },\n    currentAgent() {\n      const { id, name, email } = this.$store.getters.getCurrentUser;\n      return { id, name, email };\n    },\n  },\n\n  mounted() {\n    window.onmessage = e => {\n      if (\n        typeof e.data !== 'string' ||\n        e.data !== 'chatwoot-dashboard-app:fetch-info'\n      ) {\n        return;\n      }\n      this.onIframeLoad(0);\n    };\n  },\n  methods: {\n    onIframeLoad(index) {\n      const frameElement = document.getElementById(\n        `dashboard-app--frame-${index}`\n      );\n      const eventData = { event: 'appContext', data: this.dashboardAppContext };\n      frameElement.contentWindow.postMessage(JSON.stringify(eventData), '*');\n      this.iframeLoading = false;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.dashboard-app--container,\n.dashboard-app--list,\n.dashboard-app--list iframe {\n  height: 100%;\n  width: 100%;\n}\n\n.dashboard-app--list iframe {\n  border: 0;\n}\n.dashboard-app_loading-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 100%;\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/components/widgets/DashboardApp"},"metadata":{},"sourceType":"module"}