{"ast":null,"code":"/* eslint arrow-body-style: 0 */\nimport ConversationView from './ConversationView';\nimport { frontendURL } from '../../../helper/URLHelper';\nexport default {\n  routes: [{\n    path: frontendURL('accounts/:accountId/dashboard'),\n    name: 'home',\n    roles: ['administrator', 'agent'],\n    component: ConversationView,\n    props: function props() {\n      return {\n        inboxId: 0\n      };\n    }\n  }, {\n    path: frontendURL('accounts/:accountId/conversations/:conversation_id'),\n    name: 'inbox_conversation',\n    roles: ['administrator', 'agent'],\n    component: ConversationView,\n    props: function props(route) {\n      return {\n        inboxId: 0,\n        conversationId: route.params.conversation_id\n      };\n    }\n  }, {\n    path: frontendURL('accounts/:accountId/inbox/:inbox_id'),\n    name: 'inbox_dashboard',\n    roles: ['administrator', 'agent'],\n    component: ConversationView,\n    props: function props(route) {\n      return {\n        inboxId: route.params.inbox_id\n      };\n    }\n  }, {\n    path: frontendURL('accounts/:accountId/inbox/:inbox_id/conversations/:conversation_id'),\n    name: 'conversation_through_inbox',\n    roles: ['administrator', 'agent'],\n    component: ConversationView,\n    props: function props(route) {\n      return {\n        conversationId: route.params.conversation_id,\n        inboxId: route.params.inbox_id\n      };\n    }\n  }, {\n    path: frontendURL('accounts/:accountId/label/:label'),\n    name: 'label_conversations',\n    roles: ['administrator', 'agent'],\n    component: ConversationView,\n    props: function props(route) {\n      return {\n        label: route.params.label\n      };\n    }\n  }, {\n    path: frontendURL('accounts/:accountId/label/:label/conversations/:conversation_id'),\n    name: 'conversations_through_label',\n    roles: ['administrator', 'agent'],\n    component: ConversationView,\n    props: function props(route) {\n      return {\n        conversationId: route.params.conversation_id,\n        label: route.params.label\n      };\n    }\n  }, {\n    path: frontendURL('accounts/:accountId/team/:teamId'),\n    name: 'team_conversations',\n    roles: ['administrator', 'agent'],\n    component: ConversationView,\n    props: function props(route) {\n      return {\n        teamId: route.params.teamId\n      };\n    }\n  }, {\n    path: frontendURL('accounts/:accountId/team/:teamId/conversations/:conversationId'),\n    name: 'conversations_through_team',\n    roles: ['administrator', 'agent'],\n    component: ConversationView,\n    props: function props(route) {\n      return {\n        conversationId: route.params.conversationId,\n        teamId: route.params.teamId\n      };\n    }\n  }, {\n    path: frontendURL('accounts/:accountId/custom_view/:id'),\n    name: 'folder_conversations',\n    roles: ['administrator', 'agent'],\n    component: ConversationView,\n    props: function props(route) {\n      return {\n        foldersId: route.params.id\n      };\n    }\n  }, {\n    path: frontendURL('accounts/:accountId/custom_view/:id/conversations/:conversation_id'),\n    name: 'conversations_through_folders',\n    roles: ['administrator', 'agent'],\n    component: ConversationView,\n    props: function props(route) {\n      return {\n        conversationId: route.params.conversation_id,\n        foldersId: route.params.id\n      };\n    }\n  }, {\n    path: frontendURL('accounts/:accountId/mentions/conversations'),\n    name: 'conversation_mentions',\n    roles: ['administrator', 'agent'],\n    component: ConversationView,\n    props: function props() {\n      return {\n        conversationType: 'mention'\n      };\n    }\n  }, {\n    path: frontendURL('accounts/:accountId/mentions/conversations/:conversationId'),\n    name: 'conversation_through_mentions',\n    roles: ['administrator', 'agent'],\n    component: ConversationView,\n    props: function props(route) {\n      return {\n        conversationId: route.params.conversationId,\n        conversationType: 'mention'\n      };\n    }\n  }, {\n    path: frontendURL('accounts/:accountId/unattended/conversations'),\n    name: 'conversation_unattended',\n    roles: ['administrator', 'agent'],\n    component: ConversationView,\n    props: function props() {\n      return {\n        conversationType: 'unattended'\n      };\n    }\n  }, {\n    path: frontendURL('accounts/:accountId/unattended/conversations/:conversationId'),\n    name: 'conversation_through_unattended',\n    roles: ['administrator', 'agent'],\n    component: ConversationView,\n    props: function props(route) {\n      return {\n        conversationId: route.params.conversationId,\n        conversationType: 'unattended'\n      };\n    }\n  }]\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/routes/dashboard/conversation/conversation.routes.js"],"names":["ConversationView","frontendURL","routes","path","name","roles","component","props","inboxId","route","conversationId","params","conversation_id","inbox_id","label","teamId","foldersId","id","conversationType"],"mappings":"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","sourcesContent":["/* eslint arrow-body-style: 0 */\nimport ConversationView from './ConversationView';\nimport { frontendURL } from '../../../helper/URLHelper';\n\nexport default {\n  routes: [\n    {\n      path: frontendURL('accounts/:accountId/dashboard'),\n      name: 'home',\n      roles: ['administrator', 'agent'],\n      component: ConversationView,\n      props: () => {\n        return { inboxId: 0 };\n      },\n    },\n    {\n      path: frontendURL('accounts/:accountId/conversations/:conversation_id'),\n      name: 'inbox_conversation',\n      roles: ['administrator', 'agent'],\n      component: ConversationView,\n      props: route => {\n        return { inboxId: 0, conversationId: route.params.conversation_id };\n      },\n    },\n    {\n      path: frontendURL('accounts/:accountId/inbox/:inbox_id'),\n      name: 'inbox_dashboard',\n      roles: ['administrator', 'agent'],\n      component: ConversationView,\n      props: route => {\n        return { inboxId: route.params.inbox_id };\n      },\n    },\n    {\n      path: frontendURL(\n        'accounts/:accountId/inbox/:inbox_id/conversations/:conversation_id'\n      ),\n      name: 'conversation_through_inbox',\n      roles: ['administrator', 'agent'],\n      component: ConversationView,\n      props: route => {\n        return {\n          conversationId: route.params.conversation_id,\n          inboxId: route.params.inbox_id,\n        };\n      },\n    },\n    {\n      path: frontendURL('accounts/:accountId/label/:label'),\n      name: 'label_conversations',\n      roles: ['administrator', 'agent'],\n      component: ConversationView,\n      props: route => ({ label: route.params.label }),\n    },\n    {\n      path: frontendURL(\n        'accounts/:accountId/label/:label/conversations/:conversation_id'\n      ),\n      name: 'conversations_through_label',\n      roles: ['administrator', 'agent'],\n      component: ConversationView,\n      props: route => ({\n        conversationId: route.params.conversation_id,\n        label: route.params.label,\n      }),\n    },\n    {\n      path: frontendURL('accounts/:accountId/team/:teamId'),\n      name: 'team_conversations',\n      roles: ['administrator', 'agent'],\n      component: ConversationView,\n      props: route => ({ teamId: route.params.teamId }),\n    },\n    {\n      path: frontendURL(\n        'accounts/:accountId/team/:teamId/conversations/:conversationId'\n      ),\n      name: 'conversations_through_team',\n      roles: ['administrator', 'agent'],\n      component: ConversationView,\n      props: route => ({\n        conversationId: route.params.conversationId,\n        teamId: route.params.teamId,\n      }),\n    },\n    {\n      path: frontendURL('accounts/:accountId/custom_view/:id'),\n      name: 'folder_conversations',\n      roles: ['administrator', 'agent'],\n      component: ConversationView,\n      props: route => ({ foldersId: route.params.id }),\n    },\n    {\n      path: frontendURL(\n        'accounts/:accountId/custom_view/:id/conversations/:conversation_id'\n      ),\n      name: 'conversations_through_folders',\n      roles: ['administrator', 'agent'],\n      component: ConversationView,\n      props: route => ({\n        conversationId: route.params.conversation_id,\n        foldersId: route.params.id,\n      }),\n    },\n    {\n      path: frontendURL('accounts/:accountId/mentions/conversations'),\n      name: 'conversation_mentions',\n      roles: ['administrator', 'agent'],\n      component: ConversationView,\n      props: () => ({ conversationType: 'mention' }),\n    },\n    {\n      path: frontendURL(\n        'accounts/:accountId/mentions/conversations/:conversationId'\n      ),\n      name: 'conversation_through_mentions',\n      roles: ['administrator', 'agent'],\n      component: ConversationView,\n      props: route => ({\n        conversationId: route.params.conversationId,\n        conversationType: 'mention',\n      }),\n    },\n\n    {\n      path: frontendURL('accounts/:accountId/unattended/conversations'),\n      name: 'conversation_unattended',\n      roles: ['administrator', 'agent'],\n      component: ConversationView,\n      props: () => ({ conversationType: 'unattended' }),\n    },\n    {\n      path: frontendURL(\n        'accounts/:accountId/unattended/conversations/:conversationId'\n      ),\n      name: 'conversation_through_unattended',\n      roles: ['administrator', 'agent'],\n      component: ConversationView,\n      props: route => ({\n        conversationId: route.params.conversationId,\n        conversationType: 'unattended',\n      }),\n    },\n  ],\n};\n"]},"metadata":{},"sourceType":"module"}