{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.from-entries.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport i18n from 'widget/i18n/index';\nvar defaultTranslations = Object.fromEntries(Object.entries(i18n).filter(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 1),\n      key = _ref2[0];\n\n  return key.includes('en');\n})).en;\nexport var standardFieldKeys = {\n  emailAddress: {\n    key: 'EMAIL_ADDRESS',\n    label: 'Email Id',\n    placeholder: 'Please enter your email address'\n  },\n  fullName: {\n    key: 'FULL_NAME',\n    label: 'Full Name',\n    placeholder: 'Please enter your full name'\n  },\n  phoneNumber: {\n    key: 'PHONE_NUMBER',\n    label: 'Phone Number',\n    placeholder: 'Please enter your phone number'\n  }\n};\nexport var getLabel = function getLabel(_ref3) {\n  var key = _ref3.key,\n      label = _ref3.label;\n  return defaultTranslations.PRE_CHAT_FORM.FIELDS[key] ? defaultTranslations.PRE_CHAT_FORM.FIELDS[key].LABEL : label;\n};\nexport var getPlaceHolder = function getPlaceHolder(_ref4) {\n  var key = _ref4.key,\n      placeholder = _ref4.placeholder;\n  return defaultTranslations.PRE_CHAT_FORM.FIELDS[key] ? defaultTranslations.PRE_CHAT_FORM.FIELDS[key].PLACEHOLDER : placeholder;\n};\nexport var getCustomFields = function getCustomFields(_ref5) {\n  var standardFields = _ref5.standardFields,\n      customAttributes = _ref5.customAttributes;\n  var customFields = [];\n  var preChatFields = standardFields.pre_chat_fields;\n  customAttributes.forEach(function (attribute) {\n    var itemExist = preChatFields.find(function (item) {\n      return item.name === attribute.attribute_key;\n    });\n\n    if (!itemExist) {\n      customFields.push({\n        label: attribute.attribute_display_name,\n        placeholder: attribute.attribute_display_name,\n        name: attribute.attribute_key,\n        type: attribute.attribute_display_type,\n        values: attribute.attribute_values,\n        field_type: attribute.attribute_model,\n        required: false,\n        enabled: false\n      });\n    }\n  });\n  return customFields;\n};\nexport var getFormattedPreChatFields = function getFormattedPreChatFields(_ref6) {\n  var preChatFields = _ref6.preChatFields;\n  return preChatFields.map(function (item) {\n    return _objectSpread(_objectSpread({}, item), {}, {\n      label: getLabel({\n        key: standardFieldKeys[item.name] ? standardFieldKeys[item.name].key : item.name,\n        label: item.label ? item.label : item.name\n      }),\n      placeholder: getPlaceHolder({\n        key: standardFieldKeys[item.name] ? standardFieldKeys[item.name].key : item.name,\n        placeholder: item.placeholder ? item.placeholder : item.name\n      })\n    });\n  });\n};\nexport var getPreChatFields = function getPreChatFields(_ref7) {\n  var _ref7$preChatFormOpti = _ref7.preChatFormOptions,\n      preChatFormOptions = _ref7$preChatFormOpti === void 0 ? {} : _ref7$preChatFormOpti,\n      _ref7$customAttribute = _ref7.customAttributes,\n      customAttributes = _ref7$customAttribute === void 0 ? [] : _ref7$customAttribute;\n  var pre_chat_message = preChatFormOptions.pre_chat_message,\n      pre_chat_fields = preChatFormOptions.pre_chat_fields;\n  var customFields = {};\n  var preChatFields = {};\n  var formattedPreChatFields = getFormattedPreChatFields({\n    preChatFields: pre_chat_fields\n  });\n  customFields = getCustomFields({\n    standardFields: {\n      pre_chat_fields: formattedPreChatFields\n    },\n    customAttributes: customAttributes\n  });\n  preChatFields = [].concat(_toConsumableArray(formattedPreChatFields), _toConsumableArray(customFields));\n  return {\n    pre_chat_message: pre_chat_message,\n    pre_chat_fields: preChatFields\n  };\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/helper/preChat.js"],"names":["i18n","defaultTranslations","Object","fromEntries","entries","filter","key","includes","en","standardFieldKeys","emailAddress","label","placeholder","fullName","phoneNumber","getLabel","PRE_CHAT_FORM","FIELDS","LABEL","getPlaceHolder","PLACEHOLDER","getCustomFields","standardFields","customAttributes","customFields","preChatFields","pre_chat_fields","forEach","attribute","itemExist","find","item","name","attribute_key","push","attribute_display_name","type","attribute_display_type","values","attribute_values","field_type","attribute_model","required","enabled","getFormattedPreChatFields","map","getPreChatFields","preChatFormOptions","pre_chat_message","formattedPreChatFields"],"mappings":"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","sourcesContent":["import i18n from 'widget/i18n/index';\nconst defaultTranslations = Object.fromEntries(\n  Object.entries(i18n).filter(([key]) => key.includes('en'))\n).en;\n\nexport const standardFieldKeys = {\n  emailAddress: {\n    key: 'EMAIL_ADDRESS',\n    label: 'Email Id',\n    placeholder: 'Please enter your email address',\n  },\n  fullName: {\n    key: 'FULL_NAME',\n    label: 'Full Name',\n    placeholder: 'Please enter your full name',\n  },\n  phoneNumber: {\n    key: 'PHONE_NUMBER',\n    label: 'Phone Number',\n    placeholder: 'Please enter your phone number',\n  },\n};\n\nexport const getLabel = ({ key, label }) => {\n  return defaultTranslations.PRE_CHAT_FORM.FIELDS[key]\n    ? defaultTranslations.PRE_CHAT_FORM.FIELDS[key].LABEL\n    : label;\n};\nexport const getPlaceHolder = ({ key, placeholder }) => {\n  return defaultTranslations.PRE_CHAT_FORM.FIELDS[key]\n    ? defaultTranslations.PRE_CHAT_FORM.FIELDS[key].PLACEHOLDER\n    : placeholder;\n};\n\nexport const getCustomFields = ({ standardFields, customAttributes }) => {\n  let customFields = [];\n  const { pre_chat_fields: preChatFields } = standardFields;\n  customAttributes.forEach(attribute => {\n    const itemExist = preChatFields.find(\n      item => item.name === attribute.attribute_key\n    );\n    if (!itemExist) {\n      customFields.push({\n        label: attribute.attribute_display_name,\n        placeholder: attribute.attribute_display_name,\n        name: attribute.attribute_key,\n        type: attribute.attribute_display_type,\n        values: attribute.attribute_values,\n        field_type: attribute.attribute_model,\n        required: false,\n        enabled: false,\n      });\n    }\n  });\n  return customFields;\n};\n\nexport const getFormattedPreChatFields = ({ preChatFields }) => {\n  return preChatFields.map(item => {\n    return {\n      ...item,\n      label: getLabel({\n        key: standardFieldKeys[item.name]\n          ? standardFieldKeys[item.name].key\n          : item.name,\n        label: item.label ? item.label : item.name,\n      }),\n      placeholder: getPlaceHolder({\n        key: standardFieldKeys[item.name]\n          ? standardFieldKeys[item.name].key\n          : item.name,\n        placeholder: item.placeholder ? item.placeholder : item.name,\n      }),\n    };\n  });\n};\n\nexport const getPreChatFields = ({\n  preChatFormOptions = {},\n  customAttributes = [],\n}) => {\n  const { pre_chat_message, pre_chat_fields } = preChatFormOptions;\n  let customFields = {};\n  let preChatFields = {};\n\n  const formattedPreChatFields = getFormattedPreChatFields({\n    preChatFields: pre_chat_fields,\n  });\n\n  customFields = getCustomFields({\n    standardFields: { pre_chat_fields: formattedPreChatFields },\n    customAttributes,\n  });\n  preChatFields = [...formattedPreChatFields, ...customFields];\n\n  return {\n    pre_chat_message,\n    pre_chat_fields: preChatFields,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}