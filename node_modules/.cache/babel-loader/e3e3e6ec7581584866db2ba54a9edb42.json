{"ast":null,"code":"var _mutations;\n\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Vue from 'vue';\nimport types from '../../mutation-types';\nexport var mutations = (_mutations = {}, _defineProperty(_mutations, types.SET_CONTACT_UI_FLAG, function ($state, data) {\n  $state.uiFlags = _objectSpread(_objectSpread({}, $state.uiFlags), data);\n}), _defineProperty(_mutations, types.CLEAR_CONTACTS, function ($state) {\n  Vue.set($state, 'records', {});\n  Vue.set($state, 'sortOrder', []);\n}), _defineProperty(_mutations, types.SET_CONTACT_META, function ($state, data) {\n  var count = data.count,\n      currentPage = data.current_page;\n  Vue.set($state.meta, 'count', count);\n  Vue.set($state.meta, 'currentPage', currentPage);\n}), _defineProperty(_mutations, types.SET_CONTACTS, function ($state, data) {\n  var sortOrder = data.map(function (contact) {\n    Vue.set($state.records, contact.id, _objectSpread(_objectSpread({}, $state.records[contact.id] || {}), contact));\n    return contact.id;\n  });\n  $state.sortOrder = sortOrder;\n}), _defineProperty(_mutations, types.SET_CONTACT_ITEM, function ($state, data) {\n  Vue.set($state.records, data.id, _objectSpread(_objectSpread({}, $state.records[data.id] || {}), data));\n\n  if (!$state.sortOrder.includes(data.id)) {\n    $state.sortOrder.push(data.id);\n  }\n}), _defineProperty(_mutations, types.EDIT_CONTACT, function ($state, data) {\n  Vue.set($state.records, data.id, data);\n}), _defineProperty(_mutations, types.DELETE_CONTACT, function ($state, id) {\n  var index = $state.sortOrder.findIndex(function (item) {\n    return item === id;\n  });\n  Vue.delete($state.sortOrder, index);\n  Vue.delete($state.records, id);\n}), _defineProperty(_mutations, types.UPDATE_CONTACTS_PRESENCE, function ($state, data) {\n  Object.values($state.records).forEach(function (element) {\n    var availabilityStatus = data[element.id];\n\n    if (availabilityStatus) {\n      Vue.set($state.records[element.id], 'availability_status', availabilityStatus);\n    } else {\n      Vue.delete($state.records[element.id], 'availability_status');\n    }\n  });\n}), _defineProperty(_mutations, types.SET_CONTACT_FILTERS, function (_state, data) {\n  _state.appliedFilters = data;\n}), _defineProperty(_mutations, types.CLEAR_CONTACT_FILTERS, function (_state) {\n  _state.appliedFilters = [];\n}), _mutations);","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/store/modules/contacts/mutations.js"],"names":["Vue","types","mutations","SET_CONTACT_UI_FLAG","$state","data","uiFlags","CLEAR_CONTACTS","set","SET_CONTACT_META","count","currentPage","current_page","meta","SET_CONTACTS","sortOrder","map","contact","records","id","SET_CONTACT_ITEM","includes","push","EDIT_CONTACT","DELETE_CONTACT","index","findIndex","item","delete","UPDATE_CONTACTS_PRESENCE","Object","values","forEach","element","availabilityStatus","SET_CONTACT_FILTERS","_state","appliedFilters","CLEAR_CONTACT_FILTERS"],"mappings":"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","sourcesContent":["import Vue from 'vue';\nimport types from '../../mutation-types';\n\nexport const mutations = {\n  [types.SET_CONTACT_UI_FLAG]($state, data) {\n    $state.uiFlags = {\n      ...$state.uiFlags,\n      ...data,\n    };\n  },\n\n  [types.CLEAR_CONTACTS]: $state => {\n    Vue.set($state, 'records', {});\n    Vue.set($state, 'sortOrder', []);\n  },\n\n  [types.SET_CONTACT_META]: ($state, data) => {\n    const { count, current_page: currentPage } = data;\n    Vue.set($state.meta, 'count', count);\n    Vue.set($state.meta, 'currentPage', currentPage);\n  },\n\n  [types.SET_CONTACTS]: ($state, data) => {\n    const sortOrder = data.map(contact => {\n      Vue.set($state.records, contact.id, {\n        ...($state.records[contact.id] || {}),\n        ...contact,\n      });\n      return contact.id;\n    });\n    $state.sortOrder = sortOrder;\n  },\n\n  [types.SET_CONTACT_ITEM]: ($state, data) => {\n    Vue.set($state.records, data.id, {\n      ...($state.records[data.id] || {}),\n      ...data,\n    });\n\n    if (!$state.sortOrder.includes(data.id)) {\n      $state.sortOrder.push(data.id);\n    }\n  },\n\n  [types.EDIT_CONTACT]: ($state, data) => {\n    Vue.set($state.records, data.id, data);\n  },\n\n  [types.DELETE_CONTACT]: ($state, id) => {\n    const index = $state.sortOrder.findIndex(item => item === id);\n    Vue.delete($state.sortOrder, index);\n    Vue.delete($state.records, id);\n  },\n\n  [types.UPDATE_CONTACTS_PRESENCE]: ($state, data) => {\n    Object.values($state.records).forEach(element => {\n      const availabilityStatus = data[element.id];\n      if (availabilityStatus) {\n        Vue.set(\n          $state.records[element.id],\n          'availability_status',\n          availabilityStatus\n        );\n      } else {\n        Vue.delete($state.records[element.id], 'availability_status');\n      }\n    });\n  },\n\n  [types.SET_CONTACT_FILTERS](_state, data) {\n    _state.appliedFilters = data;\n  },\n\n  [types.CLEAR_CONTACT_FILTERS](_state) {\n    _state.appliedFilters = [];\n  },\n};\n"]},"metadata":{},"sourceType":"module"}