{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport messageFormatterMixin from 'shared/mixins/messageFormatterMixin';\nimport { mapGetters } from 'vuex';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport accountMixin from '../../../../mixins/account';\nimport BillingItem from './components/BillingItem.vue';\nexport default {\n  components: {\n    BillingItem: BillingItem\n  },\n  mixins: [accountMixin, alertMixin, messageFormatterMixin],\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    getAccount: 'accounts/getAccount',\n    uiFlags: 'accounts/getUIFlags'\n  })), {}, {\n    currentAccount: function currentAccount() {\n      return this.getAccount(this.accountId) || {};\n    },\n    customAttributes: function customAttributes() {\n      return this.currentAccount.custom_attributes || {};\n    },\n    hasABillingPlan: function hasABillingPlan() {\n      return !!this.planName;\n    },\n    planName: function planName() {\n      return this.customAttributes.plan_name || '';\n    },\n    subscribedQuantity: function subscribedQuantity() {\n      return this.customAttributes.subscribed_quantity || 0;\n    }\n  }),\n  mounted: function mounted() {\n    this.fetchAccountDetails();\n  },\n  methods: {\n    fetchAccountDetails: function fetchAccountDetails() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.$store.dispatch('accounts/get');\n\n              case 2:\n                if (!_this.hasABillingPlan) {\n                  _this.$store.dispatch('accounts/subscription');\n                }\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    onClickBillingPortal: function onClickBillingPortal() {\n      this.$store.dispatch('accounts/checkout');\n    },\n    onToggleChatWindow: function onToggleChatWindow() {\n      if (window.$chatwoot) {\n        window.$chatwoot.toggle();\n      }\n    }\n  }\n};","map":{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,OAAA,qBAAA,MAAA,qCAAA;AAEA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,UAAA,MAAA,0BAAA;AACA,OAAA,YAAA,MAAA,4BAAA;AACA,OAAA,WAAA,MAAA,8BAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,WAAA,EAAA;AAAA,GADA;AAEA,EAAA,MAAA,EAAA,CAAA,YAAA,EAAA,UAAA,EAAA,qBAAA,CAFA;AAGA,EAAA,QAAA,kCACA,UAAA,CAAA;AACA,IAAA,UAAA,EAAA,qBADA;AAEA,IAAA,OAAA,EAAA;AAFA,GAAA,CADA;AAKA,IAAA,cALA,4BAKA;AACA,aAAA,KAAA,UAAA,CAAA,KAAA,SAAA,KAAA,EAAA;AACA,KAPA;AAQA,IAAA,gBARA,8BAQA;AACA,aAAA,KAAA,cAAA,CAAA,iBAAA,IAAA,EAAA;AACA,KAVA;AAWA,IAAA,eAXA,6BAWA;AACA,aAAA,CAAA,CAAA,KAAA,QAAA;AACA,KAbA;AAcA,IAAA,QAdA,sBAcA;AACA,aAAA,KAAA,gBAAA,CAAA,SAAA,IAAA,EAAA;AACA,KAhBA;AAiBA,IAAA,kBAjBA,gCAiBA;AACA,aAAA,KAAA,gBAAA,CAAA,mBAAA,IAAA,CAAA;AACA;AAnBA,IAHA;AAwBA,EAAA,OAxBA,qBAwBA;AACA,SAAA,mBAAA;AACA,GA1BA;AA2BA,EAAA,OAAA,EAAA;AACA,IAAA,mBADA,iCACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,cAAA,CADA;;AAAA;AAGA,oBAAA,CAAA,KAAA,CAAA,eAAA,EAAA;AACA,kBAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,uBAAA;AACA;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,KAPA;AAQA,IAAA,oBARA,kCAQA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,mBAAA;AACA,KAVA;AAWA,IAAA,kBAXA,gCAWA;AACA,UAAA,MAAA,CAAA,SAAA,EAAA;AACA,QAAA,MAAA,CAAA,SAAA,CAAA,MAAA;AACA;AACA;AAfA;AA3BA,CAAA","sourcesContent":["<template>\n  <div class=\"columns profile--settings\">\n    <woot-loading-state v-if=\"uiFlags.isFetchingItem\" />\n    <div v-else-if=\"!hasABillingPlan\">\n      <p>{{ $t('BILLING_SETTINGS.NO_BILLING_USER') }}</p>\n    </div>\n    <div v-else class=\"small-12 columns \">\n      <div class=\"current-plan--details\">\n        <h6>{{ $t('BILLING_SETTINGS.CURRENT_PLAN.TITLE') }}</h6>\n        <div\n          v-dompurify-html=\"\n            formatMessage(\n              $t('BILLING_SETTINGS.CURRENT_PLAN.PLAN_NOTE', {\n                plan: planName,\n                quantity: subscribedQuantity,\n              })\n            )\n          \"\n        />\n      </div>\n      <billing-item\n        :title=\"$t('BILLING_SETTINGS.MANAGE_SUBSCRIPTION.TITLE')\"\n        :description=\"$t('BILLING_SETTINGS.MANAGE_SUBSCRIPTION.DESCRIPTION')\"\n        :button-label=\"$t('BILLING_SETTINGS.MANAGE_SUBSCRIPTION.BUTTON_TXT')\"\n        @click=\"onClickBillingPortal\"\n      />\n      <billing-item\n        :title=\"$t('BILLING_SETTINGS.CHAT_WITH_US.TITLE')\"\n        :description=\"$t('BILLING_SETTINGS.CHAT_WITH_US.DESCRIPTION')\"\n        :button-label=\"$t('BILLING_SETTINGS.CHAT_WITH_US.BUTTON_TXT')\"\n        button-icon=\"chat-multiple\"\n        @click=\"onToggleChatWindow\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport messageFormatterMixin from 'shared/mixins/messageFormatterMixin';\n\nimport { mapGetters } from 'vuex';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport accountMixin from '../../../../mixins/account';\nimport BillingItem from './components/BillingItem.vue';\n\nexport default {\n  components: { BillingItem },\n  mixins: [accountMixin, alertMixin, messageFormatterMixin],\n  computed: {\n    ...mapGetters({\n      getAccount: 'accounts/getAccount',\n      uiFlags: 'accounts/getUIFlags',\n    }),\n    currentAccount() {\n      return this.getAccount(this.accountId) || {};\n    },\n    customAttributes() {\n      return this.currentAccount.custom_attributes || {};\n    },\n    hasABillingPlan() {\n      return !!this.planName;\n    },\n    planName() {\n      return this.customAttributes.plan_name || '';\n    },\n    subscribedQuantity() {\n      return this.customAttributes.subscribed_quantity || 0;\n    },\n  },\n  mounted() {\n    this.fetchAccountDetails();\n  },\n  methods: {\n    async fetchAccountDetails() {\n      await this.$store.dispatch('accounts/get');\n\n      if (!this.hasABillingPlan) {\n        this.$store.dispatch('accounts/subscription');\n      }\n    },\n    onClickBillingPortal() {\n      this.$store.dispatch('accounts/checkout');\n    },\n    onToggleChatWindow() {\n      if (window.$chatwoot) {\n        window.$chatwoot.toggle();\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.manage-subscription {\n  align-items: center;\n  background: var(--white);\n  border-radius: var(--border-radius-normal);\n  border: 1px solid var(--color-border);\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: var(--space-small);\n  padding: var(--space-medium) var(--space-normal);\n}\n\n.current-plan--details {\n  border-bottom: 1px solid var(--color-border);\n  margin-bottom: var(--space-normal);\n  padding-bottom: var(--space-normal);\n}\n\n.manage-subscription {\n  .manage-subscription--description {\n    margin-bottom: 0;\n  }\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/settings/billing"},"metadata":{},"sourceType":"module"}