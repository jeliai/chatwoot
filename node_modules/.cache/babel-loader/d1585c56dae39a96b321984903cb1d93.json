{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport wootConstants from '../../../constants';\nimport eventListenerMixins from 'shared/mixins/eventListenerMixins';\nimport { hasPressedAltAndBKey } from 'shared/helpers/KeyboardHelpers';\nexport default {\n  mixins: [eventListenerMixins],\n  data: function data() {\n    return {\n      activeStatus: wootConstants.STATUS_TYPE.OPEN\n    };\n  },\n  methods: {\n    handleKeyEvents: function handleKeyEvents(e) {\n      if (hasPressedAltAndBKey(e)) {\n        if (this.activeStatus === wootConstants.STATUS_TYPE.OPEN) {\n          this.activeStatus = wootConstants.STATUS_TYPE.RESOLVED;\n        } else if (this.activeStatus === wootConstants.STATUS_TYPE.RESOLVED) {\n          this.activeStatus = wootConstants.STATUS_TYPE.PENDING;\n        } else if (this.activeStatus === wootConstants.STATUS_TYPE.PENDING) {\n          this.activeStatus = wootConstants.STATUS_TYPE.SNOOZED;\n        } else if (this.activeStatus === wootConstants.STATUS_TYPE.SNOOZED) {\n          this.activeStatus = wootConstants.STATUS_TYPE.ALL;\n        } else if (this.activeStatus === wootConstants.STATUS_TYPE.ALL) {\n          this.activeStatus = wootConstants.STATUS_TYPE.OPEN;\n        }\n      }\n\n      this.onTabChange();\n    },\n    onTabChange: function onTabChange() {\n      this.$store.dispatch('setChatFilter', this.activeStatus);\n      this.$emit('statusFilterChange', this.activeStatus);\n    }\n  }\n};","map":{"version":3,"sources":["ChatFilter.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAgBA,OAAA,aAAA,MAAA,oBAAA;AACA,OAAA,mBAAA,MAAA,mCAAA;AACA,SAAA,oBAAA,QAAA,gCAAA;AAEA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,mBAAA,CADA;AAEA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,YAAA,EAAA,aAAA,CAAA,WAAA,CAAA;AADA,KAAA;AAAA,GAFA;AAKA,EAAA,OAAA,EAAA;AACA,IAAA,eADA,2BACA,CADA,EACA;AACA,UAAA,oBAAA,CAAA,CAAA,CAAA,EAAA;AACA,YAAA,KAAA,YAAA,KAAA,aAAA,CAAA,WAAA,CAAA,IAAA,EAAA;AACA,eAAA,YAAA,GAAA,aAAA,CAAA,WAAA,CAAA,QAAA;AACA,SAFA,MAEA,IAAA,KAAA,YAAA,KAAA,aAAA,CAAA,WAAA,CAAA,QAAA,EAAA;AACA,eAAA,YAAA,GAAA,aAAA,CAAA,WAAA,CAAA,OAAA;AACA,SAFA,MAEA,IAAA,KAAA,YAAA,KAAA,aAAA,CAAA,WAAA,CAAA,OAAA,EAAA;AACA,eAAA,YAAA,GAAA,aAAA,CAAA,WAAA,CAAA,OAAA;AACA,SAFA,MAEA,IAAA,KAAA,YAAA,KAAA,aAAA,CAAA,WAAA,CAAA,OAAA,EAAA;AACA,eAAA,YAAA,GAAA,aAAA,CAAA,WAAA,CAAA,GAAA;AACA,SAFA,MAEA,IAAA,KAAA,YAAA,KAAA,aAAA,CAAA,WAAA,CAAA,GAAA,EAAA;AACA,eAAA,YAAA,GAAA,aAAA,CAAA,WAAA,CAAA,IAAA;AACA;AACA;;AACA,WAAA,WAAA;AACA,KAhBA;AAiBA,IAAA,WAjBA,yBAiBA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,eAAA,EAAA,KAAA,YAAA;AACA,WAAA,KAAA,CAAA,oBAAA,EAAA,KAAA,YAAA;AACA;AApBA;AALA,CAAA","sourcesContent":["<template>\n  <select v-model=\"activeStatus\" class=\"status--filter\" @change=\"onTabChange()\">\n    <option\n      v-for=\"(value, status) in $t('CHAT_LIST.CHAT_STATUS_FILTER_ITEMS')\"\n      :key=\"status\"\n      :value=\"status\"\n    >\n      {{ value['TEXT'] }}\n    </option>\n    <option value=\"all\">\n      {{ $t('CHAT_LIST.FILTER_ALL') }}\n    </option>\n  </select>\n</template>\n\n<script>\nimport wootConstants from '../../../constants';\nimport eventListenerMixins from 'shared/mixins/eventListenerMixins';\nimport { hasPressedAltAndBKey } from 'shared/helpers/KeyboardHelpers';\n\nexport default {\n  mixins: [eventListenerMixins],\n  data: () => ({\n    activeStatus: wootConstants.STATUS_TYPE.OPEN,\n  }),\n  methods: {\n    handleKeyEvents(e) {\n      if (hasPressedAltAndBKey(e)) {\n        if (this.activeStatus === wootConstants.STATUS_TYPE.OPEN) {\n          this.activeStatus = wootConstants.STATUS_TYPE.RESOLVED;\n        } else if (this.activeStatus === wootConstants.STATUS_TYPE.RESOLVED) {\n          this.activeStatus = wootConstants.STATUS_TYPE.PENDING;\n        } else if (this.activeStatus === wootConstants.STATUS_TYPE.PENDING) {\n          this.activeStatus = wootConstants.STATUS_TYPE.SNOOZED;\n        } else if (this.activeStatus === wootConstants.STATUS_TYPE.SNOOZED) {\n          this.activeStatus = wootConstants.STATUS_TYPE.ALL;\n        } else if (this.activeStatus === wootConstants.STATUS_TYPE.ALL) {\n          this.activeStatus = wootConstants.STATUS_TYPE.OPEN;\n        }\n      }\n      this.onTabChange();\n    },\n    onTabChange() {\n      this.$store.dispatch('setChatFilter', this.activeStatus);\n      this.$emit('statusFilterChange', this.activeStatus);\n    },\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/dashboard/components/widgets/conversation"},"metadata":{},"sourceType":"module"}