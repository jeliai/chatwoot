{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { SDK_CSS } from './sdk.js';\nimport { IFrameHelper } from './IFrameHelper';\nexport var loadCSS = function loadCSS() {\n  var css = document.createElement('style');\n  css.innerHTML = \"\".concat(SDK_CSS);\n  document.body.appendChild(css);\n};\nexport var addClasses = function addClasses(elm, classes) {\n  var _elm$classList;\n\n  (_elm$classList = elm.classList).add.apply(_elm$classList, _toConsumableArray(classes.split(' ')));\n};\nexport var toggleClass = function toggleClass(elm, classes) {\n  elm.classList.toggle(classes);\n};\nexport var removeClasses = function removeClasses(elm, classes) {\n  var _elm$classList2;\n\n  (_elm$classList2 = elm.classList).remove.apply(_elm$classList2, _toConsumableArray(classes.split(' ')));\n};\nexport var onLocationChange = function onLocationChange(_ref) {\n  var referrerURL = _ref.referrerURL,\n      referrerHost = _ref.referrerHost;\n  IFrameHelper.events.onLocationChange({\n    referrerURL: referrerURL,\n    referrerHost: referrerHost\n  });\n};\nexport var onLocationChangeListener = function onLocationChangeListener() {\n  var oldHref = document.location.href;\n  var referrerHost = document.location.host;\n  var config = {\n    childList: true,\n    subtree: true\n  };\n  onLocationChange({\n    referrerURL: oldHref,\n    referrerHost: referrerHost\n  });\n  var bodyList = document.querySelector('body');\n  var observer = new MutationObserver(function (mutations) {\n    mutations.forEach(function () {\n      if (oldHref !== document.location.href) {\n        oldHref = document.location.href;\n        onLocationChange({\n          referrerURL: oldHref,\n          referrerHost: referrerHost\n        });\n      }\n    });\n  });\n  observer.observe(bodyList, config);\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/sdk/DOMHelpers.js"],"names":["SDK_CSS","IFrameHelper","loadCSS","css","document","createElement","innerHTML","body","appendChild","addClasses","elm","classes","classList","add","split","toggleClass","toggle","removeClasses","remove","onLocationChange","referrerURL","referrerHost","events","onLocationChangeListener","oldHref","location","href","host","config","childList","subtree","bodyList","querySelector","observer","MutationObserver","mutations","forEach","observe"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,OAAT,QAAwB,UAAxB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC3B,MAAMC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAZ;AACAF,EAAAA,GAAG,CAACG,SAAJ,aAAmBN,OAAnB;AACAI,EAAAA,QAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BL,GAA1B;AACD,CAJM;AAMP,OAAO,IAAMM,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAMC,OAAN,EAAkB;AAAA;;AAC1C,oBAAAD,GAAG,CAACE,SAAJ,EAAcC,GAAd,0CAAqBF,OAAO,CAACG,KAAR,CAAc,GAAd,CAArB;AACD,CAFM;AAIP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACL,GAAD,EAAMC,OAAN,EAAkB;AAC3CD,EAAAA,GAAG,CAACE,SAAJ,CAAcI,MAAd,CAAqBL,OAArB;AACD,CAFM;AAIP,OAAO,IAAMM,aAAa,GAAG,SAAhBA,aAAgB,CAACP,GAAD,EAAMC,OAAN,EAAkB;AAAA;;AAC7C,qBAAAD,GAAG,CAACE,SAAJ,EAAcM,MAAd,2CAAwBP,OAAO,CAACG,KAAR,CAAc,GAAd,CAAxB;AACD,CAFM;AAIP,OAAO,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAmC;AAAA,MAAhCC,WAAgC,QAAhCA,WAAgC;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;AACjEpB,EAAAA,YAAY,CAACqB,MAAb,CAAoBH,gBAApB,CAAqC;AACnCC,IAAAA,WAAW,EAAXA,WADmC;AAEnCC,IAAAA,YAAY,EAAZA;AAFmC,GAArC;AAID,CALM;AAOP,OAAO,IAAME,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAM;AAC5C,MAAIC,OAAO,GAAGpB,QAAQ,CAACqB,QAAT,CAAkBC,IAAhC;AACA,MAAML,YAAY,GAAGjB,QAAQ,CAACqB,QAAT,CAAkBE,IAAvC;AACA,MAAMC,MAAM,GAAG;AACbC,IAAAA,SAAS,EAAE,IADE;AAEbC,IAAAA,OAAO,EAAE;AAFI,GAAf;AAIAX,EAAAA,gBAAgB,CAAC;AACfC,IAAAA,WAAW,EAAEI,OADE;AAEfH,IAAAA,YAAY,EAAZA;AAFe,GAAD,CAAhB;AAKA,MAAMU,QAAQ,GAAG3B,QAAQ,CAAC4B,aAAT,CAAuB,MAAvB,CAAjB;AACA,MAAMC,QAAQ,GAAG,IAAIC,gBAAJ,CAAqB,UAAAC,SAAS,EAAI;AACjDA,IAAAA,SAAS,CAACC,OAAV,CAAkB,YAAM;AACtB,UAAIZ,OAAO,KAAKpB,QAAQ,CAACqB,QAAT,CAAkBC,IAAlC,EAAwC;AACtCF,QAAAA,OAAO,GAAGpB,QAAQ,CAACqB,QAAT,CAAkBC,IAA5B;AACAP,QAAAA,gBAAgB,CAAC;AACfC,UAAAA,WAAW,EAAEI,OADE;AAEfH,UAAAA,YAAY,EAAZA;AAFe,SAAD,CAAhB;AAID;AACF,KARD;AASD,GAVgB,CAAjB;AAYAY,EAAAA,QAAQ,CAACI,OAAT,CAAiBN,QAAjB,EAA2BH,MAA3B;AACD,CA1BM","sourcesContent":["import { SDK_CSS } from './sdk.js';\nimport { IFrameHelper } from './IFrameHelper';\n\nexport const loadCSS = () => {\n  const css = document.createElement('style');\n  css.innerHTML = `${SDK_CSS}`;\n  document.body.appendChild(css);\n};\n\nexport const addClasses = (elm, classes) => {\n  elm.classList.add(...classes.split(' '));\n};\n\nexport const toggleClass = (elm, classes) => {\n  elm.classList.toggle(classes);\n};\n\nexport const removeClasses = (elm, classes) => {\n  elm.classList.remove(...classes.split(' '));\n};\n\nexport const onLocationChange = ({ referrerURL, referrerHost }) => {\n  IFrameHelper.events.onLocationChange({\n    referrerURL,\n    referrerHost,\n  });\n};\n\nexport const onLocationChangeListener = () => {\n  let oldHref = document.location.href;\n  const referrerHost = document.location.host;\n  const config = {\n    childList: true,\n    subtree: true,\n  };\n  onLocationChange({\n    referrerURL: oldHref,\n    referrerHost,\n  });\n\n  const bodyList = document.querySelector('body');\n  const observer = new MutationObserver(mutations => {\n    mutations.forEach(() => {\n      if (oldHref !== document.location.href) {\n        oldHref = document.location.href;\n        onLocationChange({\n          referrerURL: oldHref,\n          referrerHost,\n        });\n      }\n    });\n  });\n\n  observer.observe(bodyList, config);\n};\n"]},"metadata":{},"sourceType":"module"}