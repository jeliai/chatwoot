{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { required, minLength } from 'vuelidate/lib/validators';\nimport WootSubmitButton from '../../../../components/buttons/FormSubmitButton';\nimport Modal from '../../../../components/Modal';\nimport alertMixin from 'shared/mixins/alertMixin';\nexport default {\n  components: {\n    WootSubmitButton: WootSubmitButton,\n    Modal: Modal\n  },\n  mixins: [alertMixin],\n  props: {\n    responseContent: {\n      type: String,\n      default: ''\n    },\n    onClose: {\n      type: Function,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    return {\n      shortCode: '',\n      content: this.responseContent || '',\n      addCanned: {\n        showLoading: false,\n        message: ''\n      },\n      show: true\n    };\n  },\n  validations: {\n    shortCode: {\n      required: required,\n      minLength: minLength(2)\n    },\n    content: {\n      required: required\n    }\n  },\n  methods: {\n    resetForm: function resetForm() {\n      this.shortCode = '';\n      this.content = '';\n      this.$v.shortCode.$reset();\n      this.$v.content.$reset();\n    },\n    addAgent: function addAgent() {\n      var _this = this;\n\n      // Show loading on button\n      this.addCanned.showLoading = true; // Make API Calls\n\n      this.$store.dispatch('createCannedResponse', {\n        short_code: this.shortCode,\n        content: this.content\n      }).then(function () {\n        // Reset Form, Show success message\n        _this.addCanned.showLoading = false;\n\n        _this.showAlert(_this.$t('CANNED_MGMT.ADD.API.SUCCESS_MESSAGE'));\n\n        _this.resetForm();\n\n        _this.onClose();\n      }).catch(function () {\n        _this.addCanned.showLoading = false;\n\n        _this.showAlert(_this.$t('CANNED_MGMT.ADD.API.ERROR_MESSAGE'));\n      });\n    }\n  }\n};","map":{"version":3,"sources":["AddCanned.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA,SAAA,QAAA,EAAA,SAAA,QAAA,0BAAA;AAEA,OAAA,gBAAA,MAAA,iDAAA;AACA,OAAA,KAAA,MAAA,8BAAA;AACA,OAAA,UAAA,MAAA,0BAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,gBAAA,EAAA,gBADA;AAEA,IAAA,KAAA,EAAA;AAFA,GADA;AAKA,EAAA,MAAA,EAAA,CAAA,UAAA,CALA;AAMA,EAAA,KAAA,EAAA;AACA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,QADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA;AALA,GANA;AAgBA,EAAA,IAhBA,kBAgBA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA,KAAA,eAAA,IAAA,EAFA;AAGA,MAAA,SAAA,EAAA;AACA,QAAA,WAAA,EAAA,KADA;AAEA,QAAA,OAAA,EAAA;AAFA,OAHA;AAOA,MAAA,IAAA,EAAA;AAPA,KAAA;AASA,GA1BA;AA2BA,EAAA,WAAA,EAAA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,QAAA,EAAA,QADA;AAEA,MAAA,SAAA,EAAA,SAAA,CAAA,CAAA;AAFA,KADA;AAKA,IAAA,OAAA,EAAA;AACA,MAAA,QAAA,EAAA;AADA;AALA,GA3BA;AAoCA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,WAAA,SAAA,GAAA,EAAA;AACA,WAAA,OAAA,GAAA,EAAA;AACA,WAAA,EAAA,CAAA,SAAA,CAAA,MAAA;AACA,WAAA,EAAA,CAAA,OAAA,CAAA,MAAA;AACA,KANA;AAOA,IAAA,QAPA,sBAOA;AAAA;;AACA;AACA,WAAA,SAAA,CAAA,WAAA,GAAA,IAAA,CAFA,CAGA;;AACA,WAAA,MAAA,CACA,QADA,CACA,sBADA,EACA;AACA,QAAA,UAAA,EAAA,KAAA,SADA;AAEA,QAAA,OAAA,EAAA,KAAA;AAFA,OADA,EAKA,IALA,CAKA,YAAA;AACA;AACA,QAAA,KAAA,CAAA,SAAA,CAAA,WAAA,GAAA,KAAA;;AACA,QAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,EAAA,CAAA,qCAAA,CAAA;;AACA,QAAA,KAAA,CAAA,SAAA;;AACA,QAAA,KAAA,CAAA,OAAA;AACA,OAXA,EAYA,KAZA,CAYA,YAAA;AACA,QAAA,KAAA,CAAA,SAAA,CAAA,WAAA,GAAA,KAAA;;AACA,QAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,EAAA,CAAA,mCAAA,CAAA;AACA,OAfA;AAgBA;AA3BA;AApCA,CAAA","sourcesContent":["<template>\n  <modal :show.sync=\"show\" :on-close=\"onClose\">\n    <div class=\"column content-box\">\n      <woot-modal-header\n        :header-title=\"$t('CANNED_MGMT.ADD.TITLE')\"\n        :header-content=\"$t('CANNED_MGMT.ADD.DESC')\"\n      />\n      <form class=\"row\" @submit.prevent=\"addAgent()\">\n        <div class=\"medium-12 columns\">\n          <label :class=\"{ error: $v.shortCode.$error }\">\n            {{ $t('CANNED_MGMT.ADD.FORM.SHORT_CODE.LABEL') }}\n            <input\n              v-model.trim=\"shortCode\"\n              type=\"text\"\n              :placeholder=\"$t('CANNED_MGMT.ADD.FORM.SHORT_CODE.PLACEHOLDER')\"\n              @input=\"$v.shortCode.$touch\"\n            />\n          </label>\n        </div>\n\n        <div class=\"medium-12 columns\">\n          <label :class=\"{ error: $v.content.$error }\">\n            {{ $t('CANNED_MGMT.ADD.FORM.CONTENT.LABEL') }}\n            <textarea\n              v-model.trim=\"content\"\n              rows=\"5\"\n              type=\"text\"\n              :placeholder=\"$t('CANNED_MGMT.ADD.FORM.CONTENT.PLACEHOLDER')\"\n              @input=\"$v.content.$touch\"\n            />\n          </label>\n        </div>\n        <div class=\"modal-footer\">\n          <div class=\"medium-12 columns\">\n            <woot-submit-button\n              :disabled=\"\n                $v.content.$invalid ||\n                  $v.shortCode.$invalid ||\n                  addCanned.showLoading\n              \"\n              :button-text=\"$t('CANNED_MGMT.ADD.FORM.SUBMIT')\"\n              :loading=\"addCanned.showLoading\"\n            />\n            <button class=\"button clear\" @click.prevent=\"onClose\">\n              {{ $t('CANNED_MGMT.ADD.CANCEL_BUTTON_TEXT') }}\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  </modal>\n</template>\n\n<script>\nimport { required, minLength } from 'vuelidate/lib/validators';\n\nimport WootSubmitButton from '../../../../components/buttons/FormSubmitButton';\nimport Modal from '../../../../components/Modal';\nimport alertMixin from 'shared/mixins/alertMixin';\n\nexport default {\n  components: {\n    WootSubmitButton,\n    Modal,\n  },\n  mixins: [alertMixin],\n  props: {\n    responseContent: {\n      type: String,\n      default: '',\n    },\n    onClose: {\n      type: Function,\n      default: () => {},\n    },\n  },\n  data() {\n    return {\n      shortCode: '',\n      content: this.responseContent || '',\n      addCanned: {\n        showLoading: false,\n        message: '',\n      },\n      show: true,\n    };\n  },\n  validations: {\n    shortCode: {\n      required,\n      minLength: minLength(2),\n    },\n    content: {\n      required,\n    },\n  },\n  methods: {\n    resetForm() {\n      this.shortCode = '';\n      this.content = '';\n      this.$v.shortCode.$reset();\n      this.$v.content.$reset();\n    },\n    addAgent() {\n      // Show loading on button\n      this.addCanned.showLoading = true;\n      // Make API Calls\n      this.$store\n        .dispatch('createCannedResponse', {\n          short_code: this.shortCode,\n          content: this.content,\n        })\n        .then(() => {\n          // Reset Form, Show success message\n          this.addCanned.showLoading = false;\n          this.showAlert(this.$t('CANNED_MGMT.ADD.API.SUCCESS_MESSAGE'));\n          this.resetForm();\n          this.onClose();\n        })\n        .catch(() => {\n          this.addCanned.showLoading = false;\n          this.showAlert(this.$t('CANNED_MGMT.ADD.API.ERROR_MESSAGE'));\n        });\n    },\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/settings/canned"},"metadata":{},"sourceType":"module"}