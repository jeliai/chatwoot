{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport format from 'date-fns/format';\nimport { required, url } from 'vuelidate/lib/validators';\nimport { BUS_EVENTS } from 'shared/constants/busEvents';\nimport MultiselectDropdown from 'shared/components/ui/MultiselectDropdown.vue';\nimport { isValidURL } from '../helper/URLHelper';\nvar DATE_FORMAT = 'yyyy-MM-dd';\nexport default {\n  components: {\n    MultiselectDropdown: MultiselectDropdown\n  },\n  props: {\n    label: {\n      type: String,\n      required: true\n    },\n    values: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    value: {\n      type: [String, Number, Boolean],\n      default: ''\n    },\n    showActions: {\n      type: Boolean,\n      default: false\n    },\n    attributeType: {\n      type: String,\n      default: 'text'\n    },\n    attributeKey: {\n      type: String,\n      required: true\n    },\n    contactId: {\n      type: Number,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      isEditing: false,\n      editedValue: null\n    };\n  },\n  computed: {\n    formattedValue: function formattedValue() {\n      if (this.isAttributeTypeDate) {\n        return format(new Date(this.value || new Date()), DATE_FORMAT);\n      }\n\n      if (this.isAttributeTypeCheckbox) {\n        return this.value === 'false' ? false : this.value;\n      }\n\n      return this.value;\n    },\n    listOptions: function listOptions() {\n      return this.values.map(function (value, index) {\n        return {\n          id: index + 1,\n          name: value\n        };\n      });\n    },\n    selectedItem: function selectedItem() {\n      var id = this.values.indexOf(this.editedValue) + 1;\n      return {\n        id: id,\n        name: this.editedValue\n      };\n    },\n    isAttributeTypeCheckbox: function isAttributeTypeCheckbox() {\n      return this.attributeType === 'checkbox';\n    },\n    isAttributeTypeList: function isAttributeTypeList() {\n      return this.attributeType === 'list';\n    },\n    isAttributeTypeLink: function isAttributeTypeLink() {\n      return this.attributeType === 'link';\n    },\n    isAttributeTypeDate: function isAttributeTypeDate() {\n      return this.attributeType === 'date';\n    },\n    urlValue: function urlValue() {\n      return isValidURL(this.value) ? this.value : '---';\n    },\n    notAttributeTypeCheckboxAndList: function notAttributeTypeCheckboxAndList() {\n      return !this.isAttributeTypeCheckbox && !this.isAttributeTypeList;\n    },\n    inputType: function inputType() {\n      return this.isAttributeTypeLink ? 'url' : this.attributeType;\n    },\n    shouldShowErrorMessage: function shouldShowErrorMessage() {\n      return this.$v.editedValue.$error;\n    },\n    errorMessage: function errorMessage() {\n      if (this.$v.editedValue.url) {\n        return this.$t('CUSTOM_ATTRIBUTES.VALIDATIONS.INVALID_URL');\n      }\n\n      return this.$t('CUSTOM_ATTRIBUTES.VALIDATIONS.REQUIRED');\n    },\n    displayValue: function displayValue() {\n      if (this.attributeType === 'date') {\n        return format(new Date(this.editedValue), 'dd-MM-yyyy');\n      }\n\n      return this.editedValue;\n    }\n  },\n  watch: {\n    value: function value() {\n      this.isEditing = false;\n      this.editedValue = this.value;\n    }\n  },\n  validations: function validations() {\n    if (this.isAttributeTypeLink) {\n      return {\n        editedValue: {\n          required: required,\n          url: url\n        }\n      };\n    }\n\n    return {\n      editedValue: {\n        required: required\n      }\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.editedValue = this.formattedValue;\n    bus.$on(BUS_EVENTS.FOCUS_CUSTOM_ATTRIBUTE, function (focusAttributeKey) {\n      if (_this.attributeKey === focusAttributeKey) {\n        _this.onEdit();\n      }\n    });\n  },\n  methods: {\n    focusInput: function focusInput() {\n      if (this.$refs.inputfield) {\n        this.$refs.inputfield.focus();\n      }\n    },\n    onEdit: function onEdit() {\n      var _this2 = this;\n\n      this.isEditing = true;\n      this.$nextTick(function () {\n        _this2.focusInput();\n      });\n    },\n    onUpdateListValue: function onUpdateListValue(value) {\n      if (value) {\n        this.editedValue = value.name;\n        this.onUpdate();\n      }\n    },\n    onUpdate: function onUpdate() {\n      var updatedValue = this.attributeType === 'date' ? format(new Date(this.editedValue), DATE_FORMAT) : this.editedValue;\n      this.$v.$touch();\n\n      if (this.$v.$invalid) {\n        return;\n      }\n\n      this.isEditing = false;\n      this.$emit('update', this.attributeKey, updatedValue);\n    },\n    onDelete: function onDelete() {\n      this.isEditing = false;\n      this.$emit('delete', this.attributeKey);\n    },\n    onCopy: function onCopy() {\n      this.$emit('copy', this.value);\n    }\n  }\n};","map":{"version":3,"sources":["CustomAttribute.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"custom-attribute\">\n    <div class=\"title-wrap\">\n      <h4 class=\"text-block-title title error\">\n        <div v-if=\"isAttributeTypeCheckbox\" class=\"checkbox-wrap\">\n          <input\n            v-model=\"editedValue\"\n            class=\"checkbox\"\n            type=\"checkbox\"\n            @change=\"onUpdate\"\n          />\n        </div>\n        <div class=\"name-button__wrap\">\n          <span\n            class=\"attribute-name\"\n            :class=\"{ error: $v.editedValue.$error }\"\n          >\n            {{ label }}\n          </span>\n          <woot-button\n            v-if=\"showActions\"\n            v-tooltip.left=\"$t('CUSTOM_ATTRIBUTES.ACTIONS.DELETE')\"\n            variant=\"link\"\n            size=\"medium\"\n            color-scheme=\"secondary\"\n            icon=\"delete\"\n            class-names=\"delete-button\"\n            @click=\"onDelete\"\n          />\n        </div>\n      </h4>\n    </div>\n    <div v-if=\"notAttributeTypeCheckboxAndList\">\n      <div v-show=\"isEditing\">\n        <div class=\"input-group small\">\n          <input\n            ref=\"inputfield\"\n            v-model=\"editedValue\"\n            :type=\"inputType\"\n            class=\"input-group-field\"\n            autofocus=\"true\"\n            :class=\"{ error: $v.editedValue.$error }\"\n            @blur=\"$v.editedValue.$touch\"\n            @keyup.enter=\"onUpdate\"\n          />\n          <div class=\"input-group-button\">\n            <woot-button size=\"small\" icon=\"checkmark\" @click=\"onUpdate\" />\n          </div>\n        </div>\n        <span v-if=\"shouldShowErrorMessage\" class=\"error-message\">\n          {{ errorMessage }}\n        </span>\n      </div>\n      <div\n        v-show=\"!isEditing\"\n        class=\"value--view\"\n        :class=\"{ 'is-editable': showActions }\"\n      >\n        <a\n          v-if=\"isAttributeTypeLink\"\n          :href=\"value\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          class=\"value\"\n        >\n          {{ urlValue }}\n        </a>\n        <p v-else class=\"value\">\n          {{ displayValue || '---' }}\n        </p>\n        <div class=\"action-buttons__wrap\">\n          <woot-button\n            v-if=\"showActions\"\n            v-tooltip=\"$t('CUSTOM_ATTRIBUTES.ACTIONS.COPY')\"\n            variant=\"link\"\n            size=\"small\"\n            color-scheme=\"secondary\"\n            icon=\"clipboard\"\n            class-names=\"edit-button\"\n            @click=\"onCopy\"\n          />\n          <woot-button\n            v-if=\"showActions\"\n            v-tooltip.right=\"$t('CUSTOM_ATTRIBUTES.ACTIONS.EDIT')\"\n            variant=\"link\"\n            size=\"small\"\n            color-scheme=\"secondary\"\n            icon=\"edit\"\n            class-names=\"edit-button\"\n            @click=\"onEdit\"\n          />\n        </div>\n      </div>\n    </div>\n    <div v-if=\"isAttributeTypeList\">\n      <multiselect-dropdown\n        :options=\"listOptions\"\n        :selected-item=\"selectedItem\"\n        :has-thumbnail=\"false\"\n        :multiselector-placeholder=\"\n          $t('CUSTOM_ATTRIBUTES.FORM.ATTRIBUTE_TYPE.LIST.PLACEHOLDER')\n        \"\n        :no-search-result=\"\n          $t('CUSTOM_ATTRIBUTES.FORM.ATTRIBUTE_TYPE.LIST.NO_RESULT')\n        \"\n        :input-placeholder=\"\n          $t(\n            'CUSTOM_ATTRIBUTES.FORM.ATTRIBUTE_TYPE.LIST.SEARCH_INPUT_PLACEHOLDER'\n          )\n        \"\n        @click=\"onUpdateListValue\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport format from 'date-fns/format';\nimport { required, url } from 'vuelidate/lib/validators';\nimport { BUS_EVENTS } from 'shared/constants/busEvents';\nimport MultiselectDropdown from 'shared/components/ui/MultiselectDropdown.vue';\nimport { isValidURL } from '../helper/URLHelper';\nconst DATE_FORMAT = 'yyyy-MM-dd';\n\nexport default {\n  components: {\n    MultiselectDropdown,\n  },\n  props: {\n    label: { type: String, required: true },\n    values: { type: Array, default: () => [] },\n    value: { type: [String, Number, Boolean], default: '' },\n    showActions: { type: Boolean, default: false },\n    attributeType: { type: String, default: 'text' },\n    attributeKey: { type: String, required: true },\n    contactId: { type: Number, default: null },\n  },\n  data() {\n    return {\n      isEditing: false,\n      editedValue: null,\n    };\n  },\n\n  computed: {\n    formattedValue() {\n      if (this.isAttributeTypeDate) {\n        return format(new Date(this.value || new Date()), DATE_FORMAT);\n      }\n      if (this.isAttributeTypeCheckbox) {\n        return this.value === 'false' ? false : this.value;\n      }\n      return this.value;\n    },\n    listOptions() {\n      return this.values.map((value, index) => ({\n        id: index + 1,\n        name: value,\n      }));\n    },\n    selectedItem() {\n      const id = this.values.indexOf(this.editedValue) + 1;\n      return { id, name: this.editedValue };\n    },\n    isAttributeTypeCheckbox() {\n      return this.attributeType === 'checkbox';\n    },\n    isAttributeTypeList() {\n      return this.attributeType === 'list';\n    },\n    isAttributeTypeLink() {\n      return this.attributeType === 'link';\n    },\n    isAttributeTypeDate() {\n      return this.attributeType === 'date';\n    },\n    urlValue() {\n      return isValidURL(this.value) ? this.value : '---';\n    },\n    notAttributeTypeCheckboxAndList() {\n      return !this.isAttributeTypeCheckbox && !this.isAttributeTypeList;\n    },\n    inputType() {\n      return this.isAttributeTypeLink ? 'url' : this.attributeType;\n    },\n    shouldShowErrorMessage() {\n      return this.$v.editedValue.$error;\n    },\n    errorMessage() {\n      if (this.$v.editedValue.url) {\n        return this.$t('CUSTOM_ATTRIBUTES.VALIDATIONS.INVALID_URL');\n      }\n      return this.$t('CUSTOM_ATTRIBUTES.VALIDATIONS.REQUIRED');\n    },\n    displayValue() {\n      if (this.attributeType === 'date') {\n        return format(new Date(this.editedValue), 'dd-MM-yyyy');\n      }\n      return this.editedValue;\n    },\n  },\n  watch: {\n    value() {\n      this.isEditing = false;\n      this.editedValue = this.value;\n    },\n  },\n\n  validations() {\n    if (this.isAttributeTypeLink) {\n      return {\n        editedValue: { required, url },\n      };\n    }\n    return {\n      editedValue: { required },\n    };\n  },\n  mounted() {\n    this.editedValue = this.formattedValue;\n    bus.$on(BUS_EVENTS.FOCUS_CUSTOM_ATTRIBUTE, focusAttributeKey => {\n      if (this.attributeKey === focusAttributeKey) {\n        this.onEdit();\n      }\n    });\n  },\n  methods: {\n    focusInput() {\n      if (this.$refs.inputfield) {\n        this.$refs.inputfield.focus();\n      }\n    },\n    onEdit() {\n      this.isEditing = true;\n      this.$nextTick(() => {\n        this.focusInput();\n      });\n    },\n    onUpdateListValue(value) {\n      if (value) {\n        this.editedValue = value.name;\n        this.onUpdate();\n      }\n    },\n    onUpdate() {\n      const updatedValue =\n        this.attributeType === 'date'\n          ? format(new Date(this.editedValue), DATE_FORMAT)\n          : this.editedValue;\n\n      this.$v.$touch();\n      if (this.$v.$invalid) {\n        return;\n      }\n      this.isEditing = false;\n      this.$emit('update', this.attributeKey, updatedValue);\n    },\n    onDelete() {\n      this.isEditing = false;\n      this.$emit('delete', this.attributeKey);\n    },\n    onCopy() {\n      this.$emit('copy', this.value);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.custom-attribute {\n  padding: var(--space-slab) var(--space-normal);\n}\n\n.title-wrap {\n  display: flex;\n  align-items: center;\n  margin-bottom: var(--space-mini);\n}\n.title {\n  display: flex;\n  align-items: center;\n  margin: 0;\n  width: 100%;\n}\n.checkbox-wrap {\n  display: flex;\n  align-items: center;\n}\n.checkbox {\n  margin: 0 var(--space-small) 0 0;\n}\n.name-button__wrap {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n}\n.attribute-name {\n  width: 100%;\n  &.error {\n    color: var(--r-400);\n  }\n}\n.title--icon {\n  width: var(--space-two);\n}\n.edit-button {\n  display: none;\n}\n.delete-button {\n  display: flex;\n  justify-content: flex-end;\n  width: var(--space-normal);\n}\n.value--view {\n  display: flex;\n\n  &.is-editable:hover {\n    .value {\n      background: var(--color-background);\n      margin-bottom: 0;\n    }\n    .edit-button {\n      display: block;\n    }\n  }\n\n  .action-buttons__wrap {\n    display: flex;\n    max-width: var(--space-larger);\n  }\n}\n.value {\n  display: inline-block;\n  min-width: var(--space-mega);\n  border-radius: var(--border-radius-small);\n  margin-bottom: 0;\n  word-break: break-all;\n  padding: var(--space-micro) var(--space-smaller);\n}\n.error-message {\n  color: var(--r-400);\n  display: block;\n  font-size: 1.4rem;\n  font-size: var(--font-size-small);\n  font-weight: 400;\n  margin-bottom: 1rem;\n  margin-top: -1.6rem;\n  width: 100%;\n}\n\n::v-deep {\n  .selector-wrap {\n    margin: 0;\n    top: var(--space-smaller);\n    .selector-name {\n      margin-left: 0;\n    }\n  }\n  .name {\n    margin-left: 0;\n  }\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/components"},"metadata":{},"sourceType":"module"}