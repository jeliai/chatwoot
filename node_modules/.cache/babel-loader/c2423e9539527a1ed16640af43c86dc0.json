{"ast":null,"code":"import \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.promise.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport { required } from 'vuelidate/lib/validators';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport WootMessageEditor from 'dashboard/components/widgets/WootWriter/Editor';\nimport campaignMixin from 'shared/mixins/campaignMixin';\nimport WootDateTimePicker from 'dashboard/components/ui/DateTimePicker.vue';\nimport { URLPattern } from 'urlpattern-polyfill';\nexport default {\n  components: {\n    WootDateTimePicker: WootDateTimePicker,\n    WootMessageEditor: WootMessageEditor\n  },\n  mixins: [alertMixin, campaignMixin],\n  data: function data() {\n    return {\n      title: '',\n      message: '',\n      selectedSender: 0,\n      selectedInbox: null,\n      endPoint: '',\n      timeOnPage: 10,\n      show: true,\n      enabled: true,\n      triggerOnlyDuringBusinessHours: false,\n      scheduledAt: null,\n      selectedAudience: [],\n      senderList: []\n    };\n  },\n  validations: function validations() {\n    var commonValidations = {\n      title: {\n        required: required\n      },\n      message: {\n        required: required\n      },\n      selectedInbox: {\n        required: required\n      }\n    };\n\n    if (this.isOngoingType) {\n      return _objectSpread(_objectSpread({}, commonValidations), {}, {\n        selectedSender: {\n          required: required\n        },\n        endPoint: {\n          required: required,\n          shouldBeAValidURLPattern: function shouldBeAValidURLPattern(value) {\n            try {\n              // eslint-disable-next-line\n              new URLPattern(value);\n              return true;\n            } catch (error) {\n              return false;\n            }\n          },\n          shouldStartWithHTTP: function shouldStartWithHTTP(value) {\n            if (value) {\n              return value.startsWith('https://') || value.startsWith('http://');\n            }\n\n            return false;\n          }\n        },\n        timeOnPage: {\n          required: required\n        }\n      });\n    }\n\n    return _objectSpread(_objectSpread({}, commonValidations), {}, {\n      selectedAudience: {\n        isEmpty: function isEmpty() {\n          return !!this.selectedAudience.length;\n        }\n      }\n    });\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    uiFlags: 'campaigns/getUIFlags',\n    audienceList: 'labels/getLabels'\n  })), {}, {\n    inboxes: function inboxes() {\n      if (this.isOngoingType) {\n        return this.$store.getters['inboxes/getWebsiteInboxes'];\n      }\n\n      return this.$store.getters['inboxes/getSMSInboxes'];\n    },\n    sendersAndBotList: function sendersAndBotList() {\n      return [{\n        id: 0,\n        name: 'Bot'\n      }].concat(_toConsumableArray(this.senderList));\n    }\n  }),\n  methods: {\n    onClose: function onClose() {\n      this.$emit('on-close');\n    },\n    onChange: function onChange(value) {\n      this.scheduledAt = value;\n    },\n    onChangeInbox: function onChangeInbox() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var response, inboxMembers, _error$response, errorMessage;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _this.$store.dispatch('inboxMembers/get', {\n                  inboxId: _this.selectedInbox\n                });\n\n              case 3:\n                response = _context.sent;\n                inboxMembers = response.data.payload;\n                _this.senderList = inboxMembers;\n                _context.next = 12;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                errorMessage = (_context.t0 === null || _context.t0 === void 0 ? void 0 : (_error$response = _context.t0.response) === null || _error$response === void 0 ? void 0 : _error$response.message) || _this.$t('CAMPAIGN.ADD.API.ERROR_MESSAGE');\n\n                _this.showAlert(errorMessage);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8]]);\n      }))();\n    },\n    getCampaignDetails: function getCampaignDetails() {\n      var campaignDetails = null;\n\n      if (this.isOngoingType) {\n        campaignDetails = {\n          title: this.title,\n          message: this.message,\n          inbox_id: this.selectedInbox,\n          sender_id: this.selectedSender || null,\n          enabled: this.enabled,\n          trigger_only_during_business_hours: // eslint-disable-next-line prettier/prettier\n          this.triggerOnlyDuringBusinessHours,\n          trigger_rules: {\n            url: this.endPoint,\n            time_on_page: this.timeOnPage\n          }\n        };\n      } else {\n        var audience = this.selectedAudience.map(function (item) {\n          return {\n            id: item.id,\n            type: 'Label'\n          };\n        });\n        campaignDetails = {\n          title: this.title,\n          message: this.message,\n          inbox_id: this.selectedInbox,\n          scheduled_at: this.scheduledAt,\n          audience: audience\n        };\n      }\n\n      return campaignDetails;\n    },\n    addCampaign: function addCampaign() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var campaignDetails, _error$response2, errorMessage;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this2.$v.$touch();\n\n                if (!_this2.$v.$invalid) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 3:\n                _context2.prev = 3;\n                campaignDetails = _this2.getCampaignDetails();\n                _context2.next = 7;\n                return _this2.$store.dispatch('campaigns/create', campaignDetails);\n\n              case 7:\n                _this2.showAlert(_this2.$t('CAMPAIGN.ADD.API.SUCCESS_MESSAGE'));\n\n                _this2.onClose();\n\n                _context2.next = 15;\n                break;\n\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2[\"catch\"](3);\n                errorMessage = (_context2.t0 === null || _context2.t0 === void 0 ? void 0 : (_error$response2 = _context2.t0.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.message) || _this2.$t('CAMPAIGN.ADD.API.ERROR_MESSAGE');\n\n                _this2.showAlert(errorMessage);\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[3, 11]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"sources":["AddCampaign.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4KA,SAAA,UAAA,QAAA,MAAA;AACA,SAAA,QAAA,QAAA,0BAAA;AACA,OAAA,UAAA,MAAA,0BAAA;AACA,OAAA,iBAAA,MAAA,gDAAA;AACA,OAAA,aAAA,MAAA,6BAAA;AACA,OAAA,kBAAA,MAAA,4CAAA;AACA,SAAA,UAAA,QAAA,qBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,kBAAA,EAAA,kBADA;AAEA,IAAA,iBAAA,EAAA;AAFA,GADA;AAMA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,CANA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,cAAA,EAAA,CAHA;AAIA,MAAA,aAAA,EAAA,IAJA;AAKA,MAAA,QAAA,EAAA,EALA;AAMA,MAAA,UAAA,EAAA,EANA;AAOA,MAAA,IAAA,EAAA,IAPA;AAQA,MAAA,OAAA,EAAA,IARA;AASA,MAAA,8BAAA,EAAA,KATA;AAUA,MAAA,WAAA,EAAA,IAVA;AAWA,MAAA,gBAAA,EAAA,EAXA;AAYA,MAAA,UAAA,EAAA;AAZA,KAAA;AAcA,GAtBA;AAwBA,EAAA,WAxBA,yBAwBA;AACA,QAAA,iBAAA,GAAA;AACA,MAAA,KAAA,EAAA;AACA,QAAA,QAAA,EAAA;AADA,OADA;AAIA,MAAA,OAAA,EAAA;AACA,QAAA,QAAA,EAAA;AADA,OAJA;AAOA,MAAA,aAAA,EAAA;AACA,QAAA,QAAA,EAAA;AADA;AAPA,KAAA;;AAWA,QAAA,KAAA,aAAA,EAAA;AACA,6CACA,iBADA;AAEA,QAAA,cAAA,EAAA;AACA,UAAA,QAAA,EAAA;AADA,SAFA;AAKA,QAAA,QAAA,EAAA;AACA,UAAA,QAAA,EAAA,QADA;AAEA,UAAA,wBAFA,oCAEA,KAFA,EAEA;AACA,gBAAA;AACA;AACA,kBAAA,UAAA,CAAA,KAAA;AACA,qBAAA,IAAA;AACA,aAJA,CAIA,OAAA,KAAA,EAAA;AACA,qBAAA,KAAA;AACA;AACA,WAVA;AAWA,UAAA,mBAXA,+BAWA,KAXA,EAWA;AACA,gBAAA,KAAA,EAAA;AACA,qBACA,KAAA,CAAA,UAAA,CAAA,UAAA,KAAA,KAAA,CAAA,UAAA,CAAA,SAAA,CADA;AAGA;;AACA,mBAAA,KAAA;AACA;AAlBA,SALA;AAyBA,QAAA,UAAA,EAAA;AACA,UAAA,QAAA,EAAA;AADA;AAzBA;AA6BA;;AACA,2CACA,iBADA;AAEA,MAAA,gBAAA,EAAA;AACA,QAAA,OADA,qBACA;AACA,iBAAA,CAAA,CAAA,KAAA,gBAAA,CAAA,MAAA;AACA;AAHA;AAFA;AAQA,GA3EA;AA4EA,EAAA,QAAA,kCACA,UAAA,CAAA;AACA,IAAA,OAAA,EAAA,sBADA;AAEA,IAAA,YAAA,EAAA;AAFA,GAAA,CADA;AAKA,IAAA,OALA,qBAKA;AACA,UAAA,KAAA,aAAA,EAAA;AACA,eAAA,KAAA,MAAA,CAAA,OAAA,CAAA,2BAAA,CAAA;AACA;;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,uBAAA,CAAA;AACA,KAVA;AAWA,IAAA,iBAXA,+BAWA;AACA,cACA;AACA,QAAA,EAAA,EAAA,CADA;AAEA,QAAA,IAAA,EAAA;AAFA,OADA,4BAKA,KAAA,UALA;AAOA;AAnBA,IA5EA;AAiGA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,WAAA,KAAA,CAAA,UAAA;AACA,KAHA;AAIA,IAAA,QAJA,oBAIA,KAJA,EAIA;AACA,WAAA,WAAA,GAAA,KAAA;AACA,KANA;AAOA,IAAA,aAPA,2BAOA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,kBAAA,EAAA;AACA,kBAAA,OAAA,EAAA,KAAA,CAAA;AADA,iBAAA,CAFA;;AAAA;AAEA,gBAAA,QAFA;AAMA,gBAAA,YANA,GAOA,QAPA,CAMA,IANA,CAMA,OANA;AAQA,gBAAA,KAAA,CAAA,UAAA,GAAA,YAAA;AARA;AAAA;;AAAA;AAAA;AAAA;AAUA,gBAAA,YAVA,GAWA,0FAAA,QAAA,oEAAA,OAAA,KAAA,KAAA,CAAA,EAAA,CAAA,gCAAA,CAXA;;AAYA,gBAAA,KAAA,CAAA,SAAA,CAAA,YAAA;;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA,KArBA;AAsBA,IAAA,kBAtBA,gCAsBA;AACA,UAAA,eAAA,GAAA,IAAA;;AACA,UAAA,KAAA,aAAA,EAAA;AACA,QAAA,eAAA,GAAA;AACA,UAAA,KAAA,EAAA,KAAA,KADA;AAEA,UAAA,OAAA,EAAA,KAAA,OAFA;AAGA,UAAA,QAAA,EAAA,KAAA,aAHA;AAIA,UAAA,SAAA,EAAA,KAAA,cAAA,IAAA,IAJA;AAKA,UAAA,OAAA,EAAA,KAAA,OALA;AAMA,UAAA,kCAAA,EACA;AACA,eAAA,8BARA;AASA,UAAA,aAAA,EAAA;AACA,YAAA,GAAA,EAAA,KAAA,QADA;AAEA,YAAA,YAAA,EAAA,KAAA;AAFA;AATA,SAAA;AAcA,OAfA,MAeA;AACA,YAAA,QAAA,GAAA,KAAA,gBAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,iBAAA;AACA,YAAA,EAAA,EAAA,IAAA,CAAA,EADA;AAEA,YAAA,IAAA,EAAA;AAFA,WAAA;AAIA,SALA,CAAA;AAMA,QAAA,eAAA,GAAA;AACA,UAAA,KAAA,EAAA,KAAA,KADA;AAEA,UAAA,OAAA,EAAA,KAAA,OAFA;AAGA,UAAA,QAAA,EAAA,KAAA,aAHA;AAIA,UAAA,YAAA,EAAA,KAAA,WAJA;AAKA,UAAA,QAAA,EAAA;AALA,SAAA;AAOA;;AACA,aAAA,eAAA;AACA,KAvDA;AAwDA,IAAA,WAxDA,yBAwDA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MAAA,CAAA,EAAA,CAAA,MAAA;;AADA,qBAEA,MAAA,CAAA,EAAA,CAAA,QAFA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAMA,gBAAA,eANA,GAMA,MAAA,CAAA,kBAAA,EANA;AAAA;AAAA,uBAOA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,kBAAA,EAAA,eAAA,CAPA;;AAAA;AAQA,gBAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,EAAA,CAAA,kCAAA,CAAA;;AACA,gBAAA,MAAA,CAAA,OAAA;;AATA;AAAA;;AAAA;AAAA;AAAA;AAWA,gBAAA,YAXA,GAYA,8FAAA,QAAA,sEAAA,OAAA,KAAA,MAAA,CAAA,EAAA,CAAA,gCAAA,CAZA;;AAaA,gBAAA,MAAA,CAAA,SAAA,CAAA,YAAA;;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAvEA;AAjGA,CAAA","sourcesContent":["<template>\n  <div class=\"column content-box\">\n    <woot-modal-header\n      :header-title=\"$t('CAMPAIGN.ADD.TITLE')\"\n      :header-content=\"$t('CAMPAIGN.ADD.DESC')\"\n    />\n    <form class=\"row\" @submit.prevent=\"addCampaign\">\n      <div class=\"medium-12 columns\">\n        <woot-input\n          v-model=\"title\"\n          :label=\"$t('CAMPAIGN.ADD.FORM.TITLE.LABEL')\"\n          type=\"text\"\n          :class=\"{ error: $v.title.$error }\"\n          :error=\"$v.title.$error ? $t('CAMPAIGN.ADD.FORM.TITLE.ERROR') : ''\"\n          :placeholder=\"$t('CAMPAIGN.ADD.FORM.TITLE.PLACEHOLDER')\"\n          @blur=\"$v.title.$touch\"\n        />\n\n        <label v-if=\"isOngoingType\" class=\"editor-wrap\">\n          {{ $t('CAMPAIGN.ADD.FORM.MESSAGE.LABEL') }}\n          <woot-message-editor\n            v-model=\"message\"\n            class=\"message-editor\"\n            :class=\"{ editor_warning: $v.message.$error }\"\n            :placeholder=\"$t('CAMPAIGN.ADD.FORM.MESSAGE.PLACEHOLDER')\"\n            @blur=\"$v.message.$touch\"\n          />\n          <span v-if=\"$v.message.$error\" class=\"editor-warning__message\">\n            {{ $t('CAMPAIGN.ADD.FORM.MESSAGE.ERROR') }}\n          </span>\n        </label>\n\n        <label v-else :class=\"{ error: $v.message.$error }\">\n          {{ $t('CAMPAIGN.ADD.FORM.MESSAGE.LABEL') }}\n          <textarea\n            v-model=\"message\"\n            rows=\"5\"\n            type=\"text\"\n            :placeholder=\"$t('CAMPAIGN.ADD.FORM.MESSAGE.PLACEHOLDER')\"\n            @blur=\"$v.message.$touch\"\n          />\n          <span v-if=\"$v.message.$error\" class=\"message\">\n            {{ $t('CAMPAIGN.ADD.FORM.MESSAGE.ERROR') }}\n          </span>\n        </label>\n\n        <label :class=\"{ error: $v.selectedInbox.$error }\">\n          {{ $t('CAMPAIGN.ADD.FORM.INBOX.LABEL') }}\n          <select v-model=\"selectedInbox\" @change=\"onChangeInbox($event)\">\n            <option v-for=\"item in inboxes\" :key=\"item.name\" :value=\"item.id\">\n              {{ item.name }}\n            </option>\n          </select>\n          <span v-if=\"$v.selectedInbox.$error\" class=\"message\">\n            {{ $t('CAMPAIGN.ADD.FORM.INBOX.ERROR') }}\n          </span>\n        </label>\n\n        <label\n          v-if=\"isOnOffType\"\n          :class=\"{ error: $v.selectedAudience.$error }\"\n        >\n          {{ $t('CAMPAIGN.ADD.FORM.AUDIENCE.LABEL') }}\n          <multiselect\n            v-model=\"selectedAudience\"\n            :options=\"audienceList\"\n            track-by=\"id\"\n            label=\"title\"\n            :multiple=\"true\"\n            :close-on-select=\"false\"\n            :clear-on-select=\"false\"\n            :hide-selected=\"true\"\n            :placeholder=\"$t('CAMPAIGN.ADD.FORM.AUDIENCE.PLACEHOLDER')\"\n            selected-label\n            :select-label=\"$t('FORMS.MULTISELECT.ENTER_TO_SELECT')\"\n            :deselect-label=\"$t('FORMS.MULTISELECT.ENTER_TO_REMOVE')\"\n            @blur=\"$v.selectedAudience.$touch\"\n            @select=\"$v.selectedAudience.$touch\"\n          />\n          <span v-if=\"$v.selectedAudience.$error\" class=\"message\">\n            {{ $t('CAMPAIGN.ADD.FORM.AUDIENCE.ERROR') }}\n          </span>\n        </label>\n\n        <label\n          v-if=\"isOngoingType\"\n          :class=\"{ error: $v.selectedSender.$error }\"\n        >\n          {{ $t('CAMPAIGN.ADD.FORM.SENT_BY.LABEL') }}\n          <select v-model=\"selectedSender\">\n            <option\n              v-for=\"sender in sendersAndBotList\"\n              :key=\"sender.name\"\n              :value=\"sender.id\"\n            >\n              {{ sender.name }}\n            </option>\n          </select>\n          <span v-if=\"$v.selectedSender.$error\" class=\"message\">\n            {{ $t('CAMPAIGN.ADD.FORM.SENT_BY.ERROR') }}\n          </span>\n        </label>\n\n        <label v-if=\"isOnOffType\">\n          {{ $t('CAMPAIGN.ADD.FORM.SCHEDULED_AT.LABEL') }}\n          <woot-date-time-picker\n            :value=\"scheduledAt\"\n            :confirm-text=\"$t('CAMPAIGN.ADD.FORM.SCHEDULED_AT.CONFIRM')\"\n            :placeholder=\"$t('CAMPAIGN.ADD.FORM.SCHEDULED_AT.PLACEHOLDER')\"\n            @change=\"onChange\"\n          />\n        </label>\n\n        <woot-input\n          v-if=\"isOngoingType\"\n          v-model=\"endPoint\"\n          :label=\"$t('CAMPAIGN.ADD.FORM.END_POINT.LABEL')\"\n          type=\"text\"\n          :class=\"{ error: $v.endPoint.$error }\"\n          :error=\"\n            $v.endPoint.$error ? $t('CAMPAIGN.ADD.FORM.END_POINT.ERROR') : ''\n          \"\n          :placeholder=\"$t('CAMPAIGN.ADD.FORM.END_POINT.PLACEHOLDER')\"\n          @blur=\"$v.endPoint.$touch\"\n        />\n        <woot-input\n          v-if=\"isOngoingType\"\n          v-model=\"timeOnPage\"\n          :label=\"$t('CAMPAIGN.ADD.FORM.TIME_ON_PAGE.LABEL')\"\n          type=\"text\"\n          :class=\"{ error: $v.timeOnPage.$error }\"\n          :error=\"\n            $v.timeOnPage.$error\n              ? $t('CAMPAIGN.ADD.FORM.TIME_ON_PAGE.ERROR')\n              : ''\n          \"\n          :placeholder=\"$t('CAMPAIGN.ADD.FORM.TIME_ON_PAGE.PLACEHOLDER')\"\n          @blur=\"$v.timeOnPage.$touch\"\n        />\n        <label v-if=\"isOngoingType\">\n          <input\n            v-model=\"enabled\"\n            type=\"checkbox\"\n            value=\"enabled\"\n            name=\"enabled\"\n          />\n          {{ $t('CAMPAIGN.ADD.FORM.ENABLED') }}\n        </label>\n        <label v-if=\"isOngoingType\">\n          <input\n            v-model=\"triggerOnlyDuringBusinessHours\"\n            type=\"checkbox\"\n            value=\"triggerOnlyDuringBusinessHours\"\n            name=\"triggerOnlyDuringBusinessHours\"\n          />\n          {{ $t('CAMPAIGN.ADD.FORM.TRIGGER_ONLY_BUSINESS_HOURS') }}\n        </label>\n      </div>\n\n      <div class=\"modal-footer\">\n        <woot-button :is-loading=\"uiFlags.isCreating\">\n          {{ $t('CAMPAIGN.ADD.CREATE_BUTTON_TEXT') }}\n        </woot-button>\n        <woot-button variant=\"clear\" @click.prevent=\"onClose\">\n          {{ $t('CAMPAIGN.ADD.CANCEL_BUTTON_TEXT') }}\n        </woot-button>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport { required } from 'vuelidate/lib/validators';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport WootMessageEditor from 'dashboard/components/widgets/WootWriter/Editor';\nimport campaignMixin from 'shared/mixins/campaignMixin';\nimport WootDateTimePicker from 'dashboard/components/ui/DateTimePicker.vue';\nimport { URLPattern } from 'urlpattern-polyfill';\n\nexport default {\n  components: {\n    WootDateTimePicker,\n    WootMessageEditor,\n  },\n\n  mixins: [alertMixin, campaignMixin],\n  data() {\n    return {\n      title: '',\n      message: '',\n      selectedSender: 0,\n      selectedInbox: null,\n      endPoint: '',\n      timeOnPage: 10,\n      show: true,\n      enabled: true,\n      triggerOnlyDuringBusinessHours: false,\n      scheduledAt: null,\n      selectedAudience: [],\n      senderList: [],\n    };\n  },\n\n  validations() {\n    const commonValidations = {\n      title: {\n        required,\n      },\n      message: {\n        required,\n      },\n      selectedInbox: {\n        required,\n      },\n    };\n    if (this.isOngoingType) {\n      return {\n        ...commonValidations,\n        selectedSender: {\n          required,\n        },\n        endPoint: {\n          required,\n          shouldBeAValidURLPattern(value) {\n            try {\n              // eslint-disable-next-line\n              new URLPattern(value);\n              return true;\n            } catch (error) {\n              return false;\n            }\n          },\n          shouldStartWithHTTP(value) {\n            if (value) {\n              return (\n                value.startsWith('https://') || value.startsWith('http://')\n              );\n            }\n            return false;\n          },\n        },\n        timeOnPage: {\n          required,\n        },\n      };\n    }\n    return {\n      ...commonValidations,\n      selectedAudience: {\n        isEmpty() {\n          return !!this.selectedAudience.length;\n        },\n      },\n    };\n  },\n  computed: {\n    ...mapGetters({\n      uiFlags: 'campaigns/getUIFlags',\n      audienceList: 'labels/getLabels',\n    }),\n    inboxes() {\n      if (this.isOngoingType) {\n        return this.$store.getters['inboxes/getWebsiteInboxes'];\n      }\n      return this.$store.getters['inboxes/getSMSInboxes'];\n    },\n    sendersAndBotList() {\n      return [\n        {\n          id: 0,\n          name: 'Bot',\n        },\n        ...this.senderList,\n      ];\n    },\n  },\n  methods: {\n    onClose() {\n      this.$emit('on-close');\n    },\n    onChange(value) {\n      this.scheduledAt = value;\n    },\n    async onChangeInbox() {\n      try {\n        const response = await this.$store.dispatch('inboxMembers/get', {\n          inboxId: this.selectedInbox,\n        });\n        const {\n          data: { payload: inboxMembers },\n        } = response;\n        this.senderList = inboxMembers;\n      } catch (error) {\n        const errorMessage =\n          error?.response?.message || this.$t('CAMPAIGN.ADD.API.ERROR_MESSAGE');\n        this.showAlert(errorMessage);\n      }\n    },\n    getCampaignDetails() {\n      let campaignDetails = null;\n      if (this.isOngoingType) {\n        campaignDetails = {\n          title: this.title,\n          message: this.message,\n          inbox_id: this.selectedInbox,\n          sender_id: this.selectedSender || null,\n          enabled: this.enabled,\n          trigger_only_during_business_hours:\n            // eslint-disable-next-line prettier/prettier\n            this.triggerOnlyDuringBusinessHours,\n          trigger_rules: {\n            url: this.endPoint,\n            time_on_page: this.timeOnPage,\n          },\n        };\n      } else {\n        const audience = this.selectedAudience.map(item => {\n          return {\n            id: item.id,\n            type: 'Label',\n          };\n        });\n        campaignDetails = {\n          title: this.title,\n          message: this.message,\n          inbox_id: this.selectedInbox,\n          scheduled_at: this.scheduledAt,\n          audience,\n        };\n      }\n      return campaignDetails;\n    },\n    async addCampaign() {\n      this.$v.$touch();\n      if (this.$v.$invalid) {\n        return;\n      }\n      try {\n        const campaignDetails = this.getCampaignDetails();\n        await this.$store.dispatch('campaigns/create', campaignDetails);\n        this.showAlert(this.$t('CAMPAIGN.ADD.API.SUCCESS_MESSAGE'));\n        this.onClose();\n      } catch (error) {\n        const errorMessage =\n          error?.response?.message || this.$t('CAMPAIGN.ADD.API.ERROR_MESSAGE');\n        this.showAlert(errorMessage);\n      }\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n::v-deep .ProseMirror-woot-style {\n  height: 8rem;\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/settings/campaigns"},"metadata":{},"sourceType":"module"}