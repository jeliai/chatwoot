{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport ContactForm from './ContactForm';\nexport default {\n  components: {\n    ContactForm: ContactForm\n  },\n  props: {\n    show: {\n      type: Boolean,\n      default: false\n    },\n    contact: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  computed: _objectSpread({}, mapGetters({\n    uiFlags: 'contacts/getUIFlags'\n  })),\n  methods: {\n    onCancel: function onCancel() {\n      this.$emit('cancel');\n    },\n    onSuccess: function onSuccess() {\n      this.$emit('cancel');\n    },\n    onSubmit: function onSubmit(contactItem) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.$store.dispatch('contacts/update', contactItem);\n\n              case 2:\n                _context.next = 4;\n                return _this.$store.dispatch('contacts/fetchContactableInbox', _this.contact.id);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"sources":["EditContact.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,WAAA,MAAA,eAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA;AADA,GADA;AAIA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA;AALA,GAJA;AAeA,EAAA,QAAA,oBACA,UAAA,CAAA;AACA,IAAA,OAAA,EAAA;AADA,GAAA,CADA,CAfA;AAqBA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,WAAA,KAAA,CAAA,QAAA;AACA,KAHA;AAIA,IAAA,SAJA,uBAIA;AACA,WAAA,KAAA,CAAA,QAAA;AACA,KANA;AAOA,IAAA,QAPA,oBAOA,WAPA,EAOA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,iBAAA,EAAA,WAAA,CADA;;AAAA;AAAA;AAAA,uBAEA,KAAA,CAAA,MAAA,CAAA,QAAA,CACA,gCADA,EAEA,KAAA,CAAA,OAAA,CAAA,EAFA,CAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAbA;AArBA,CAAA","sourcesContent":["<template>\n  <woot-modal :show.sync=\"show\" :on-close=\"onCancel\" modal-type=\"right-aligned\">\n    <div class=\"column content-box\">\n      <woot-modal-header\n        :header-title=\"\n          `${$t('EDIT_CONTACT.TITLE')} - ${contact.name || contact.email}`\n        \"\n        :header-content=\"$t('EDIT_CONTACT.DESC')\"\n      />\n      <contact-form\n        :contact=\"contact\"\n        :in-progress=\"uiFlags.isUpdating\"\n        :on-submit=\"onSubmit\"\n        @success=\"onSuccess\"\n        @cancel=\"onCancel\"\n      />\n    </div>\n  </woot-modal>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport ContactForm from './ContactForm';\n\nexport default {\n  components: {\n    ContactForm,\n  },\n  props: {\n    show: {\n      type: Boolean,\n      default: false,\n    },\n    contact: {\n      type: Object,\n      default: () => ({}),\n    },\n  },\n\n  computed: {\n    ...mapGetters({\n      uiFlags: 'contacts/getUIFlags',\n    }),\n  },\n\n  methods: {\n    onCancel() {\n      this.$emit('cancel');\n    },\n    onSuccess() {\n      this.$emit('cancel');\n    },\n    async onSubmit(contactItem) {\n      await this.$store.dispatch('contacts/update', contactItem);\n      await this.$store.dispatch(\n        'contacts/fetchContactableInbox',\n        this.contact.id\n      );\n    },\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/conversation/contact"},"metadata":{},"sourceType":"module"}