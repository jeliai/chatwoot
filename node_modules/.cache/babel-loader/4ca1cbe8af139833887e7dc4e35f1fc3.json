{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport globalConfigMixin from 'shared/mixins/globalConfigMixin';\nimport { mapGetters } from 'vuex';\nimport { BUS_EVENTS } from 'shared/constants/busEvents';\nexport default {\n  mixins: [globalConfigMixin],\n  data: function data() {\n    return {\n      showNotification: !navigator.onLine\n    };\n  },\n  computed: _objectSpread({}, mapGetters({\n    globalConfig: 'globalConfig/get'\n  })),\n  mounted: function mounted() {\n    var _this = this;\n\n    window.addEventListener('offline', this.updateOnlineStatus);\n    window.bus.$on(BUS_EVENTS.WEBSOCKET_DISCONNECT, function () {\n      _this.updateOnlineStatus({\n        type: 'offline'\n      });\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('offline', this.updateOnlineStatus);\n  },\n  methods: {\n    refreshPage: function refreshPage() {\n      window.location.reload();\n    },\n    closeNotification: function closeNotification() {\n      this.showNotification = false;\n    },\n    updateOnlineStatus: function updateOnlineStatus(event) {\n      if (event.type === 'offline') {\n        this.showNotification = true;\n      }\n    }\n  }\n};","map":{"version":3,"sources":["NetworkNotification.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,OAAA,iBAAA,MAAA,iCAAA;AACA,SAAA,UAAA,QAAA,MAAA;AACA,SAAA,UAAA,QAAA,4BAAA;AAEA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,iBAAA,CADA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,gBAAA,EAAA,CAAA,SAAA,CAAA;AADA,KAAA;AAGA,GAPA;AASA,EAAA,QAAA,oBACA,UAAA,CAAA;AAAA,IAAA,YAAA,EAAA;AAAA,GAAA,CADA,CATA;AAaA,EAAA,OAbA,qBAaA;AAAA;;AACA,IAAA,MAAA,CAAA,gBAAA,CAAA,SAAA,EAAA,KAAA,kBAAA;AACA,IAAA,MAAA,CAAA,GAAA,CAAA,GAAA,CAAA,UAAA,CAAA,oBAAA,EAAA,YAAA;AACA,MAAA,KAAA,CAAA,kBAAA,CAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA;AACA,KAFA;AAGA,GAlBA;AAoBA,EAAA,aApBA,2BAoBA;AACA,IAAA,MAAA,CAAA,mBAAA,CAAA,SAAA,EAAA,KAAA,kBAAA;AACA,GAtBA;AAwBA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,MAAA,MAAA,CAAA,QAAA,CAAA,MAAA;AACA,KAHA;AAKA,IAAA,iBALA,+BAKA;AACA,WAAA,gBAAA,GAAA,KAAA;AACA,KAPA;AASA,IAAA,kBATA,8BASA,KATA,EASA;AACA,UAAA,KAAA,CAAA,IAAA,KAAA,SAAA,EAAA;AACA,aAAA,gBAAA,GAAA,IAAA;AACA;AACA;AAbA;AAxBA,CAAA","sourcesContent":["<template>\n  <transition name=\"network-notification-fade\" tag=\"div\">\n    <div v-show=\"showNotification\" class=\"ui-notification-container\">\n      <div class=\"ui-notification\">\n        <fluent-icon icon=\"wifi-off\" />\n        <p class=\"ui-notification-text\">\n          {{\n            useInstallationName(\n              $t('NETWORK.NOTIFICATION.TEXT'),\n              globalConfig.installationName\n            )\n          }}\n        </p>\n        <woot-button variant=\"clear\" size=\"small\" @click=\"refreshPage\">\n          {{ $t('NETWORK.BUTTON.REFRESH') }}\n        </woot-button>\n        <woot-button\n          variant=\"smooth\"\n          size=\"small\"\n          color-scheme=\"warning\"\n          icon=\"dismiss-circle\"\n          @click=\"closeNotification\"\n        />\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script>\nimport globalConfigMixin from 'shared/mixins/globalConfigMixin';\nimport { mapGetters } from 'vuex';\nimport { BUS_EVENTS } from 'shared/constants/busEvents';\n\nexport default {\n  mixins: [globalConfigMixin],\n\n  data() {\n    return {\n      showNotification: !navigator.onLine,\n    };\n  },\n\n  computed: {\n    ...mapGetters({ globalConfig: 'globalConfig/get' }),\n  },\n\n  mounted() {\n    window.addEventListener('offline', this.updateOnlineStatus);\n    window.bus.$on(BUS_EVENTS.WEBSOCKET_DISCONNECT, () => {\n      this.updateOnlineStatus({ type: 'offline' });\n    });\n  },\n\n  beforeDestroy() {\n    window.removeEventListener('offline', this.updateOnlineStatus);\n  },\n\n  methods: {\n    refreshPage() {\n      window.location.reload();\n    },\n\n    closeNotification() {\n      this.showNotification = false;\n    },\n\n    updateOnlineStatus(event) {\n      if (event.type === 'offline') {\n        this.showNotification = true;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import '~dashboard/assets/scss/mixins';\n\n.ui-notification-container {\n  max-width: 40rem;\n  position: absolute;\n  right: var(--space-normal);\n  top: var(--space-normal);\n  z-index: var(--z-index-very-high);\n}\n\n.ui-notification {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n\n  background-color: var(--y-100);\n  border-radius: var(--border-radius-medium);\n  box-shadow: var(--shadow-large);\n\n  min-width: 24rem;\n  padding: var(--space-normal);\n}\n\n.ui-notification-text {\n  margin: 0 var(--space-small);\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/components"},"metadata":{},"sourceType":"module"}