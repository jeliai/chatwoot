{"ast":null,"code":"import \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport alertMixin from 'shared/mixins/alertMixin';\nexport default {\n  mixins: [alertMixin],\n  props: {\n    showDeletePopup: {\n      type: Boolean,\n      default: false\n    },\n    activeCustomView: {\n      type: Object,\n      default: function _default() {}\n    },\n    customViewsId: {\n      type: [String, Number],\n      default: 0\n    },\n    activeFilterType: {\n      type: Number,\n      default: 0\n    },\n    openLastItemAfterDelete: {\n      type: Function,\n      default: function _default() {}\n    }\n  },\n  computed: {\n    activeCustomViews: function activeCustomViews() {\n      if (this.activeFilterType === 0) {\n        return 'conversation';\n      }\n\n      if (this.activeFilterType === 1) {\n        return 'contact';\n      }\n\n      return '';\n    },\n    deleteMessage: function deleteMessage() {\n      return \" \".concat(this.activeCustomView && this.activeCustomView.name, \"?\");\n    },\n    deleteConfirmText: function deleteConfirmText() {\n      return \"\".concat(this.$t('FILTER.CUSTOM_VIEWS.DELETE.MODAL.CONFIRM.YES'));\n    },\n    deleteRejectText: function deleteRejectText() {\n      return \"\".concat(this.$t('FILTER.CUSTOM_VIEWS.DELETE.MODAL.CONFIRM.NO'));\n    },\n    isFolderSection: function isFolderSection() {\n      return this.activeFilterType === 0 && this.$route.name !== 'home';\n    },\n    isSegmentSection: function isSegmentSection() {\n      return this.activeFilterType === 1 && this.$route.name !== 'contacts_dashboard';\n    }\n  },\n  methods: {\n    deleteSavedCustomViews: function deleteSavedCustomViews() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var id, filterType, _error$response, errorMessage;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                id = Number(_this.customViewsId);\n                filterType = _this.activeCustomViews;\n                _context.next = 5;\n                return _this.$store.dispatch('customViews/delete', {\n                  id: id,\n                  filterType: filterType\n                });\n\n              case 5:\n                _this.closeDeletePopup();\n\n                _this.showAlert(_this.activeFilterType === 0 ? _this.$t('FILTER.CUSTOM_VIEWS.DELETE.API_FOLDERS.SUCCESS_MESSAGE') : _this.$t('FILTER.CUSTOM_VIEWS.DELETE.API_SEGMENTS.SUCCESS_MESSAGE'));\n\n                _context.next = 13;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n                errorMessage = _context.t0 !== null && _context.t0 !== void 0 && (_error$response = _context.t0.response) !== null && _error$response !== void 0 && _error$response.message || _this.activeFilterType === 0 ? _this.$t('FILTER.CUSTOM_VIEWS.DELETE.API_FOLDERS.SUCCESS_MESSAGE') : _this.$t('FILTER.CUSTOM_VIEWS.DELETE.API_SEGMENTS.SUCCESS_MESSAGE');\n\n                _this.showAlert(errorMessage);\n\n              case 13:\n                _this.openLastItemAfterDelete();\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 9]]);\n      }))();\n    },\n    closeDeletePopup: function closeDeletePopup() {\n      this.$emit('close');\n    }\n  }\n};","map":{"version":3,"sources":["DeleteCustomViews.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,OAAA,UAAA,MAAA,0BAAA;AACA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,UAAA,CADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,gBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA,KALA;AASA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,gBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,uBAAA,EAAA;AACA,MAAA,IAAA,EAAA,QADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA;AAjBA,GAFA;AAyBA,EAAA,QAAA,EAAA;AACA,IAAA,iBADA,+BACA;AACA,UAAA,KAAA,gBAAA,KAAA,CAAA,EAAA;AACA,eAAA,cAAA;AACA;;AACA,UAAA,KAAA,gBAAA,KAAA,CAAA,EAAA;AACA,eAAA,SAAA;AACA;;AACA,aAAA,EAAA;AACA,KATA;AAUA,IAAA,aAVA,2BAUA;AACA,wBAAA,KAAA,gBAAA,IAAA,KAAA,gBAAA,CAAA,IAAA;AACA,KAZA;AAaA,IAAA,iBAbA,+BAaA;AACA,uBAAA,KAAA,EAAA,CAAA,8CAAA,CAAA;AACA,KAfA;AAgBA,IAAA,gBAhBA,8BAgBA;AACA,uBAAA,KAAA,EAAA,CAAA,6CAAA,CAAA;AACA,KAlBA;AAmBA,IAAA,eAnBA,6BAmBA;AACA,aAAA,KAAA,gBAAA,KAAA,CAAA,IAAA,KAAA,MAAA,CAAA,IAAA,KAAA,MAAA;AACA,KArBA;AAsBA,IAAA,gBAtBA,8BAsBA;AACA,aACA,KAAA,gBAAA,KAAA,CAAA,IAAA,KAAA,MAAA,CAAA,IAAA,KAAA,oBADA;AAGA;AA1BA,GAzBA;AAsDA,EAAA,OAAA,EAAA;AACA,IAAA,sBADA,oCACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,gBAAA,EAFA,GAEA,MAAA,CAAA,KAAA,CAAA,aAAA,CAFA;AAGA,gBAAA,UAHA,GAGA,KAAA,CAAA,iBAHA;AAAA;AAAA,uBAIA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,oBAAA,EAAA;AAAA,kBAAA,EAAA,EAAA,EAAA;AAAA,kBAAA,UAAA,EAAA;AAAA,iBAAA,CAJA;;AAAA;AAKA,gBAAA,KAAA,CAAA,gBAAA;;AACA,gBAAA,KAAA,CAAA,SAAA,CACA,KAAA,CAAA,gBAAA,KAAA,CAAA,GACA,KAAA,CAAA,EAAA,CAAA,wDAAA,CADA,GAEA,KAAA,CAAA,EAAA,CAAA,yDAAA,CAHA;;AANA;AAAA;;AAAA;AAAA;AAAA;AAYA,gBAAA,YAZA,GAaA,iFAAA,QAAA,4DAAA,OAAA,IAAA,KAAA,CAAA,gBAAA,KAAA,CAAA,GACA,KAAA,CAAA,EAAA,CAAA,wDAAA,CADA,GAEA,KAAA,CAAA,EAAA,CACA,yDADA,CAfA;;AAkBA,gBAAA,KAAA,CAAA,SAAA,CAAA,YAAA;;AAlBA;AAoBA,gBAAA,KAAA,CAAA,uBAAA;;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA,KAtBA;AAuBA,IAAA,gBAvBA,8BAuBA;AACA,WAAA,KAAA,CAAA,OAAA;AACA;AAzBA;AAtDA,CAAA","sourcesContent":["<template>\n  <div>\n    <woot-delete-modal\n      v-if=\"showDeletePopup\"\n      :show.sync=\"showDeletePopup\"\n      :on-close=\"closeDeletePopup\"\n      :on-confirm=\"deleteSavedCustomViews\"\n      :title=\"$t('FILTER.CUSTOM_VIEWS.DELETE.MODAL.CONFIRM.TITLE')\"\n      :message=\"$t('FILTER.CUSTOM_VIEWS.DELETE.MODAL.CONFIRM.MESSAGE')\"\n      :message-value=\"deleteMessage\"\n      :confirm-text=\"deleteConfirmText\"\n      :reject-text=\"deleteRejectText\"\n    />\n  </div>\n</template>\n\n<script>\nimport alertMixin from 'shared/mixins/alertMixin';\nexport default {\n  mixins: [alertMixin],\n  props: {\n    showDeletePopup: {\n      type: Boolean,\n      default: false,\n    },\n    activeCustomView: {\n      type: Object,\n      default: () => {},\n    },\n    customViewsId: {\n      type: [String, Number],\n      default: 0,\n    },\n    activeFilterType: {\n      type: Number,\n      default: 0,\n    },\n    openLastItemAfterDelete: {\n      type: Function,\n      default: () => {},\n    },\n  },\n\n  computed: {\n    activeCustomViews() {\n      if (this.activeFilterType === 0) {\n        return 'conversation';\n      }\n      if (this.activeFilterType === 1) {\n        return 'contact';\n      }\n      return '';\n    },\n    deleteMessage() {\n      return ` ${this.activeCustomView && this.activeCustomView.name}?`;\n    },\n    deleteConfirmText() {\n      return `${this.$t('FILTER.CUSTOM_VIEWS.DELETE.MODAL.CONFIRM.YES')}`;\n    },\n    deleteRejectText() {\n      return `${this.$t('FILTER.CUSTOM_VIEWS.DELETE.MODAL.CONFIRM.NO')}`;\n    },\n    isFolderSection() {\n      return this.activeFilterType === 0 && this.$route.name !== 'home';\n    },\n    isSegmentSection() {\n      return (\n        this.activeFilterType === 1 && this.$route.name !== 'contacts_dashboard'\n      );\n    },\n  },\n\n  methods: {\n    async deleteSavedCustomViews() {\n      try {\n        const id = Number(this.customViewsId);\n        const filterType = this.activeCustomViews;\n        await this.$store.dispatch('customViews/delete', { id, filterType });\n        this.closeDeletePopup();\n        this.showAlert(\n          this.activeFilterType === 0\n            ? this.$t('FILTER.CUSTOM_VIEWS.DELETE.API_FOLDERS.SUCCESS_MESSAGE')\n            : this.$t('FILTER.CUSTOM_VIEWS.DELETE.API_SEGMENTS.SUCCESS_MESSAGE')\n        );\n      } catch (error) {\n        const errorMessage =\n          error?.response?.message || this.activeFilterType === 0\n            ? this.$t('FILTER.CUSTOM_VIEWS.DELETE.API_FOLDERS.SUCCESS_MESSAGE')\n            : this.$t(\n                'FILTER.CUSTOM_VIEWS.DELETE.API_SEGMENTS.SUCCESS_MESSAGE'\n              );\n        this.showAlert(errorMessage);\n      }\n      this.openLastItemAfterDelete();\n    },\n    closeDeletePopup() {\n      this.$emit('close');\n    },\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/customviews"},"metadata":{},"sourceType":"module"}