{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Sidebar from '../../components/layout/Sidebar';\nimport CommandBar from './commands/commandbar.vue';\nimport { BUS_EVENTS } from 'shared/constants/busEvents';\nimport WootKeyShortcutModal from 'dashboard/components/widgets/modal/WootKeyShortcutModal';\nimport AddAccountModal from 'dashboard/components/layout/sidebarComponents/AddAccountModal';\nimport AccountSelector from 'dashboard/components/layout/sidebarComponents/AccountSelector';\nimport AddLabelModal from 'dashboard/routes/dashboard/settings/labels/AddLabel';\nimport NotificationPanel from 'dashboard/routes/dashboard/notifications/components/NotificationPanel';\nexport default {\n  components: {\n    Sidebar: Sidebar,\n    CommandBar: CommandBar,\n    WootKeyShortcutModal: WootKeyShortcutModal,\n    AddAccountModal: AddAccountModal,\n    AccountSelector: AccountSelector,\n    AddLabelModal: AddLabelModal,\n    NotificationPanel: NotificationPanel\n  },\n  data: function data() {\n    return {\n      isSidebarOpen: false,\n      isOnDesktop: true,\n      showAccountModal: false,\n      showCreateAccountModal: false,\n      showAddLabelModal: false,\n      showShortcutModal: false,\n      isNotificationPanel: false\n    };\n  },\n  computed: {\n    currentRoute: function currentRoute() {\n      return ' ';\n    },\n    sidebarClassName: function sidebarClassName() {\n      if (this.isOnDesktop) {\n        return '';\n      }\n\n      if (this.isSidebarOpen) {\n        return 'off-canvas is-open';\n      }\n\n      return 'off-canvas is-transition-push is-closed';\n    },\n    contentClassName: function contentClassName() {\n      if (this.isOnDesktop) {\n        return '';\n      }\n\n      if (this.isSidebarOpen) {\n        return 'off-canvas-content is-open-left has-transition-push';\n      }\n\n      return 'off-canvas-content has-transition-push';\n    }\n  },\n  mounted: function mounted() {\n    window.addEventListener('resize', this.handleResize);\n    this.handleResize();\n    bus.$on(BUS_EVENTS.TOGGLE_SIDEMENU, this.toggleSidebar);\n  },\n  beforeDestroy: function beforeDestroy() {\n    bus.$off(BUS_EVENTS.TOGGLE_SIDEMENU, this.toggleSidebar);\n    window.removeEventListener('resize', this.handleResize);\n  },\n  methods: {\n    handleResize: function handleResize() {\n      if (window.innerWidth >= 1200) {\n        this.isOnDesktop = true;\n      } else {\n        this.isOnDesktop = false;\n      }\n    },\n    toggleSidebar: function toggleSidebar() {\n      this.isSidebarOpen = !this.isSidebarOpen;\n    },\n    openCreateAccountModal: function openCreateAccountModal() {\n      this.showAccountModal = false;\n      this.showCreateAccountModal = true;\n    },\n    closeCreateAccountModal: function closeCreateAccountModal() {\n      this.showCreateAccountModal = false;\n    },\n    toggleAccountModal: function toggleAccountModal() {\n      this.showAccountModal = !this.showAccountModal;\n    },\n    toggleKeyShortcutModal: function toggleKeyShortcutModal() {\n      this.showShortcutModal = true;\n    },\n    closeKeyShortcutModal: function closeKeyShortcutModal() {\n      this.showShortcutModal = false;\n    },\n    showAddLabelPopup: function showAddLabelPopup() {\n      this.showAddLabelModal = true;\n    },\n    hideAddLabelPopup: function hideAddLabelPopup() {\n      this.showAddLabelModal = false;\n    },\n    openNotificationPanel: function openNotificationPanel() {\n      this.isNotificationPanel = true;\n    },\n    closeNotificationPanel: function closeNotificationPanel() {\n      this.isNotificationPanel = false;\n    }\n  }\n};","map":{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"row app-wrapper\">\n    <sidebar\n      :route=\"currentRoute\"\n      :sidebar-class-name=\"sidebarClassName\"\n      @open-notification-panel=\"openNotificationPanel\"\n      @toggle-account-modal=\"toggleAccountModal\"\n      @open-key-shortcut-modal=\"toggleKeyShortcutModal\"\n      @close-key-shortcut-modal=\"closeKeyShortcutModal\"\n      @show-add-label-popup=\"showAddLabelPopup\"\n    />\n    <section class=\"app-content columns\" :class=\"contentClassName\">\n      <router-view />\n      <command-bar />\n      <account-selector\n        :show-account-modal=\"showAccountModal\"\n        @close-account-modal=\"toggleAccountModal\"\n        @show-create-account-modal=\"openCreateAccountModal\"\n      />\n      <add-account-modal\n        :show=\"showCreateAccountModal\"\n        @close-account-create-modal=\"closeCreateAccountModal\"\n      />\n      <woot-key-shortcut-modal\n        v-if=\"showShortcutModal\"\n        @close=\"closeKeyShortcutModal\"\n        @clickaway=\"closeKeyShortcutModal\"\n      />\n      <notification-panel\n        v-if=\"isNotificationPanel\"\n        @close=\"closeNotificationPanel\"\n      />\n      <woot-modal :show.sync=\"showAddLabelModal\" :on-close=\"hideAddLabelPopup\">\n        <add-label-modal @close=\"hideAddLabelPopup\" />\n      </woot-modal>\n    </section>\n  </div>\n</template>\n\n<script>\nimport Sidebar from '../../components/layout/Sidebar';\nimport CommandBar from './commands/commandbar.vue';\nimport { BUS_EVENTS } from 'shared/constants/busEvents';\nimport WootKeyShortcutModal from 'dashboard/components/widgets/modal/WootKeyShortcutModal';\nimport AddAccountModal from 'dashboard/components/layout/sidebarComponents/AddAccountModal';\nimport AccountSelector from 'dashboard/components/layout/sidebarComponents/AccountSelector';\nimport AddLabelModal from 'dashboard/routes/dashboard/settings/labels/AddLabel';\nimport NotificationPanel from 'dashboard/routes/dashboard/notifications/components/NotificationPanel';\n\nexport default {\n  components: {\n    Sidebar,\n    CommandBar,\n    WootKeyShortcutModal,\n    AddAccountModal,\n    AccountSelector,\n    AddLabelModal,\n    NotificationPanel,\n  },\n  data() {\n    return {\n      isSidebarOpen: false,\n      isOnDesktop: true,\n      showAccountModal: false,\n      showCreateAccountModal: false,\n      showAddLabelModal: false,\n      showShortcutModal: false,\n      isNotificationPanel: false,\n    };\n  },\n  computed: {\n    currentRoute() {\n      return ' ';\n    },\n    sidebarClassName() {\n      if (this.isOnDesktop) {\n        return '';\n      }\n      if (this.isSidebarOpen) {\n        return 'off-canvas is-open';\n      }\n      return 'off-canvas is-transition-push is-closed';\n    },\n    contentClassName() {\n      if (this.isOnDesktop) {\n        return '';\n      }\n      if (this.isSidebarOpen) {\n        return 'off-canvas-content is-open-left has-transition-push';\n      }\n      return 'off-canvas-content has-transition-push';\n    },\n  },\n  mounted() {\n    window.addEventListener('resize', this.handleResize);\n    this.handleResize();\n    bus.$on(BUS_EVENTS.TOGGLE_SIDEMENU, this.toggleSidebar);\n  },\n  beforeDestroy() {\n    bus.$off(BUS_EVENTS.TOGGLE_SIDEMENU, this.toggleSidebar);\n    window.removeEventListener('resize', this.handleResize);\n  },\n  methods: {\n    handleResize() {\n      if (window.innerWidth >= 1200) {\n        this.isOnDesktop = true;\n      } else {\n        this.isOnDesktop = false;\n      }\n    },\n    toggleSidebar() {\n      this.isSidebarOpen = !this.isSidebarOpen;\n    },\n    openCreateAccountModal() {\n      this.showAccountModal = false;\n      this.showCreateAccountModal = true;\n    },\n    closeCreateAccountModal() {\n      this.showCreateAccountModal = false;\n    },\n    toggleAccountModal() {\n      this.showAccountModal = !this.showAccountModal;\n    },\n    toggleKeyShortcutModal() {\n      this.showShortcutModal = true;\n    },\n    closeKeyShortcutModal() {\n      this.showShortcutModal = false;\n    },\n    showAddLabelPopup() {\n      this.showAddLabelModal = true;\n    },\n    hideAddLabelPopup() {\n      this.showAddLabelModal = false;\n    },\n    openNotificationPanel() {\n      this.isNotificationPanel = true;\n    },\n    closeNotificationPanel() {\n      this.isNotificationPanel = false;\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n.off-canvas-content.is-open-left {\n  transform: translateX(20rem);\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard"},"metadata":{},"sourceType":"module"}