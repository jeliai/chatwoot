{"ast":null,"code":"import { asPromise } from '../../lib/as-promise';\nexport function pTimeout(cb, timeout) {\n  return new Promise(function (resolve, reject) {\n    var timeoutId = setTimeout(function () {\n      reject(Error('Promise timed out'));\n    }, timeout);\n    cb.then(function (val) {\n      clearTimeout(timeoutId);\n      return resolve(val);\n    }).catch(reject);\n  });\n}\nexport function invokeCallback(ctx, callback, timeout) {\n  if (!callback) {\n    return Promise.resolve(ctx);\n  }\n\n  var cb = function cb() {\n    try {\n      return asPromise(callback(ctx));\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  };\n\n  return pTimeout(cb(), timeout !== null && timeout !== void 0 ? timeout : 1000).catch(function (err) {\n    ctx === null || ctx === void 0 ? void 0 : ctx.log('warn', 'Callback Error', {\n      error: err\n    });\n    ctx === null || ctx === void 0 ? void 0 : ctx.stats.increment('callback_error');\n  }).then(function () {\n    return ctx;\n  });\n}","map":null,"metadata":{},"sourceType":"module"}