{"ast":null,"code":"import { __spreadArrays } from \"tslib\";\n\nvar Emitter =\n/** @class */\nfunction () {\n  function Emitter() {\n    this.callbacks = {};\n  }\n\n  Emitter.prototype.on = function (event, callback) {\n    var _a;\n\n    this.callbacks[event] = __spreadArrays((_a = this.callbacks[event]) !== null && _a !== void 0 ? _a : [], [callback]);\n    return this;\n  };\n\n  Emitter.prototype.once = function (event, fn) {\n    var _this = this;\n\n    var on = function on() {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      _this.off(event, on);\n\n      fn.apply(_this, args);\n    };\n\n    this.on(event, on);\n    return this;\n  };\n\n  Emitter.prototype.off = function (event, callback) {\n    var _a;\n\n    var fns = (_a = this.callbacks[event]) !== null && _a !== void 0 ? _a : [];\n    var without = fns.filter(function (fn) {\n      return fn !== callback;\n    });\n    this.callbacks[event] = without;\n    return this;\n  };\n\n  Emitter.prototype.emit = function (event) {\n    var _this = this;\n\n    var _a;\n\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    var callbacks = (_a = this.callbacks[event]) !== null && _a !== void 0 ? _a : [];\n    callbacks.forEach(function (callback) {\n      callback.apply(_this, args);\n    });\n    return this;\n  };\n\n  return Emitter;\n}();\n\nexport { Emitter };","map":null,"metadata":{},"sourceType":"module"}