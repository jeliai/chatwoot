{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport ContactDetailsItem from './ContactDetailsItem.vue';\nimport MultiselectDropdown from 'shared/components/ui/MultiselectDropdown.vue';\nimport ConversationLabels from './labels/LabelBox.vue';\nimport agentMixin from 'dashboard/mixins/agentMixin';\nimport teamMixin from 'dashboard/mixins/conversation/teamMixin';\nexport default {\n  components: {\n    ContactDetailsItem: ContactDetailsItem,\n    MultiselectDropdown: MultiselectDropdown,\n    ConversationLabels: ConversationLabels\n  },\n  mixins: [agentMixin, alertMixin, teamMixin],\n  props: {\n    conversationId: {\n      type: [Number, String],\n      required: true\n    },\n    inboxId: {\n      type: Number,\n      default: undefined\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    currentChat: 'getSelectedChat',\n    currentUser: 'getCurrentUser'\n  })), {}, {\n    assignedAgent: {\n      get: function get() {\n        return this.currentChat.meta.assignee;\n      },\n      set: function set(agent) {\n        var _this = this;\n\n        var agentId = agent ? agent.id : 0;\n        this.$store.dispatch('setCurrentChatAssignee', agent);\n        this.$store.dispatch('assignAgent', {\n          conversationId: this.currentChat.id,\n          agentId: agentId\n        }).then(function () {\n          _this.showAlert(_this.$t('CONVERSATION.CHANGE_AGENT'));\n        });\n      }\n    },\n    assignedTeam: {\n      get: function get() {\n        return this.currentChat.meta.team;\n      },\n      set: function set(team) {\n        var _this2 = this;\n\n        var conversationId = this.currentChat.id;\n        var teamId = team ? team.id : 0;\n        this.$store.dispatch('setCurrentChatTeam', {\n          team: team,\n          conversationId: conversationId\n        });\n        this.$store.dispatch('assignTeam', {\n          conversationId: conversationId,\n          teamId: teamId\n        }).then(function () {\n          _this2.showAlert(_this2.$t('CONVERSATION.CHANGE_TEAM'));\n        });\n      }\n    },\n    showSelfAssign: function showSelfAssign() {\n      if (!this.assignedAgent) {\n        return true;\n      }\n\n      if (this.assignedAgent.id !== this.currentUser.id) {\n        return true;\n      }\n\n      return false;\n    }\n  }),\n  methods: {\n    onSelfAssign: function onSelfAssign() {\n      var _this$currentUser = this.currentUser,\n          account_id = _this$currentUser.account_id,\n          availability_status = _this$currentUser.availability_status,\n          available_name = _this$currentUser.available_name,\n          email = _this$currentUser.email,\n          id = _this$currentUser.id,\n          name = _this$currentUser.name,\n          role = _this$currentUser.role,\n          avatar_url = _this$currentUser.avatar_url;\n      var selfAssign = {\n        account_id: account_id,\n        availability_status: availability_status,\n        available_name: available_name,\n        email: email,\n        id: id,\n        name: name,\n        role: role,\n        thumbnail: avatar_url\n      };\n      this.assignedAgent = selfAssign;\n    },\n    onClickAssignAgent: function onClickAssignAgent(selectedItem) {\n      if (this.assignedAgent && this.assignedAgent.id === selectedItem.id) {\n        this.assignedAgent = null;\n      } else {\n        this.assignedAgent = selectedItem;\n      }\n    },\n    onClickAssignTeam: function onClickAssignTeam(selectedItemTeam) {\n      if (this.assignedTeam && this.assignedTeam.id === selectedItemTeam.id) {\n        this.assignedTeam = null;\n      } else {\n        this.assignedTeam = selectedItemTeam;\n      }\n    }\n  }\n};","map":{"version":3,"sources":["ConversationAction.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"multiselect-wrap--small\">\n      <contact-details-item\n        compact\n        :title=\"$t('CONVERSATION_SIDEBAR.ASSIGNEE_LABEL')\"\n      >\n        <template v-slot:button>\n          <woot-button\n            v-if=\"showSelfAssign\"\n            icon=\"arrow-right\"\n            variant=\"link\"\n            size=\"small\"\n            @click=\"onSelfAssign\"\n          >\n            {{ $t('CONVERSATION_SIDEBAR.SELF_ASSIGN') }}\n          </woot-button>\n        </template>\n      </contact-details-item>\n      <multiselect-dropdown\n        :options=\"agentsList\"\n        :selected-item=\"assignedAgent\"\n        :multiselector-title=\"$t('AGENT_MGMT.MULTI_SELECTOR.TITLE.AGENT')\"\n        :multiselector-placeholder=\"$t('AGENT_MGMT.MULTI_SELECTOR.PLACEHOLDER')\"\n        :no-search-result=\"\n          $t('AGENT_MGMT.MULTI_SELECTOR.SEARCH.NO_RESULTS.AGENT')\n        \"\n        :input-placeholder=\"\n          $t('AGENT_MGMT.MULTI_SELECTOR.SEARCH.PLACEHOLDER.AGENT')\n        \"\n        @click=\"onClickAssignAgent\"\n      />\n    </div>\n    <div class=\"multiselect-wrap--small\">\n      <contact-details-item\n        compact\n        :title=\"$t('CONVERSATION_SIDEBAR.TEAM_LABEL')\"\n      />\n      <multiselect-dropdown\n        :options=\"teamsList\"\n        :selected-item=\"assignedTeam\"\n        :multiselector-title=\"$t('AGENT_MGMT.MULTI_SELECTOR.TITLE.TEAM')\"\n        :multiselector-placeholder=\"$t('AGENT_MGMT.MULTI_SELECTOR.PLACEHOLDER')\"\n        :no-search-result=\"\n          $t('AGENT_MGMT.MULTI_SELECTOR.SEARCH.NO_RESULTS.TEAM')\n        \"\n        :input-placeholder=\"\n          $t('AGENT_MGMT.MULTI_SELECTOR.SEARCH.PLACEHOLDER.TEAM')\n        \"\n        @click=\"onClickAssignTeam\"\n      />\n    </div>\n    <contact-details-item\n      compact\n      :title=\"$t('CONVERSATION_SIDEBAR.ACCORDION.CONVERSATION_LABELS')\"\n    />\n    <conversation-labels :conversation-id=\"conversationId\" />\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport ContactDetailsItem from './ContactDetailsItem.vue';\nimport MultiselectDropdown from 'shared/components/ui/MultiselectDropdown.vue';\nimport ConversationLabels from './labels/LabelBox.vue';\nimport agentMixin from 'dashboard/mixins/agentMixin';\nimport teamMixin from 'dashboard/mixins/conversation/teamMixin';\n\nexport default {\n  components: {\n    ContactDetailsItem,\n    MultiselectDropdown,\n    ConversationLabels,\n  },\n  mixins: [agentMixin, alertMixin, teamMixin],\n  props: {\n    conversationId: {\n      type: [Number, String],\n      required: true,\n    },\n    inboxId: {\n      type: Number,\n      default: undefined,\n    },\n  },\n  computed: {\n    ...mapGetters({\n      currentChat: 'getSelectedChat',\n      currentUser: 'getCurrentUser',\n    }),\n    assignedAgent: {\n      get() {\n        return this.currentChat.meta.assignee;\n      },\n      set(agent) {\n        const agentId = agent ? agent.id : 0;\n        this.$store.dispatch('setCurrentChatAssignee', agent);\n        this.$store\n          .dispatch('assignAgent', {\n            conversationId: this.currentChat.id,\n            agentId,\n          })\n          .then(() => {\n            this.showAlert(this.$t('CONVERSATION.CHANGE_AGENT'));\n          });\n      },\n    },\n    assignedTeam: {\n      get() {\n        return this.currentChat.meta.team;\n      },\n      set(team) {\n        const conversationId = this.currentChat.id;\n        const teamId = team ? team.id : 0;\n        this.$store.dispatch('setCurrentChatTeam', { team, conversationId });\n        this.$store\n          .dispatch('assignTeam', { conversationId, teamId })\n          .then(() => {\n            this.showAlert(this.$t('CONVERSATION.CHANGE_TEAM'));\n          });\n      },\n    },\n    showSelfAssign() {\n      if (!this.assignedAgent) {\n        return true;\n      }\n      if (this.assignedAgent.id !== this.currentUser.id) {\n        return true;\n      }\n      return false;\n    },\n  },\n  methods: {\n    onSelfAssign() {\n      const {\n        account_id,\n        availability_status,\n        available_name,\n        email,\n        id,\n        name,\n        role,\n        avatar_url,\n      } = this.currentUser;\n      const selfAssign = {\n        account_id,\n        availability_status,\n        available_name,\n        email,\n        id,\n        name,\n        role,\n        thumbnail: avatar_url,\n      };\n      this.assignedAgent = selfAssign;\n    },\n    onClickAssignAgent(selectedItem) {\n      if (this.assignedAgent && this.assignedAgent.id === selectedItem.id) {\n        this.assignedAgent = null;\n      } else {\n        this.assignedAgent = selectedItem;\n      }\n    },\n\n    onClickAssignTeam(selectedItemTeam) {\n      if (this.assignedTeam && this.assignedTeam.id === selectedItemTeam.id) {\n        this.assignedTeam = null;\n      } else {\n        this.assignedTeam = selectedItemTeam;\n      }\n    },\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/conversation"},"metadata":{},"sourceType":"module"}