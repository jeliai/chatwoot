{"ast":null,"code":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport articlesAPI from 'dashboard/api/helpCenter/articles';\nimport { throwErrorMessage } from 'dashboard/store/utils/api';\nimport types from '../../mutation-types';\nexport var actions = {\n  index: function () {\n    var _index = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref, _ref2) {\n      var commit, pageNumber, portalSlug, locale, status, author_id, category_slug, _yield$articlesAPI$ge, _yield$articlesAPI$ge2, payload, meta, articleIds;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              pageNumber = _ref2.pageNumber, portalSlug = _ref2.portalSlug, locale = _ref2.locale, status = _ref2.status, author_id = _ref2.author_id, category_slug = _ref2.category_slug;\n              _context.prev = 2;\n              commit(types.SET_UI_FLAG, {\n                isFetching: true\n              });\n              _context.next = 6;\n              return articlesAPI.getArticles({\n                pageNumber: pageNumber,\n                portalSlug: portalSlug,\n                locale: locale,\n                status: status,\n                author_id: author_id,\n                category_slug: category_slug\n              });\n\n            case 6:\n              _yield$articlesAPI$ge = _context.sent;\n              _yield$articlesAPI$ge2 = _yield$articlesAPI$ge.data;\n              payload = _yield$articlesAPI$ge2.payload;\n              meta = _yield$articlesAPI$ge2.meta;\n              articleIds = payload.map(function (article) {\n                return article.id;\n              });\n              commit(types.CLEAR_ARTICLES);\n              commit(types.ADD_MANY_ARTICLES, payload);\n              commit(types.SET_ARTICLES_META, meta);\n              commit(types.ADD_MANY_ARTICLES_ID, articleIds);\n              return _context.abrupt(\"return\", articleIds);\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](2);\n              return _context.abrupt(\"return\", throwErrorMessage(_context.t0));\n\n            case 21:\n              _context.prev = 21;\n              commit(types.SET_UI_FLAG, {\n                isFetching: false\n              });\n              return _context.finish(21);\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 18, 21, 24]]);\n    }));\n\n    function index(_x, _x2) {\n      return _index.apply(this, arguments);\n    }\n\n    return index;\n  }(),\n  create: function () {\n    var _create = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref3, _ref4) {\n      var commit, dispatch, portalSlug, articleObj, _yield$articlesAPI$cr, payload, articleId, portal;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref3.commit, dispatch = _ref3.dispatch;\n              portalSlug = _ref4.portalSlug, articleObj = _objectWithoutProperties(_ref4, [\"portalSlug\"]);\n              commit(types.SET_UI_FLAG, {\n                isCreating: true\n              });\n              _context2.prev = 3;\n              _context2.next = 6;\n              return articlesAPI.createArticle({\n                portalSlug: portalSlug,\n                articleObj: articleObj\n              });\n\n            case 6:\n              _yield$articlesAPI$cr = _context2.sent;\n              payload = _yield$articlesAPI$cr.data.payload;\n              articleId = payload.id, portal = payload.portal;\n              commit(types.ADD_ARTICLE, payload);\n              commit(types.ADD_ARTICLE_ID, articleId);\n              commit(types.ADD_ARTICLE_FLAG, articleId);\n              dispatch('portals/updatePortal', portal, {\n                root: true\n              });\n              return _context2.abrupt(\"return\", articleId);\n\n            case 16:\n              _context2.prev = 16;\n              _context2.t0 = _context2[\"catch\"](3);\n              return _context2.abrupt(\"return\", throwErrorMessage(_context2.t0));\n\n            case 19:\n              _context2.prev = 19;\n              commit(types.SET_UI_FLAG, {\n                isCreating: false\n              });\n              return _context2.finish(19);\n\n            case 22:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[3, 16, 19, 22]]);\n    }));\n\n    function create(_x3, _x4) {\n      return _create.apply(this, arguments);\n    }\n\n    return create;\n  }(),\n  show: function () {\n    var _show = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(_ref5, _ref6) {\n      var commit, id, portalSlug, response, payload, articleId;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref5.commit;\n              id = _ref6.id, portalSlug = _ref6.portalSlug;\n              commit(types.SET_UI_FLAG, {\n                isFetching: true\n              });\n              _context3.prev = 3;\n              _context3.next = 6;\n              return articlesAPI.getArticle({\n                id: id,\n                portalSlug: portalSlug\n              });\n\n            case 6:\n              response = _context3.sent;\n              payload = response.data.payload;\n              articleId = payload.id;\n              commit(types.ADD_ARTICLE, payload);\n              commit(types.ADD_ARTICLE_ID, articleId);\n              commit(types.SET_UI_FLAG, {\n                isFetching: false\n              });\n              _context3.next = 17;\n              break;\n\n            case 14:\n              _context3.prev = 14;\n              _context3.t0 = _context3[\"catch\"](3);\n              commit(types.SET_UI_FLAG, {\n                isFetching: false\n              });\n\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[3, 14]]);\n    }));\n\n    function show(_x5, _x6) {\n      return _show.apply(this, arguments);\n    }\n\n    return show;\n  }(),\n  update: function () {\n    var _update = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(_ref7, _ref8) {\n      var commit, portalSlug, articleId, articleObj, _yield$articlesAPI$up, payload;\n\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref7.commit;\n              portalSlug = _ref8.portalSlug, articleId = _ref8.articleId, articleObj = _objectWithoutProperties(_ref8, [\"portalSlug\", \"articleId\"]);\n              commit(types.UPDATE_ARTICLE_FLAG, {\n                uiFlags: {\n                  isUpdating: true\n                },\n                articleId: articleId\n              });\n              _context4.prev = 3;\n              _context4.next = 6;\n              return articlesAPI.updateArticle({\n                portalSlug: portalSlug,\n                articleId: articleId,\n                articleObj: articleObj\n              });\n\n            case 6:\n              _yield$articlesAPI$up = _context4.sent;\n              payload = _yield$articlesAPI$up.data.payload;\n              commit(types.UPDATE_ARTICLE, payload);\n              return _context4.abrupt(\"return\", articleId);\n\n            case 12:\n              _context4.prev = 12;\n              _context4.t0 = _context4[\"catch\"](3);\n              return _context4.abrupt(\"return\", throwErrorMessage(_context4.t0));\n\n            case 15:\n              _context4.prev = 15;\n              commit(types.UPDATE_ARTICLE_FLAG, {\n                uiFlags: {\n                  isUpdating: false\n                },\n                articleId: articleId\n              });\n              return _context4.finish(15);\n\n            case 18:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[3, 12, 15, 18]]);\n    }));\n\n    function update(_x7, _x8) {\n      return _update.apply(this, arguments);\n    }\n\n    return update;\n  }(),\n  delete: function () {\n    var _delete2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(_ref9, _ref10) {\n      var commit, portalSlug, articleId;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref9.commit;\n              portalSlug = _ref10.portalSlug, articleId = _ref10.articleId;\n              commit(types.UPDATE_ARTICLE_FLAG, {\n                uiFlags: {\n                  isDeleting: true\n                },\n                articleId: articleId\n              });\n              _context5.prev = 3;\n              _context5.next = 6;\n              return articlesAPI.deleteArticle({\n                portalSlug: portalSlug,\n                articleId: articleId\n              });\n\n            case 6:\n              commit(types.REMOVE_ARTICLE, articleId);\n              commit(types.REMOVE_ARTICLE_ID, articleId);\n              return _context5.abrupt(\"return\", articleId);\n\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](3);\n              return _context5.abrupt(\"return\", throwErrorMessage(_context5.t0));\n\n            case 14:\n              _context5.prev = 14;\n              commit(types.UPDATE_ARTICLE_FLAG, {\n                uiFlags: {\n                  isDeleting: false\n                },\n                articleId: articleId\n              });\n              return _context5.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[3, 11, 14, 17]]);\n    }));\n\n    function _delete(_x9, _x10) {\n      return _delete2.apply(this, arguments);\n    }\n\n    return _delete;\n  }()\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/store/modules/helpCenterArticles/actions.js"],"names":["articlesAPI","throwErrorMessage","types","actions","index","commit","pageNumber","portalSlug","locale","status","author_id","category_slug","SET_UI_FLAG","isFetching","getArticles","data","payload","meta","articleIds","map","article","id","CLEAR_ARTICLES","ADD_MANY_ARTICLES","SET_ARTICLES_META","ADD_MANY_ARTICLES_ID","create","dispatch","articleObj","isCreating","createArticle","articleId","portal","ADD_ARTICLE","ADD_ARTICLE_ID","ADD_ARTICLE_FLAG","root","show","getArticle","response","update","UPDATE_ARTICLE_FLAG","uiFlags","isUpdating","updateArticle","UPDATE_ARTICLE","delete","isDeleting","deleteArticle","REMOVE_ARTICLE","REMOVE_ARTICLE_ID"],"mappings":"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","sourcesContent":["import articlesAPI from 'dashboard/api/helpCenter/articles';\nimport { throwErrorMessage } from 'dashboard/store/utils/api';\n\nimport types from '../../mutation-types';\nexport const actions = {\n  index: async (\n    { commit },\n    { pageNumber, portalSlug, locale, status, author_id, category_slug }\n  ) => {\n    try {\n      commit(types.SET_UI_FLAG, { isFetching: true });\n      const {\n        data: { payload, meta },\n      } = await articlesAPI.getArticles({\n        pageNumber,\n        portalSlug,\n        locale,\n        status,\n        author_id,\n        category_slug,\n      });\n      const articleIds = payload.map(article => article.id);\n      commit(types.CLEAR_ARTICLES);\n      commit(types.ADD_MANY_ARTICLES, payload);\n      commit(types.SET_ARTICLES_META, meta);\n      commit(types.ADD_MANY_ARTICLES_ID, articleIds);\n      return articleIds;\n    } catch (error) {\n      return throwErrorMessage(error);\n    } finally {\n      commit(types.SET_UI_FLAG, { isFetching: false });\n    }\n  },\n\n  create: async ({ commit, dispatch }, { portalSlug, ...articleObj }) => {\n    commit(types.SET_UI_FLAG, { isCreating: true });\n    try {\n      const {\n        data: { payload },\n      } = await articlesAPI.createArticle({\n        portalSlug,\n        articleObj,\n      });\n      const { id: articleId, portal } = payload;\n      commit(types.ADD_ARTICLE, payload);\n      commit(types.ADD_ARTICLE_ID, articleId);\n      commit(types.ADD_ARTICLE_FLAG, articleId);\n      dispatch('portals/updatePortal', portal, { root: true });\n      return articleId;\n    } catch (error) {\n      return throwErrorMessage(error);\n    } finally {\n      commit(types.SET_UI_FLAG, { isCreating: false });\n    }\n  },\n\n  show: async ({ commit }, { id, portalSlug }) => {\n    commit(types.SET_UI_FLAG, { isFetching: true });\n    try {\n      const response = await articlesAPI.getArticle({ id, portalSlug });\n      const {\n        data: { payload },\n      } = response;\n      const { id: articleId } = payload;\n      commit(types.ADD_ARTICLE, payload);\n      commit(types.ADD_ARTICLE_ID, articleId);\n      commit(types.SET_UI_FLAG, { isFetching: false });\n    } catch (error) {\n      commit(types.SET_UI_FLAG, { isFetching: false });\n    }\n  },\n  update: async ({ commit }, { portalSlug, articleId, ...articleObj }) => {\n    commit(types.UPDATE_ARTICLE_FLAG, {\n      uiFlags: {\n        isUpdating: true,\n      },\n      articleId,\n    });\n\n    try {\n      const {\n        data: { payload },\n      } = await articlesAPI.updateArticle({\n        portalSlug,\n        articleId,\n        articleObj,\n      });\n\n      commit(types.UPDATE_ARTICLE, payload);\n\n      return articleId;\n    } catch (error) {\n      return throwErrorMessage(error);\n    } finally {\n      commit(types.UPDATE_ARTICLE_FLAG, {\n        uiFlags: {\n          isUpdating: false,\n        },\n        articleId,\n      });\n    }\n  },\n  delete: async ({ commit }, { portalSlug, articleId }) => {\n    commit(types.UPDATE_ARTICLE_FLAG, {\n      uiFlags: {\n        isDeleting: true,\n      },\n      articleId,\n    });\n    try {\n      await articlesAPI.deleteArticle({ portalSlug, articleId });\n      commit(types.REMOVE_ARTICLE, articleId);\n      commit(types.REMOVE_ARTICLE_ID, articleId);\n      return articleId;\n    } catch (error) {\n      return throwErrorMessage(error);\n    } finally {\n      commit(types.UPDATE_ARTICLE_FLAG, {\n        uiFlags: {\n          isDeleting: false,\n        },\n        articleId,\n      });\n    }\n  },\n};\n"]},"metadata":{},"sourceType":"module"}