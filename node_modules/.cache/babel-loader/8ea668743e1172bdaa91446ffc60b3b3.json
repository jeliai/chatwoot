{"ast":null,"code":"import \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.promise.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport FileUpload from 'vue-upload-component';\nimport Spinner from 'shared/components/Spinner.vue';\nimport { checkFileSizeLimit } from 'shared/helpers/FileHelper';\nimport { MAXIMUM_FILE_UPLOAD_SIZE, ALLOWED_FILE_TYPES } from 'shared/constants/messages';\nimport { BUS_EVENTS } from 'shared/constants/busEvents';\nimport FluentIcon from 'shared/components/FluentIcon/Index.vue';\nimport { DirectUpload } from 'activestorage';\nimport { mapGetters } from 'vuex';\nexport default {\n  components: {\n    FluentIcon: FluentIcon,\n    FileUpload: FileUpload,\n    Spinner: Spinner\n  },\n  props: {\n    onAttach: {\n      type: Function,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    return {\n      isUploading: false\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    globalConfig: 'globalConfig/get'\n  })), {}, {\n    fileUploadSizeLimit: function fileUploadSizeLimit() {\n      return MAXIMUM_FILE_UPLOAD_SIZE;\n    },\n    allowedFileTypes: function allowedFileTypes() {\n      return ALLOWED_FILE_TYPES;\n    }\n  }),\n  mounted: function mounted() {\n    document.addEventListener('paste', this.handleClipboardPaste);\n  },\n  destroyed: function destroyed() {\n    document.removeEventListener('paste', this.handleClipboardPaste);\n  },\n  methods: {\n    handleClipboardPaste: function handleClipboardPaste(e) {\n      var _this = this;\n\n      var items = (e.clipboardData || e.originalEvent.clipboardData).items;\n      items.forEach(function (item) {\n        if (item.kind === 'file') {\n          e.preventDefault();\n          var file = item.getAsFile();\n\n          _this.$refs.upload.add(file);\n        }\n      });\n    },\n    getFileType: function getFileType(fileType) {\n      return fileType.includes('image') ? 'image' : 'file';\n    },\n    onFileUpload: function onFileUpload(file) {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!_this2.globalConfig.directUploadsEnabled) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.next = 3;\n                return _this2.onDirectFileUpload(file);\n\n              case 3:\n                _context.next = 7;\n                break;\n\n              case 5:\n                _context.next = 7;\n                return _this2.onIndirectFileUpload(file);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    onDirectFileUpload: function onDirectFileUpload(file) {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var websiteToken, upload;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (file) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 2:\n                _this3.isUploading = true;\n\n                try {\n                  if (checkFileSizeLimit(file, MAXIMUM_FILE_UPLOAD_SIZE)) {\n                    websiteToken = window.chatwootWebChannel.websiteToken;\n                    upload = new DirectUpload(file.file, \"/api/v1/widget/direct_uploads?website_token=\".concat(websiteToken), {\n                      directUploadWillCreateBlobWithXHR: function directUploadWillCreateBlobWithXHR(xhr) {\n                        xhr.setRequestHeader('X-Auth-Token', window.authToken);\n                      }\n                    });\n                    upload.create(function (error, blob) {\n                      if (error) {\n                        window.bus.$emit(BUS_EVENTS.SHOW_ALERT, {\n                          message: error\n                        });\n                      } else {\n                        _this3.onAttach(_objectSpread({\n                          file: blob.signed_id\n                        }, _this3.getLocalFileAttributes(file)));\n                      }\n                    });\n                  } else {\n                    window.bus.$emit(BUS_EVENTS.SHOW_ALERT, {\n                      message: _this3.$t('FILE_SIZE_LIMIT', {\n                        MAXIMUM_FILE_UPLOAD_SIZE: _this3.fileUploadSizeLimit\n                      })\n                    });\n                  }\n                } catch (error) {// Error\n                }\n\n                _this3.isUploading = false;\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    onIndirectFileUpload: function onIndirectFileUpload(file) {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (file) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 2:\n                _this4.isUploading = true;\n                _context3.prev = 3;\n\n                if (!checkFileSizeLimit(file, MAXIMUM_FILE_UPLOAD_SIZE)) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                _context3.next = 7;\n                return _this4.onAttach(_objectSpread({\n                  file: file.file\n                }, _this4.getLocalFileAttributes(file)));\n\n              case 7:\n                _context3.next = 10;\n                break;\n\n              case 9:\n                window.bus.$emit(BUS_EVENTS.SHOW_ALERT, {\n                  message: _this4.$t('FILE_SIZE_LIMIT', {\n                    MAXIMUM_FILE_UPLOAD_SIZE: _this4.fileUploadSizeLimit\n                  })\n                });\n\n              case 10:\n                _context3.next = 14;\n                break;\n\n              case 12:\n                _context3.prev = 12;\n                _context3.t0 = _context3[\"catch\"](3);\n\n              case 14:\n                _this4.isUploading = false;\n\n              case 15:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[3, 12]]);\n      }))();\n    },\n    getLocalFileAttributes: function getLocalFileAttributes(file) {\n      return {\n        thumbUrl: window.URL.createObjectURL(file.file),\n        fileType: this.getFileType(file.type)\n      };\n    }\n  }\n};","map":{"version":3,"sources":["ChatAttachment.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <file-upload\n    ref=\"upload\"\n    :size=\"4096 * 2048\"\n    :accept=\"allowedFileTypes\"\n    :data=\"{\n      direct_upload_url: '/api/v1/widget/direct_uploads',\n      direct_upload: true,\n    }\"\n    @input-file=\"onFileUpload\"\n  >\n    <button class=\"icon-button flex items-center justify-center\">\n      <fluent-icon v-if=\"!isUploading.image\" icon=\"attach\" />\n      <spinner v-if=\"isUploading\" size=\"small\" />\n    </button>\n  </file-upload>\n</template>\n\n<script>\nimport FileUpload from 'vue-upload-component';\nimport Spinner from 'shared/components/Spinner.vue';\nimport { checkFileSizeLimit } from 'shared/helpers/FileHelper';\nimport {\n  MAXIMUM_FILE_UPLOAD_SIZE,\n  ALLOWED_FILE_TYPES,\n} from 'shared/constants/messages';\nimport { BUS_EVENTS } from 'shared/constants/busEvents';\nimport FluentIcon from 'shared/components/FluentIcon/Index.vue';\nimport { DirectUpload } from 'activestorage';\nimport { mapGetters } from 'vuex';\n\nexport default {\n  components: { FluentIcon, FileUpload, Spinner },\n  props: {\n    onAttach: {\n      type: Function,\n      default: () => {},\n    },\n  },\n  data() {\n    return { isUploading: false };\n  },\n  computed: {\n    ...mapGetters({ globalConfig: 'globalConfig/get' }),\n    fileUploadSizeLimit() {\n      return MAXIMUM_FILE_UPLOAD_SIZE;\n    },\n    allowedFileTypes() {\n      return ALLOWED_FILE_TYPES;\n    },\n  },\n  mounted() {\n    document.addEventListener('paste', this.handleClipboardPaste);\n  },\n  destroyed() {\n    document.removeEventListener('paste', this.handleClipboardPaste);\n  },\n  methods: {\n    handleClipboardPaste(e) {\n      const items = (e.clipboardData || e.originalEvent.clipboardData).items;\n      items.forEach(item => {\n        if (item.kind === 'file') {\n          e.preventDefault();\n          const file = item.getAsFile();\n          this.$refs.upload.add(file);\n        }\n      });\n    },\n    getFileType(fileType) {\n      return fileType.includes('image') ? 'image' : 'file';\n    },\n    async onFileUpload(file) {\n      if (this.globalConfig.directUploadsEnabled) {\n        await this.onDirectFileUpload(file);\n      } else {\n        await this.onIndirectFileUpload(file);\n      }\n    },\n    async onDirectFileUpload(file) {\n      if (!file) {\n        return;\n      }\n      this.isUploading = true;\n      try {\n        if (checkFileSizeLimit(file, MAXIMUM_FILE_UPLOAD_SIZE)) {\n          const { websiteToken } = window.chatwootWebChannel;\n          const upload = new DirectUpload(\n            file.file,\n            `/api/v1/widget/direct_uploads?website_token=${websiteToken}`,\n            {\n              directUploadWillCreateBlobWithXHR: xhr => {\n                xhr.setRequestHeader('X-Auth-Token', window.authToken);\n              },\n            }\n          );\n\n          upload.create((error, blob) => {\n            if (error) {\n              window.bus.$emit(BUS_EVENTS.SHOW_ALERT, {\n                message: error,\n              });\n            } else {\n              this.onAttach({\n                file: blob.signed_id,\n                ...this.getLocalFileAttributes(file),\n              });\n            }\n          });\n        } else {\n          window.bus.$emit(BUS_EVENTS.SHOW_ALERT, {\n            message: this.$t('FILE_SIZE_LIMIT', {\n              MAXIMUM_FILE_UPLOAD_SIZE: this.fileUploadSizeLimit,\n            }),\n          });\n        }\n      } catch (error) {\n        // Error\n      }\n      this.isUploading = false;\n    },\n    async onIndirectFileUpload(file) {\n      if (!file) {\n        return;\n      }\n      this.isUploading = true;\n      try {\n        if (checkFileSizeLimit(file, MAXIMUM_FILE_UPLOAD_SIZE)) {\n          await this.onAttach({\n            file: file.file,\n            ...this.getLocalFileAttributes(file),\n          });\n        } else {\n          window.bus.$emit(BUS_EVENTS.SHOW_ALERT, {\n            message: this.$t('FILE_SIZE_LIMIT', {\n              MAXIMUM_FILE_UPLOAD_SIZE: this.fileUploadSizeLimit,\n            }),\n          });\n        }\n      } catch (error) {\n        // Error\n      }\n      this.isUploading = false;\n    },\n    getLocalFileAttributes(file) {\n      return {\n        thumbUrl: window.URL.createObjectURL(file.file),\n        fileType: this.getFileType(file.type),\n      };\n    },\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/widget/components"},"metadata":{},"sourceType":"module"}