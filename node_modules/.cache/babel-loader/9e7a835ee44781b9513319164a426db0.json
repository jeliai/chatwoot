{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nexport default {\n  data: function data() {\n    return {\n      showSwitchButton: false\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    account: 'getCurrentAccount',\n    userAccounts: 'getUserAccounts'\n  })), {}, {\n    showShowCurrentAccountContext: function showShowCurrentAccountContext() {\n      return this.userAccounts.length > 1 && this.account.name;\n    }\n  }),\n  methods: {\n    setShowSwitch: function setShowSwitch() {\n      this.showSwitchButton = true;\n    },\n    resetShowSwitch: function resetShowSwitch() {\n      this.showSwitchButton = false;\n    }\n  }\n};","map":{"version":3,"sources":["AccountContext.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,SAAA,UAAA,QAAA,MAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AAAA,MAAA,gBAAA,EAAA;AAAA,KAAA;AACA,GAHA;AAIA,EAAA,QAAA,kCACA,UAAA,CAAA;AACA,IAAA,OAAA,EAAA,mBADA;AAEA,IAAA,YAAA,EAAA;AAFA,GAAA,CADA;AAKA,IAAA,6BALA,2CAKA;AACA,aAAA,KAAA,YAAA,CAAA,MAAA,GAAA,CAAA,IAAA,KAAA,OAAA,CAAA,IAAA;AACA;AAPA,IAJA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AACA,WAAA,gBAAA,GAAA,IAAA;AACA,KAHA;AAIA,IAAA,eAJA,6BAIA;AACA,WAAA,gBAAA,GAAA,KAAA;AACA;AANA;AAbA,CAAA","sourcesContent":["<template>\n  <div\n    v-if=\"showShowCurrentAccountContext\"\n    class=\"account-context--group\"\n    @mouseover=\"setShowSwitch\"\n    @mouseleave=\"resetShowSwitch\"\n  >\n    {{ $t('SIDEBAR.CURRENTLY_VIEWING_ACCOUNT') }}\n    <p class=\"account-context--name text-ellipsis\">\n      {{ account.name }}\n    </p>\n    <transition name=\"fade\">\n      <div v-if=\"showSwitchButton\" class=\"account-context--switch-group\">\n        <woot-button\n          variant=\"clear\"\n          size=\"tiny\"\n          icon=\"arrow-swap\"\n          class=\"switch-button\"\n          @click=\"$emit('toggle-accounts')\"\n        >\n          {{ $t('SIDEBAR.SWITCH') }}\n        </woot-button>\n      </div>\n    </transition>\n  </div>\n</template>\n<script>\nimport { mapGetters } from 'vuex';\nexport default {\n  data() {\n    return { showSwitchButton: false };\n  },\n  computed: {\n    ...mapGetters({\n      account: 'getCurrentAccount',\n      userAccounts: 'getUserAccounts',\n    }),\n    showShowCurrentAccountContext() {\n      return this.userAccounts.length > 1 && this.account.name;\n    },\n  },\n  methods: {\n    setShowSwitch() {\n      this.showSwitchButton = true;\n    },\n    resetShowSwitch() {\n      this.showSwitchButton = false;\n    },\n  },\n};\n</script>\n<style scoped lang=\"scss\">\n.account-context--group {\n  border-radius: var(--border-radius-normal);\n  border: 1px solid var(--color-border);\n  font-size: var(--font-size-mini);\n  padding: var(--space-small);\n  margin: var(--space-small) var(--space-small) 0 var(--space-small);\n  position: relative;\n\n  &:hover {\n    background: var(--b-100);\n  }\n\n  .account-context--name {\n    font-weight: var(--font-weight-medium);\n    margin-bottom: 0;\n  }\n}\n\n.switch-button {\n  margin-right: var(--space-small);\n}\n\n.account-context--switch-group {\n  --overlay-shadow: linear-gradient(\n    to right,\n    rgba(255, 255, 255, 0) 0%,\n    rgba(255, 255, 255, 1) 50%\n  );\n\n  align-items: center;\n  background-image: var(--overlay-shadow);\n  border-top-left-radius: 0;\n  border-top-right-radius: var(--border-radius-normal);\n  border-bottom-left-radius: 0;\n  border-bottom-right-radius: var(--border-radius-normal);\n  display: flex;\n  height: 100%;\n  justify-content: flex-end;\n  opacity: 1;\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 100%;\n}\n\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 300ms ease;\n}\n\n.fade-enter,\n.fade-leave-to {\n  opacity: 0;\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/components/layout/sidebarComponents"},"metadata":{},"sourceType":"module"}