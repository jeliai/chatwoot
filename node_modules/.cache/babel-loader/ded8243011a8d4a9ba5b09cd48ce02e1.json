{"ast":null,"code":"import \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { required, minLength, email } from 'vuelidate/lib/validators';\nimport Auth from '../../../../api/auth';\nimport { mapGetters } from 'vuex';\nimport globalConfigMixin from 'shared/mixins/globalConfigMixin';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport { DEFAULT_REDIRECT_URL } from '../../../../constants';\nimport VueHcaptcha from '@hcaptcha/vue-hcaptcha';\nimport AuthInput from '../AuthInput.vue';\nimport AuthSubmitButton from '../AuthSubmitButton.vue';\nimport { isValidPassword } from 'shared/helpers/Validators';\n\nvar CompanyEmailValidator = require('company-email-validator');\n\nexport default {\n  components: {\n    AuthInput: AuthInput,\n    AuthSubmitButton: AuthSubmitButton,\n    VueHcaptcha: VueHcaptcha\n  },\n  mixins: [globalConfigMixin, alertMixin],\n  data: function data() {\n    return {\n      credentials: {\n        accountName: '',\n        fullName: '',\n        email: '',\n        password: '',\n        hCaptchaClientResponse: ''\n      },\n      didCaptchaReset: false,\n      isSignupInProgress: false,\n      error: ''\n    };\n  },\n  validations: {\n    credentials: {\n      accountName: {\n        required: required,\n        minLength: minLength(2)\n      },\n      fullName: {\n        required: required,\n        minLength: minLength(2)\n      },\n      email: {\n        required: required,\n        email: email,\n        businessEmailValidator: function businessEmailValidator(value) {\n          return CompanyEmailValidator.isCompanyEmail(value);\n        }\n      },\n      password: {\n        required: required,\n        isValidPassword: isValidPassword,\n        minLength: minLength(6)\n      }\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    globalConfig: 'globalConfig/get'\n  })), {}, {\n    termsLink: function termsLink() {\n      return this.$t('REGISTER.TERMS_ACCEPT').replace('https://www.chatwoot.com/terms', this.globalConfig.termsURL).replace('https://www.chatwoot.com/privacy-policy', this.globalConfig.privacyURL);\n    },\n    hasAValidCaptcha: function hasAValidCaptcha() {\n      if (this.globalConfig.hCaptchaSiteKey) {\n        return !!this.credentials.hCaptchaClientResponse;\n      }\n\n      return true;\n    },\n    passwordErrorText: function passwordErrorText() {\n      var password = this.$v.credentials.password;\n\n      if (!password.$error) {\n        return '';\n      }\n\n      if (!password.minLength) {\n        return this.$t('REGISTER.PASSWORD.ERROR');\n      }\n\n      if (!password.isValidPassword) {\n        return this.$t('REGISTER.PASSWORD.IS_INVALID_PASSWORD');\n      }\n\n      return '';\n    }\n  }),\n  methods: {\n    submit: function submit() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var response, errorMessage;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.$v.$touch();\n\n                if (!_this.$v.$invalid) {\n                  _context.next = 4;\n                  break;\n                }\n\n                _this.resetCaptcha();\n\n                return _context.abrupt(\"return\");\n\n              case 4:\n                _this.isSignupInProgress = true;\n                _context.prev = 5;\n                _context.next = 8;\n                return Auth.register(_this.credentials);\n\n              case 8:\n                response = _context.sent;\n\n                if (response.status === 200) {\n                  window.location = DEFAULT_REDIRECT_URL;\n                }\n\n                _context.next = 17;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](5);\n                errorMessage = _this.$t('REGISTER.API.ERROR_MESSAGE');\n\n                if (_context.t0.response && _context.t0.response.data.message) {\n                  _this.resetCaptcha();\n\n                  errorMessage = _context.t0.response.data.message;\n                }\n\n                _this.showAlert(errorMessage);\n\n              case 17:\n                _context.prev = 17;\n                _this.isSignupInProgress = false;\n                return _context.finish(17);\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[5, 12, 17, 20]]);\n      }))();\n    },\n    onRecaptchaVerified: function onRecaptchaVerified(token) {\n      this.credentials.hCaptchaClientResponse = token;\n      this.didCaptchaReset = false;\n    },\n    resetCaptcha: function resetCaptcha() {\n      if (!this.globalConfig.hCaptchaSiteKey) {\n        return;\n      }\n\n      this.$refs.hCaptcha.reset();\n      this.credentials.hCaptchaClientResponse = '';\n      this.didCaptchaReset = true;\n    }\n  }\n};","map":{"version":3,"sources":["Form.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <form @submit.prevent=\"submit\">\n    <div class=\"input-wrap\">\n      <auth-input\n        v-model=\"credentials.fullName\"\n        :class=\"{ error: $v.credentials.fullName.$error }\"\n        :label=\"$t('REGISTER.FULL_NAME.LABEL')\"\n        icon-name=\"person\"\n        :placeholder=\"$t('REGISTER.FULL_NAME.PLACEHOLDER')\"\n        :error=\"\n          $v.credentials.fullName.$error ? $t('REGISTER.FULL_NAME.ERROR') : ''\n        \"\n        @blur=\"$v.credentials.fullName.$touch\"\n      />\n      <auth-input\n        v-model.trim=\"credentials.email\"\n        type=\"email\"\n        :class=\"{ error: $v.credentials.email.$error }\"\n        icon-name=\"mail\"\n        :label=\"$t('REGISTER.EMAIL.LABEL')\"\n        :placeholder=\"$t('REGISTER.EMAIL.PLACEHOLDER')\"\n        :error=\"$v.credentials.email.$error ? $t('REGISTER.EMAIL.ERROR') : ''\"\n        @blur=\"$v.credentials.email.$touch\"\n      />\n      <auth-input\n        v-model=\"credentials.accountName\"\n        :class=\"{ error: $v.credentials.accountName.$error }\"\n        icon-name=\"building-bank\"\n        :label=\"$t('REGISTER.COMPANY_NAME.LABEL')\"\n        :placeholder=\"$t('REGISTER.COMPANY_NAME.PLACEHOLDER')\"\n        :error=\"\n          $v.credentials.accountName.$error\n            ? $t('REGISTER.COMPANY_NAME.ERROR')\n            : ''\n        \"\n        @blur=\"$v.credentials.accountName.$touch\"\n      />\n      <auth-input\n        v-model.trim=\"credentials.password\"\n        type=\"password\"\n        :class=\"{ error: $v.credentials.password.$error }\"\n        icon-name=\"lock-closed\"\n        :label=\"$t('LOGIN.PASSWORD.LABEL')\"\n        :placeholder=\"$t('SET_NEW_PASSWORD.PASSWORD.PLACEHOLDER')\"\n        :error=\"passwordErrorText\"\n        @blur=\"$v.credentials.password.$touch\"\n      />\n    </div>\n    <div v-if=\"globalConfig.hCaptchaSiteKey\" class=\"h-captcha--box\">\n      <vue-hcaptcha\n        ref=\"hCaptcha\"\n        :class=\"{ error: !hasAValidCaptcha && didCaptchaReset }\"\n        :sitekey=\"globalConfig.hCaptchaSiteKey\"\n        @verify=\"onRecaptchaVerified\"\n      />\n      <span v-if=\"!hasAValidCaptcha && didCaptchaReset\" class=\"captcha-error\">\n        {{ $t('SET_NEW_PASSWORD.CAPTCHA.ERROR') }}\n      </span>\n    </div>\n    <auth-submit-button\n      :label=\"$t('REGISTER.SUBMIT')\"\n      :is-disabled=\"isSignupInProgress || !hasAValidCaptcha\"\n      :is-loading=\"isSignupInProgress\"\n      icon=\"arrow-chevron-right\"\n    />\n    <p v-dompurify-html=\"termsLink\" class=\"accept--terms\" />\n  </form>\n</template>\n\n<script>\nimport { required, minLength, email } from 'vuelidate/lib/validators';\nimport Auth from '../../../../api/auth';\nimport { mapGetters } from 'vuex';\nimport globalConfigMixin from 'shared/mixins/globalConfigMixin';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport { DEFAULT_REDIRECT_URL } from '../../../../constants';\nimport VueHcaptcha from '@hcaptcha/vue-hcaptcha';\nimport AuthInput from '../AuthInput.vue';\nimport AuthSubmitButton from '../AuthSubmitButton.vue';\nimport { isValidPassword } from 'shared/helpers/Validators';\nvar CompanyEmailValidator = require('company-email-validator');\n\nexport default {\n  components: {\n    AuthInput,\n    AuthSubmitButton,\n    VueHcaptcha,\n  },\n  mixins: [globalConfigMixin, alertMixin],\n  data() {\n    return {\n      credentials: {\n        accountName: '',\n        fullName: '',\n        email: '',\n        password: '',\n        hCaptchaClientResponse: '',\n      },\n      didCaptchaReset: false,\n      isSignupInProgress: false,\n      error: '',\n    };\n  },\n  validations: {\n    credentials: {\n      accountName: {\n        required,\n        minLength: minLength(2),\n      },\n      fullName: {\n        required,\n        minLength: minLength(2),\n      },\n      email: {\n        required,\n        email,\n        businessEmailValidator(value) {\n          return CompanyEmailValidator.isCompanyEmail(value);\n        },\n      },\n      password: {\n        required,\n        isValidPassword,\n        minLength: minLength(6),\n      },\n    },\n  },\n  computed: {\n    ...mapGetters({ globalConfig: 'globalConfig/get' }),\n    termsLink() {\n      return this.$t('REGISTER.TERMS_ACCEPT')\n        .replace('https://www.chatwoot.com/terms', this.globalConfig.termsURL)\n        .replace(\n          'https://www.chatwoot.com/privacy-policy',\n          this.globalConfig.privacyURL\n        );\n    },\n    hasAValidCaptcha() {\n      if (this.globalConfig.hCaptchaSiteKey) {\n        return !!this.credentials.hCaptchaClientResponse;\n      }\n      return true;\n    },\n    passwordErrorText() {\n      const { password } = this.$v.credentials;\n      if (!password.$error) {\n        return '';\n      }\n      if (!password.minLength) {\n        return this.$t('REGISTER.PASSWORD.ERROR');\n      }\n      if (!password.isValidPassword) {\n        return this.$t('REGISTER.PASSWORD.IS_INVALID_PASSWORD');\n      }\n      return '';\n    },\n  },\n  methods: {\n    async submit() {\n      this.$v.$touch();\n      if (this.$v.$invalid) {\n        this.resetCaptcha();\n        return;\n      }\n      this.isSignupInProgress = true;\n      try {\n        const response = await Auth.register(this.credentials);\n        if (response.status === 200) {\n          window.location = DEFAULT_REDIRECT_URL;\n        }\n      } catch (error) {\n        let errorMessage = this.$t('REGISTER.API.ERROR_MESSAGE');\n        if (error.response && error.response.data.message) {\n          this.resetCaptcha();\n          errorMessage = error.response.data.message;\n        }\n        this.showAlert(errorMessage);\n      } finally {\n        this.isSignupInProgress = false;\n      }\n    },\n    onRecaptchaVerified(token) {\n      this.credentials.hCaptchaClientResponse = token;\n      this.didCaptchaReset = false;\n    },\n    resetCaptcha() {\n      if (!this.globalConfig.hCaptchaSiteKey) {\n        return;\n      }\n      this.$refs.hCaptcha.reset();\n      this.credentials.hCaptchaClientResponse = '';\n      this.didCaptchaReset = true;\n    },\n  },\n};\n</script>\n<style scoped lang=\"scss\">\n.h-captcha--box {\n  margin-bottom: var(--space-small);\n\n  .captcha-error {\n    color: var(--r-400);\n    font-size: var(--font-size-small);\n  }\n\n  &::v-deep .error {\n    iframe {\n      border: 1px solid var(--r-500);\n      border-radius: var(--border-radius-normal);\n    }\n  }\n}\n\n.accept--terms {\n  margin: var(--space-normal) 0 var(--space-smaller) 0;\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/auth/components/Signup"},"metadata":{},"sourceType":"module"}