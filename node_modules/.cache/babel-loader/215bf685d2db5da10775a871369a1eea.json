{"ast":null,"code":"import \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.promise.js\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport { shouldBeUrl } from 'shared/helpers/Validators';\nimport configMixin from 'shared/mixins/configMixin';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport SettingIntroBanner from 'dashboard/components/widgets/SettingIntroBanner';\nimport SettingsSection from '../../../../components/SettingsSection';\nimport inboxMixin from 'shared/mixins/inboxMixin';\nimport FacebookReauthorize from './facebook/Reauthorize';\nimport PreChatFormSettings from './PreChatForm/Settings';\nimport WeeklyAvailability from './components/WeeklyAvailability';\nimport GreetingsEditor from 'shared/components/GreetingsEditor';\nimport ConfigurationPage from './settingsPage/ConfigurationPage';\nimport CollaboratorsPage from './settingsPage/CollaboratorsPage';\nimport WidgetBuilder from './WidgetBuilder';\nimport BotConfiguration from './components/BotConfiguration';\nimport { FEATURE_FLAGS } from '../../../../featureFlags';\nexport default {\n  components: {\n    BotConfiguration: BotConfiguration,\n    CollaboratorsPage: CollaboratorsPage,\n    ConfigurationPage: ConfigurationPage,\n    FacebookReauthorize: FacebookReauthorize,\n    GreetingsEditor: GreetingsEditor,\n    PreChatFormSettings: PreChatFormSettings,\n    SettingIntroBanner: SettingIntroBanner,\n    SettingsSection: SettingsSection,\n    WeeklyAvailability: WeeklyAvailability,\n    WidgetBuilder: WidgetBuilder\n  },\n  mixins: [alertMixin, configMixin, inboxMixin],\n  data: function data() {\n    return {\n      avatarFile: null,\n      avatarUrl: '',\n      greetingEnabled: true,\n      tweetsEnabled: true,\n      greetingMessage: '',\n      emailCollectEnabled: false,\n      csatSurveyEnabled: false,\n      locktoSingleConversation: false,\n      allowMessagesAfterResolved: true,\n      continuityViaEmail: true,\n      selectedInboxName: '',\n      channelWebsiteUrl: '',\n      webhookUrl: '',\n      channelWelcomeTitle: '',\n      channelWelcomeTagline: '',\n      selectedFeatureFlags: [],\n      replyTime: '',\n      selectedTabIndex: 0\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    accountId: 'getCurrentAccountId',\n    isFeatureEnabledonAccount: 'accounts/isFeatureEnabledonAccount',\n    uiFlags: 'inboxes/getUIFlags'\n  })), {}, {\n    selectedTabKey: function selectedTabKey() {\n      var _this$tabs$this$selec;\n\n      return (_this$tabs$this$selec = this.tabs[this.selectedTabIndex]) === null || _this$tabs$this$selec === void 0 ? void 0 : _this$tabs$this$selec.key;\n    },\n    whatsAppAPIProviderName: function whatsAppAPIProviderName() {\n      if (this.isAWhatsAppCloudChannel) {\n        return this.$t('INBOX_MGMT.ADD.WHATSAPP.PROVIDERS.WHATSAPP_CLOUD');\n      }\n\n      if (this.is360DialogWhatsAppChannel) {\n        return this.$t('INBOX_MGMT.ADD.WHATSAPP.PROVIDERS.360_DIALOG');\n      }\n\n      if (this.isATwilioWhatsAppChannel) {\n        return this.$t('INBOX_MGMT.ADD.WHATSAPP.PROVIDERS.TWILIO');\n      }\n\n      return '';\n    },\n    tabs: function tabs() {\n      var visibleToAllChannelTabs = [{\n        key: 'inbox_settings',\n        name: this.$t('INBOX_MGMT.TABS.SETTINGS')\n      }, {\n        key: 'collaborators',\n        name: this.$t('INBOX_MGMT.TABS.COLLABORATORS')\n      }, {\n        key: 'businesshours',\n        name: this.$t('INBOX_MGMT.TABS.BUSINESS_HOURS')\n      }];\n\n      if (this.isAWebWidgetInbox) {\n        visibleToAllChannelTabs = [].concat(_toConsumableArray(visibleToAllChannelTabs), [{\n          key: 'preChatForm',\n          name: this.$t('INBOX_MGMT.TABS.PRE_CHAT_FORM')\n        }, {\n          key: 'widgetBuilder',\n          name: this.$t('INBOX_MGMT.TABS.WIDGET_BUILDER')\n        }]);\n      }\n\n      if (this.isATwilioChannel || this.isALineChannel || this.isAPIInbox || this.isAnEmailChannel || this.isAWhatsAppChannel || this.isAWebWidgetInbox) {\n        visibleToAllChannelTabs = [].concat(_toConsumableArray(visibleToAllChannelTabs), [{\n          key: 'configuration',\n          name: this.$t('INBOX_MGMT.TABS.CONFIGURATION')\n        }]);\n      }\n\n      if (this.isFeatureEnabledonAccount(this.accountId, FEATURE_FLAGS.AGENT_BOTS) && !(this.isAnEmailChannel || this.isATwitterInbox)) {\n        visibleToAllChannelTabs = [].concat(_toConsumableArray(visibleToAllChannelTabs), [{\n          key: 'botConfiguration',\n          name: this.$t('INBOX_MGMT.TABS.BOT_CONFIGURATION')\n        }]);\n      }\n\n      return visibleToAllChannelTabs;\n    },\n    currentInboxId: function currentInboxId() {\n      return this.$route.params.inboxId;\n    },\n    inbox: function inbox() {\n      return this.$store.getters['inboxes/getInbox'](this.currentInboxId);\n    },\n    inboxName: function inboxName() {\n      if (this.isATwilioSMSChannel || this.isATwilioWhatsAppChannel) {\n        return \"\".concat(this.inbox.name, \" (\").concat(this.inbox.messaging_service_sid || this.inbox.phone_number, \")\");\n      }\n\n      if (this.isAWhatsAppChannel) {\n        return \"\".concat(this.inbox.name, \" (\").concat(this.inbox.phone_number, \")\");\n      }\n\n      if (this.isAnEmailChannel) {\n        return \"\".concat(this.inbox.name, \" (\").concat(this.inbox.email, \")\");\n      }\n\n      return this.inbox.name;\n    },\n    canLocktoSingleConversation: function canLocktoSingleConversation() {\n      return this.isASmsInbox || this.isAWhatsAppChannel;\n    },\n    inboxNameLabel: function inboxNameLabel() {\n      if (this.isAWebWidgetInbox) {\n        return this.$t('INBOX_MGMT.ADD.WEBSITE_NAME.LABEL');\n      }\n\n      return this.$t('INBOX_MGMT.ADD.CHANNEL_NAME.LABEL');\n    },\n    inboxNamePlaceHolder: function inboxNamePlaceHolder() {\n      if (this.isAWebWidgetInbox) {\n        return this.$t('INBOX_MGMT.ADD.WEBSITE_NAME.PLACEHOLDER');\n      }\n\n      return this.$t('INBOX_MGMT.ADD.CHANNEL_NAME.PLACEHOLDER');\n    },\n    textAreaChannels: function textAreaChannels() {\n      if (this.isATwilioChannel || this.isATwitterInbox || this.isAFacebookInbox) return true;\n      return false;\n    }\n  }),\n  watch: {\n    $route: function $route(to) {\n      if (to.name === 'settings_inbox_show') {\n        this.fetchInboxSettings();\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.fetchInboxSettings();\n  },\n  methods: {\n    handleFeatureFlag: function handleFeatureFlag(e) {\n      this.selectedFeatureFlags = this.toggleInput(this.selectedFeatureFlags, e.target.value);\n    },\n    toggleInput: function toggleInput(selected, current) {\n      if (selected.includes(current)) {\n        var newSelectedFlags = selected.filter(function (flag) {\n          return flag !== current;\n        });\n        return newSelectedFlags;\n      }\n\n      return [].concat(_toConsumableArray(selected), [current]);\n    },\n    onTabChange: function onTabChange(selectedTabIndex) {\n      this.selectedTabIndex = selectedTabIndex;\n    },\n    fetchInboxSettings: function fetchInboxSettings() {\n      var _this = this;\n\n      this.selectedTabIndex = 0;\n      this.selectedAgents = [];\n      this.$store.dispatch('agents/get');\n      this.$store.dispatch('teams/get');\n      this.$store.dispatch('labels/get');\n      this.$store.dispatch('inboxes/get').then(function () {\n        _this.avatarUrl = _this.inbox.avatar_url;\n        _this.selectedInboxName = _this.inbox.name;\n        _this.webhookUrl = _this.inbox.webhook_url;\n        _this.greetingEnabled = _this.inbox.greeting_enabled || false;\n        _this.tweetsEnabled = _this.inbox.tweets_enabled || false;\n        _this.greetingMessage = _this.inbox.greeting_message || '';\n        _this.emailCollectEnabled = _this.inbox.enable_email_collect;\n        _this.csatSurveyEnabled = _this.inbox.csat_survey_enabled;\n        _this.allowMessagesAfterResolved = _this.inbox.allow_messages_after_resolved;\n        _this.continuityViaEmail = _this.inbox.continuity_via_email;\n        _this.channelWebsiteUrl = _this.inbox.website_url;\n        _this.channelWelcomeTitle = _this.inbox.welcome_title;\n        _this.channelWelcomeTagline = _this.inbox.welcome_tagline;\n        _this.selectedFeatureFlags = _this.inbox.selected_feature_flags || [];\n        _this.replyTime = _this.inbox.reply_time;\n        _this.locktoSingleConversation = _this.inbox.lock_to_single_conversation;\n      });\n    },\n    updateInbox: function updateInbox() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var payload;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                payload = {\n                  id: _this2.currentInboxId,\n                  name: _this2.selectedInboxName,\n                  enable_email_collect: _this2.emailCollectEnabled,\n                  csat_survey_enabled: _this2.csatSurveyEnabled,\n                  allow_messages_after_resolved: _this2.allowMessagesAfterResolved,\n                  greeting_enabled: _this2.greetingEnabled,\n                  greeting_message: _this2.greetingMessage || '',\n                  lock_to_single_conversation: _this2.locktoSingleConversation,\n                  channel: {\n                    widget_color: _this2.inbox.widget_color,\n                    website_url: _this2.channelWebsiteUrl,\n                    webhook_url: _this2.webhookUrl,\n                    welcome_title: _this2.channelWelcomeTitle || '',\n                    welcome_tagline: _this2.channelWelcomeTagline || '',\n                    selectedFeatureFlags: _this2.selectedFeatureFlags,\n                    reply_time: _this2.replyTime || 'in_a_few_minutes',\n                    tweets_enabled: _this2.tweetsEnabled,\n                    continuity_via_email: _this2.continuityViaEmail\n                  }\n                };\n\n                if (_this2.avatarFile) {\n                  payload.avatar = _this2.avatarFile;\n                }\n\n                _context.next = 5;\n                return _this2.$store.dispatch('inboxes/updateInbox', payload);\n\n              case 5:\n                _this2.showAlert(_this2.$t('INBOX_MGMT.EDIT.API.SUCCESS_MESSAGE'));\n\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n\n                _this2.showAlert(_context.t0.message || _this2.$t('INBOX_MGMT.EDIT.API.ERROR_MESSAGE'));\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8]]);\n      }))();\n    },\n    handleImageUpload: function handleImageUpload(_ref) {\n      var file = _ref.file,\n          url = _ref.url;\n      this.avatarFile = file;\n      this.avatarUrl = url;\n    },\n    handleAvatarDelete: function handleAvatarDelete() {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return _this3.$store.dispatch('inboxes/deleteInboxAvatar', _this3.currentInboxId);\n\n              case 3:\n                _this3.avatarFile = null;\n                _this3.avatarUrl = '';\n\n                _this3.showAlert(_this3.$t('INBOX_MGMT.DELETE.API.AVATAR_SUCCESS_MESSAGE'));\n\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](0);\n\n                _this3.showAlert(_context2.t0.message ? _context2.t0.message : _this3.$t('INBOX_MGMT.DELETE.API.AVATAR_ERROR_MESSAGE'));\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 8]]);\n      }))();\n    }\n  },\n  validations: {\n    webhookUrl: {\n      shouldBeUrl: shouldBeUrl\n    },\n    selectedInboxName: {}\n  }\n};","map":{"version":3,"sources":["Settings.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"settings columns container\">\n    <setting-intro-banner\n      :header-image=\"inbox.avatarUrl\"\n      :header-title=\"inboxName\"\n    >\n      <woot-tabs\n        :index=\"selectedTabIndex\"\n        :border=\"false\"\n        @change=\"onTabChange\"\n      >\n        <woot-tabs-item\n          v-for=\"tab in tabs\"\n          :key=\"tab.key\"\n          :name=\"tab.name\"\n          :show-badge=\"false\"\n        />\n      </woot-tabs>\n    </setting-intro-banner>\n\n    <div v-if=\"selectedTabKey === 'inbox_settings'\" class=\"settings--content\">\n      <settings-section\n        :title=\"$t('INBOX_MGMT.SETTINGS_POPUP.INBOX_UPDATE_TITLE')\"\n        :sub-title=\"$t('INBOX_MGMT.SETTINGS_POPUP.INBOX_UPDATE_SUB_TEXT')\"\n      >\n        <woot-avatar-uploader\n          :label=\"$t('INBOX_MGMT.ADD.WEBSITE_CHANNEL.CHANNEL_AVATAR.LABEL')\"\n          :src=\"avatarUrl\"\n          class=\"settings-item\"\n          delete-avatar\n          @change=\"handleImageUpload\"\n          @onAvatarDelete=\"handleAvatarDelete\"\n        />\n        <woot-input\n          v-model.trim=\"selectedInboxName\"\n          class=\"medium-9 columns settings-item\"\n          :class=\"{ error: $v.selectedInboxName.$error }\"\n          :label=\"inboxNameLabel\"\n          :placeholder=\"inboxNamePlaceHolder\"\n          :error=\"\n            $v.selectedInboxName.$error\n              ? $t('INBOX_MGMT.ADD.CHANNEL_NAME.ERROR')\n              : ''\n          \"\n          @blur=\"$v.selectedInboxName.$touch\"\n        />\n        <label\n          v-if=\"isATwitterInbox\"\n          for=\"toggle-business-hours\"\n          class=\"toggle-input-wrap\"\n        >\n          <input\n            v-model=\"tweetsEnabled\"\n            type=\"checkbox\"\n            name=\"toggle-business-hours\"\n          />\n          {{ $t('INBOX_MGMT.ADD.TWITTER.TWEETS.ENABLE') }}\n        </label>\n        <woot-input\n          v-if=\"isAPIInbox\"\n          v-model.trim=\"webhookUrl\"\n          class=\"medium-9 columns settings-item\"\n          :class=\"{ error: $v.webhookUrl.$error }\"\n          :label=\"\n            $t('INBOX_MGMT.ADD.WEBSITE_CHANNEL.CHANNEL_WEBHOOK_URL.LABEL')\n          \"\n          :placeholder=\"\n            $t('INBOX_MGMT.ADD.WEBSITE_CHANNEL.CHANNEL_WEBHOOK_URL.PLACEHOLDER')\n          \"\n          :error=\"\n            $v.webhookUrl.$error\n              ? $t('INBOX_MGMT.ADD.WEBSITE_CHANNEL.CHANNEL_WEBHOOK_URL.ERROR')\n              : ''\n          \"\n          @blur=\"$v.webhookUrl.$touch\"\n        />\n        <woot-input\n          v-if=\"isAWebWidgetInbox\"\n          v-model.trim=\"channelWebsiteUrl\"\n          class=\"medium-9 columns settings-item\"\n          :label=\"$t('INBOX_MGMT.ADD.WEBSITE_CHANNEL.CHANNEL_DOMAIN.LABEL')\"\n          :placeholder=\"\n            $t('INBOX_MGMT.ADD.WEBSITE_CHANNEL.CHANNEL_DOMAIN.PLACEHOLDER')\n          \"\n        />\n        <woot-input\n          v-if=\"isAWebWidgetInbox\"\n          v-model.trim=\"channelWelcomeTitle\"\n          class=\"medium-9 columns settings-item\"\n          :label=\"\n            $t('INBOX_MGMT.ADD.WEBSITE_CHANNEL.CHANNEL_WELCOME_TITLE.LABEL')\n          \"\n          :placeholder=\"\n            $t(\n              'INBOX_MGMT.ADD.WEBSITE_CHANNEL.CHANNEL_WELCOME_TITLE.PLACEHOLDER'\n            )\n          \"\n        />\n\n        <woot-input\n          v-if=\"isAWebWidgetInbox\"\n          v-model.trim=\"channelWelcomeTagline\"\n          class=\"medium-9 columns settings-item\"\n          :label=\"\n            $t('INBOX_MGMT.ADD.WEBSITE_CHANNEL.CHANNEL_WELCOME_TAGLINE.LABEL')\n          \"\n          :placeholder=\"\n            $t(\n              'INBOX_MGMT.ADD.WEBSITE_CHANNEL.CHANNEL_WELCOME_TAGLINE.PLACEHOLDER'\n            )\n          \"\n        />\n\n        <label v-if=\"isAWebWidgetInbox\" class=\"medium-9 columns settings-item\">\n          {{ $t('INBOX_MGMT.ADD.WEBSITE_CHANNEL.WIDGET_COLOR.LABEL') }}\n          <woot-color-picker v-model=\"inbox.widget_color\" />\n        </label>\n\n        <label v-if=\"isAWhatsAppChannel\" class=\"medium-9 columns settings-item\">\n          {{ $t('INBOX_MGMT.ADD.WHATSAPP.PROVIDERS.LABEL') }}\n          <input v-model=\"whatsAppAPIProviderName\" type=\"text\" disabled />\n        </label>\n\n        <label class=\"medium-9 columns settings-item\">\n          {{\n            $t('INBOX_MGMT.ADD.WEBSITE_CHANNEL.CHANNEL_GREETING_TOGGLE.LABEL')\n          }}\n          <select v-model=\"greetingEnabled\">\n            <option :value=\"true\">\n              {{\n                $t(\n                  'INBOX_MGMT.ADD.WEBSITE_CHANNEL.CHANNEL_GREETING_TOGGLE.ENABLED'\n                )\n              }}\n            </option>\n            <option :value=\"false\">\n              {{\n                $t(\n                  'INBOX_MGMT.ADD.WEBSITE_CHANNEL.CHANNEL_GREETING_TOGGLE.DISABLED'\n                )\n              }}\n            </option>\n          </select>\n          <p class=\"help-text\">\n            {{\n              $t(\n                'INBOX_MGMT.ADD.WEBSITE_CHANNEL.CHANNEL_GREETING_TOGGLE.HELP_TEXT'\n              )\n            }}\n          </p>\n        </label>\n        <div v-if=\"greetingEnabled\" class=\"settings-item\">\n          <greetings-editor\n            v-model.trim=\"greetingMessage\"\n            :label=\"\n              $t(\n                'INBOX_MGMT.ADD.WEBSITE_CHANNEL.CHANNEL_GREETING_MESSAGE.LABEL'\n              )\n            \"\n            :placeholder=\"\n              $t(\n                'INBOX_MGMT.ADD.WEBSITE_CHANNEL.CHANNEL_GREETING_MESSAGE.PLACEHOLDER'\n              )\n            \"\n            :richtext=\"!textAreaChannels\"\n          />\n        </div>\n        <label v-if=\"isAWebWidgetInbox\" class=\"medium-9 columns settings-item\">\n          {{ $t('INBOX_MGMT.ADD.WEBSITE_CHANNEL.REPLY_TIME.TITLE') }}\n          <select v-model=\"replyTime\">\n            <option key=\"in_a_few_minutes\" value=\"in_a_few_minutes\">\n              {{\n                $t('INBOX_MGMT.ADD.WEBSITE_CHANNEL.REPLY_TIME.IN_A_FEW_MINUTES')\n              }}\n            </option>\n            <option key=\"in_a_few_hours\" value=\"in_a_few_hours\">\n              {{\n                $t('INBOX_MGMT.ADD.WEBSITE_CHANNEL.REPLY_TIME.IN_A_FEW_HOURS')\n              }}\n            </option>\n            <option key=\"in_a_day\" value=\"in_a_day\">\n              {{ $t('INBOX_MGMT.ADD.WEBSITE_CHANNEL.REPLY_TIME.IN_A_DAY') }}\n            </option>\n          </select>\n\n          <p class=\"help-text\">\n            {{ $t('INBOX_MGMT.ADD.WEBSITE_CHANNEL.REPLY_TIME.HELP_TEXT') }}\n          </p>\n        </label>\n\n        <label v-if=\"isAWebWidgetInbox\" class=\"medium-9 columns settings-item\">\n          {{ $t('INBOX_MGMT.SETTINGS_POPUP.ENABLE_EMAIL_COLLECT_BOX') }}\n          <select v-model=\"emailCollectEnabled\">\n            <option :value=\"true\">\n              {{ $t('INBOX_MGMT.EDIT.EMAIL_COLLECT_BOX.ENABLED') }}\n            </option>\n            <option :value=\"false\">\n              {{ $t('INBOX_MGMT.EDIT.EMAIL_COLLECT_BOX.DISABLED') }}\n            </option>\n          </select>\n          <p class=\"help-text\">\n            {{\n              $t('INBOX_MGMT.SETTINGS_POPUP.ENABLE_EMAIL_COLLECT_BOX_SUB_TEXT')\n            }}\n          </p>\n        </label>\n\n        <label class=\"medium-9 columns settings-item\">\n          {{ $t('INBOX_MGMT.SETTINGS_POPUP.ENABLE_CSAT') }}\n          <select v-model=\"csatSurveyEnabled\">\n            <option :value=\"true\">\n              {{ $t('INBOX_MGMT.EDIT.ENABLE_CSAT.ENABLED') }}\n            </option>\n            <option :value=\"false\">\n              {{ $t('INBOX_MGMT.EDIT.ENABLE_CSAT.DISABLED') }}\n            </option>\n          </select>\n          <p class=\"help-text\">\n            {{ $t('INBOX_MGMT.SETTINGS_POPUP.ENABLE_CSAT_SUB_TEXT') }}\n          </p>\n        </label>\n\n        <label v-if=\"isAWebWidgetInbox\" class=\"medium-9 columns settings-item\">\n          {{ $t('INBOX_MGMT.SETTINGS_POPUP.ALLOW_MESSAGES_AFTER_RESOLVED') }}\n          <select v-model=\"allowMessagesAfterResolved\">\n            <option :value=\"true\">\n              {{ $t('INBOX_MGMT.EDIT.ALLOW_MESSAGES_AFTER_RESOLVED.ENABLED') }}\n            </option>\n            <option :value=\"false\">\n              {{ $t('INBOX_MGMT.EDIT.ALLOW_MESSAGES_AFTER_RESOLVED.DISABLED') }}\n            </option>\n          </select>\n          <p class=\"help-text\">\n            {{\n              $t(\n                'INBOX_MGMT.SETTINGS_POPUP.ALLOW_MESSAGES_AFTER_RESOLVED_SUB_TEXT'\n              )\n            }}\n          </p>\n        </label>\n\n        <label v-if=\"isAWebWidgetInbox\" class=\"medium-9 columns settings-item\">\n          {{ $t('INBOX_MGMT.SETTINGS_POPUP.ENABLE_CONTINUITY_VIA_EMAIL') }}\n          <select v-model=\"continuityViaEmail\">\n            <option :value=\"true\">\n              {{ $t('INBOX_MGMT.EDIT.ENABLE_CONTINUITY_VIA_EMAIL.ENABLED') }}\n            </option>\n            <option :value=\"false\">\n              {{ $t('INBOX_MGMT.EDIT.ENABLE_CONTINUITY_VIA_EMAIL.DISABLED') }}\n            </option>\n          </select>\n          <p class=\"help-text\">\n            {{\n              $t(\n                'INBOX_MGMT.SETTINGS_POPUP.ENABLE_CONTINUITY_VIA_EMAIL_SUB_TEXT'\n              )\n            }}\n          </p>\n        </label>\n\n        <label\n          v-if=\"canLocktoSingleConversation\"\n          class=\"medium-9 columns settings-item\"\n        >\n          {{ $t('INBOX_MGMT.SETTINGS_POPUP.LOCK_TO_SINGLE_CONVERSATION') }}\n          <select v-model=\"locktoSingleConversation\">\n            <option :value=\"true\">\n              {{ $t('INBOX_MGMT.EDIT.LOCK_TO_SINGLE_CONVERSATION.ENABLED') }}\n            </option>\n            <option :value=\"false\">\n              {{ $t('INBOX_MGMT.EDIT.LOCK_TO_SINGLE_CONVERSATION.DISABLED') }}\n            </option>\n          </select>\n          <p class=\"help-text\">\n            {{\n              $t(\n                'INBOX_MGMT.SETTINGS_POPUP.LOCK_TO_SINGLE_CONVERSATION_SUB_TEXT'\n              )\n            }}\n          </p>\n        </label>\n\n        <label v-if=\"isAWebWidgetInbox\">\n          {{ $t('INBOX_MGMT.FEATURES.LABEL') }}\n        </label>\n        <div\n          v-if=\"isAWebWidgetInbox\"\n          class=\"widget--feature-flag settings-item\"\n        >\n          <input\n            v-model=\"selectedFeatureFlags\"\n            type=\"checkbox\"\n            value=\"attachments\"\n            @input=\"handleFeatureFlag\"\n          />\n          <label for=\"attachments\">\n            {{ $t('INBOX_MGMT.FEATURES.DISPLAY_FILE_PICKER') }}\n          </label>\n        </div>\n        <div v-if=\"isAWebWidgetInbox\" class=\"settings-item settings-item\">\n          <input\n            v-model=\"selectedFeatureFlags\"\n            type=\"checkbox\"\n            value=\"emoji_picker\"\n            @input=\"handleFeatureFlag\"\n          />\n          <label for=\"emoji_picker\">\n            {{ $t('INBOX_MGMT.FEATURES.DISPLAY_EMOJI_PICKER') }}\n          </label>\n        </div>\n        <div v-if=\"isAWebWidgetInbox\" class=\"settings-item settings-item\">\n          <input\n            v-model=\"selectedFeatureFlags\"\n            type=\"checkbox\"\n            value=\"end_conversation\"\n            @input=\"handleFeatureFlag\"\n          />\n          <label for=\"end_conversation\">\n            {{ $t('INBOX_MGMT.FEATURES.ALLOW_END_CONVERSATION') }}\n          </label>\n        </div>\n\n        <woot-submit-button\n          v-if=\"isAPIInbox\"\n          type=\"submit\"\n          :disabled=\"$v.webhookUrl.$invalid\"\n          :button-text=\"$t('INBOX_MGMT.SETTINGS_POPUP.UPDATE')\"\n          :loading=\"uiFlags.isUpdating\"\n          @click=\"updateInbox\"\n        />\n        <woot-submit-button\n          v-else\n          type=\"submit\"\n          :disabled=\"$v.$invalid\"\n          :button-text=\"$t('INBOX_MGMT.SETTINGS_POPUP.UPDATE')\"\n          :loading=\"uiFlags.isUpdating\"\n          @click=\"updateInbox\"\n        />\n      </settings-section>\n      <facebook-reauthorize v-if=\"isAFacebookInbox\" :inbox-id=\"inbox.id\" />\n    </div>\n\n    <div v-if=\"selectedTabKey === 'collaborators'\" class=\"settings--content\">\n      <collaborators-page :inbox=\"inbox\" />\n    </div>\n    <div v-if=\"selectedTabKey === 'configuration'\">\n      <configuration-page :inbox=\"inbox\" />\n    </div>\n    <div v-if=\"selectedTabKey === 'preChatForm'\">\n      <pre-chat-form-settings :inbox=\"inbox\" />\n    </div>\n    <div v-if=\"selectedTabKey === 'businesshours'\">\n      <weekly-availability :inbox=\"inbox\" />\n    </div>\n    <div v-if=\"selectedTabKey === 'widgetBuilder'\">\n      <widget-builder :inbox=\"inbox\" />\n    </div>\n    <div v-if=\"selectedTabKey === 'botConfiguration'\">\n      <bot-configuration :inbox=\"inbox\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport { shouldBeUrl } from 'shared/helpers/Validators';\nimport configMixin from 'shared/mixins/configMixin';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport SettingIntroBanner from 'dashboard/components/widgets/SettingIntroBanner';\nimport SettingsSection from '../../../../components/SettingsSection';\nimport inboxMixin from 'shared/mixins/inboxMixin';\nimport FacebookReauthorize from './facebook/Reauthorize';\nimport PreChatFormSettings from './PreChatForm/Settings';\nimport WeeklyAvailability from './components/WeeklyAvailability';\nimport GreetingsEditor from 'shared/components/GreetingsEditor';\nimport ConfigurationPage from './settingsPage/ConfigurationPage';\nimport CollaboratorsPage from './settingsPage/CollaboratorsPage';\nimport WidgetBuilder from './WidgetBuilder';\nimport BotConfiguration from './components/BotConfiguration';\nimport { FEATURE_FLAGS } from '../../../../featureFlags';\n\nexport default {\n  components: {\n    BotConfiguration,\n    CollaboratorsPage,\n    ConfigurationPage,\n    FacebookReauthorize,\n    GreetingsEditor,\n    PreChatFormSettings,\n    SettingIntroBanner,\n    SettingsSection,\n    WeeklyAvailability,\n    WidgetBuilder,\n  },\n  mixins: [alertMixin, configMixin, inboxMixin],\n  data() {\n    return {\n      avatarFile: null,\n      avatarUrl: '',\n      greetingEnabled: true,\n      tweetsEnabled: true,\n      greetingMessage: '',\n      emailCollectEnabled: false,\n      csatSurveyEnabled: false,\n      locktoSingleConversation: false,\n      allowMessagesAfterResolved: true,\n      continuityViaEmail: true,\n      selectedInboxName: '',\n      channelWebsiteUrl: '',\n      webhookUrl: '',\n      channelWelcomeTitle: '',\n      channelWelcomeTagline: '',\n      selectedFeatureFlags: [],\n      replyTime: '',\n      selectedTabIndex: 0,\n    };\n  },\n  computed: {\n    ...mapGetters({\n      accountId: 'getCurrentAccountId',\n      isFeatureEnabledonAccount: 'accounts/isFeatureEnabledonAccount',\n      uiFlags: 'inboxes/getUIFlags',\n    }),\n    selectedTabKey() {\n      return this.tabs[this.selectedTabIndex]?.key;\n    },\n    whatsAppAPIProviderName() {\n      if (this.isAWhatsAppCloudChannel) {\n        return this.$t('INBOX_MGMT.ADD.WHATSAPP.PROVIDERS.WHATSAPP_CLOUD');\n      }\n      if (this.is360DialogWhatsAppChannel) {\n        return this.$t('INBOX_MGMT.ADD.WHATSAPP.PROVIDERS.360_DIALOG');\n      }\n      if (this.isATwilioWhatsAppChannel) {\n        return this.$t('INBOX_MGMT.ADD.WHATSAPP.PROVIDERS.TWILIO');\n      }\n      return '';\n    },\n    tabs() {\n      let visibleToAllChannelTabs = [\n        {\n          key: 'inbox_settings',\n          name: this.$t('INBOX_MGMT.TABS.SETTINGS'),\n        },\n        {\n          key: 'collaborators',\n          name: this.$t('INBOX_MGMT.TABS.COLLABORATORS'),\n        },\n        {\n          key: 'businesshours',\n          name: this.$t('INBOX_MGMT.TABS.BUSINESS_HOURS'),\n        },\n      ];\n\n      if (this.isAWebWidgetInbox) {\n        visibleToAllChannelTabs = [\n          ...visibleToAllChannelTabs,\n          {\n            key: 'preChatForm',\n            name: this.$t('INBOX_MGMT.TABS.PRE_CHAT_FORM'),\n          },\n          {\n            key: 'widgetBuilder',\n            name: this.$t('INBOX_MGMT.TABS.WIDGET_BUILDER'),\n          },\n        ];\n      }\n\n      if (\n        this.isATwilioChannel ||\n        this.isALineChannel ||\n        this.isAPIInbox ||\n        this.isAnEmailChannel ||\n        this.isAWhatsAppChannel ||\n        this.isAWebWidgetInbox\n      ) {\n        visibleToAllChannelTabs = [\n          ...visibleToAllChannelTabs,\n          {\n            key: 'configuration',\n            name: this.$t('INBOX_MGMT.TABS.CONFIGURATION'),\n          },\n        ];\n      }\n\n      if (\n        this.isFeatureEnabledonAccount(\n          this.accountId,\n          FEATURE_FLAGS.AGENT_BOTS\n        ) &&\n        !(this.isAnEmailChannel || this.isATwitterInbox)\n      ) {\n        visibleToAllChannelTabs = [\n          ...visibleToAllChannelTabs,\n          {\n            key: 'botConfiguration',\n            name: this.$t('INBOX_MGMT.TABS.BOT_CONFIGURATION'),\n          },\n        ];\n      }\n      return visibleToAllChannelTabs;\n    },\n    currentInboxId() {\n      return this.$route.params.inboxId;\n    },\n    inbox() {\n      return this.$store.getters['inboxes/getInbox'](this.currentInboxId);\n    },\n    inboxName() {\n      if (this.isATwilioSMSChannel || this.isATwilioWhatsAppChannel) {\n        return `${this.inbox.name} (${this.inbox.messaging_service_sid ||\n          this.inbox.phone_number})`;\n      }\n      if (this.isAWhatsAppChannel) {\n        return `${this.inbox.name} (${this.inbox.phone_number})`;\n      }\n      if (this.isAnEmailChannel) {\n        return `${this.inbox.name} (${this.inbox.email})`;\n      }\n      return this.inbox.name;\n    },\n    canLocktoSingleConversation() {\n      return this.isASmsInbox || this.isAWhatsAppChannel;\n    },\n    inboxNameLabel() {\n      if (this.isAWebWidgetInbox) {\n        return this.$t('INBOX_MGMT.ADD.WEBSITE_NAME.LABEL');\n      }\n      return this.$t('INBOX_MGMT.ADD.CHANNEL_NAME.LABEL');\n    },\n    inboxNamePlaceHolder() {\n      if (this.isAWebWidgetInbox) {\n        return this.$t('INBOX_MGMT.ADD.WEBSITE_NAME.PLACEHOLDER');\n      }\n      return this.$t('INBOX_MGMT.ADD.CHANNEL_NAME.PLACEHOLDER');\n    },\n    textAreaChannels() {\n      if (\n        this.isATwilioChannel ||\n        this.isATwitterInbox ||\n        this.isAFacebookInbox\n      )\n        return true;\n      return false;\n    },\n  },\n  watch: {\n    $route(to) {\n      if (to.name === 'settings_inbox_show') {\n        this.fetchInboxSettings();\n      }\n    },\n  },\n  mounted() {\n    this.fetchInboxSettings();\n  },\n  methods: {\n    handleFeatureFlag(e) {\n      this.selectedFeatureFlags = this.toggleInput(\n        this.selectedFeatureFlags,\n        e.target.value\n      );\n    },\n    toggleInput(selected, current) {\n      if (selected.includes(current)) {\n        const newSelectedFlags = selected.filter(flag => flag !== current);\n        return newSelectedFlags;\n      }\n      return [...selected, current];\n    },\n    onTabChange(selectedTabIndex) {\n      this.selectedTabIndex = selectedTabIndex;\n    },\n    fetchInboxSettings() {\n      this.selectedTabIndex = 0;\n      this.selectedAgents = [];\n      this.$store.dispatch('agents/get');\n      this.$store.dispatch('teams/get');\n      this.$store.dispatch('labels/get');\n      this.$store.dispatch('inboxes/get').then(() => {\n        this.avatarUrl = this.inbox.avatar_url;\n        this.selectedInboxName = this.inbox.name;\n        this.webhookUrl = this.inbox.webhook_url;\n        this.greetingEnabled = this.inbox.greeting_enabled || false;\n        this.tweetsEnabled = this.inbox.tweets_enabled || false;\n        this.greetingMessage = this.inbox.greeting_message || '';\n        this.emailCollectEnabled = this.inbox.enable_email_collect;\n        this.csatSurveyEnabled = this.inbox.csat_survey_enabled;\n        this.allowMessagesAfterResolved = this.inbox.allow_messages_after_resolved;\n        this.continuityViaEmail = this.inbox.continuity_via_email;\n        this.channelWebsiteUrl = this.inbox.website_url;\n        this.channelWelcomeTitle = this.inbox.welcome_title;\n        this.channelWelcomeTagline = this.inbox.welcome_tagline;\n        this.selectedFeatureFlags = this.inbox.selected_feature_flags || [];\n        this.replyTime = this.inbox.reply_time;\n        this.locktoSingleConversation = this.inbox.lock_to_single_conversation;\n      });\n    },\n    async updateInbox() {\n      try {\n        const payload = {\n          id: this.currentInboxId,\n          name: this.selectedInboxName,\n          enable_email_collect: this.emailCollectEnabled,\n          csat_survey_enabled: this.csatSurveyEnabled,\n          allow_messages_after_resolved: this.allowMessagesAfterResolved,\n          greeting_enabled: this.greetingEnabled,\n          greeting_message: this.greetingMessage || '',\n          lock_to_single_conversation: this.locktoSingleConversation,\n          channel: {\n            widget_color: this.inbox.widget_color,\n            website_url: this.channelWebsiteUrl,\n            webhook_url: this.webhookUrl,\n            welcome_title: this.channelWelcomeTitle || '',\n            welcome_tagline: this.channelWelcomeTagline || '',\n            selectedFeatureFlags: this.selectedFeatureFlags,\n            reply_time: this.replyTime || 'in_a_few_minutes',\n            tweets_enabled: this.tweetsEnabled,\n            continuity_via_email: this.continuityViaEmail,\n          },\n        };\n        if (this.avatarFile) {\n          payload.avatar = this.avatarFile;\n        }\n        await this.$store.dispatch('inboxes/updateInbox', payload);\n        this.showAlert(this.$t('INBOX_MGMT.EDIT.API.SUCCESS_MESSAGE'));\n      } catch (error) {\n        this.showAlert(\n          error.message || this.$t('INBOX_MGMT.EDIT.API.ERROR_MESSAGE')\n        );\n      }\n    },\n    handleImageUpload({ file, url }) {\n      this.avatarFile = file;\n      this.avatarUrl = url;\n    },\n    async handleAvatarDelete() {\n      try {\n        await this.$store.dispatch(\n          'inboxes/deleteInboxAvatar',\n          this.currentInboxId\n        );\n        this.avatarFile = null;\n        this.avatarUrl = '';\n        this.showAlert(this.$t('INBOX_MGMT.DELETE.API.AVATAR_SUCCESS_MESSAGE'));\n      } catch (error) {\n        this.showAlert(\n          error.message\n            ? error.message\n            : this.$t('INBOX_MGMT.DELETE.API.AVATAR_ERROR_MESSAGE')\n        );\n      }\n    },\n  },\n  validations: {\n    webhookUrl: {\n      shouldBeUrl,\n    },\n    selectedInboxName: {},\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import '~dashboard/assets/scss/variables';\n@import '~dashboard/assets/scss/mixins';\n\n.settings {\n  background: $color-white;\n\n  .settings--content {\n    div:last-child {\n      border-bottom: 0;\n    }\n  }\n\n  .tabs {\n    padding: 0;\n    margin-bottom: -1px;\n  }\n}\n\n.widget--feature-flag {\n  padding-top: var(--space-small);\n}\n\n.settings-item {\n  padding-bottom: var(--space-normal);\n\n  .help-text {\n    font-style: normal;\n    color: var(--b-500);\n    padding-bottom: var(--space-smaller);\n  }\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/settings/inbox"},"metadata":{},"sourceType":"module"}