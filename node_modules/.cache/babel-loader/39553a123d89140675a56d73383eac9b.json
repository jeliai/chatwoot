{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Modal from '../../../../components/Modal';\nimport { mapGetters } from 'vuex';\nimport alertMixin from 'shared/mixins/alertMixin';\nexport default {\n  components: {\n    Modal: Modal\n  },\n  mixins: [alertMixin],\n  props: {\n    onClose: {\n      type: Function,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    return {\n      show: true,\n      file: ''\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    uiFlags: 'contacts/getUIFlags'\n  })), {}, {\n    csvUrl: function csvUrl() {\n      return '/downloads/import-contacts-sample.csv';\n    }\n  }),\n  methods: {\n    uploadFile: function uploadFile() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                if (_this.file) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                _context.next = 5;\n                return _this.$store.dispatch('contacts/import', _this.file);\n\n              case 5:\n                _this.onClose();\n\n                _this.showAlert(_this.$t('IMPORT_CONTACTS.SUCCESS_MESSAGE'));\n\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n\n                _this.showAlert(_context.t0.message || _this.$t('IMPORT_CONTACTS.ERROR_MESSAGE'));\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 9]]);\n      }))();\n    },\n    handleFileUpload: function handleFileUpload() {\n      this.file = this.$refs.file.files[0];\n    }\n  }\n};","map":{"version":3,"sources":["ImportContacts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA,OAAA,KAAA,MAAA,8BAAA;AACA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,UAAA,MAAA,0BAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,KAAA,EAAA;AADA,GADA;AAIA,EAAA,MAAA,EAAA,CAAA,UAAA,CAJA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,QADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA;AADA,GALA;AAWA,EAAA,IAXA,kBAWA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAAA;AAIA,GAhBA;AAiBA,EAAA,QAAA,kCACA,UAAA,CAAA;AACA,IAAA,OAAA,EAAA;AADA,GAAA,CADA;AAIA,IAAA,MAJA,oBAIA;AACA,aAAA,uCAAA;AACA;AANA,IAjBA;AAyBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,oBAEA,KAAA,CAAA,IAFA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,uBAGA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,iBAAA,EAAA,KAAA,CAAA,IAAA,CAHA;;AAAA;AAIA,gBAAA,KAAA,CAAA,OAAA;;AACA,gBAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,EAAA,CAAA,iCAAA,CAAA;;AALA;AAAA;;AAAA;AAAA;AAAA;;AAOA,gBAAA,KAAA,CAAA,SAAA,CACA,YAAA,OAAA,IAAA,KAAA,CAAA,EAAA,CAAA,+BAAA,CADA;;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,KAZA;AAaA,IAAA,gBAbA,8BAaA;AACA,WAAA,IAAA,GAAA,KAAA,KAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA;AAfA;AAzBA,CAAA","sourcesContent":["<template>\n  <modal :show.sync=\"show\" :on-close=\"onClose\">\n    <div class=\"column content-box\">\n      <woot-modal-header :header-title=\"$t('IMPORT_CONTACTS.TITLE')\">\n        <p>\n          {{ $t('IMPORT_CONTACTS.DESC') }}\n          <a :href=\"csvUrl\" download=\"import-contacts-sample\">{{\n            $t('IMPORT_CONTACTS.DOWNLOAD_LABEL')\n          }}</a>\n        </p>\n      </woot-modal-header>\n      <div class=\"row modal-content\">\n        <div class=\"medium-12 columns\">\n          <label>\n            <span>{{ $t('IMPORT_CONTACTS.FORM.LABEL') }}</span>\n            <input\n              id=\"file\"\n              ref=\"file\"\n              type=\"file\"\n              accept=\"text/csv\"\n              @change=\"handleFileUpload\"\n            />\n          </label>\n        </div>\n        <div class=\"modal-footer\">\n          <div class=\"medium-12 columns\">\n            <woot-button\n              :disabled=\"uiFlags.isCreating || !file\"\n              :loading=\"uiFlags.isCreating\"\n              @click=\"uploadFile\"\n            >\n              {{ $t('IMPORT_CONTACTS.FORM.SUBMIT') }}\n            </woot-button>\n            <button class=\"button clear\" @click.prevent=\"onClose\">\n              {{ $t('IMPORT_CONTACTS.FORM.CANCEL') }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </modal>\n</template>\n\n<script>\nimport Modal from '../../../../components/Modal';\nimport { mapGetters } from 'vuex';\nimport alertMixin from 'shared/mixins/alertMixin';\n\nexport default {\n  components: {\n    Modal,\n  },\n  mixins: [alertMixin],\n  props: {\n    onClose: {\n      type: Function,\n      default: () => {},\n    },\n  },\n  data() {\n    return {\n      show: true,\n      file: '',\n    };\n  },\n  computed: {\n    ...mapGetters({\n      uiFlags: 'contacts/getUIFlags',\n    }),\n    csvUrl() {\n      return '/downloads/import-contacts-sample.csv';\n    },\n  },\n  methods: {\n    async uploadFile() {\n      try {\n        if (!this.file) return;\n        await this.$store.dispatch('contacts/import', this.file);\n        this.onClose();\n        this.showAlert(this.$t('IMPORT_CONTACTS.SUCCESS_MESSAGE'));\n      } catch (error) {\n        this.showAlert(\n          error.message || this.$t('IMPORT_CONTACTS.ERROR_MESSAGE')\n        );\n      }\n    },\n    handleFileUpload() {\n      this.file = this.$refs.file.files[0];\n    },\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/contacts/components"},"metadata":{},"sourceType":"module"}