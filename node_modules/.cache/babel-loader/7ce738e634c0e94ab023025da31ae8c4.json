{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport Cookies from 'js-cookie';\nimport { IFrameHelper } from '../sdk/IFrameHelper';\nimport { getBubbleView, getDarkMode, getWidgetStyle } from '../sdk/settingsHelper';\nimport { computeHashForUserData, getUserCookieName, hasUserKeys } from '../sdk/cookieHelpers';\nimport { addClasses, removeClasses } from '../sdk/DOMHelpers';\nimport { SDK_SET_BUBBLE_VISIBILITY } from 'shared/constants/sharedFrameEvents';\n\nvar runSDK = function runSDK(_ref) {\n  var baseUrl = _ref.baseUrl,\n      websiteToken = _ref.websiteToken;\n\n  if (window.$chatwoot) {\n    return;\n  }\n\n  var chatwootSettings = window.chatwootSettings || {};\n  var locale = chatwootSettings.locale || 'en';\n\n  if (chatwootSettings.useBrowserLanguage) {\n    locale = window.navigator.language.replace('-', '_');\n  }\n\n  window.$chatwoot = {\n    baseUrl: baseUrl,\n    hasLoaded: false,\n    hideMessageBubble: chatwootSettings.hideMessageBubble || false,\n    isOpen: false,\n    position: chatwootSettings.position === 'left' ? 'left' : 'right',\n    websiteToken: websiteToken,\n    locale: locale,\n    useBrowserLanguage: chatwootSettings.useBrowserLanguage || false,\n    type: getBubbleView(chatwootSettings.type),\n    launcherTitle: chatwootSettings.launcherTitle || '',\n    showPopoutButton: chatwootSettings.showPopoutButton || false,\n    widgetStyle: getWidgetStyle(chatwootSettings.widgetStyle) || 'standard',\n    resetTriggered: false,\n    darkMode: getDarkMode(chatwootSettings.darkMode),\n    toggle: function toggle(state) {\n      IFrameHelper.events.toggleBubble(state);\n    },\n    toggleBubbleVisibility: function toggleBubbleVisibility(visibility) {\n      var widgetElm = document.querySelector('.woot--bubble-holder');\n      var widgetHolder = document.querySelector('.woot-widget-holder');\n\n      if (visibility === 'hide') {\n        addClasses(widgetHolder, 'woot-widget--without-bubble');\n        addClasses(widgetElm, 'woot-hidden');\n        window.$chatwoot.hideMessageBubble = true;\n      } else if (visibility === 'show') {\n        removeClasses(widgetElm, 'woot-hidden');\n        removeClasses(widgetHolder, 'woot-widget--without-bubble');\n        window.$chatwoot.hideMessageBubble = false;\n      }\n\n      IFrameHelper.sendMessage(SDK_SET_BUBBLE_VISIBILITY, {\n        hideMessageBubble: window.$chatwoot.hideMessageBubble\n      });\n    },\n    popoutChatWindow: function popoutChatWindow() {\n      IFrameHelper.events.popoutChatWindow({\n        baseUrl: window.$chatwoot.baseUrl,\n        websiteToken: window.$chatwoot.websiteToken,\n        locale: locale\n      });\n    },\n    setUser: function setUser(identifier, user) {\n      if (typeof identifier !== 'string' && typeof identifier !== 'number') {\n        throw new Error('Identifier should be a string or a number');\n      }\n\n      if (!hasUserKeys(user)) {\n        throw new Error('User object should have one of the keys [avatar_url, email, name]');\n      }\n\n      var userCookieName = getUserCookieName();\n      var existingCookieValue = Cookies.get(userCookieName);\n      var hashToBeStored = computeHashForUserData({\n        identifier: identifier,\n        user: user\n      });\n\n      if (hashToBeStored === existingCookieValue) {\n        return;\n      }\n\n      window.$chatwoot.identifier = identifier;\n      window.$chatwoot.user = user;\n      IFrameHelper.sendMessage('set-user', {\n        identifier: identifier,\n        user: user\n      });\n      Cookies.set(userCookieName, hashToBeStored, {\n        expires: 365,\n        sameSite: 'Lax'\n      });\n    },\n    setCustomAttributes: function setCustomAttributes() {\n      var customAttributes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!customAttributes || !Object.keys(customAttributes).length) {\n        throw new Error('Custom attributes should have atleast one key');\n      } else {\n        IFrameHelper.sendMessage('set-custom-attributes', {\n          customAttributes: customAttributes\n        });\n      }\n    },\n    deleteCustomAttribute: function deleteCustomAttribute() {\n      var customAttribute = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n      if (!customAttribute) {\n        throw new Error('Custom attribute is required');\n      } else {\n        IFrameHelper.sendMessage('delete-custom-attribute', {\n          customAttribute: customAttribute\n        });\n      }\n    },\n    setLabel: function setLabel() {\n      var label = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      IFrameHelper.sendMessage('set-label', {\n        label: label\n      });\n    },\n    removeLabel: function removeLabel() {\n      var label = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      IFrameHelper.sendMessage('remove-label', {\n        label: label\n      });\n    },\n    setLocale: function setLocale() {\n      var localeToBeUsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'en';\n      IFrameHelper.sendMessage('set-locale', {\n        locale: localeToBeUsed\n      });\n    },\n    reset: function reset() {\n      if (window.$chatwoot.isOpen) {\n        IFrameHelper.events.toggleBubble();\n      }\n\n      Cookies.remove('cw_conversation');\n      Cookies.remove(getUserCookieName());\n      var iframe = IFrameHelper.getAppFrame();\n      iframe.src = IFrameHelper.getUrl({\n        baseUrl: window.$chatwoot.baseUrl,\n        websiteToken: window.$chatwoot.websiteToken\n      });\n      window.$chatwoot.resetTriggered = true;\n    }\n  };\n  IFrameHelper.createFrame({\n    baseUrl: baseUrl,\n    websiteToken: websiteToken\n  });\n};\n\nwindow.chatwootSDK = {\n  run: runSDK\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/packs/sdk.js"],"names":["Cookies","IFrameHelper","getBubbleView","getDarkMode","getWidgetStyle","computeHashForUserData","getUserCookieName","hasUserKeys","addClasses","removeClasses","SDK_SET_BUBBLE_VISIBILITY","runSDK","baseUrl","websiteToken","window","$chatwoot","chatwootSettings","locale","useBrowserLanguage","navigator","language","replace","hasLoaded","hideMessageBubble","isOpen","position","type","launcherTitle","showPopoutButton","widgetStyle","resetTriggered","darkMode","toggle","state","events","toggleBubble","toggleBubbleVisibility","visibility","widgetElm","document","querySelector","widgetHolder","sendMessage","popoutChatWindow","setUser","identifier","user","Error","userCookieName","existingCookieValue","get","hashToBeStored","set","expires","sameSite","setCustomAttributes","customAttributes","Object","keys","length","deleteCustomAttribute","customAttribute","setLabel","label","removeLabel","setLocale","localeToBeUsed","reset","remove","iframe","getAppFrame","src","getUrl","createFrame","chatwootSDK","run"],"mappings":"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","sourcesContent":["import Cookies from 'js-cookie';\nimport { IFrameHelper } from '../sdk/IFrameHelper';\nimport {\n  getBubbleView,\n  getDarkMode,\n  getWidgetStyle,\n} from '../sdk/settingsHelper';\nimport {\n  computeHashForUserData,\n  getUserCookieName,\n  hasUserKeys,\n} from '../sdk/cookieHelpers';\nimport { addClasses, removeClasses } from '../sdk/DOMHelpers';\nimport { SDK_SET_BUBBLE_VISIBILITY } from 'shared/constants/sharedFrameEvents';\nconst runSDK = ({ baseUrl, websiteToken }) => {\n  if (window.$chatwoot) {\n    return;\n  }\n\n  const chatwootSettings = window.chatwootSettings || {};\n  let locale = chatwootSettings.locale || 'en';\n  if (chatwootSettings.useBrowserLanguage) {\n    locale = window.navigator.language.replace('-', '_');\n  }\n\n  window.$chatwoot = {\n    baseUrl,\n    hasLoaded: false,\n    hideMessageBubble: chatwootSettings.hideMessageBubble || false,\n    isOpen: false,\n    position: chatwootSettings.position === 'left' ? 'left' : 'right',\n    websiteToken,\n    locale,\n    useBrowserLanguage: chatwootSettings.useBrowserLanguage || false,\n    type: getBubbleView(chatwootSettings.type),\n    launcherTitle: chatwootSettings.launcherTitle || '',\n    showPopoutButton: chatwootSettings.showPopoutButton || false,\n    widgetStyle: getWidgetStyle(chatwootSettings.widgetStyle) || 'standard',\n    resetTriggered: false,\n    darkMode: getDarkMode(chatwootSettings.darkMode),\n\n    toggle(state) {\n      IFrameHelper.events.toggleBubble(state);\n    },\n\n    toggleBubbleVisibility(visibility) {\n      let widgetElm = document.querySelector('.woot--bubble-holder');\n      let widgetHolder = document.querySelector('.woot-widget-holder');\n      if (visibility === 'hide') {\n        addClasses(widgetHolder, 'woot-widget--without-bubble');\n        addClasses(widgetElm, 'woot-hidden');\n        window.$chatwoot.hideMessageBubble = true;\n      } else if (visibility === 'show') {\n        removeClasses(widgetElm, 'woot-hidden');\n        removeClasses(widgetHolder, 'woot-widget--without-bubble');\n        window.$chatwoot.hideMessageBubble = false;\n      }\n      IFrameHelper.sendMessage(SDK_SET_BUBBLE_VISIBILITY, {\n        hideMessageBubble: window.$chatwoot.hideMessageBubble,\n      });\n    },\n\n    popoutChatWindow() {\n      IFrameHelper.events.popoutChatWindow({\n        baseUrl: window.$chatwoot.baseUrl,\n        websiteToken: window.$chatwoot.websiteToken,\n        locale,\n      });\n    },\n\n    setUser(identifier, user) {\n      if (typeof identifier !== 'string' && typeof identifier !== 'number') {\n        throw new Error('Identifier should be a string or a number');\n      }\n\n      if (!hasUserKeys(user)) {\n        throw new Error(\n          'User object should have one of the keys [avatar_url, email, name]'\n        );\n      }\n\n      const userCookieName = getUserCookieName();\n      const existingCookieValue = Cookies.get(userCookieName);\n      const hashToBeStored = computeHashForUserData({ identifier, user });\n      if (hashToBeStored === existingCookieValue) {\n        return;\n      }\n\n      window.$chatwoot.identifier = identifier;\n      window.$chatwoot.user = user;\n      IFrameHelper.sendMessage('set-user', { identifier, user });\n      Cookies.set(userCookieName, hashToBeStored, {\n        expires: 365,\n        sameSite: 'Lax',\n      });\n    },\n\n    setCustomAttributes(customAttributes = {}) {\n      if (!customAttributes || !Object.keys(customAttributes).length) {\n        throw new Error('Custom attributes should have atleast one key');\n      } else {\n        IFrameHelper.sendMessage('set-custom-attributes', { customAttributes });\n      }\n    },\n\n    deleteCustomAttribute(customAttribute = '') {\n      if (!customAttribute) {\n        throw new Error('Custom attribute is required');\n      } else {\n        IFrameHelper.sendMessage('delete-custom-attribute', {\n          customAttribute,\n        });\n      }\n    },\n\n    setLabel(label = '') {\n      IFrameHelper.sendMessage('set-label', { label });\n    },\n\n    removeLabel(label = '') {\n      IFrameHelper.sendMessage('remove-label', { label });\n    },\n\n    setLocale(localeToBeUsed = 'en') {\n      IFrameHelper.sendMessage('set-locale', { locale: localeToBeUsed });\n    },\n\n    reset() {\n      if (window.$chatwoot.isOpen) {\n        IFrameHelper.events.toggleBubble();\n      }\n\n      Cookies.remove('cw_conversation');\n      Cookies.remove(getUserCookieName());\n\n      const iframe = IFrameHelper.getAppFrame();\n      iframe.src = IFrameHelper.getUrl({\n        baseUrl: window.$chatwoot.baseUrl,\n        websiteToken: window.$chatwoot.websiteToken,\n      });\n\n      window.$chatwoot.resetTriggered = true;\n    },\n  };\n\n  IFrameHelper.createFrame({\n    baseUrl,\n    websiteToken,\n  });\n};\n\nwindow.chatwootSDK = {\n  run: runSDK,\n};\n"]},"metadata":{},"sourceType":"module"}