{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport PreChatForm from '../components/PreChat/Form';\nimport configMixin from '../mixins/configMixin';\nimport routerMixin from '../mixins/routerMixin';\nimport { isEmptyObject } from 'widget/helpers/utils';\nexport default {\n  components: {\n    PreChatForm: PreChatForm\n  },\n  mixins: [configMixin, routerMixin],\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    conversationSize: 'conversation/getConversationSize'\n  })), {}, {\n    disableContactFields: function disableContactFields() {\n      var _ref = this.$route.params || {},\n          _ref$disableContactFi = _ref.disableContactFields,\n          disableContactFields = _ref$disableContactFi === void 0 ? false : _ref$disableContactFi;\n\n      return disableContactFields;\n    }\n  }),\n  watch: {\n    conversationSize: function conversationSize(newSize, oldSize) {\n      if (!oldSize && newSize > oldSize) {\n        this.replaceRoute('messages');\n      }\n    }\n  },\n  methods: {\n    onSubmit: function onSubmit(_ref2) {\n      var fullName = _ref2.fullName,\n          emailAddress = _ref2.emailAddress,\n          message = _ref2.message,\n          activeCampaignId = _ref2.activeCampaignId,\n          phoneNumber = _ref2.phoneNumber,\n          contactCustomAttributes = _ref2.contactCustomAttributes,\n          conversationCustomAttributes = _ref2.conversationCustomAttributes;\n\n      if (activeCampaignId) {\n        bus.$emit('execute-campaign', {\n          campaignId: activeCampaignId,\n          customAttributes: conversationCustomAttributes\n        });\n        this.$store.dispatch('contacts/update', {\n          user: {\n            email: emailAddress,\n            name: fullName,\n            phone_number: phoneNumber\n          }\n        });\n      } else {\n        this.$store.dispatch('conversation/createConversation', {\n          fullName: fullName,\n          emailAddress: emailAddress,\n          message: message,\n          phoneNumber: phoneNumber,\n          customAttributes: conversationCustomAttributes\n        });\n      }\n\n      if (!isEmptyObject(contactCustomAttributes)) {\n        this.$store.dispatch('contacts/setCustomAttributes', contactCustomAttributes);\n      }\n    }\n  }\n};","map":{"version":3,"sources":["PreChatForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAUA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,WAAA,MAAA,4BAAA;AACA,OAAA,WAAA,MAAA,uBAAA;AACA,OAAA,WAAA,MAAA,uBAAA;AACA,SAAA,aAAA,QAAA,sBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA;AADA,GADA;AAIA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,WAAA,CAJA;AAKA,EAAA,QAAA,kCACA,UAAA,CAAA;AACA,IAAA,gBAAA,EAAA;AADA,GAAA,CADA;AAIA,IAAA,oBAJA,kCAIA;AACA,iBAAA,KAAA,MAAA,CAAA,MAAA,IAAA,EAAA;AAAA,uCAAA,oBAAA;AAAA,UAAA,oBAAA,sCAAA,KAAA;;AACA,aAAA,oBAAA;AACA;AAPA,IALA;AAcA,EAAA,KAAA,EAAA;AACA,IAAA,gBADA,4BACA,OADA,EACA,OADA,EACA;AACA,UAAA,CAAA,OAAA,IAAA,OAAA,GAAA,OAAA,EAAA;AACA,aAAA,YAAA,CAAA,UAAA;AACA;AACA;AALA,GAdA;AAqBA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,2BASA;AAAA,UAPA,QAOA,SAPA,QAOA;AAAA,UANA,YAMA,SANA,YAMA;AAAA,UALA,OAKA,SALA,OAKA;AAAA,UAJA,gBAIA,SAJA,gBAIA;AAAA,UAHA,WAGA,SAHA,WAGA;AAAA,UAFA,uBAEA,SAFA,uBAEA;AAAA,UADA,4BACA,SADA,4BACA;;AACA,UAAA,gBAAA,EAAA;AACA,QAAA,GAAA,CAAA,KAAA,CAAA,kBAAA,EAAA;AACA,UAAA,UAAA,EAAA,gBADA;AAEA,UAAA,gBAAA,EAAA;AAFA,SAAA;AAIA,aAAA,MAAA,CAAA,QAAA,CAAA,iBAAA,EAAA;AACA,UAAA,IAAA,EAAA;AACA,YAAA,KAAA,EAAA,YADA;AAEA,YAAA,IAAA,EAAA,QAFA;AAGA,YAAA,YAAA,EAAA;AAHA;AADA,SAAA;AAOA,OAZA,MAYA;AACA,aAAA,MAAA,CAAA,QAAA,CAAA,iCAAA,EAAA;AACA,UAAA,QAAA,EAAA,QADA;AAEA,UAAA,YAAA,EAAA,YAFA;AAGA,UAAA,OAAA,EAAA,OAHA;AAIA,UAAA,WAAA,EAAA,WAJA;AAKA,UAAA,gBAAA,EAAA;AALA,SAAA;AAOA;;AACA,UAAA,CAAA,aAAA,CAAA,uBAAA,CAAA,EAAA;AACA,aAAA,MAAA,CAAA,QAAA,CACA,8BADA,EAEA,uBAFA;AAIA;AACA;AArCA;AArBA,CAAA","sourcesContent":["<template>\n  <div class=\"flex flex-1 overflow-auto\">\n    <pre-chat-form\n      :options=\"preChatFormOptions\"\n      :disable-contact-fields=\"disableContactFields\"\n      @submit=\"onSubmit\"\n    />\n  </div>\n</template>\n<script>\nimport { mapGetters } from 'vuex';\nimport PreChatForm from '../components/PreChat/Form';\nimport configMixin from '../mixins/configMixin';\nimport routerMixin from '../mixins/routerMixin';\nimport { isEmptyObject } from 'widget/helpers/utils';\n\nexport default {\n  components: {\n    PreChatForm,\n  },\n  mixins: [configMixin, routerMixin],\n  computed: {\n    ...mapGetters({\n      conversationSize: 'conversation/getConversationSize',\n    }),\n    disableContactFields() {\n      const { disableContactFields = false } = this.$route.params || {};\n      return disableContactFields;\n    },\n  },\n  watch: {\n    conversationSize(newSize, oldSize) {\n      if (!oldSize && newSize > oldSize) {\n        this.replaceRoute('messages');\n      }\n    },\n  },\n  methods: {\n    onSubmit({\n      fullName,\n      emailAddress,\n      message,\n      activeCampaignId,\n      phoneNumber,\n      contactCustomAttributes,\n      conversationCustomAttributes,\n    }) {\n      if (activeCampaignId) {\n        bus.$emit('execute-campaign', {\n          campaignId: activeCampaignId,\n          customAttributes: conversationCustomAttributes,\n        });\n        this.$store.dispatch('contacts/update', {\n          user: {\n            email: emailAddress,\n            name: fullName,\n            phone_number: phoneNumber,\n          },\n        });\n      } else {\n        this.$store.dispatch('conversation/createConversation', {\n          fullName: fullName,\n          emailAddress: emailAddress,\n          message: message,\n          phoneNumber: phoneNumber,\n          customAttributes: conversationCustomAttributes,\n        });\n      }\n      if (!isEmptyObject(contactCustomAttributes)) {\n        this.$store.dispatch(\n          'contacts/setCustomAttributes',\n          contactCustomAttributes\n        );\n      }\n    },\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/widget/views"},"metadata":{},"sourceType":"module"}