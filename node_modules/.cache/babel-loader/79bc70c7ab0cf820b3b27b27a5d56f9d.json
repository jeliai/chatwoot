{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport globalConfigMixin from 'shared/mixins/globalConfigMixin';\nimport SignupForm from './components/Signup/Form.vue';\nimport Testimonials from './components/Testimonials/Index.vue';\nimport Spinner from 'shared/components/Spinner.vue';\nexport default {\n  components: {\n    SignupForm: SignupForm,\n    Spinner: Spinner,\n    Testimonials: Testimonials\n  },\n  mixins: [globalConfigMixin],\n  data: function data() {\n    return {\n      showTestimonials: false,\n      isLoading: false\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    globalConfig: 'globalConfig/get'\n  })), {}, {\n    isAChatwootInstance: function isAChatwootInstance() {\n      return this.globalConfig.installationName === 'Chatwoot';\n    }\n  }),\n  beforeMount: function beforeMount() {\n    this.isLoading = this.isAChatwootInstance;\n  },\n  methods: {\n    resizeContainers: function resizeContainers(hasTestimonials) {\n      this.showTestimonials = hasTestimonials;\n      this.isLoading = false;\n    }\n  }\n};","map":{"version":3,"sources":["Signup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,iBAAA,MAAA,iCAAA;AACA,OAAA,UAAA,MAAA,8BAAA;AACA,OAAA,YAAA,MAAA,qCAAA;AACA,OAAA,OAAA,MAAA,+BAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA,UADA;AAEA,IAAA,OAAA,EAAA,OAFA;AAGA,IAAA,YAAA,EAAA;AAHA,GADA;AAMA,EAAA,MAAA,EAAA,CAAA,iBAAA,CANA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AAAA,MAAA,gBAAA,EAAA,KAAA;AAAA,MAAA,SAAA,EAAA;AAAA,KAAA;AACA,GATA;AAUA,EAAA,QAAA,kCACA,UAAA,CAAA;AAAA,IAAA,YAAA,EAAA;AAAA,GAAA,CADA;AAEA,IAAA,mBAFA,iCAEA;AACA,aAAA,KAAA,YAAA,CAAA,gBAAA,KAAA,UAAA;AACA;AAJA,IAVA;AAgBA,EAAA,WAhBA,yBAgBA;AACA,SAAA,SAAA,GAAA,KAAA,mBAAA;AACA,GAlBA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,4BACA,eADA,EACA;AACA,WAAA,gBAAA,GAAA,eAAA;AACA,WAAA,SAAA,GAAA,KAAA;AACA;AAJA;AAnBA,CAAA","sourcesContent":["<template>\n  <div class=\"h-full w-full\">\n    <div v-show=\"!isLoading\" class=\"row h-full\">\n      <div\n        :class=\"\n          `${showTestimonials ? 'large-6' : 'large-12'} signup-form--container`\n        \"\n      >\n        <div class=\"signup-form--content\">\n          <div class=\"signup--hero\">\n            <img\n              :src=\"globalConfig.logo\"\n              :alt=\"globalConfig.installationName\"\n              class=\"hero--logo\"\n            />\n            <h2 class=\"hero--title\">\n              {{ $t('REGISTER.TRY_WOOT') }}\n            </h2>\n          </div>\n          <signup-form />\n          <div class=\"auth-screen--footer\">\n            <span>{{ $t('REGISTER.HAVE_AN_ACCOUNT') }}</span>\n            <router-link to=\"/app/login\">\n              {{\n                useInstallationName(\n                  $t('LOGIN.TITLE'),\n                  globalConfig.installationName\n                )\n              }}\n            </router-link>\n          </div>\n        </div>\n      </div>\n      <testimonials\n        v-if=\"isAChatwootInstance\"\n        class=\"medium-6 testimonial--container\"\n        @resize-containers=\"resizeContainers\"\n      />\n    </div>\n    <div v-show=\"isLoading\" class=\"spinner--container\">\n      <spinner size=\"\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport globalConfigMixin from 'shared/mixins/globalConfigMixin';\nimport SignupForm from './components/Signup/Form.vue';\nimport Testimonials from './components/Testimonials/Index.vue';\nimport Spinner from 'shared/components/Spinner.vue';\n\nexport default {\n  components: {\n    SignupForm,\n    Spinner,\n    Testimonials,\n  },\n  mixins: [globalConfigMixin],\n  data() {\n    return { showTestimonials: false, isLoading: false };\n  },\n  computed: {\n    ...mapGetters({ globalConfig: 'globalConfig/get' }),\n    isAChatwootInstance() {\n      return this.globalConfig.installationName === 'Chatwoot';\n    },\n  },\n  beforeMount() {\n    this.isLoading = this.isAChatwootInstance;\n  },\n  methods: {\n    resizeContainers(hasTestimonials) {\n      this.showTestimonials = hasTestimonials;\n      this.isLoading = false;\n    },\n  },\n};\n</script>\n<style scoped lang=\"scss\">\n.signup-form--container {\n  display: flex;\n  align-items: center;\n  height: 100%;\n  min-height: 640px;\n  overflow: auto;\n  justify-content: center;\n}\n\n.signup-form--content {\n  padding: var(--space-jumbo);\n  max-width: 600px;\n  width: 100%;\n}\n\n.signup--hero {\n  margin-bottom: var(--space-normal);\n\n  .hero--logo {\n    width: 160px;\n  }\n\n  .hero--title {\n    margin-top: var(--space-medium);\n    font-weight: var(--font-weight-light);\n  }\n}\n\n.auth-screen--footer {\n  font-size: var(--font-size-small);\n}\n\n@media screen and (max-width: 1200px) {\n  .testimonial--container {\n    display: none;\n  }\n  .signup-form--container {\n    width: 100%;\n    flex: 0 0 100%;\n    max-width: 100%;\n  }\n  .signup-form--content {\n    margin: 0 auto;\n  }\n}\n\n.spinner--container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/auth"},"metadata":{},"sourceType":"module"}