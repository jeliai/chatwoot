{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ICON_ACCOUNT_SETTINGS, ICON_AGENT_REPORTS, ICON_APPS, ICON_CANNED_RESPONSE, ICON_CONTACT_DASHBOARD, ICON_CONVERSATION_DASHBOARD, ICON_INBOXES, ICON_INBOX_REPORTS, ICON_LABELS, ICON_LABEL_REPORTS, ICON_NOTIFICATION, ICON_REPORTS_OVERVIEW, ICON_TEAM_REPORTS, ICON_USER_PROFILE, ICON_CONVERSATION_REPORTS } from './CommandBarIcons';\nimport { frontendURL } from '../../../helper/URLHelper';\nimport { mapGetters } from 'vuex';\nimport { FEATURE_FLAGS } from '../../../featureFlags';\nvar GO_TO_COMMANDS = [{\n  id: 'goto_conversation_dashboard',\n  title: 'COMMAND_BAR.COMMANDS.GO_TO_CONVERSATION_DASHBOARD',\n  section: 'COMMAND_BAR.SECTIONS.GENERAL',\n  icon: ICON_CONVERSATION_DASHBOARD,\n  path: function path(accountId) {\n    return \"accounts/\".concat(accountId, \"/dashboard\");\n  },\n  role: ['administrator', 'agent']\n}, {\n  id: 'goto_contacts_dashboard',\n  title: 'COMMAND_BAR.COMMANDS.GO_TO_CONTACTS_DASHBOARD',\n  section: 'COMMAND_BAR.SECTIONS.GENERAL',\n  icon: ICON_CONTACT_DASHBOARD,\n  path: function path(accountId) {\n    return \"accounts/\".concat(accountId, \"/contacts\");\n  },\n  role: ['administrator', 'agent']\n}, {\n  id: 'open_reports_overview',\n  section: 'COMMAND_BAR.SECTIONS.REPORTS',\n  title: 'COMMAND_BAR.COMMANDS.GO_TO_REPORTS_OVERVIEW',\n  icon: ICON_REPORTS_OVERVIEW,\n  path: function path(accountId) {\n    return \"accounts/\".concat(accountId, \"/reports/overview\");\n  },\n  role: ['administrator']\n}, {\n  id: 'open_conversation_reports',\n  section: 'COMMAND_BAR.SECTIONS.REPORTS',\n  title: 'COMMAND_BAR.COMMANDS.GO_TO_CONVERSATION_REPORTS',\n  icon: ICON_CONVERSATION_REPORTS,\n  path: function path(accountId) {\n    return \"accounts/\".concat(accountId, \"/reports/conversation\");\n  },\n  role: ['administrator']\n}, {\n  id: 'open_agent_reports',\n  section: 'COMMAND_BAR.SECTIONS.REPORTS',\n  title: 'COMMAND_BAR.COMMANDS.GO_TO_AGENT_REPORTS',\n  icon: ICON_AGENT_REPORTS,\n  path: function path(accountId) {\n    return \"accounts/\".concat(accountId, \"/reports/agent\");\n  },\n  role: ['administrator']\n}, {\n  id: 'open_label_reports',\n  section: 'COMMAND_BAR.SECTIONS.REPORTS',\n  title: 'COMMAND_BAR.COMMANDS.GO_TO_LABEL_REPORTS',\n  icon: ICON_LABEL_REPORTS,\n  path: function path(accountId) {\n    return \"accounts/\".concat(accountId, \"/reports/label\");\n  },\n  role: ['administrator']\n}, {\n  id: 'open_inbox_reports',\n  section: 'COMMAND_BAR.SECTIONS.REPORTS',\n  title: 'COMMAND_BAR.COMMANDS.GO_TO_INBOX_REPORTS',\n  icon: ICON_INBOX_REPORTS,\n  path: function path(accountId) {\n    return \"accounts/\".concat(accountId, \"/reports/inboxes\");\n  },\n  role: ['administrator']\n}, {\n  id: 'open_team_reports',\n  section: 'COMMAND_BAR.SECTIONS.REPORTS',\n  title: 'COMMAND_BAR.COMMANDS.GO_TO_TEAM_REPORTS',\n  icon: ICON_TEAM_REPORTS,\n  path: function path(accountId) {\n    return \"accounts/\".concat(accountId, \"/reports/teams\");\n  },\n  role: ['administrator']\n}, {\n  id: 'open_agent_settings',\n  section: 'COMMAND_BAR.SECTIONS.SETTINGS',\n  title: 'COMMAND_BAR.COMMANDS.GO_TO_SETTINGS_AGENTS',\n  featureFlag: FEATURE_FLAGS.AGENT_MANAGEMENT,\n  icon: ICON_AGENT_REPORTS,\n  path: function path(accountId) {\n    return \"accounts/\".concat(accountId, \"/settings/agents/list\");\n  },\n  role: ['administrator']\n}, {\n  id: 'open_team_settings',\n  title: 'COMMAND_BAR.COMMANDS.GO_TO_SETTINGS_TEAMS',\n  featureFlag: FEATURE_FLAGS.TEAM_MANAGEMENT,\n  section: 'COMMAND_BAR.SECTIONS.SETTINGS',\n  icon: ICON_TEAM_REPORTS,\n  path: function path(accountId) {\n    return \"accounts/\".concat(accountId, \"/settings/teams/list\");\n  },\n  role: ['administrator']\n}, {\n  id: 'open_inbox_settings',\n  title: 'COMMAND_BAR.COMMANDS.GO_TO_SETTINGS_INBOXES',\n  featureFlag: FEATURE_FLAGS.INBOX_MANAGEMENT,\n  section: 'COMMAND_BAR.SECTIONS.SETTINGS',\n  icon: ICON_INBOXES,\n  path: function path(accountId) {\n    return \"accounts/\".concat(accountId, \"/settings/inboxes/list\");\n  },\n  role: ['administrator']\n}, {\n  id: 'open_label_settings',\n  title: 'COMMAND_BAR.COMMANDS.GO_TO_SETTINGS_LABELS',\n  featureFlag: FEATURE_FLAGS.LABELS,\n  section: 'COMMAND_BAR.SECTIONS.SETTINGS',\n  icon: ICON_LABELS,\n  path: function path(accountId) {\n    return \"accounts/\".concat(accountId, \"/settings/labels/list\");\n  },\n  role: ['administrator']\n}, {\n  id: 'open_canned_response_settings',\n  title: 'COMMAND_BAR.COMMANDS.GO_TO_SETTINGS_CANNED_RESPONSES',\n  featureFlag: FEATURE_FLAGS.CANNED_RESPONSES,\n  section: 'COMMAND_BAR.SECTIONS.SETTINGS',\n  icon: ICON_CANNED_RESPONSE,\n  path: function path(accountId) {\n    return \"accounts/\".concat(accountId, \"/settings/canned-response/list\");\n  },\n  role: ['administrator', 'agent']\n}, {\n  id: 'open_applications_settings',\n  title: 'COMMAND_BAR.COMMANDS.GO_TO_SETTINGS_APPLICATIONS',\n  featureFlag: FEATURE_FLAGS.INTEGRATIONS,\n  section: 'COMMAND_BAR.SECTIONS.SETTINGS',\n  icon: ICON_APPS,\n  path: function path(accountId) {\n    return \"accounts/\".concat(accountId, \"/settings/applications\");\n  },\n  role: ['administrator']\n}, {\n  id: 'open_account_settings',\n  title: 'COMMAND_BAR.COMMANDS.GO_TO_SETTINGS_ACCOUNT',\n  section: 'COMMAND_BAR.SECTIONS.SETTINGS',\n  icon: ICON_ACCOUNT_SETTINGS,\n  path: function path(accountId) {\n    return \"accounts/\".concat(accountId, \"/settings/general\");\n  },\n  role: ['administrator']\n}, {\n  id: 'open_profile_settings',\n  title: 'COMMAND_BAR.COMMANDS.GO_TO_SETTINGS_PROFILE',\n  section: 'COMMAND_BAR.SECTIONS.SETTINGS',\n  icon: ICON_USER_PROFILE,\n  path: function path(accountId) {\n    return \"accounts/\".concat(accountId, \"/profile/settings\");\n  },\n  role: ['administrator', 'agent']\n}, {\n  id: 'open_notifications',\n  title: 'COMMAND_BAR.COMMANDS.GO_TO_NOTIFICATIONS',\n  section: 'COMMAND_BAR.SECTIONS.SETTINGS',\n  icon: ICON_NOTIFICATION,\n  path: function path(accountId) {\n    return \"accounts/\".concat(accountId, \"/notifications\");\n  },\n  role: ['administrator', 'agent']\n}];\nexport default {\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    accountId: 'getCurrentAccountId',\n    isFeatureEnabledonAccount: 'accounts/isFeatureEnabledonAccount'\n  })), {}, {\n    goToCommandHotKeys: function goToCommandHotKeys() {\n      var _this = this;\n\n      var commands = GO_TO_COMMANDS.filter(function (cmd) {\n        if (cmd.featureFlag) {\n          return _this.isFeatureEnabledonAccount(_this.accountId, cmd.featureFlag);\n        }\n\n        return true;\n      });\n\n      if (!this.isAdmin) {\n        commands = commands.filter(function (command) {\n          return command.role.includes('agent');\n        });\n      }\n\n      return commands.map(function (command) {\n        return {\n          id: command.id,\n          section: _this.$t(command.section),\n          title: _this.$t(command.title),\n          icon: command.icon,\n          handler: function handler() {\n            return _this.openRoute(command.path(_this.accountId));\n          }\n        };\n      });\n    }\n  }),\n  methods: {\n    openRoute: function openRoute(url) {\n      this.$router.push(frontendURL(url));\n    }\n  }\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/routes/dashboard/commands/goToCommandHotKeys.js"],"names":["ICON_ACCOUNT_SETTINGS","ICON_AGENT_REPORTS","ICON_APPS","ICON_CANNED_RESPONSE","ICON_CONTACT_DASHBOARD","ICON_CONVERSATION_DASHBOARD","ICON_INBOXES","ICON_INBOX_REPORTS","ICON_LABELS","ICON_LABEL_REPORTS","ICON_NOTIFICATION","ICON_REPORTS_OVERVIEW","ICON_TEAM_REPORTS","ICON_USER_PROFILE","ICON_CONVERSATION_REPORTS","frontendURL","mapGetters","FEATURE_FLAGS","GO_TO_COMMANDS","id","title","section","icon","path","accountId","role","featureFlag","AGENT_MANAGEMENT","TEAM_MANAGEMENT","INBOX_MANAGEMENT","LABELS","CANNED_RESPONSES","INTEGRATIONS","computed","isFeatureEnabledonAccount","goToCommandHotKeys","commands","filter","cmd","isAdmin","command","includes","map","$t","handler","openRoute","methods","url","$router","push"],"mappings":"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","sourcesContent":["import {\n  ICON_ACCOUNT_SETTINGS,\n  ICON_AGENT_REPORTS,\n  ICON_APPS,\n  ICON_CANNED_RESPONSE,\n  ICON_CONTACT_DASHBOARD,\n  ICON_CONVERSATION_DASHBOARD,\n  ICON_INBOXES,\n  ICON_INBOX_REPORTS,\n  ICON_LABELS,\n  ICON_LABEL_REPORTS,\n  ICON_NOTIFICATION,\n  ICON_REPORTS_OVERVIEW,\n  ICON_TEAM_REPORTS,\n  ICON_USER_PROFILE,\n  ICON_CONVERSATION_REPORTS,\n} from './CommandBarIcons';\nimport { frontendURL } from '../../../helper/URLHelper';\nimport { mapGetters } from 'vuex';\nimport { FEATURE_FLAGS } from '../../../featureFlags';\n\nconst GO_TO_COMMANDS = [\n  {\n    id: 'goto_conversation_dashboard',\n    title: 'COMMAND_BAR.COMMANDS.GO_TO_CONVERSATION_DASHBOARD',\n    section: 'COMMAND_BAR.SECTIONS.GENERAL',\n    icon: ICON_CONVERSATION_DASHBOARD,\n    path: accountId => `accounts/${accountId}/dashboard`,\n    role: ['administrator', 'agent'],\n  },\n  {\n    id: 'goto_contacts_dashboard',\n    title: 'COMMAND_BAR.COMMANDS.GO_TO_CONTACTS_DASHBOARD',\n    section: 'COMMAND_BAR.SECTIONS.GENERAL',\n    icon: ICON_CONTACT_DASHBOARD,\n    path: accountId => `accounts/${accountId}/contacts`,\n    role: ['administrator', 'agent'],\n  },\n  {\n    id: 'open_reports_overview',\n    section: 'COMMAND_BAR.SECTIONS.REPORTS',\n    title: 'COMMAND_BAR.COMMANDS.GO_TO_REPORTS_OVERVIEW',\n    icon: ICON_REPORTS_OVERVIEW,\n    path: accountId => `accounts/${accountId}/reports/overview`,\n    role: ['administrator'],\n  },\n  {\n    id: 'open_conversation_reports',\n    section: 'COMMAND_BAR.SECTIONS.REPORTS',\n    title: 'COMMAND_BAR.COMMANDS.GO_TO_CONVERSATION_REPORTS',\n    icon: ICON_CONVERSATION_REPORTS,\n    path: accountId => `accounts/${accountId}/reports/conversation`,\n    role: ['administrator'],\n  },\n  {\n    id: 'open_agent_reports',\n    section: 'COMMAND_BAR.SECTIONS.REPORTS',\n    title: 'COMMAND_BAR.COMMANDS.GO_TO_AGENT_REPORTS',\n    icon: ICON_AGENT_REPORTS,\n    path: accountId => `accounts/${accountId}/reports/agent`,\n    role: ['administrator'],\n  },\n  {\n    id: 'open_label_reports',\n    section: 'COMMAND_BAR.SECTIONS.REPORTS',\n    title: 'COMMAND_BAR.COMMANDS.GO_TO_LABEL_REPORTS',\n    icon: ICON_LABEL_REPORTS,\n    path: accountId => `accounts/${accountId}/reports/label`,\n    role: ['administrator'],\n  },\n  {\n    id: 'open_inbox_reports',\n    section: 'COMMAND_BAR.SECTIONS.REPORTS',\n    title: 'COMMAND_BAR.COMMANDS.GO_TO_INBOX_REPORTS',\n    icon: ICON_INBOX_REPORTS,\n    path: accountId => `accounts/${accountId}/reports/inboxes`,\n    role: ['administrator'],\n  },\n  {\n    id: 'open_team_reports',\n    section: 'COMMAND_BAR.SECTIONS.REPORTS',\n    title: 'COMMAND_BAR.COMMANDS.GO_TO_TEAM_REPORTS',\n    icon: ICON_TEAM_REPORTS,\n    path: accountId => `accounts/${accountId}/reports/teams`,\n    role: ['administrator'],\n  },\n  {\n    id: 'open_agent_settings',\n    section: 'COMMAND_BAR.SECTIONS.SETTINGS',\n    title: 'COMMAND_BAR.COMMANDS.GO_TO_SETTINGS_AGENTS',\n    featureFlag: FEATURE_FLAGS.AGENT_MANAGEMENT,\n    icon: ICON_AGENT_REPORTS,\n    path: accountId => `accounts/${accountId}/settings/agents/list`,\n    role: ['administrator'],\n  },\n  {\n    id: 'open_team_settings',\n    title: 'COMMAND_BAR.COMMANDS.GO_TO_SETTINGS_TEAMS',\n    featureFlag: FEATURE_FLAGS.TEAM_MANAGEMENT,\n    section: 'COMMAND_BAR.SECTIONS.SETTINGS',\n    icon: ICON_TEAM_REPORTS,\n    path: accountId => `accounts/${accountId}/settings/teams/list`,\n    role: ['administrator'],\n  },\n  {\n    id: 'open_inbox_settings',\n    title: 'COMMAND_BAR.COMMANDS.GO_TO_SETTINGS_INBOXES',\n    featureFlag: FEATURE_FLAGS.INBOX_MANAGEMENT,\n    section: 'COMMAND_BAR.SECTIONS.SETTINGS',\n    icon: ICON_INBOXES,\n    path: accountId => `accounts/${accountId}/settings/inboxes/list`,\n    role: ['administrator'],\n  },\n  {\n    id: 'open_label_settings',\n    title: 'COMMAND_BAR.COMMANDS.GO_TO_SETTINGS_LABELS',\n    featureFlag: FEATURE_FLAGS.LABELS,\n    section: 'COMMAND_BAR.SECTIONS.SETTINGS',\n    icon: ICON_LABELS,\n    path: accountId => `accounts/${accountId}/settings/labels/list`,\n    role: ['administrator'],\n  },\n  {\n    id: 'open_canned_response_settings',\n    title: 'COMMAND_BAR.COMMANDS.GO_TO_SETTINGS_CANNED_RESPONSES',\n    featureFlag: FEATURE_FLAGS.CANNED_RESPONSES,\n    section: 'COMMAND_BAR.SECTIONS.SETTINGS',\n    icon: ICON_CANNED_RESPONSE,\n    path: accountId => `accounts/${accountId}/settings/canned-response/list`,\n    role: ['administrator', 'agent'],\n  },\n  {\n    id: 'open_applications_settings',\n    title: 'COMMAND_BAR.COMMANDS.GO_TO_SETTINGS_APPLICATIONS',\n    featureFlag: FEATURE_FLAGS.INTEGRATIONS,\n    section: 'COMMAND_BAR.SECTIONS.SETTINGS',\n    icon: ICON_APPS,\n    path: accountId => `accounts/${accountId}/settings/applications`,\n    role: ['administrator'],\n  },\n  {\n    id: 'open_account_settings',\n    title: 'COMMAND_BAR.COMMANDS.GO_TO_SETTINGS_ACCOUNT',\n    section: 'COMMAND_BAR.SECTIONS.SETTINGS',\n    icon: ICON_ACCOUNT_SETTINGS,\n    path: accountId => `accounts/${accountId}/settings/general`,\n    role: ['administrator'],\n  },\n  {\n    id: 'open_profile_settings',\n    title: 'COMMAND_BAR.COMMANDS.GO_TO_SETTINGS_PROFILE',\n    section: 'COMMAND_BAR.SECTIONS.SETTINGS',\n    icon: ICON_USER_PROFILE,\n    path: accountId => `accounts/${accountId}/profile/settings`,\n    role: ['administrator', 'agent'],\n  },\n  {\n    id: 'open_notifications',\n    title: 'COMMAND_BAR.COMMANDS.GO_TO_NOTIFICATIONS',\n    section: 'COMMAND_BAR.SECTIONS.SETTINGS',\n    icon: ICON_NOTIFICATION,\n    path: accountId => `accounts/${accountId}/notifications`,\n    role: ['administrator', 'agent'],\n  },\n];\n\nexport default {\n  computed: {\n    ...mapGetters({\n      accountId: 'getCurrentAccountId',\n      isFeatureEnabledonAccount: 'accounts/isFeatureEnabledonAccount',\n    }),\n    goToCommandHotKeys() {\n      let commands = GO_TO_COMMANDS.filter(cmd => {\n        if (cmd.featureFlag) {\n          return this.isFeatureEnabledonAccount(\n            this.accountId,\n            cmd.featureFlag\n          );\n        }\n        return true;\n      });\n\n      if (!this.isAdmin) {\n        commands = commands.filter(command => command.role.includes('agent'));\n      }\n\n      return commands.map(command => ({\n        id: command.id,\n        section: this.$t(command.section),\n        title: this.$t(command.title),\n        icon: command.icon,\n        handler: () => this.openRoute(command.path(this.accountId)),\n      }));\n    },\n  },\n  methods: {\n    openRoute(url) {\n      this.$router.push(frontendURL(url));\n    },\n  },\n};\n"]},"metadata":{},"sourceType":"module"}