{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport { frontendURL } from '../../../../helper/URLHelper';\nimport AgentBotRow from './components/AgentBotRow.vue';\nimport alertMixin from 'shared/mixins/alertMixin';\nexport default {\n  components: {\n    AgentBotRow: AgentBotRow\n  },\n  mixins: [alertMixin],\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    accountId: 'getCurrentAccountId',\n    agentBots: 'agentBots/getBots',\n    uiFlags: 'agentBots/getUIFlags'\n  })), {}, {\n    newAgentBotsURL: function newAgentBotsURL() {\n      return frontendURL(\"accounts/\".concat(this.accountId, \"/settings/agent-bots/csml/new\"));\n    }\n  }),\n  mounted: function mounted() {\n    this.$store.dispatch('agentBots/get');\n  },\n  methods: {\n    onDeleteAgentBot: function onDeleteAgentBot(bot) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var ok;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.$refs.confirmDialog.showConfirmation();\n\n              case 2:\n                ok = _context.sent;\n\n                if (!ok) {\n                  _context.next = 13;\n                  break;\n                }\n\n                _context.prev = 4;\n                _context.next = 7;\n                return _this.$store.dispatch('agentBots/delete', bot.id);\n\n              case 7:\n                _this.showAlert(_this.$t('AGENT_BOTS.DELETE.API.SUCCESS_MESSAGE'));\n\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](4);\n\n                _this.showAlert(_this.$t('AGENT_BOTS.DELETE.API.ERROR_MESSAGE'));\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[4, 10]]);\n      }))();\n    },\n    onEditAgentBot: function onEditAgentBot(bot) {\n      this.$router.push(frontendURL(\"accounts/\".concat(this.accountId, \"/settings/agent-bots/csml/\").concat(bot.id)));\n    }\n  }\n};","map":{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA,SAAA,UAAA,QAAA,MAAA;AACA,SAAA,WAAA,QAAA,8BAAA;AACA,OAAA,WAAA,MAAA,8BAAA;AACA,OAAA,UAAA,MAAA,0BAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,WAAA,EAAA;AAAA,GADA;AAEA,EAAA,MAAA,EAAA,CAAA,UAAA,CAFA;AAGA,EAAA,QAAA,kCACA,UAAA,CAAA;AACA,IAAA,SAAA,EAAA,qBADA;AAEA,IAAA,SAAA,EAAA,mBAFA;AAGA,IAAA,OAAA,EAAA;AAHA,GAAA,CADA;AAMA,IAAA,eANA,6BAMA;AACA,aAAA,WAAA,oBACA,KAAA,SADA,mCAAA;AAGA;AAVA,IAHA;AAeA,EAAA,OAfA,qBAeA;AACA,SAAA,MAAA,CAAA,QAAA,CAAA,eAAA;AACA,GAjBA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,4BACA,GADA,EACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,CAAA,KAAA,CAAA,aAAA,CAAA,gBAAA,EADA;;AAAA;AACA,gBAAA,EADA;;AAAA,qBAEA,EAFA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAIA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,kBAAA,EAAA,GAAA,CAAA,EAAA,CAJA;;AAAA;AAKA,gBAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,EAAA,CAAA,uCAAA,CAAA;;AALA;AAAA;;AAAA;AAAA;AAAA;;AAOA,gBAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,EAAA,CAAA,qCAAA,CAAA;;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,KAXA;AAYA,IAAA,cAZA,0BAYA,GAZA,EAYA;AACA,WAAA,OAAA,CAAA,IAAA,CACA,WAAA,oBACA,KAAA,SADA,uCACA,GAAA,CAAA,EADA,EADA;AAKA;AAlBA;AAlBA,CAAA","sourcesContent":["<template>\n  <div class=\"column content-box\">\n    <div class=\"row\">\n      <div class=\"small-8 columns with-right-space\">\n        <woot-loading-state\n          v-if=\"uiFlags.isFetching\"\n          :message=\"$t('AGENT_BOTS.LIST.LOADING')\"\n        />\n        <table v-else-if=\"agentBots.length\" class=\"woot-table\">\n          <tbody>\n            <agent-bot-row\n              v-for=\"(agentBot, index) in agentBots\"\n              :key=\"agentBot.id\"\n              :agent-bot=\"agentBot\"\n              :index=\"index\"\n              @delete=\"onDeleteAgentBot\"\n              @edit=\"onEditAgentBot\"\n            />\n          </tbody>\n        </table>\n        <p v-else class=\"no-items-error-message\">\n          {{ $t('AGENT_BOTS.LIST.404') }}\n        </p>\n      </div>\n\n      <div class=\"small-4 columns content-box\">\n        <p v-html=\"$t('AGENT_BOTS.SIDEBAR_TXT')\" />\n      </div>\n    </div>\n    <woot-button\n      color-scheme=\"success\"\n      class-names=\"button--fixed-right-top\"\n      icon=\"add-circle\"\n    >\n      <router-link :to=\"newAgentBotsURL\" class=\"white-text\">\n        {{ $t('AGENT_BOTS.ADD.TITLE') }}\n      </router-link>\n    </woot-button>\n    <woot-confirm-modal\n      ref=\"confirmDialog\"\n      :title=\"$t('AGENT_BOTS.DELETE.TITLE')\"\n      :description=\"$t('AGENT_BOTS.DELETE.DESCRIPTION')\"\n    />\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport { frontendURL } from '../../../../helper/URLHelper';\nimport AgentBotRow from './components/AgentBotRow.vue';\nimport alertMixin from 'shared/mixins/alertMixin';\n\nexport default {\n  components: { AgentBotRow },\n  mixins: [alertMixin],\n  computed: {\n    ...mapGetters({\n      accountId: 'getCurrentAccountId',\n      agentBots: 'agentBots/getBots',\n      uiFlags: 'agentBots/getUIFlags',\n    }),\n    newAgentBotsURL() {\n      return frontendURL(\n        `accounts/${this.accountId}/settings/agent-bots/csml/new`\n      );\n    },\n  },\n  mounted() {\n    this.$store.dispatch('agentBots/get');\n  },\n  methods: {\n    async onDeleteAgentBot(bot) {\n      const ok = await this.$refs.confirmDialog.showConfirmation();\n      if (ok) {\n        try {\n          await this.$store.dispatch('agentBots/delete', bot.id);\n          this.showAlert(this.$t('AGENT_BOTS.DELETE.API.SUCCESS_MESSAGE'));\n        } catch (error) {\n          this.showAlert(this.$t('AGENT_BOTS.DELETE.API.ERROR_MESSAGE'));\n        }\n      }\n    },\n    onEditAgentBot(bot) {\n      this.$router.push(\n        frontendURL(\n          `accounts/${this.accountId}/settings/agent-bots/csml/${bot.id}`\n        )\n      );\n    },\n  },\n};\n</script>\n<style scoped>\n.bots-list {\n  list-style: none;\n}\n.nowrap {\n  white-space: nowrap;\n}\n.white-text {\n  color: white;\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/settings/agentBots"},"metadata":{},"sourceType":"module"}