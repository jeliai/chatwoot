{"ast":null,"code":"import \"core-js/modules/es.string.starts-with.js\";\nimport { INBOX_TYPES } from 'shared/mixins/inboxMixin';\nexport var getInboxClassByType = function getInboxClassByType(type, phoneNumber) {\n  switch (type) {\n    case INBOX_TYPES.WEB:\n      return 'globe-desktop';\n\n    case INBOX_TYPES.FB:\n      return 'brand-facebook';\n\n    case INBOX_TYPES.TWITTER:\n      return 'brand-twitter';\n\n    case INBOX_TYPES.TWILIO:\n      return phoneNumber !== null && phoneNumber !== void 0 && phoneNumber.startsWith('whatsapp') ? 'brand-whatsapp' : 'brand-sms';\n\n    case INBOX_TYPES.WHATSAPP:\n      return 'brand-whatsapp';\n\n    case INBOX_TYPES.API:\n      return 'cloud';\n\n    case INBOX_TYPES.EMAIL:\n      return 'mail';\n\n    case INBOX_TYPES.TELEGRAM:\n      return 'brand-telegram';\n\n    case INBOX_TYPES.LINE:\n      return 'brand-line';\n\n    default:\n      return 'chat';\n  }\n};\nexport var getInboxWarningIconClass = function getInboxWarningIconClass(type, reauthorizationRequired) {\n  if (type === INBOX_TYPES.FB && reauthorizationRequired) {\n    return 'warning';\n  }\n\n  return '';\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/helper/inbox.js"],"names":["INBOX_TYPES","getInboxClassByType","type","phoneNumber","WEB","FB","TWITTER","TWILIO","startsWith","WHATSAPP","API","EMAIL","TELEGRAM","LINE","getInboxWarningIconClass","reauthorizationRequired"],"mappings":";AAAA,SAASA,WAAT,QAA4B,0BAA5B;AAEA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,IAAD,EAAOC,WAAP,EAAuB;AACxD,UAAQD,IAAR;AACE,SAAKF,WAAW,CAACI,GAAjB;AACE,aAAO,eAAP;;AAEF,SAAKJ,WAAW,CAACK,EAAjB;AACE,aAAO,gBAAP;;AAEF,SAAKL,WAAW,CAACM,OAAjB;AACE,aAAO,eAAP;;AAEF,SAAKN,WAAW,CAACO,MAAjB;AACE,aAAOJ,WAAW,SAAX,IAAAA,WAAW,WAAX,IAAAA,WAAW,CAAEK,UAAb,CAAwB,UAAxB,IACH,gBADG,GAEH,WAFJ;;AAIF,SAAKR,WAAW,CAACS,QAAjB;AACE,aAAO,gBAAP;;AAEF,SAAKT,WAAW,CAACU,GAAjB;AACE,aAAO,OAAP;;AAEF,SAAKV,WAAW,CAACW,KAAjB;AACE,aAAO,MAAP;;AAEF,SAAKX,WAAW,CAACY,QAAjB;AACE,aAAO,gBAAP;;AAEF,SAAKZ,WAAW,CAACa,IAAjB;AACE,aAAO,YAAP;;AAEF;AACE,aAAO,MAAP;AA/BJ;AAiCD,CAlCM;AAoCP,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACZ,IAAD,EAAOa,uBAAP,EAAmC;AACzE,MAAIb,IAAI,KAAKF,WAAW,CAACK,EAArB,IAA2BU,uBAA/B,EAAwD;AACtD,WAAO,SAAP;AACD;;AACD,SAAO,EAAP;AACD,CALM","sourcesContent":["import { INBOX_TYPES } from 'shared/mixins/inboxMixin';\n\nexport const getInboxClassByType = (type, phoneNumber) => {\n  switch (type) {\n    case INBOX_TYPES.WEB:\n      return 'globe-desktop';\n\n    case INBOX_TYPES.FB:\n      return 'brand-facebook';\n\n    case INBOX_TYPES.TWITTER:\n      return 'brand-twitter';\n\n    case INBOX_TYPES.TWILIO:\n      return phoneNumber?.startsWith('whatsapp')\n        ? 'brand-whatsapp'\n        : 'brand-sms';\n\n    case INBOX_TYPES.WHATSAPP:\n      return 'brand-whatsapp';\n\n    case INBOX_TYPES.API:\n      return 'cloud';\n\n    case INBOX_TYPES.EMAIL:\n      return 'mail';\n\n    case INBOX_TYPES.TELEGRAM:\n      return 'brand-telegram';\n\n    case INBOX_TYPES.LINE:\n      return 'brand-line';\n\n    default:\n      return 'chat';\n  }\n};\n\nexport const getInboxWarningIconClass = (type, reauthorizationRequired) => {\n  if (type === INBOX_TYPES.FB && reauthorizationRequired) {\n    return 'warning';\n  }\n  return '';\n};\n"]},"metadata":{},"sourceType":"module"}