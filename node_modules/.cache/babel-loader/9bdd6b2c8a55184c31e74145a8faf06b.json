{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport configMixin from '../mixins/configMixin';\nimport TeamAvailability from 'widget/components/TeamAvailability';\nimport { mapGetters } from 'vuex';\nimport routerMixin from 'widget/mixins/routerMixin';\nexport default {\n  name: 'Home',\n  components: {\n    TeamAvailability: TeamAvailability\n  },\n  mixins: [configMixin, routerMixin],\n  props: {\n    hasFetched: {\n      type: Boolean,\n      default: false\n    },\n    isCampaignViewClicked: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {};\n  },\n  computed: _objectSpread({}, mapGetters({\n    availableAgents: 'agent/availableAgents',\n    activeCampaign: 'campaign/getActiveCampaign',\n    conversationSize: 'conversation/getConversationSize'\n  })),\n  methods: {\n    startConversation: function startConversation() {\n      if (this.preChatFormEnabled && !this.conversationSize) {\n        return this.replaceRoute('prechat-form');\n      }\n\n      return this.replaceRoute('messages');\n    }\n  }\n};","map":{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAcA,OAAA,WAAA,MAAA,uBAAA;AACA,OAAA,gBAAA,MAAA,oCAAA;AACA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,WAAA,MAAA,2BAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,gBAAA,EAAA;AADA,GAFA;AAKA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,WAAA,CALA;AAMA,EAAA,KAAA,EAAA;AACA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,qBAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AALA,GANA;AAgBA,EAAA,IAhBA,kBAgBA;AACA,WAAA,EAAA;AACA,GAlBA;AAmBA,EAAA,QAAA,oBACA,UAAA,CAAA;AACA,IAAA,eAAA,EAAA,uBADA;AAEA,IAAA,cAAA,EAAA,4BAFA;AAGA,IAAA,gBAAA,EAAA;AAHA,GAAA,CADA,CAnBA;AA0BA,EAAA,OAAA,EAAA;AACA,IAAA,iBADA,+BACA;AACA,UAAA,KAAA,kBAAA,IAAA,CAAA,KAAA,gBAAA,EAAA;AACA,eAAA,KAAA,YAAA,CAAA,cAAA,CAAA;AACA;;AACA,aAAA,KAAA,YAAA,CAAA,UAAA,CAAA;AACA;AANA;AA1BA,CAAA","sourcesContent":["<template>\n  <div class=\"flex flex-1 flex-col justify-end\">\n    <div class=\"flex flex-1 overflow-auto\">\n      <!-- Load Conversation List Components Here -->\n    </div>\n    <team-availability\n      :available-agents=\"availableAgents\"\n      :has-conversation=\"!!conversationSize\"\n      @start-conversation=\"startConversation\"\n    />\n  </div>\n</template>\n\n<script>\nimport configMixin from '../mixins/configMixin';\nimport TeamAvailability from 'widget/components/TeamAvailability';\nimport { mapGetters } from 'vuex';\nimport routerMixin from 'widget/mixins/routerMixin';\nexport default {\n  name: 'Home',\n  components: {\n    TeamAvailability,\n  },\n  mixins: [configMixin, routerMixin],\n  props: {\n    hasFetched: {\n      type: Boolean,\n      default: false,\n    },\n    isCampaignViewClicked: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {};\n  },\n  computed: {\n    ...mapGetters({\n      availableAgents: 'agent/availableAgents',\n      activeCampaign: 'campaign/getActiveCampaign',\n      conversationSize: 'conversation/getConversationSize',\n    }),\n  },\n  methods: {\n    startConversation() {\n      if (this.preChatFormEnabled && !this.conversationSize) {\n        return this.replaceRoute('prechat-form');\n      }\n      return this.replaceRoute('messages');\n    },\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/widget/views"},"metadata":{},"sourceType":"module"}