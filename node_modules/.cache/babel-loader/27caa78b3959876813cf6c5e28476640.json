{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { required, minLength } from 'vuelidate/lib/validators';\nimport { mapGetters } from 'vuex';\nimport alertMixin from 'shared/mixins/alertMixin';\nexport default {\n  mixins: [alertMixin],\n  data: function data() {\n    return {\n      currentPassword: '',\n      password: '',\n      passwordConfirmation: '',\n      isPasswordChanging: false,\n      errorMessage: ''\n    };\n  },\n  validations: {\n    currentPassword: {\n      required: required\n    },\n    password: {\n      minLength: minLength(6)\n    },\n    passwordConfirmation: {\n      minLength: minLength(6),\n      isEqPassword: function isEqPassword(value) {\n        if (value !== this.password) {\n          return false;\n        }\n\n        return true;\n      }\n    }\n  },\n  computed: _objectSpread({}, mapGetters({\n    currentUser: 'getCurrentUser',\n    currentUserId: 'getCurrentUserID'\n  })),\n  methods: {\n    changePassword: function changePassword() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _error$response, _error$response$data;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.$v.$touch();\n\n                if (!_this.$v.$invalid) {\n                  _context.next = 4;\n                  break;\n                }\n\n                _this.showAlert(_this.$t('PROFILE_SETTINGS.FORM.ERROR'));\n\n                return _context.abrupt(\"return\");\n\n              case 4:\n                _context.prev = 4;\n                _context.next = 7;\n                return _this.$store.dispatch('updateProfile', {\n                  password: _this.password,\n                  password_confirmation: _this.passwordConfirmation,\n                  current_password: _this.currentPassword\n                });\n\n              case 7:\n                _this.errorMessage = _this.$t('PROFILE_SETTINGS.PASSWORD_UPDATE_SUCCESS');\n                _context.next = 14;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](4);\n                _this.errorMessage = _this.$t('RESET_PASSWORD.API.ERROR_MESSAGE');\n\n                if (_context.t0 !== null && _context.t0 !== void 0 && (_error$response = _context.t0.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.message) {\n                  _this.errorMessage = _context.t0.response.data.message;\n                }\n\n              case 14:\n                _context.prev = 14;\n                _this.isPasswordChanging = false;\n\n                _this.showAlert(_this.errorMessage);\n\n                return _context.finish(14);\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[4, 10, 14, 18]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"sources":["ChangePassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuEA,SAAA,QAAA,EAAA,SAAA,QAAA,0BAAA;AACA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,UAAA,MAAA,0BAAA;AAEA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,UAAA,CADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,eAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,oBAAA,EAAA,EAHA;AAIA,MAAA,kBAAA,EAAA,KAJA;AAKA,MAAA,YAAA,EAAA;AALA,KAAA;AAOA,GAVA;AAWA,EAAA,WAAA,EAAA;AACA,IAAA,eAAA,EAAA;AACA,MAAA,QAAA,EAAA;AADA,KADA;AAIA,IAAA,QAAA,EAAA;AACA,MAAA,SAAA,EAAA,SAAA,CAAA,CAAA;AADA,KAJA;AAOA,IAAA,oBAAA,EAAA;AACA,MAAA,SAAA,EAAA,SAAA,CAAA,CAAA,CADA;AAEA,MAAA,YAFA,wBAEA,KAFA,EAEA;AACA,YAAA,KAAA,KAAA,KAAA,QAAA,EAAA;AACA,iBAAA,KAAA;AACA;;AACA,eAAA,IAAA;AACA;AAPA;AAPA,GAXA;AA4BA,EAAA,QAAA,oBACA,UAAA,CAAA;AACA,IAAA,WAAA,EAAA,gBADA;AAEA,IAAA,aAAA,EAAA;AAFA,GAAA,CADA,CA5BA;AAkCA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,4BACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,KAAA,CAAA,EAAA,CAAA,MAAA;;AADA,qBAEA,KAAA,CAAA,EAAA,CAAA,QAFA;AAAA;AAAA;AAAA;;AAGA,gBAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,EAAA,CAAA,6BAAA,CAAA;;AAHA;;AAAA;AAAA;AAAA;AAAA,uBAQA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,eAAA,EAAA;AACA,kBAAA,QAAA,EAAA,KAAA,CAAA,QADA;AAEA,kBAAA,qBAAA,EAAA,KAAA,CAAA,oBAFA;AAGA,kBAAA,gBAAA,EAAA,KAAA,CAAA;AAHA,iBAAA,CARA;;AAAA;AAaA,gBAAA,KAAA,CAAA,YAAA,GAAA,KAAA,CAAA,EAAA,CAAA,0CAAA,CAAA;AAbA;AAAA;;AAAA;AAAA;AAAA;AAeA,gBAAA,KAAA,CAAA,YAAA,GAAA,KAAA,CAAA,EAAA,CAAA,kCAAA,CAAA;;AACA,yFAAA,YAAA,QAAA,oEAAA,gBAAA,IAAA,iDAAA,qBAAA,OAAA,EAAA;AACA,kBAAA,KAAA,CAAA,YAAA,GAAA,YAAA,QAAA,CAAA,IAAA,CAAA,OAAA;AACA;;AAlBA;AAAA;AAoBA,gBAAA,KAAA,CAAA,kBAAA,GAAA,KAAA;;AACA,gBAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,YAAA;;AArBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA;AAxBA;AAlCA,CAAA","sourcesContent":["<template>\n  <form @submit.prevent=\"changePassword()\">\n    <div class=\"profile--settings--row row\">\n      <div class=\"columns small-3\">\n        <h4 class=\"block-title\">\n          {{ $t('PROFILE_SETTINGS.FORM.PASSWORD_SECTION.TITLE') }}\n        </h4>\n        <p>{{ $t('PROFILE_SETTINGS.FORM.PASSWORD_SECTION.NOTE') }}</p>\n      </div>\n      <div class=\"columns small-9 medium-5\">\n        <woot-input\n          v-model=\"currentPassword\"\n          type=\"password\"\n          :class=\"{ error: $v.currentPassword.$error }\"\n          :label=\"$t('PROFILE_SETTINGS.FORM.CURRENT_PASSWORD.LABEL')\"\n          :placeholder=\"\n            $t('PROFILE_SETTINGS.FORM.CURRENT_PASSWORD.PLACEHOLDER')\n          \"\n          :error=\"\n            $v.currentPassword.$error\n              ? $t('PROFILE_SETTINGS.FORM.CURRENT_PASSWORD.ERROR')\n              : ''\n          \"\n          @blur=\"$v.currentPassword.$touch\"\n        />\n\n        <woot-input\n          v-model=\"password\"\n          type=\"password\"\n          :class=\"{ error: $v.password.$error }\"\n          :label=\"$t('PROFILE_SETTINGS.FORM.PASSWORD.LABEL')\"\n          :placeholder=\"$t('PROFILE_SETTINGS.FORM.PASSWORD.PLACEHOLDER')\"\n          :error=\"\n            $v.password.$error ? $t('PROFILE_SETTINGS.FORM.PASSWORD.ERROR') : ''\n          \"\n          @blur=\"$v.password.$touch\"\n        />\n\n        <woot-input\n          v-model=\"passwordConfirmation\"\n          type=\"password\"\n          :class=\"{ error: $v.passwordConfirmation.$error }\"\n          :label=\"$t('PROFILE_SETTINGS.FORM.PASSWORD_CONFIRMATION.LABEL')\"\n          :placeholder=\"\n            $t('PROFILE_SETTINGS.FORM.PASSWORD_CONFIRMATION.PLACEHOLDER')\n          \"\n          :error=\"\n            $v.passwordConfirmation.$error\n              ? $t('PROFILE_SETTINGS.FORM.PASSWORD_CONFIRMATION.ERROR')\n              : ''\n          \"\n          @blur=\"$v.passwordConfirmation.$touch\"\n        />\n\n        <woot-button\n          :is-loading=\"isPasswordChanging\"\n          type=\"submit\"\n          :disabled=\"\n            !currentPassword ||\n              !passwordConfirmation ||\n              !$v.passwordConfirmation.isEqPassword\n          \"\n        >\n          {{ $t('PROFILE_SETTINGS.FORM.PASSWORD_SECTION.BTN_TEXT') }}\n        </woot-button>\n      </div>\n    </div>\n  </form>\n</template>\n\n<script>\nimport { required, minLength } from 'vuelidate/lib/validators';\nimport { mapGetters } from 'vuex';\nimport alertMixin from 'shared/mixins/alertMixin';\n\nexport default {\n  mixins: [alertMixin],\n  data() {\n    return {\n      currentPassword: '',\n      password: '',\n      passwordConfirmation: '',\n      isPasswordChanging: false,\n      errorMessage: '',\n    };\n  },\n  validations: {\n    currentPassword: {\n      required,\n    },\n    password: {\n      minLength: minLength(6),\n    },\n    passwordConfirmation: {\n      minLength: minLength(6),\n      isEqPassword(value) {\n        if (value !== this.password) {\n          return false;\n        }\n        return true;\n      },\n    },\n  },\n  computed: {\n    ...mapGetters({\n      currentUser: 'getCurrentUser',\n      currentUserId: 'getCurrentUserID',\n    }),\n  },\n  methods: {\n    async changePassword() {\n      this.$v.$touch();\n      if (this.$v.$invalid) {\n        this.showAlert(this.$t('PROFILE_SETTINGS.FORM.ERROR'));\n        return;\n      }\n\n      try {\n        await this.$store.dispatch('updateProfile', {\n          password: this.password,\n          password_confirmation: this.passwordConfirmation,\n          current_password: this.currentPassword,\n        });\n        this.errorMessage = this.$t('PROFILE_SETTINGS.PASSWORD_UPDATE_SUCCESS');\n      } catch (error) {\n        this.errorMessage = this.$t('RESET_PASSWORD.API.ERROR_MESSAGE');\n        if (error?.response?.data?.message) {\n          this.errorMessage = error.response.data.message;\n        }\n      } finally {\n        this.isPasswordChanging = false;\n        this.showAlert(this.errorMessage);\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import '~dashboard/assets/scss/mixins.scss';\n\n.profile--settings--row {\n  @include border-normal-bottom;\n  padding: var(--space-normal);\n  .small-3 {\n    padding: var(--space-normal) var(--space-medium) var(--space-normal) 0;\n  }\n  .small-9 {\n    padding: var(--space-normal);\n  }\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/settings/profile"},"metadata":{},"sourceType":"module"}