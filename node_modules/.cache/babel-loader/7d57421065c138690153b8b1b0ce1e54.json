{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport \"core-js/modules/es.object.get-prototype-of.js\";\nimport \"core-js/modules/es.reflect.construct.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport BaseActionCableConnector from '../../shared/helpers/BaseActionCableConnector';\nimport { playNewMessageNotificationInWidget } from 'shared/helpers/AudioNotificationHelper';\nimport { ON_AGENT_MESSAGE_RECEIVED } from '../constants/widgetBusEvents';\n\nvar ActionCableConnector = /*#__PURE__*/function (_BaseActionCableConne) {\n  _inherits(ActionCableConnector, _BaseActionCableConne);\n\n  var _super = _createSuper(ActionCableConnector);\n\n  function ActionCableConnector(app, _pubsubToken) {\n    var _this;\n\n    _classCallCheck(this, ActionCableConnector);\n\n    _this = _super.call(this, app, _pubsubToken);\n\n    _this.onStatusChange = function (data) {\n      if (data.status === 'resolved') {\n        _this.app.$store.dispatch('campaign/resetCampaign');\n      }\n\n      _this.app.$store.dispatch('conversationAttributes/update', data);\n    };\n\n    _this.onMessageCreated = function (data) {\n      _this.app.$store.dispatch('conversation/addOrUpdateMessage', data).then(function () {\n        return window.bus.$emit(ON_AGENT_MESSAGE_RECEIVED);\n      });\n\n      if (data.sender_type === 'User') {\n        playNewMessageNotificationInWidget();\n      }\n    };\n\n    _this.onMessageUpdated = function (data) {\n      _this.app.$store.dispatch('conversation/addOrUpdateMessage', data);\n    };\n\n    _this.onConversationCreated = function () {\n      _this.app.$store.dispatch('conversationAttributes/getAttributes');\n    };\n\n    _this.onPresenceUpdate = function (data) {\n      _this.app.$store.dispatch('agent/updatePresence', data.users);\n    };\n\n    _this.onContactMerge = function (data) {\n      var pubsubToken = data.pubsub_token;\n      ActionCableConnector.refreshConnector(pubsubToken);\n    };\n\n    _this.onTypingOn = function (data) {\n      if (data.is_private) {\n        return;\n      }\n\n      _this.clearTimer();\n\n      _this.app.$store.dispatch('conversation/toggleAgentTyping', {\n        status: 'on'\n      });\n\n      _this.initTimer();\n    };\n\n    _this.onTypingOff = function () {\n      _this.clearTimer();\n\n      _this.app.$store.dispatch('conversation/toggleAgentTyping', {\n        status: 'off'\n      });\n    };\n\n    _this.clearTimer = function () {\n      if (_this.CancelTyping) {\n        clearTimeout(_this.CancelTyping);\n        _this.CancelTyping = null;\n      }\n    };\n\n    _this.initTimer = function () {\n      // Turn off typing automatically after 30 seconds\n      _this.CancelTyping = setTimeout(function () {\n        _this.onTypingOff();\n      }, 30000);\n    };\n\n    _this.events = {\n      'message.created': _this.onMessageCreated,\n      'message.updated': _this.onMessageUpdated,\n      'conversation.typing_on': _this.onTypingOn,\n      'conversation.typing_off': _this.onTypingOff,\n      'conversation.status_changed': _this.onStatusChange,\n      'conversation.created': _this.onConversationCreated,\n      'presence.update': _this.onPresenceUpdate,\n      'contact.merged': _this.onContactMerge\n    };\n    return _this;\n  }\n\n  return ActionCableConnector;\n}(BaseActionCableConnector);\n\nexport default ActionCableConnector;","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/widget/helpers/actionCable.js"],"names":["BaseActionCableConnector","playNewMessageNotificationInWidget","ON_AGENT_MESSAGE_RECEIVED","ActionCableConnector","app","pubsubToken","onStatusChange","data","status","$store","dispatch","onMessageCreated","then","window","bus","$emit","sender_type","onMessageUpdated","onConversationCreated","onPresenceUpdate","users","onContactMerge","pubsub_token","refreshConnector","onTypingOn","is_private","clearTimer","initTimer","onTypingOff","CancelTyping","clearTimeout","setTimeout","events"],"mappings":"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","sourcesContent":["import BaseActionCableConnector from '../../shared/helpers/BaseActionCableConnector';\nimport { playNewMessageNotificationInWidget } from 'shared/helpers/AudioNotificationHelper';\nimport { ON_AGENT_MESSAGE_RECEIVED } from '../constants/widgetBusEvents';\n\nclass ActionCableConnector extends BaseActionCableConnector {\n  constructor(app, pubsubToken) {\n    super(app, pubsubToken);\n    this.events = {\n      'message.created': this.onMessageCreated,\n      'message.updated': this.onMessageUpdated,\n      'conversation.typing_on': this.onTypingOn,\n      'conversation.typing_off': this.onTypingOff,\n      'conversation.status_changed': this.onStatusChange,\n      'conversation.created': this.onConversationCreated,\n      'presence.update': this.onPresenceUpdate,\n      'contact.merged': this.onContactMerge,\n    };\n  }\n\n  onStatusChange = data => {\n    if (data.status === 'resolved') {\n      this.app.$store.dispatch('campaign/resetCampaign');\n    }\n    this.app.$store.dispatch('conversationAttributes/update', data);\n  };\n\n  onMessageCreated = data => {\n    this.app.$store\n      .dispatch('conversation/addOrUpdateMessage', data)\n      .then(() => window.bus.$emit(ON_AGENT_MESSAGE_RECEIVED));\n    if (data.sender_type === 'User') {\n      playNewMessageNotificationInWidget();\n    }\n  };\n\n  onMessageUpdated = data => {\n    this.app.$store.dispatch('conversation/addOrUpdateMessage', data);\n  };\n\n  onConversationCreated = () => {\n    this.app.$store.dispatch('conversationAttributes/getAttributes');\n  };\n\n  onPresenceUpdate = data => {\n    this.app.$store.dispatch('agent/updatePresence', data.users);\n  };\n\n  onContactMerge = data => {\n    const { pubsub_token: pubsubToken } = data;\n    ActionCableConnector.refreshConnector(pubsubToken);\n  };\n\n  onTypingOn = data => {\n    if (data.is_private) {\n      return;\n    }\n    this.clearTimer();\n    this.app.$store.dispatch('conversation/toggleAgentTyping', {\n      status: 'on',\n    });\n    this.initTimer();\n  };\n\n  onTypingOff = () => {\n    this.clearTimer();\n    this.app.$store.dispatch('conversation/toggleAgentTyping', {\n      status: 'off',\n    });\n  };\n\n  clearTimer = () => {\n    if (this.CancelTyping) {\n      clearTimeout(this.CancelTyping);\n      this.CancelTyping = null;\n    }\n  };\n\n  initTimer = () => {\n    // Turn off typing automatically after 30 seconds\n    this.CancelTyping = setTimeout(() => {\n      this.onTypingOff();\n    }, 30000);\n  };\n}\n\nexport default ActionCableConnector;\n"]},"metadata":{},"sourceType":"module"}