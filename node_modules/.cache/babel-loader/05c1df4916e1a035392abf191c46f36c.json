{"ast":null,"code":"var _mutations;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport Vue from 'vue';\nimport types from '../mutation-types';\nimport ContactAPI from '../../api/contacts';\nvar state = {\n  records: {},\n  uiFlags: {\n    isFetching: false,\n    isUpdating: false,\n    isError: false\n  }\n};\nexport var getters = {\n  getUIFlags: function getUIFlags($state) {\n    return $state.uiFlags;\n  },\n  getContactLabels: function getContactLabels($state) {\n    return function (id) {\n      return $state.records[Number(id)] || [];\n    };\n  }\n};\nexport var actions = {\n  get: function () {\n    var _get = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref, contactId) {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              commit(types.SET_CONTACT_LABELS_UI_FLAG, {\n                isFetching: true\n              });\n              _context.prev = 2;\n              _context.next = 5;\n              return ContactAPI.getContactLabels(contactId);\n\n            case 5:\n              response = _context.sent;\n              commit(types.SET_CONTACT_LABELS, {\n                id: contactId,\n                data: response.data.payload\n              });\n              commit(types.SET_CONTACT_LABELS_UI_FLAG, {\n                isFetching: false\n              });\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](2);\n              commit(types.SET_CONTACT_LABELS_UI_FLAG, {\n                isFetching: false\n              });\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 10]]);\n    }));\n\n    function get(_x, _x2) {\n      return _get.apply(this, arguments);\n    }\n\n    return get;\n  }(),\n  update: function () {\n    var _update = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref2, _ref3) {\n      var commit, contactId, labels, response;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              contactId = _ref3.contactId, labels = _ref3.labels;\n              commit(types.SET_CONTACT_LABELS_UI_FLAG, {\n                isUpdating: true\n              });\n              _context2.prev = 3;\n              _context2.next = 6;\n              return ContactAPI.updateContactLabels(contactId, labels);\n\n            case 6:\n              response = _context2.sent;\n              commit(types.SET_CONTACT_LABELS, {\n                id: contactId,\n                data: response.data.payload\n              });\n              commit(types.SET_CONTACT_LABELS_UI_FLAG, {\n                isUpdating: false,\n                isError: false\n              });\n              _context2.next = 15;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](3);\n              commit(types.SET_CONTACT_LABELS_UI_FLAG, {\n                isUpdating: false,\n                isError: true\n              });\n              throw new Error(_context2.t0);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[3, 11]]);\n    }));\n\n    function update(_x3, _x4) {\n      return _update.apply(this, arguments);\n    }\n\n    return update;\n  }(),\n  setContactLabel: function setContactLabel(_ref4, _ref5) {\n    var commit = _ref4.commit;\n    var id = _ref5.id,\n        data = _ref5.data;\n    commit(types.SET_CONTACT_LABELS, {\n      id: id,\n      data: data\n    });\n  }\n};\nexport var mutations = (_mutations = {}, _defineProperty(_mutations, types.SET_CONTACT_LABELS_UI_FLAG, function ($state, data) {\n  $state.uiFlags = _objectSpread(_objectSpread({}, $state.uiFlags), data);\n}), _defineProperty(_mutations, types.SET_CONTACT_LABELS, function ($state, _ref6) {\n  var id = _ref6.id,\n      data = _ref6.data;\n  Vue.set($state.records, id, data);\n}), _mutations);\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/store/modules/contactLabels.js"],"names":["Vue","types","ContactAPI","state","records","uiFlags","isFetching","isUpdating","isError","getters","getUIFlags","$state","getContactLabels","id","Number","actions","get","contactId","commit","SET_CONTACT_LABELS_UI_FLAG","response","SET_CONTACT_LABELS","data","payload","update","labels","updateContactLabels","Error","setContactLabel","mutations","set","namespaced"],"mappings":"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","sourcesContent":["import Vue from 'vue';\nimport types from '../mutation-types';\nimport ContactAPI from '../../api/contacts';\n\nconst state = {\n  records: {},\n  uiFlags: {\n    isFetching: false,\n    isUpdating: false,\n    isError: false,\n  },\n};\n\nexport const getters = {\n  getUIFlags($state) {\n    return $state.uiFlags;\n  },\n  getContactLabels: $state => id => {\n    return $state.records[Number(id)] || [];\n  },\n};\n\nexport const actions = {\n  get: async ({ commit }, contactId) => {\n    commit(types.SET_CONTACT_LABELS_UI_FLAG, {\n      isFetching: true,\n    });\n    try {\n      const response = await ContactAPI.getContactLabels(contactId);\n      commit(types.SET_CONTACT_LABELS, {\n        id: contactId,\n        data: response.data.payload,\n      });\n      commit(types.SET_CONTACT_LABELS_UI_FLAG, {\n        isFetching: false,\n      });\n    } catch (error) {\n      commit(types.SET_CONTACT_LABELS_UI_FLAG, {\n        isFetching: false,\n      });\n    }\n  },\n  update: async ({ commit }, { contactId, labels }) => {\n    commit(types.SET_CONTACT_LABELS_UI_FLAG, {\n      isUpdating: true,\n    });\n    try {\n      const response = await ContactAPI.updateContactLabels(contactId, labels);\n      commit(types.SET_CONTACT_LABELS, {\n        id: contactId,\n        data: response.data.payload,\n      });\n      commit(types.SET_CONTACT_LABELS_UI_FLAG, {\n        isUpdating: false,\n        isError: false,\n      });\n    } catch (error) {\n      commit(types.SET_CONTACT_LABELS_UI_FLAG, {\n        isUpdating: false,\n        isError: true,\n      });\n      throw new Error(error);\n    }\n  },\n\n  setContactLabel({ commit }, { id, data }) {\n    commit(types.SET_CONTACT_LABELS, { id, data });\n  },\n};\n\nexport const mutations = {\n  [types.SET_CONTACT_LABELS_UI_FLAG]($state, data) {\n    $state.uiFlags = {\n      ...$state.uiFlags,\n      ...data,\n    };\n  },\n  [types.SET_CONTACT_LABELS]: ($state, { id, data }) => {\n    Vue.set($state.records, id, data);\n  },\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations,\n};\n"]},"metadata":{},"sourceType":"module"}