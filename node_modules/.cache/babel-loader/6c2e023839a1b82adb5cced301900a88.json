{"ast":null,"code":"var _mutations;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"core-js/modules/es.array.filter.js\";\n\n/* eslint no-console: 0 */\nimport * as types from '../mutation-types';\nimport Report from '../../api/reports';\nimport { downloadCsvFile } from '../../helper/downloadHelper';\nvar state = {\n  fetchingStatus: false,\n  reportData: [],\n  accountReport: {\n    isFetching: false,\n    data: []\n  },\n  accountSummary: {\n    avg_first_response_time: 0,\n    avg_resolution_time: 0,\n    conversations_count: 0,\n    incoming_messages_count: 0,\n    outgoing_messages_count: 0,\n    resolutions_count: 0,\n    previous: {}\n  },\n  overview: {\n    uiFlags: {\n      isFetchingAccountConversationMetric: false,\n      isFetchingAgentConversationMetric: false\n    },\n    accountConversationMetric: {},\n    agentConversationMetric: []\n  }\n};\nvar getters = {\n  getAccountReports: function getAccountReports(_state) {\n    return _state.accountReport;\n  },\n  getAccountSummary: function getAccountSummary(_state) {\n    return _state.accountSummary;\n  },\n  getAccountConversationMetric: function getAccountConversationMetric(_state) {\n    return _state.overview.accountConversationMetric;\n  },\n  getAgentConversationMetric: function getAgentConversationMetric(_state) {\n    return _state.overview.agentConversationMetric;\n  },\n  getOverviewUIFlags: function getOverviewUIFlags($state) {\n    return $state.overview.uiFlags;\n  }\n};\nexport var actions = {\n  fetchAccountReport: function fetchAccountReport(_ref, reportObj) {\n    var commit = _ref.commit;\n    commit(types.default.TOGGLE_ACCOUNT_REPORT_LOADING, true);\n    Report.getReports(reportObj.metric, reportObj.from, reportObj.to, reportObj.type, reportObj.id, reportObj.groupBy, reportObj.businessHours).then(function (accountReport) {\n      var data = accountReport.data;\n      data = data.filter(function (el) {\n        return reportObj.to - el.timestamp > 0 && el.timestamp - reportObj.from >= 0;\n      });\n      commit(types.default.SET_ACCOUNT_REPORTS, data);\n      commit(types.default.TOGGLE_ACCOUNT_REPORT_LOADING, false);\n    });\n  },\n  fetchAccountSummary: function fetchAccountSummary(_ref2, reportObj) {\n    var commit = _ref2.commit;\n    Report.getSummary(reportObj.from, reportObj.to, reportObj.type, reportObj.id, reportObj.groupBy, reportObj.businessHours).then(function (accountSummary) {\n      commit(types.default.SET_ACCOUNT_SUMMARY, accountSummary.data);\n    }).catch(function () {\n      commit(types.default.TOGGLE_ACCOUNT_REPORT_LOADING, false);\n    });\n  },\n  fetchAccountConversationMetric: function fetchAccountConversationMetric(_ref3, reportObj) {\n    var commit = _ref3.commit;\n    commit(types.default.TOGGLE_ACCOUNT_CONVERSATION_METRIC_LOADING, true);\n    Report.getConversationMetric(reportObj.type).then(function (accountConversationMetric) {\n      commit(types.default.SET_ACCOUNT_CONVERSATION_METRIC, accountConversationMetric.data);\n      commit(types.default.TOGGLE_ACCOUNT_CONVERSATION_METRIC_LOADING, false);\n    }).catch(function () {\n      commit(types.default.TOGGLE_ACCOUNT_CONVERSATION_METRIC_LOADING, false);\n    });\n  },\n  fetchAgentConversationMetric: function fetchAgentConversationMetric(_ref4, reportObj) {\n    var commit = _ref4.commit;\n    commit(types.default.TOGGLE_AGENT_CONVERSATION_METRIC_LOADING, true);\n    Report.getConversationMetric(reportObj.type, reportObj.page).then(function (agentConversationMetric) {\n      commit(types.default.SET_AGENT_CONVERSATION_METRIC, agentConversationMetric.data);\n      commit(types.default.TOGGLE_AGENT_CONVERSATION_METRIC_LOADING, false);\n    }).catch(function () {\n      commit(types.default.TOGGLE_AGENT_CONVERSATION_METRIC_LOADING, false);\n    });\n  },\n  downloadAgentReports: function downloadAgentReports(_, reportObj) {\n    return Report.getAgentReports(reportObj).then(function (response) {\n      downloadCsvFile(reportObj.fileName, response.data);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  },\n  downloadLabelReports: function downloadLabelReports(_, reportObj) {\n    return Report.getLabelReports(reportObj).then(function (response) {\n      downloadCsvFile(reportObj.fileName, response.data);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  },\n  downloadInboxReports: function downloadInboxReports(_, reportObj) {\n    return Report.getInboxReports(reportObj).then(function (response) {\n      downloadCsvFile(reportObj.fileName, response.data);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  },\n  downloadTeamReports: function downloadTeamReports(_, reportObj) {\n    return Report.getTeamReports(reportObj).then(function (response) {\n      downloadCsvFile(reportObj.fileName, response.data);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }\n};\nvar mutations = (_mutations = {}, _defineProperty(_mutations, types.default.SET_ACCOUNT_REPORTS, function (_state, accountReport) {\n  _state.accountReport.data = accountReport;\n}), _defineProperty(_mutations, types.default.TOGGLE_ACCOUNT_REPORT_LOADING, function (_state, flag) {\n  _state.accountReport.isFetching = flag;\n}), _defineProperty(_mutations, types.default.SET_ACCOUNT_SUMMARY, function (_state, summaryData) {\n  _state.accountSummary = summaryData;\n}), _defineProperty(_mutations, types.default.SET_ACCOUNT_CONVERSATION_METRIC, function (_state, metricData) {\n  _state.overview.accountConversationMetric = metricData;\n}), _defineProperty(_mutations, types.default.TOGGLE_ACCOUNT_CONVERSATION_METRIC_LOADING, function (_state, flag) {\n  _state.overview.uiFlags.isFetchingAccountConversationMetric = flag;\n}), _defineProperty(_mutations, types.default.SET_AGENT_CONVERSATION_METRIC, function (_state, metricData) {\n  _state.overview.agentConversationMetric = metricData;\n}), _defineProperty(_mutations, types.default.TOGGLE_AGENT_CONVERSATION_METRIC_LOADING, function (_state, flag) {\n  _state.overview.uiFlags.isFetchingAgentConversationMetric = flag;\n}), _mutations);\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/store/modules/reports.js"],"names":["types","Report","downloadCsvFile","state","fetchingStatus","reportData","accountReport","isFetching","data","accountSummary","avg_first_response_time","avg_resolution_time","conversations_count","incoming_messages_count","outgoing_messages_count","resolutions_count","previous","overview","uiFlags","isFetchingAccountConversationMetric","isFetchingAgentConversationMetric","accountConversationMetric","agentConversationMetric","getters","getAccountReports","_state","getAccountSummary","getAccountConversationMetric","getAgentConversationMetric","getOverviewUIFlags","$state","actions","fetchAccountReport","reportObj","commit","default","TOGGLE_ACCOUNT_REPORT_LOADING","getReports","metric","from","to","type","id","groupBy","businessHours","then","filter","el","timestamp","SET_ACCOUNT_REPORTS","fetchAccountSummary","getSummary","SET_ACCOUNT_SUMMARY","catch","fetchAccountConversationMetric","TOGGLE_ACCOUNT_CONVERSATION_METRIC_LOADING","getConversationMetric","SET_ACCOUNT_CONVERSATION_METRIC","fetchAgentConversationMetric","TOGGLE_AGENT_CONVERSATION_METRIC_LOADING","page","SET_AGENT_CONVERSATION_METRIC","downloadAgentReports","_","getAgentReports","response","fileName","error","console","downloadLabelReports","getLabelReports","downloadInboxReports","getInboxReports","downloadTeamReports","getTeamReports","mutations","flag","summaryData","metricData"],"mappings":"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","sourcesContent":["/* eslint no-console: 0 */\nimport * as types from '../mutation-types';\nimport Report from '../../api/reports';\nimport { downloadCsvFile } from '../../helper/downloadHelper';\n\nconst state = {\n  fetchingStatus: false,\n  reportData: [],\n  accountReport: {\n    isFetching: false,\n    data: [],\n  },\n  accountSummary: {\n    avg_first_response_time: 0,\n    avg_resolution_time: 0,\n    conversations_count: 0,\n    incoming_messages_count: 0,\n    outgoing_messages_count: 0,\n    resolutions_count: 0,\n    previous: {},\n  },\n  overview: {\n    uiFlags: {\n      isFetchingAccountConversationMetric: false,\n      isFetchingAgentConversationMetric: false,\n    },\n    accountConversationMetric: {},\n    agentConversationMetric: [],\n  },\n};\n\nconst getters = {\n  getAccountReports(_state) {\n    return _state.accountReport;\n  },\n  getAccountSummary(_state) {\n    return _state.accountSummary;\n  },\n  getAccountConversationMetric(_state) {\n    return _state.overview.accountConversationMetric;\n  },\n  getAgentConversationMetric(_state) {\n    return _state.overview.agentConversationMetric;\n  },\n  getOverviewUIFlags($state) {\n    return $state.overview.uiFlags;\n  },\n};\n\nexport const actions = {\n  fetchAccountReport({ commit }, reportObj) {\n    commit(types.default.TOGGLE_ACCOUNT_REPORT_LOADING, true);\n    Report.getReports(\n      reportObj.metric,\n      reportObj.from,\n      reportObj.to,\n      reportObj.type,\n      reportObj.id,\n      reportObj.groupBy,\n      reportObj.businessHours\n    ).then(accountReport => {\n      let { data } = accountReport;\n      data = data.filter(\n        el =>\n          reportObj.to - el.timestamp > 0 && el.timestamp - reportObj.from >= 0\n      );\n      commit(types.default.SET_ACCOUNT_REPORTS, data);\n      commit(types.default.TOGGLE_ACCOUNT_REPORT_LOADING, false);\n    });\n  },\n  fetchAccountSummary({ commit }, reportObj) {\n    Report.getSummary(\n      reportObj.from,\n      reportObj.to,\n      reportObj.type,\n      reportObj.id,\n      reportObj.groupBy,\n      reportObj.businessHours\n    )\n      .then(accountSummary => {\n        commit(types.default.SET_ACCOUNT_SUMMARY, accountSummary.data);\n      })\n      .catch(() => {\n        commit(types.default.TOGGLE_ACCOUNT_REPORT_LOADING, false);\n      });\n  },\n  fetchAccountConversationMetric({ commit }, reportObj) {\n    commit(types.default.TOGGLE_ACCOUNT_CONVERSATION_METRIC_LOADING, true);\n    Report.getConversationMetric(reportObj.type)\n      .then(accountConversationMetric => {\n        commit(\n          types.default.SET_ACCOUNT_CONVERSATION_METRIC,\n          accountConversationMetric.data\n        );\n        commit(types.default.TOGGLE_ACCOUNT_CONVERSATION_METRIC_LOADING, false);\n      })\n      .catch(() => {\n        commit(types.default.TOGGLE_ACCOUNT_CONVERSATION_METRIC_LOADING, false);\n      });\n  },\n  fetchAgentConversationMetric({ commit }, reportObj) {\n    commit(types.default.TOGGLE_AGENT_CONVERSATION_METRIC_LOADING, true);\n    Report.getConversationMetric(reportObj.type, reportObj.page)\n      .then(agentConversationMetric => {\n        commit(\n          types.default.SET_AGENT_CONVERSATION_METRIC,\n          agentConversationMetric.data\n        );\n        commit(types.default.TOGGLE_AGENT_CONVERSATION_METRIC_LOADING, false);\n      })\n      .catch(() => {\n        commit(types.default.TOGGLE_AGENT_CONVERSATION_METRIC_LOADING, false);\n      });\n  },\n  downloadAgentReports(_, reportObj) {\n    return Report.getAgentReports(reportObj)\n      .then(response => {\n        downloadCsvFile(reportObj.fileName, response.data);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  },\n  downloadLabelReports(_, reportObj) {\n    return Report.getLabelReports(reportObj)\n      .then(response => {\n        downloadCsvFile(reportObj.fileName, response.data);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  },\n  downloadInboxReports(_, reportObj) {\n    return Report.getInboxReports(reportObj)\n      .then(response => {\n        downloadCsvFile(reportObj.fileName, response.data);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  },\n  downloadTeamReports(_, reportObj) {\n    return Report.getTeamReports(reportObj)\n      .then(response => {\n        downloadCsvFile(reportObj.fileName, response.data);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  },\n};\n\nconst mutations = {\n  [types.default.SET_ACCOUNT_REPORTS](_state, accountReport) {\n    _state.accountReport.data = accountReport;\n  },\n  [types.default.TOGGLE_ACCOUNT_REPORT_LOADING](_state, flag) {\n    _state.accountReport.isFetching = flag;\n  },\n  [types.default.SET_ACCOUNT_SUMMARY](_state, summaryData) {\n    _state.accountSummary = summaryData;\n  },\n  [types.default.SET_ACCOUNT_CONVERSATION_METRIC](_state, metricData) {\n    _state.overview.accountConversationMetric = metricData;\n  },\n  [types.default.TOGGLE_ACCOUNT_CONVERSATION_METRIC_LOADING](_state, flag) {\n    _state.overview.uiFlags.isFetchingAccountConversationMetric = flag;\n  },\n  [types.default.SET_AGENT_CONVERSATION_METRIC](_state, metricData) {\n    _state.overview.agentConversationMetric = metricData;\n  },\n  [types.default.TOGGLE_AGENT_CONVERSATION_METRIC_LOADING](_state, flag) {\n    _state.overview.uiFlags.isFetchingAgentConversationMetric = flag;\n  },\n};\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations,\n};\n"]},"metadata":{},"sourceType":"module"}