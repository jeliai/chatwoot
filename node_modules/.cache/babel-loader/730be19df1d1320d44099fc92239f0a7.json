{"ast":null,"code":"import \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { DuplicateContactException, ExceptionWithMessage } from 'shared/helpers/CustomErrors';\nimport types from '../../mutation-types';\nimport ContactAPI from '../../../api/contacts';\nimport AccountActionsAPI from '../../../api/accountActions';\n\nvar buildContactFormData = function buildContactFormData(contactParams) {\n  var formData = new FormData();\n\n  var _contactParams$additi = contactParams.additional_attributes,\n      additional_attributes = _contactParams$additi === void 0 ? {} : _contactParams$additi,\n      contactProperties = _objectWithoutProperties(contactParams, [\"additional_attributes\"]);\n\n  Object.keys(contactProperties).forEach(function (key) {\n    if (contactProperties[key]) {\n      formData.append(key, contactProperties[key]);\n    }\n  });\n\n  var social_profiles = additional_attributes.social_profiles,\n      additionalAttributesProperties = _objectWithoutProperties(additional_attributes, [\"social_profiles\"]);\n\n  Object.keys(additionalAttributesProperties).forEach(function (key) {\n    formData.append(\"additional_attributes[\".concat(key, \"]\"), additionalAttributesProperties[key]);\n  });\n  Object.keys(social_profiles).forEach(function (key) {\n    formData.append(\"additional_attributes[social_profiles][\".concat(key, \"]\"), social_profiles[key]);\n  });\n  return formData;\n};\n\nexport var actions = {\n  search: function () {\n    var _search2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref, _ref2) {\n      var commit, _search, page, sortAttr, label, _yield$ContactAPI$sea, _yield$ContactAPI$sea2, payload, meta;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _search = _ref2.search, page = _ref2.page, sortAttr = _ref2.sortAttr, label = _ref2.label;\n              commit(types.SET_CONTACT_UI_FLAG, {\n                isFetching: true\n              });\n              _context.prev = 3;\n              _context.next = 6;\n              return ContactAPI.search(_search, page, sortAttr, label);\n\n            case 6:\n              _yield$ContactAPI$sea = _context.sent;\n              _yield$ContactAPI$sea2 = _yield$ContactAPI$sea.data;\n              payload = _yield$ContactAPI$sea2.payload;\n              meta = _yield$ContactAPI$sea2.meta;\n              commit(types.CLEAR_CONTACTS);\n              commit(types.SET_CONTACTS, payload);\n              commit(types.SET_CONTACT_META, meta);\n              commit(types.SET_CONTACT_UI_FLAG, {\n                isFetching: false\n              });\n              _context.next = 19;\n              break;\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](3);\n              commit(types.SET_CONTACT_UI_FLAG, {\n                isFetching: false\n              });\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 16]]);\n    }));\n\n    function search(_x, _x2) {\n      return _search2.apply(this, arguments);\n    }\n\n    return search;\n  }(),\n  get: function () {\n    var _get = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref3) {\n      var commit,\n          _ref4,\n          _ref4$page,\n          page,\n          sortAttr,\n          label,\n          _yield$ContactAPI$get,\n          _yield$ContactAPI$get2,\n          payload,\n          meta,\n          _args2 = arguments;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref3.commit;\n              _ref4 = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {}, _ref4$page = _ref4.page, page = _ref4$page === void 0 ? 1 : _ref4$page, sortAttr = _ref4.sortAttr, label = _ref4.label;\n              commit(types.SET_CONTACT_UI_FLAG, {\n                isFetching: true\n              });\n              _context2.prev = 3;\n              _context2.next = 6;\n              return ContactAPI.get(page, sortAttr, label);\n\n            case 6:\n              _yield$ContactAPI$get = _context2.sent;\n              _yield$ContactAPI$get2 = _yield$ContactAPI$get.data;\n              payload = _yield$ContactAPI$get2.payload;\n              meta = _yield$ContactAPI$get2.meta;\n              commit(types.CLEAR_CONTACTS);\n              commit(types.SET_CONTACTS, payload);\n              commit(types.SET_CONTACT_META, meta);\n              commit(types.SET_CONTACT_UI_FLAG, {\n                isFetching: false\n              });\n              _context2.next = 19;\n              break;\n\n            case 16:\n              _context2.prev = 16;\n              _context2.t0 = _context2[\"catch\"](3);\n              commit(types.SET_CONTACT_UI_FLAG, {\n                isFetching: false\n              });\n\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[3, 16]]);\n    }));\n\n    function get(_x3) {\n      return _get.apply(this, arguments);\n    }\n\n    return get;\n  }(),\n  show: function () {\n    var _show = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(_ref5, _ref6) {\n      var commit, id, response;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref5.commit;\n              id = _ref6.id;\n              commit(types.SET_CONTACT_UI_FLAG, {\n                isFetchingItem: true\n              });\n              _context3.prev = 3;\n              _context3.next = 6;\n              return ContactAPI.show(id);\n\n            case 6:\n              response = _context3.sent;\n              commit(types.SET_CONTACT_ITEM, response.data.payload);\n              commit(types.SET_CONTACT_UI_FLAG, {\n                isFetchingItem: false\n              });\n              _context3.next = 14;\n              break;\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](3);\n              commit(types.SET_CONTACT_UI_FLAG, {\n                isFetchingItem: false\n              });\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[3, 11]]);\n    }));\n\n    function show(_x4, _x5) {\n      return _show.apply(this, arguments);\n    }\n\n    return show;\n  }(),\n  update: function () {\n    var _update = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(_ref7, _ref8) {\n      var commit, id, _ref8$isFormData, isFormData, contactParams, response, _error$response;\n\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref7.commit;\n              id = _ref8.id, _ref8$isFormData = _ref8.isFormData, isFormData = _ref8$isFormData === void 0 ? false : _ref8$isFormData, contactParams = _objectWithoutProperties(_ref8, [\"id\", \"isFormData\"]);\n              commit(types.SET_CONTACT_UI_FLAG, {\n                isUpdating: true\n              });\n              _context4.prev = 3;\n              _context4.next = 6;\n              return ContactAPI.update(id, isFormData ? buildContactFormData(contactParams) : contactParams);\n\n            case 6:\n              response = _context4.sent;\n              commit(types.EDIT_CONTACT, response.data.payload);\n              commit(types.SET_CONTACT_UI_FLAG, {\n                isUpdating: false\n              });\n              _context4.next = 19;\n              break;\n\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](3);\n              commit(types.SET_CONTACT_UI_FLAG, {\n                isUpdating: false\n              });\n\n              if (!(((_error$response = _context4.t0.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 422)) {\n                _context4.next = 18;\n                break;\n              }\n\n              throw new DuplicateContactException(_context4.t0.response.data.attributes);\n\n            case 18:\n              throw new Error(_context4.t0);\n\n            case 19:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[3, 11]]);\n    }));\n\n    function update(_x6, _x7) {\n      return _update.apply(this, arguments);\n    }\n\n    return update;\n  }(),\n  create: function () {\n    var _create = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(_ref9, _ref10) {\n      var commit, _ref10$isFormData, isFormData, contactParams, response, _error$response2, _error$response2$data;\n\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref9.commit;\n              _ref10$isFormData = _ref10.isFormData, isFormData = _ref10$isFormData === void 0 ? false : _ref10$isFormData, contactParams = _objectWithoutProperties(_ref10, [\"isFormData\"]);\n              commit(types.SET_CONTACT_UI_FLAG, {\n                isCreating: true\n              });\n              _context5.prev = 3;\n              _context5.next = 6;\n              return ContactAPI.create(isFormData ? buildContactFormData(contactParams) : contactParams);\n\n            case 6:\n              response = _context5.sent;\n              commit(types.SET_CONTACT_ITEM, response.data.payload.contact);\n              commit(types.SET_CONTACT_UI_FLAG, {\n                isCreating: false\n              });\n              _context5.next = 19;\n              break;\n\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](3);\n              commit(types.SET_CONTACT_UI_FLAG, {\n                isCreating: false\n              });\n\n              if (!((_error$response2 = _context5.t0.response) !== null && _error$response2 !== void 0 && (_error$response2$data = _error$response2.data) !== null && _error$response2$data !== void 0 && _error$response2$data.message)) {\n                _context5.next = 18;\n                break;\n              }\n\n              throw new ExceptionWithMessage(_context5.t0.response.data.message);\n\n            case 18:\n              throw new Error(_context5.t0);\n\n            case 19:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[3, 11]]);\n    }));\n\n    function create(_x8, _x9) {\n      return _create.apply(this, arguments);\n    }\n\n    return create;\n  }(),\n  import: function () {\n    var _import2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(_ref11, file) {\n      var commit, _error$response3, _error$response3$data;\n\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              commit = _ref11.commit;\n              commit(types.SET_CONTACT_UI_FLAG, {\n                isCreating: true\n              });\n              _context6.prev = 2;\n              _context6.next = 5;\n              return ContactAPI.importContacts(file);\n\n            case 5:\n              commit(types.SET_CONTACT_UI_FLAG, {\n                isCreating: false\n              });\n              _context6.next = 13;\n              break;\n\n            case 8:\n              _context6.prev = 8;\n              _context6.t0 = _context6[\"catch\"](2);\n              commit(types.SET_CONTACT_UI_FLAG, {\n                isCreating: false\n              });\n\n              if (!((_error$response3 = _context6.t0.response) !== null && _error$response3 !== void 0 && (_error$response3$data = _error$response3.data) !== null && _error$response3$data !== void 0 && _error$response3$data.message)) {\n                _context6.next = 13;\n                break;\n              }\n\n              throw new ExceptionWithMessage(_context6.t0.response.data.message);\n\n            case 13:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[2, 8]]);\n    }));\n\n    function _import(_x10, _x11) {\n      return _import2.apply(this, arguments);\n    }\n\n    return _import;\n  }(),\n  delete: function () {\n    var _delete2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(_ref12, id) {\n      var commit, _error$response4, _error$response4$data;\n\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              commit = _ref12.commit;\n              commit(types.SET_CONTACT_UI_FLAG, {\n                isDeleting: true\n              });\n              _context7.prev = 2;\n              _context7.next = 5;\n              return ContactAPI.delete(id);\n\n            case 5:\n              commit(types.SET_CONTACT_UI_FLAG, {\n                isDeleting: false\n              });\n              _context7.next = 16;\n              break;\n\n            case 8:\n              _context7.prev = 8;\n              _context7.t0 = _context7[\"catch\"](2);\n              commit(types.SET_CONTACT_UI_FLAG, {\n                isDeleting: false\n              });\n\n              if (!((_error$response4 = _context7.t0.response) !== null && _error$response4 !== void 0 && (_error$response4$data = _error$response4.data) !== null && _error$response4$data !== void 0 && _error$response4$data.message)) {\n                _context7.next = 15;\n                break;\n              }\n\n              throw new Error(_context7.t0.response.data.message);\n\n            case 15:\n              throw new Error(_context7.t0);\n\n            case 16:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[2, 8]]);\n    }));\n\n    function _delete(_x12, _x13) {\n      return _delete2.apply(this, arguments);\n    }\n\n    return _delete;\n  }(),\n  deleteCustomAttributes: function () {\n    var _deleteCustomAttributes = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(_ref13, _ref14) {\n      var commit, id, customAttributes, response;\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              commit = _ref13.commit;\n              id = _ref14.id, customAttributes = _ref14.customAttributes;\n              _context8.prev = 2;\n              _context8.next = 5;\n              return ContactAPI.destroyCustomAttributes(id, customAttributes);\n\n            case 5:\n              response = _context8.sent;\n              commit(types.EDIT_CONTACT, response.data.payload);\n              _context8.next = 12;\n              break;\n\n            case 9:\n              _context8.prev = 9;\n              _context8.t0 = _context8[\"catch\"](2);\n              throw new Error(_context8.t0);\n\n            case 12:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[2, 9]]);\n    }));\n\n    function deleteCustomAttributes(_x14, _x15) {\n      return _deleteCustomAttributes.apply(this, arguments);\n    }\n\n    return deleteCustomAttributes;\n  }(),\n  deleteAvatar: function () {\n    var _deleteAvatar = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(_ref15, id) {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              commit = _ref15.commit;\n              _context9.prev = 1;\n              _context9.next = 4;\n              return ContactAPI.destroyAvatar(id);\n\n            case 4:\n              response = _context9.sent;\n              commit(types.EDIT_CONTACT, response.data.payload);\n              _context9.next = 11;\n              break;\n\n            case 8:\n              _context9.prev = 8;\n              _context9.t0 = _context9[\"catch\"](1);\n              throw new Error(_context9.t0);\n\n            case 11:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[1, 8]]);\n    }));\n\n    function deleteAvatar(_x16, _x17) {\n      return _deleteAvatar.apply(this, arguments);\n    }\n\n    return deleteAvatar;\n  }(),\n  fetchContactableInbox: function () {\n    var _fetchContactableInbox = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(_ref16, id) {\n      var commit, response, contact, _error$response5, _error$response5$data;\n\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              commit = _ref16.commit;\n              commit(types.SET_CONTACT_UI_FLAG, {\n                isFetchingInboxes: true\n              });\n              _context10.prev = 2;\n              _context10.next = 5;\n              return ContactAPI.getContactableInboxes(id);\n\n            case 5:\n              response = _context10.sent;\n              contact = {\n                id: id,\n                contactableInboxes: response.data.payload\n              };\n              commit(types.SET_CONTACT_ITEM, contact);\n              _context10.next = 17;\n              break;\n\n            case 10:\n              _context10.prev = 10;\n              _context10.t0 = _context10[\"catch\"](2);\n\n              if (!((_error$response5 = _context10.t0.response) !== null && _error$response5 !== void 0 && (_error$response5$data = _error$response5.data) !== null && _error$response5$data !== void 0 && _error$response5$data.message)) {\n                _context10.next = 16;\n                break;\n              }\n\n              throw new ExceptionWithMessage(_context10.t0.response.data.message);\n\n            case 16:\n              throw new Error(_context10.t0);\n\n            case 17:\n              _context10.prev = 17;\n              commit(types.SET_CONTACT_UI_FLAG, {\n                isFetchingInboxes: false\n              });\n              return _context10.finish(17);\n\n            case 20:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[2, 10, 17, 20]]);\n    }));\n\n    function fetchContactableInbox(_x18, _x19) {\n      return _fetchContactableInbox.apply(this, arguments);\n    }\n\n    return fetchContactableInbox;\n  }(),\n  updatePresence: function updatePresence(_ref17, data) {\n    var commit = _ref17.commit;\n    commit(types.UPDATE_CONTACTS_PRESENCE, data);\n  },\n  setContact: function setContact(_ref18, data) {\n    var commit = _ref18.commit;\n    commit(types.SET_CONTACT_ITEM, data);\n  },\n  merge: function () {\n    var _merge = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(_ref19, _ref20) {\n      var commit, childId, parentId, response;\n      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              commit = _ref19.commit;\n              childId = _ref20.childId, parentId = _ref20.parentId;\n              commit(types.SET_CONTACT_UI_FLAG, {\n                isMerging: true\n              });\n              _context11.prev = 3;\n              _context11.next = 6;\n              return AccountActionsAPI.merge(parentId, childId);\n\n            case 6:\n              response = _context11.sent;\n              commit(types.SET_CONTACT_ITEM, response.data);\n              _context11.next = 13;\n              break;\n\n            case 10:\n              _context11.prev = 10;\n              _context11.t0 = _context11[\"catch\"](3);\n              throw new Error(_context11.t0);\n\n            case 13:\n              _context11.prev = 13;\n              commit(types.SET_CONTACT_UI_FLAG, {\n                isMerging: false\n              });\n              return _context11.finish(13);\n\n            case 16:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, null, [[3, 10, 13, 16]]);\n    }));\n\n    function merge(_x20, _x21) {\n      return _merge.apply(this, arguments);\n    }\n\n    return merge;\n  }(),\n  deleteContactThroughConversations: function deleteContactThroughConversations(_ref21, id) {\n    var commit = _ref21.commit;\n    commit(types.DELETE_CONTACT, id);\n    commit(types.CLEAR_CONTACT_CONVERSATIONS, id, {\n      root: true\n    });\n    commit(\"contactConversations/\".concat(types.DELETE_CONTACT_CONVERSATION), id, {\n      root: true\n    });\n  },\n  updateContact: function () {\n    var _updateContact = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(_ref22, updateObj) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              commit = _ref22.commit;\n              commit(types.SET_CONTACT_UI_FLAG, {\n                isUpdating: true\n              });\n\n              try {\n                commit(types.EDIT_CONTACT, updateObj);\n                commit(types.SET_CONTACT_UI_FLAG, {\n                  isUpdating: false\n                });\n              } catch (error) {\n                commit(types.SET_CONTACT_UI_FLAG, {\n                  isUpdating: false\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    }));\n\n    function updateContact(_x22, _x23) {\n      return _updateContact.apply(this, arguments);\n    }\n\n    return updateContact;\n  }(),\n  filter: function () {\n    var _filter = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(_ref23) {\n      var commit,\n          _ref24,\n          _ref24$page,\n          page,\n          sortAttr,\n          queryPayload,\n          _yield$ContactAPI$fil,\n          _yield$ContactAPI$fil2,\n          payload,\n          meta,\n          _args13 = arguments;\n\n      return regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              commit = _ref23.commit;\n              _ref24 = _args13.length > 1 && _args13[1] !== undefined ? _args13[1] : {}, _ref24$page = _ref24.page, page = _ref24$page === void 0 ? 1 : _ref24$page, sortAttr = _ref24.sortAttr, queryPayload = _ref24.queryPayload;\n              commit(types.SET_CONTACT_UI_FLAG, {\n                isFetching: true\n              });\n              _context13.prev = 3;\n              _context13.next = 6;\n              return ContactAPI.filter(page, sortAttr, queryPayload);\n\n            case 6:\n              _yield$ContactAPI$fil = _context13.sent;\n              _yield$ContactAPI$fil2 = _yield$ContactAPI$fil.data;\n              payload = _yield$ContactAPI$fil2.payload;\n              meta = _yield$ContactAPI$fil2.meta;\n              commit(types.CLEAR_CONTACTS);\n              commit(types.SET_CONTACTS, payload);\n              commit(types.SET_CONTACT_META, meta);\n              commit(types.SET_CONTACT_UI_FLAG, {\n                isFetching: false\n              });\n              _context13.next = 19;\n              break;\n\n            case 16:\n              _context13.prev = 16;\n              _context13.t0 = _context13[\"catch\"](3);\n              commit(types.SET_CONTACT_UI_FLAG, {\n                isFetching: false\n              });\n\n            case 19:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13, null, [[3, 16]]);\n    }));\n\n    function filter(_x24) {\n      return _filter.apply(this, arguments);\n    }\n\n    return filter;\n  }(),\n  setContactFilters: function setContactFilters(_ref25, data) {\n    var commit = _ref25.commit;\n    commit(types.SET_CONTACT_FILTERS, data);\n  },\n  clearContactFilters: function clearContactFilters(_ref26) {\n    var commit = _ref26.commit;\n    commit(types.CLEAR_CONTACT_FILTERS);\n  }\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/store/modules/contacts/actions.js"],"names":["DuplicateContactException","ExceptionWithMessage","types","ContactAPI","AccountActionsAPI","buildContactFormData","contactParams","formData","FormData","additional_attributes","contactProperties","Object","keys","forEach","key","append","social_profiles","additionalAttributesProperties","actions","search","commit","page","sortAttr","label","SET_CONTACT_UI_FLAG","isFetching","data","payload","meta","CLEAR_CONTACTS","SET_CONTACTS","SET_CONTACT_META","get","show","id","isFetchingItem","response","SET_CONTACT_ITEM","update","isFormData","isUpdating","EDIT_CONTACT","status","attributes","Error","create","isCreating","contact","message","import","file","importContacts","delete","isDeleting","deleteCustomAttributes","customAttributes","destroyCustomAttributes","deleteAvatar","destroyAvatar","fetchContactableInbox","isFetchingInboxes","getContactableInboxes","contactableInboxes","updatePresence","UPDATE_CONTACTS_PRESENCE","setContact","merge","childId","parentId","isMerging","deleteContactThroughConversations","DELETE_CONTACT","CLEAR_CONTACT_CONVERSATIONS","root","DELETE_CONTACT_CONVERSATION","updateContact","updateObj","error","filter","queryPayload","setContactFilters","SET_CONTACT_FILTERS","clearContactFilters","CLEAR_CONTACT_FILTERS"],"mappings":"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","sourcesContent":["import {\n  DuplicateContactException,\n  ExceptionWithMessage,\n} from 'shared/helpers/CustomErrors';\nimport types from '../../mutation-types';\nimport ContactAPI from '../../../api/contacts';\nimport AccountActionsAPI from '../../../api/accountActions';\n\nconst buildContactFormData = contactParams => {\n  const formData = new FormData();\n  const { additional_attributes = {}, ...contactProperties } = contactParams;\n  Object.keys(contactProperties).forEach(key => {\n    if (contactProperties[key]) {\n      formData.append(key, contactProperties[key]);\n    }\n  });\n  const {\n    social_profiles,\n    ...additionalAttributesProperties\n  } = additional_attributes;\n  Object.keys(additionalAttributesProperties).forEach(key => {\n    formData.append(\n      `additional_attributes[${key}]`,\n      additionalAttributesProperties[key]\n    );\n  });\n  Object.keys(social_profiles).forEach(key => {\n    formData.append(\n      `additional_attributes[social_profiles][${key}]`,\n      social_profiles[key]\n    );\n  });\n  return formData;\n};\n\nexport const actions = {\n  search: async ({ commit }, { search, page, sortAttr, label }) => {\n    commit(types.SET_CONTACT_UI_FLAG, { isFetching: true });\n    try {\n      const {\n        data: { payload, meta },\n      } = await ContactAPI.search(search, page, sortAttr, label);\n      commit(types.CLEAR_CONTACTS);\n      commit(types.SET_CONTACTS, payload);\n      commit(types.SET_CONTACT_META, meta);\n      commit(types.SET_CONTACT_UI_FLAG, { isFetching: false });\n    } catch (error) {\n      commit(types.SET_CONTACT_UI_FLAG, { isFetching: false });\n    }\n  },\n\n  get: async ({ commit }, { page = 1, sortAttr, label } = {}) => {\n    commit(types.SET_CONTACT_UI_FLAG, { isFetching: true });\n    try {\n      const {\n        data: { payload, meta },\n      } = await ContactAPI.get(page, sortAttr, label);\n      commit(types.CLEAR_CONTACTS);\n      commit(types.SET_CONTACTS, payload);\n      commit(types.SET_CONTACT_META, meta);\n      commit(types.SET_CONTACT_UI_FLAG, { isFetching: false });\n    } catch (error) {\n      commit(types.SET_CONTACT_UI_FLAG, { isFetching: false });\n    }\n  },\n\n  show: async ({ commit }, { id }) => {\n    commit(types.SET_CONTACT_UI_FLAG, { isFetchingItem: true });\n    try {\n      const response = await ContactAPI.show(id);\n      commit(types.SET_CONTACT_ITEM, response.data.payload);\n      commit(types.SET_CONTACT_UI_FLAG, {\n        isFetchingItem: false,\n      });\n    } catch (error) {\n      commit(types.SET_CONTACT_UI_FLAG, {\n        isFetchingItem: false,\n      });\n    }\n  },\n\n  update: async ({ commit }, { id, isFormData = false, ...contactParams }) => {\n    commit(types.SET_CONTACT_UI_FLAG, { isUpdating: true });\n    try {\n      const response = await ContactAPI.update(\n        id,\n        isFormData ? buildContactFormData(contactParams) : contactParams\n      );\n      commit(types.EDIT_CONTACT, response.data.payload);\n      commit(types.SET_CONTACT_UI_FLAG, { isUpdating: false });\n    } catch (error) {\n      commit(types.SET_CONTACT_UI_FLAG, { isUpdating: false });\n      if (error.response?.status === 422) {\n        throw new DuplicateContactException(error.response.data.attributes);\n      } else {\n        throw new Error(error);\n      }\n    }\n  },\n\n  create: async ({ commit }, { isFormData = false, ...contactParams }) => {\n    commit(types.SET_CONTACT_UI_FLAG, { isCreating: true });\n    try {\n      const response = await ContactAPI.create(\n        isFormData ? buildContactFormData(contactParams) : contactParams\n      );\n      commit(types.SET_CONTACT_ITEM, response.data.payload.contact);\n      commit(types.SET_CONTACT_UI_FLAG, { isCreating: false });\n    } catch (error) {\n      commit(types.SET_CONTACT_UI_FLAG, { isCreating: false });\n      if (error.response?.data?.message) {\n        throw new ExceptionWithMessage(error.response.data.message);\n      } else {\n        throw new Error(error);\n      }\n    }\n  },\n\n  import: async ({ commit }, file) => {\n    commit(types.SET_CONTACT_UI_FLAG, { isCreating: true });\n    try {\n      await ContactAPI.importContacts(file);\n      commit(types.SET_CONTACT_UI_FLAG, { isCreating: false });\n    } catch (error) {\n      commit(types.SET_CONTACT_UI_FLAG, { isCreating: false });\n      if (error.response?.data?.message) {\n        throw new ExceptionWithMessage(error.response.data.message);\n      }\n    }\n  },\n\n  delete: async ({ commit }, id) => {\n    commit(types.SET_CONTACT_UI_FLAG, { isDeleting: true });\n    try {\n      await ContactAPI.delete(id);\n      commit(types.SET_CONTACT_UI_FLAG, { isDeleting: false });\n    } catch (error) {\n      commit(types.SET_CONTACT_UI_FLAG, { isDeleting: false });\n      if (error.response?.data?.message) {\n        throw new Error(error.response.data.message);\n      } else {\n        throw new Error(error);\n      }\n    }\n  },\n\n  deleteCustomAttributes: async ({ commit }, { id, customAttributes }) => {\n    try {\n      const response = await ContactAPI.destroyCustomAttributes(\n        id,\n        customAttributes\n      );\n      commit(types.EDIT_CONTACT, response.data.payload);\n    } catch (error) {\n      throw new Error(error);\n    }\n  },\n\n  deleteAvatar: async ({ commit }, id) => {\n    try {\n      const response = await ContactAPI.destroyAvatar(id);\n      commit(types.EDIT_CONTACT, response.data.payload);\n    } catch (error) {\n      throw new Error(error);\n    }\n  },\n\n  fetchContactableInbox: async ({ commit }, id) => {\n    commit(types.SET_CONTACT_UI_FLAG, { isFetchingInboxes: true });\n    try {\n      const response = await ContactAPI.getContactableInboxes(id);\n      const contact = {\n        id,\n        contactableInboxes: response.data.payload,\n      };\n      commit(types.SET_CONTACT_ITEM, contact);\n    } catch (error) {\n      if (error.response?.data?.message) {\n        throw new ExceptionWithMessage(error.response.data.message);\n      } else {\n        throw new Error(error);\n      }\n    } finally {\n      commit(types.SET_CONTACT_UI_FLAG, { isFetchingInboxes: false });\n    }\n  },\n\n  updatePresence: ({ commit }, data) => {\n    commit(types.UPDATE_CONTACTS_PRESENCE, data);\n  },\n\n  setContact({ commit }, data) {\n    commit(types.SET_CONTACT_ITEM, data);\n  },\n\n  merge: async ({ commit }, { childId, parentId }) => {\n    commit(types.SET_CONTACT_UI_FLAG, { isMerging: true });\n    try {\n      const response = await AccountActionsAPI.merge(parentId, childId);\n      commit(types.SET_CONTACT_ITEM, response.data);\n    } catch (error) {\n      throw new Error(error);\n    } finally {\n      commit(types.SET_CONTACT_UI_FLAG, { isMerging: false });\n    }\n  },\n\n  deleteContactThroughConversations: ({ commit }, id) => {\n    commit(types.DELETE_CONTACT, id);\n    commit(types.CLEAR_CONTACT_CONVERSATIONS, id, { root: true });\n    commit(`contactConversations/${types.DELETE_CONTACT_CONVERSATION}`, id, {\n      root: true,\n    });\n  },\n\n  updateContact: async ({ commit }, updateObj) => {\n    commit(types.SET_CONTACT_UI_FLAG, { isUpdating: true });\n    try {\n      commit(types.EDIT_CONTACT, updateObj);\n      commit(types.SET_CONTACT_UI_FLAG, { isUpdating: false });\n    } catch (error) {\n      commit(types.SET_CONTACT_UI_FLAG, { isUpdating: false });\n    }\n  },\n\n  filter: async ({ commit }, { page = 1, sortAttr, queryPayload } = {}) => {\n    commit(types.SET_CONTACT_UI_FLAG, { isFetching: true });\n    try {\n      const {\n        data: { payload, meta },\n      } = await ContactAPI.filter(page, sortAttr, queryPayload);\n      commit(types.CLEAR_CONTACTS);\n      commit(types.SET_CONTACTS, payload);\n      commit(types.SET_CONTACT_META, meta);\n      commit(types.SET_CONTACT_UI_FLAG, { isFetching: false });\n    } catch (error) {\n      commit(types.SET_CONTACT_UI_FLAG, { isFetching: false });\n    }\n  },\n\n  setContactFilters({ commit }, data) {\n    commit(types.SET_CONTACT_FILTERS, data);\n  },\n\n  clearContactFilters({ commit }) {\n    commit(types.CLEAR_CONTACT_FILTERS);\n  },\n};\n"]},"metadata":{},"sourceType":"module"}