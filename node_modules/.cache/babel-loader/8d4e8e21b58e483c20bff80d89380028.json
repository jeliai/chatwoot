{"ast":null,"code":"import { __assign } from \"tslib\";\n\nvar Logger =\n/** @class */\nfunction () {\n  function Logger() {\n    var _this = this;\n\n    this._logs = [];\n\n    this.log = function (level, message, extras) {\n      var time = new Date();\n\n      _this._logs.push({\n        level: level,\n        message: message,\n        time: time,\n        extras: extras\n      });\n    };\n  }\n\n  Object.defineProperty(Logger.prototype, \"logs\", {\n    get: function get() {\n      return this._logs;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Logger.prototype.flush = function () {\n    if (this.logs.length > 1) {\n      var formatted = this._logs.reduce(function (logs, log) {\n        var _a;\n\n        var _b, _c;\n\n        var line = __assign(__assign({}, log), {\n          json: JSON.stringify(log.extras, null, ' '),\n          extras: log.extras\n        });\n\n        delete line['time'];\n        var key = (_c = (_b = log.time) === null || _b === void 0 ? void 0 : _b.toISOString()) !== null && _c !== void 0 ? _c : '';\n\n        if (logs[key]) {\n          key = key + \"-\" + Math.random();\n        }\n\n        return __assign(__assign({}, logs), (_a = {}, _a[key] = line, _a));\n      }, {}); // ie doesn't like console.table\n\n\n      if (console.table) {\n        console.table(formatted);\n      } else {\n        console.log(formatted);\n      }\n    } else {\n      this.logs.forEach(function (logEntry) {\n        var level = logEntry.level,\n            message = logEntry.message,\n            extras = logEntry.extras;\n\n        if (level === 'info' || level === 'debug') {\n          console.log(message, extras !== null && extras !== void 0 ? extras : '');\n        } else {\n          console[level](message, extras !== null && extras !== void 0 ? extras : '');\n        }\n      });\n    }\n\n    this._logs = [];\n  };\n\n  return Logger;\n}();\n\nexport default Logger;","map":null,"metadata":{},"sourceType":"module"}