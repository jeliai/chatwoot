{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\nvar _mutations;\n\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport Vue from 'vue';\nimport * as types from '../mutation-types';\nimport UserNotificationSettings from '../../api/userNotificationSettings';\nvar state = {\n  record: {},\n  uiFlags: {\n    isFetching: false,\n    isUpdating: false\n  }\n};\nexport var getters = {\n  getUIFlags: function getUIFlags($state) {\n    return $state.uiFlags;\n  },\n  getSelectedEmailFlags: function getSelectedEmailFlags($state) {\n    return $state.record.selected_email_flags;\n  },\n  getSelectedPushFlags: function getSelectedPushFlags($state) {\n    return $state.record.selected_push_flags;\n  }\n};\nexport var actions = {\n  get: function () {\n    var _get = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref) {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              commit(types.default.SET_USER_NOTIFICATION_UI_FLAG, {\n                isFetching: true\n              });\n              _context.prev = 2;\n              _context.next = 5;\n              return UserNotificationSettings.get();\n\n            case 5:\n              response = _context.sent;\n              commit(types.default.SET_USER_NOTIFICATION, response.data);\n              commit(types.default.SET_USER_NOTIFICATION_UI_FLAG, {\n                isFetching: false\n              });\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](2);\n              commit(types.default.SET_USER_NOTIFICATION_UI_FLAG, {\n                isFetching: false\n              });\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 10]]);\n    }));\n\n    function get(_x) {\n      return _get.apply(this, arguments);\n    }\n\n    return get;\n  }(),\n  update: function () {\n    var _update = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref2, _ref3) {\n      var commit, selectedEmailFlags, selectedPushFlags, response;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              selectedEmailFlags = _ref3.selectedEmailFlags, selectedPushFlags = _ref3.selectedPushFlags;\n              commit(types.default.SET_USER_NOTIFICATION_UI_FLAG, {\n                isUpdating: true\n              });\n              _context2.prev = 3;\n              _context2.next = 6;\n              return UserNotificationSettings.update({\n                notification_settings: {\n                  selected_email_flags: selectedEmailFlags,\n                  selected_push_flags: selectedPushFlags\n                }\n              });\n\n            case 6:\n              response = _context2.sent;\n              commit(types.default.SET_USER_NOTIFICATION, response.data);\n              commit(types.default.SET_USER_NOTIFICATION_UI_FLAG, {\n                isUpdating: false\n              });\n              _context2.next = 15;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](3);\n              commit(types.default.SET_USER_NOTIFICATION_UI_FLAG, {\n                isUpdating: false\n              });\n              throw _context2.t0;\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[3, 11]]);\n    }));\n\n    function update(_x2, _x3) {\n      return _update.apply(this, arguments);\n    }\n\n    return update;\n  }()\n};\nexport var mutations = (_mutations = {}, _defineProperty(_mutations, types.default.SET_USER_NOTIFICATION_UI_FLAG, function ($state, data) {\n  $state.uiFlags = _objectSpread(_objectSpread({}, $state.uiFlags), data);\n}), _defineProperty(_mutations, types.default.SET_USER_NOTIFICATION, function ($state, data) {\n  Vue.set($state, 'record', data);\n}), _mutations);\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/store/modules/userNotificationSettings.js"],"names":["Vue","types","UserNotificationSettings","state","record","uiFlags","isFetching","isUpdating","getters","getUIFlags","$state","getSelectedEmailFlags","selected_email_flags","getSelectedPushFlags","selected_push_flags","actions","get","commit","default","SET_USER_NOTIFICATION_UI_FLAG","response","SET_USER_NOTIFICATION","data","update","selectedEmailFlags","selectedPushFlags","notification_settings","mutations","set","namespaced"],"mappings":"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","sourcesContent":["import Vue from 'vue';\nimport * as types from '../mutation-types';\nimport UserNotificationSettings from '../../api/userNotificationSettings';\n\nconst state = {\n  record: {},\n  uiFlags: {\n    isFetching: false,\n    isUpdating: false,\n  },\n};\n\nexport const getters = {\n  getUIFlags($state) {\n    return $state.uiFlags;\n  },\n  getSelectedEmailFlags: $state => {\n    return $state.record.selected_email_flags;\n  },\n  getSelectedPushFlags: $state => {\n    return $state.record.selected_push_flags;\n  },\n};\n\nexport const actions = {\n  get: async ({ commit }) => {\n    commit(types.default.SET_USER_NOTIFICATION_UI_FLAG, { isFetching: true });\n    try {\n      const response = await UserNotificationSettings.get();\n      commit(types.default.SET_USER_NOTIFICATION, response.data);\n      commit(types.default.SET_USER_NOTIFICATION_UI_FLAG, {\n        isFetching: false,\n      });\n    } catch (error) {\n      commit(types.default.SET_USER_NOTIFICATION_UI_FLAG, {\n        isFetching: false,\n      });\n    }\n  },\n\n  update: async ({ commit }, { selectedEmailFlags, selectedPushFlags }) => {\n    commit(types.default.SET_USER_NOTIFICATION_UI_FLAG, { isUpdating: true });\n    try {\n      const response = await UserNotificationSettings.update({\n        notification_settings: {\n          selected_email_flags: selectedEmailFlags,\n          selected_push_flags: selectedPushFlags,\n        },\n      });\n      commit(types.default.SET_USER_NOTIFICATION, response.data);\n      commit(types.default.SET_USER_NOTIFICATION_UI_FLAG, {\n        isUpdating: false,\n      });\n    } catch (error) {\n      commit(types.default.SET_USER_NOTIFICATION_UI_FLAG, {\n        isUpdating: false,\n      });\n      throw error;\n    }\n  },\n};\n\nexport const mutations = {\n  [types.default.SET_USER_NOTIFICATION_UI_FLAG]($state, data) {\n    $state.uiFlags = {\n      ...$state.uiFlags,\n      ...data,\n    };\n  },\n  [types.default.SET_USER_NOTIFICATION]: ($state, data) => {\n    Vue.set($state, 'record', data);\n  },\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations,\n};\n"]},"metadata":{},"sourceType":"module"}