{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport availabilityMixin from 'widget/mixins/availability';\nimport FluentIcon from 'shared/components/FluentIcon/Index.vue';\nimport HeaderActions from './HeaderActions';\nimport routerMixin from 'widget/mixins/routerMixin';\nimport darkMixin from 'widget/mixins/darkModeMixin.js';\nexport default {\n  name: 'ChatHeader',\n  components: {\n    FluentIcon: FluentIcon,\n    HeaderActions: HeaderActions\n  },\n  mixins: [availabilityMixin, routerMixin, darkMixin],\n  props: {\n    avatarUrl: {\n      type: String,\n      default: ''\n    },\n    title: {\n      type: String,\n      default: ''\n    },\n    showPopoutButton: {\n      type: Boolean,\n      default: false\n    },\n    showBackButton: {\n      type: Boolean,\n      default: false\n    },\n    availableAgents: {\n      type: Array,\n      default: function _default() {}\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    widgetColor: 'appConfig/getWidgetColor'\n  })), {}, {\n    isOnline: function isOnline() {\n      var workingHoursEnabled = this.channelConfig.workingHoursEnabled;\n      var anyAgentOnline = this.availableAgents.length > 0;\n\n      if (workingHoursEnabled) {\n        return this.isInBetweenTheWorkingHours;\n      }\n\n      return anyAgentOnline;\n    },\n    replyWaitMessage: function replyWaitMessage() {\n      return this.isOnline ? this.replyTimeStatus : this.$t('TEAM_AVAILABILITY.OFFLINE');\n    }\n  }),\n  methods: {\n    onBackButtonClick: function onBackButtonClick() {\n      this.replaceRoute('home');\n    }\n  }\n};","map":{"version":3,"sources":["ChatHeader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA,SAAA,UAAA,QAAA,MAAA;AAEA,OAAA,iBAAA,MAAA,4BAAA;AACA,OAAA,UAAA,MAAA,wCAAA;AACA,OAAA,aAAA,MAAA,iBAAA;AACA,OAAA,WAAA,MAAA,2BAAA;AACA,OAAA,SAAA,MAAA,gCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA,UADA;AAEA,IAAA,aAAA,EAAA;AAFA,GAFA;AAMA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,WAAA,EAAA,SAAA,CANA;AAOA,EAAA,KAAA,EAAA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,gBAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,cAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA;AAjBA,GAPA;AA6BA,EAAA,QAAA,kCACA,UAAA,CAAA;AACA,IAAA,WAAA,EAAA;AADA,GAAA,CADA;AAIA,IAAA,QAJA,sBAIA;AACA,UAAA,mBAAA,GAAA,KAAA,aAAA,CAAA,mBAAA;AACA,UAAA,cAAA,GAAA,KAAA,eAAA,CAAA,MAAA,GAAA,CAAA;;AAEA,UAAA,mBAAA,EAAA;AACA,eAAA,KAAA,0BAAA;AACA;;AACA,aAAA,cAAA;AACA,KAZA;AAaA,IAAA,gBAbA,8BAaA;AACA,aAAA,KAAA,QAAA,GACA,KAAA,eADA,GAEA,KAAA,EAAA,CAAA,2BAAA,CAFA;AAGA;AAjBA,IA7BA;AAgDA,EAAA,OAAA,EAAA;AACA,IAAA,iBADA,+BACA;AACA,WAAA,YAAA,CAAA,MAAA;AACA;AAHA;AAhDA,CAAA","sourcesContent":["<template>\n  <header\n    class=\"flex justify-between p-5 w-full\"\n    :class=\"$dm('bg-white', 'dark:bg-slate-900')\"\n  >\n    <div class=\"flex items-center\">\n      <button v-if=\"showBackButton\" @click=\"onBackButtonClick\">\n        <fluent-icon\n          icon=\"chevron-left\"\n          size=\"24\"\n          :class=\"$dm('text-black-900', 'dark:text-slate-50')\"\n        />\n      </button>\n      <img\n        v-if=\"avatarUrl\"\n        class=\"h-8 w-8 rounded-full mr-3\"\n        :src=\"avatarUrl\"\n        alt=\"avatar\"\n      />\n      <div>\n        <div\n          class=\"font-medium text-base flex items-center\"\n          :class=\"$dm('text-black-900', 'dark:text-slate-50')\"\n        >\n          <span v-dompurify-html=\"title\" class=\"mr-1\" />\n          <div\n            :class=\"\n              `h-2 w-2 rounded-full leading-4\n              ${isOnline ? 'bg-green-500' : 'hidden'}`\n            \"\n          />\n        </div>\n        <div\n          class=\"text-xs mt-1\"\n          :class=\"$dm('text-black-700', 'dark:text-slate-400')\"\n        >\n          {{ replyWaitMessage }}\n        </div>\n      </div>\n    </div>\n    <header-actions :show-popout-button=\"showPopoutButton\" />\n  </header>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\n\nimport availabilityMixin from 'widget/mixins/availability';\nimport FluentIcon from 'shared/components/FluentIcon/Index.vue';\nimport HeaderActions from './HeaderActions';\nimport routerMixin from 'widget/mixins/routerMixin';\nimport darkMixin from 'widget/mixins/darkModeMixin.js';\n\nexport default {\n  name: 'ChatHeader',\n  components: {\n    FluentIcon,\n    HeaderActions,\n  },\n  mixins: [availabilityMixin, routerMixin, darkMixin],\n  props: {\n    avatarUrl: {\n      type: String,\n      default: '',\n    },\n    title: {\n      type: String,\n      default: '',\n    },\n    showPopoutButton: {\n      type: Boolean,\n      default: false,\n    },\n    showBackButton: {\n      type: Boolean,\n      default: false,\n    },\n    availableAgents: {\n      type: Array,\n      default: () => {},\n    },\n  },\n  computed: {\n    ...mapGetters({\n      widgetColor: 'appConfig/getWidgetColor',\n    }),\n    isOnline() {\n      const { workingHoursEnabled } = this.channelConfig;\n      const anyAgentOnline = this.availableAgents.length > 0;\n\n      if (workingHoursEnabled) {\n        return this.isInBetweenTheWorkingHours;\n      }\n      return anyAgentOnline;\n    },\n    replyWaitMessage() {\n      return this.isOnline\n        ? this.replyTimeStatus\n        : this.$t('TEAM_AVAILABILITY.OFFLINE');\n    },\n  },\n  methods: {\n    onBackButtonClick() {\n      this.replaceRoute('home');\n    },\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/widget/components"},"metadata":{},"sourceType":"module"}