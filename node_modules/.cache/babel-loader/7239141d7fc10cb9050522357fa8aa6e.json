{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport { frontendURL, conversationUrl } from 'dashboard/helper/URLHelper';\nimport timeMixin from 'dashboard/mixins/time';\nimport messageFormatterMixin from 'shared/mixins/messageFormatterMixin';\nimport SearchMessageItem from './SearchMessageItem.vue';\nexport default {\n  components: {\n    SearchMessageItem: SearchMessageItem\n  },\n  mixins: [timeMixin, messageFormatterMixin],\n  props: {\n    conversationId: {\n      type: Number,\n      default: 0\n    },\n    userName: {\n      type: String,\n      default: ''\n    },\n    inboxName: {\n      type: String,\n      default: ''\n    },\n    timestamp: {\n      type: Number,\n      default: 0\n    },\n    messages: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    searchTerm: {\n      type: String,\n      default: ''\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    accountId: 'getCurrentAccountId'\n  })), {}, {\n    conversationsId: function conversationsId() {\n      return \"# \".concat(this.conversationId);\n    },\n    readableTime: function readableTime() {\n      if (!this.timestamp) {\n        return '';\n      }\n\n      return this.dynamicTime(this.timestamp);\n    }\n  }),\n  methods: {\n    onClick: function onClick() {\n      var path = conversationUrl({\n        accountId: this.accountId,\n        id: this.conversationId\n      });\n      window.location = frontendURL(path);\n    }\n  }\n};","map":{"version":3,"sources":["ResultItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,SAAA,UAAA,QAAA,MAAA;AACA,SAAA,WAAA,EAAA,eAAA,QAAA,4BAAA;AACA,OAAA,SAAA,MAAA,uBAAA;AACA,OAAA,qBAAA,MAAA,qCAAA;AACA,OAAA,iBAAA,MAAA,yBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,iBAAA,EAAA;AAAA,GADA;AAEA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,qBAAA,CAFA;AAIA,EAAA,KAAA,EAAA;AACA,IAAA,cAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA,KAjBA;AAqBA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AArBA,GAJA;AA+BA,EAAA,QAAA,kCACA,UAAA,CAAA;AACA,IAAA,SAAA,EAAA;AADA,GAAA,CADA;AAIA,IAAA,eAJA,6BAIA;AACA,yBAAA,KAAA,cAAA;AACA,KANA;AAOA,IAAA,YAPA,0BAOA;AACA,UAAA,CAAA,KAAA,SAAA,EAAA;AACA,eAAA,EAAA;AACA;;AAEA,aAAA,KAAA,WAAA,CAAA,KAAA,SAAA,CAAA;AACA;AAbA,IA/BA;AA+CA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,UAAA,IAAA,GAAA,eAAA,CAAA;AACA,QAAA,SAAA,EAAA,KAAA,SADA;AAEA,QAAA,EAAA,EAAA,KAAA;AAFA,OAAA,CAAA;AAIA,MAAA,MAAA,CAAA,QAAA,GAAA,WAAA,CAAA,IAAA,CAAA;AACA;AAPA;AA/CA,CAAA","sourcesContent":["<template>\n  <div class=\"search-result\" @click=\"onClick\">\n    <div class=\"result-header\">\n      <div class=\"conversation--block\">\n        <fluent-icon icon=\"chat\" class=\"icon--conversation-search-item\" />\n        <div class=\"conversation\">\n          <div class=\"user-wrap\">\n            <div class=\"name-wrap\">\n              <span class=\"sub-block-title\">{{ userName }}</span>\n            </div>\n            <woot-label\n              :title=\"conversationsId\"\n              :small=\"true\"\n              color-scheme=\"secondary\"\n            />\n          </div>\n          <span class=\"inbox-name\">{{ inboxName }}</span>\n        </div>\n      </div>\n      <span class=\"timestamp\">{{ readableTime }} </span>\n    </div>\n    <search-message-item\n      v-for=\"message in messages\"\n      :key=\"message.created_at\"\n      :user-name=\"message.sender_name\"\n      :timestamp=\"message.created_at\"\n      :message-type=\"message.message_type\"\n      :content=\"message.content\"\n      :search-term=\"searchTerm\"\n    />\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport { frontendURL, conversationUrl } from 'dashboard/helper/URLHelper';\nimport timeMixin from 'dashboard/mixins/time';\nimport messageFormatterMixin from 'shared/mixins/messageFormatterMixin';\nimport SearchMessageItem from './SearchMessageItem.vue';\n\nexport default {\n  components: { SearchMessageItem },\n  mixins: [timeMixin, messageFormatterMixin],\n\n  props: {\n    conversationId: {\n      type: Number,\n      default: 0,\n    },\n    userName: {\n      type: String,\n      default: '',\n    },\n    inboxName: {\n      type: String,\n      default: '',\n    },\n    timestamp: {\n      type: Number,\n      default: 0,\n    },\n    messages: {\n      type: Array,\n      default: () => [],\n    },\n    searchTerm: {\n      type: String,\n      default: '',\n    },\n  },\n\n  computed: {\n    ...mapGetters({\n      accountId: 'getCurrentAccountId',\n    }),\n    conversationsId() {\n      return `# ${this.conversationId}`;\n    },\n    readableTime() {\n      if (!this.timestamp) {\n        return '';\n      }\n\n      return this.dynamicTime(this.timestamp);\n    },\n  },\n\n  methods: {\n    onClick() {\n      const path = conversationUrl({\n        accountId: this.accountId,\n        id: this.conversationId,\n      });\n      window.location = frontendURL(path);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.search-result {\n  display: block;\n  align-items: center;\n  cursor: pointer;\n  color: var(--color-body);\n  padding: var(--space-smaller) var(--space-two) 0 var(--space-normal);\n\n  &:last-child {\n    border-bottom: none;\n    padding-bottom: var(--space-normal);\n  }\n}\n\n.result-header {\n  display: flex;\n  justify-content: space-between;\n  background: var(--color-background);\n  padding: var(--space-smaller) var(--space-slab);\n  margin-bottom: var(--space-small);\n  border-radius: var(--border-radius-medium);\n\n  &:hover {\n    background: var(--w-400);\n    color: var(--white);\n    .inbox-name {\n      color: var(--white);\n    }\n    .timestamp {\n      color: var(--white);\n    }\n    .icon--conversation-search-item {\n      color: var(--white);\n    }\n  }\n}\n\n.conversation--block {\n  align-items: center;\n  display: flex;\n}\n\n.icon--conversation-search-item {\n  align-items: center;\n  display: flex;\n  color: var(--w-500);\n}\n\n.conversation {\n  align-items: flex-start;\n  display: flex;\n  flex-direction: column;\n  padding: var(--space-smaller) var(--space-one);\n}\n\n.user-wrap {\n  display: flex;\n\n  .name-wrap {\n    max-width: 20rem;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n\n    .sub-block-title {\n      font-weight: var(--font-weight-bold);\n      margin-right: var(--space-micro);\n    }\n  }\n}\n\n.inbox-name {\n  border-radius: var(--border-radius-normal);\n  color: var(--s-500);\n  font-size: var(--font-size-mini);\n  font-weight: var(--font-weight-medium);\n}\n\n.timestamp {\n  color: var(--s-500);\n  font-weight: var(--font-weight-medium);\n  font-size: var(--font-size-mini);\n  margin-top: var(--space-smaller);\n  text-align: right;\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/conversation/search"},"metadata":{},"sourceType":"module"}