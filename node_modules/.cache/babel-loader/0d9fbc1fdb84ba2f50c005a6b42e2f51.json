{"ast":null,"code":"import \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport LocaleItemTable from 'dashboard/routes/dashboard/helpcenter/components/PortalListItemTable.vue';\nimport AddLocale from 'dashboard/routes/dashboard/helpcenter/components/AddLocale';\nexport default {\n  components: {\n    LocaleItemTable: LocaleItemTable,\n    AddLocale: AddLocale\n  },\n  mixins: [alertMixin],\n  data: function data() {\n    return {\n      isAddLocaleModalOpen: false,\n      lastPortalSlug: undefined,\n      alertMessage: ''\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    uiFlags: 'portals/uiFlagsIn'\n  })), {}, {\n    currentPortalSlug: function currentPortalSlug() {\n      return this.$route.params.portalSlug;\n    },\n    currentPortal: function currentPortal() {\n      return this.$store.getters['portals/portalBySlug'](this.currentPortalSlug);\n    },\n    locales: function locales() {\n      return this.currentPortal.config.allowed_locales;\n    },\n    allowedLocales: function allowedLocales() {\n      var _this = this;\n\n      return Object.keys(this.locales).map(function (key) {\n        return _this.locales[key].code;\n      });\n    }\n  }),\n  mounted: function mounted() {\n    this.lastPortalSlug = this.currentPortalSlug;\n  },\n  methods: {\n    changeDefaultLocale: function changeDefaultLocale(_ref) {\n      var localeCode = _ref.localeCode;\n      this.updatePortalLocales({\n        allowedLocales: this.allowedLocales,\n        defaultLocale: localeCode,\n        successMessage: this.$t('HELP_CENTER.PORTAL.CHANGE_DEFAULT_LOCALE.API.SUCCESS_MESSAGE'),\n        errorMessage: this.$t('HELP_CENTER.PORTAL.CHANGE_DEFAULT_LOCALE.API.ERROR_MESSAGE')\n      });\n    },\n    deletePortalLocale: function deletePortalLocale(_ref2) {\n      var localeCode = _ref2.localeCode;\n      var updatedLocales = this.allowedLocales.filter(function (code) {\n        return code !== localeCode;\n      });\n      var defaultLocale = this.currentPortal.meta.default_locale;\n      this.updatePortalLocales({\n        allowedLocales: updatedLocales,\n        defaultLocale: defaultLocale,\n        successMessage: this.$t('HELP_CENTER.PORTAL.DELETE_LOCALE.API.SUCCESS_MESSAGE'),\n        errorMessage: this.$t('HELP_CENTER.PORTAL.DELETE_LOCALE.API.ERROR_MESSAGE')\n      });\n    },\n    updatePortalLocales: function updatePortalLocales(_ref3) {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var allowedLocales, defaultLocale, successMessage, errorMessage;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                allowedLocales = _ref3.allowedLocales, defaultLocale = _ref3.defaultLocale, successMessage = _ref3.successMessage, errorMessage = _ref3.errorMessage;\n                _context.prev = 1;\n                _context.next = 4;\n                return _this2.$store.dispatch('portals/update', {\n                  portalSlug: _this2.currentPortal.slug,\n                  config: {\n                    default_locale: defaultLocale,\n                    allowed_locales: allowedLocales\n                  }\n                });\n\n              case 4:\n                _this2.alertMessage = successMessage;\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                _this2.alertMessage = (_context.t0 === null || _context.t0 === void 0 ? void 0 : _context.t0.message) || errorMessage;\n\n              case 10:\n                _context.prev = 10;\n\n                _this2.showAlert(_this2.alertMessage);\n\n                return _context.finish(10);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 7, 10, 13]]);\n      }))();\n    },\n    closeAddLocaleModal: function closeAddLocaleModal() {\n      this.isAddLocaleModalOpen = false;\n      this.selectedPortal = {};\n    },\n    addLocale: function addLocale() {\n      this.isAddLocaleModalOpen = true;\n    }\n  }\n};","map":{"version":3,"sources":["EditPortalLocales.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"portal-locales\">\n    <div class=\"button-container\">\n      <woot-button\n        variant=\"smooth\"\n        size=\"small\"\n        color-scheme=\"primary\"\n        class=\"header-action-buttons\"\n        @click=\"addLocale\"\n      >\n        {{ $t('HELP_CENTER.PORTAL.PORTAL_SETTINGS.LIST_ITEM.HEADER.ADD') }}\n      </woot-button>\n    </div>\n    <div class=\"locale-container\">\n      <locale-item-table\n        :locales=\"locales\"\n        :selected-locale-code=\"currentPortal.meta.default_locale\"\n        @change-default-locale=\"changeDefaultLocale\"\n        @delete=\"deletePortalLocale\"\n      />\n    </div>\n    <woot-modal\n      :show.sync=\"isAddLocaleModalOpen\"\n      :on-close=\"closeAddLocaleModal\"\n    >\n      <add-locale\n        :show=\"isAddLocaleModalOpen\"\n        :portal=\"currentPortal\"\n        @cancel=\"closeAddLocaleModal\"\n      />\n    </woot-modal>\n  </div>\n</template>\n<script>\nimport { mapGetters } from 'vuex';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport LocaleItemTable from 'dashboard/routes/dashboard/helpcenter/components/PortalListItemTable.vue';\nimport AddLocale from 'dashboard/routes/dashboard/helpcenter/components/AddLocale';\nexport default {\n  components: {\n    LocaleItemTable,\n    AddLocale,\n  },\n  mixins: [alertMixin],\n  data() {\n    return {\n      isAddLocaleModalOpen: false,\n      lastPortalSlug: undefined,\n      alertMessage: '',\n    };\n  },\n  computed: {\n    ...mapGetters({\n      uiFlags: 'portals/uiFlagsIn',\n    }),\n    currentPortalSlug() {\n      return this.$route.params.portalSlug;\n    },\n    currentPortal() {\n      return this.$store.getters['portals/portalBySlug'](\n        this.currentPortalSlug\n      );\n    },\n    locales() {\n      return this.currentPortal.config.allowed_locales;\n    },\n    allowedLocales() {\n      return Object.keys(this.locales).map(key => {\n        return this.locales[key].code;\n      });\n    },\n  },\n  mounted() {\n    this.lastPortalSlug = this.currentPortalSlug;\n  },\n  methods: {\n    changeDefaultLocale({ localeCode }) {\n      this.updatePortalLocales({\n        allowedLocales: this.allowedLocales,\n        defaultLocale: localeCode,\n        successMessage: this.$t(\n          'HELP_CENTER.PORTAL.CHANGE_DEFAULT_LOCALE.API.SUCCESS_MESSAGE'\n        ),\n        errorMessage: this.$t(\n          'HELP_CENTER.PORTAL.CHANGE_DEFAULT_LOCALE.API.ERROR_MESSAGE'\n        ),\n      });\n    },\n    deletePortalLocale({ localeCode }) {\n      const updatedLocales = this.allowedLocales.filter(\n        code => code !== localeCode\n      );\n      const defaultLocale = this.currentPortal.meta.default_locale;\n      this.updatePortalLocales({\n        allowedLocales: updatedLocales,\n        defaultLocale,\n        successMessage: this.$t(\n          'HELP_CENTER.PORTAL.DELETE_LOCALE.API.SUCCESS_MESSAGE'\n        ),\n        errorMessage: this.$t(\n          'HELP_CENTER.PORTAL.DELETE_LOCALE.API.ERROR_MESSAGE'\n        ),\n      });\n    },\n    async updatePortalLocales({\n      allowedLocales,\n      defaultLocale,\n      successMessage,\n      errorMessage,\n    }) {\n      try {\n        await this.$store.dispatch('portals/update', {\n          portalSlug: this.currentPortal.slug,\n          config: {\n            default_locale: defaultLocale,\n            allowed_locales: allowedLocales,\n          },\n        });\n        this.alertMessage = successMessage;\n      } catch (error) {\n        this.alertMessage = error?.message || errorMessage;\n      } finally {\n        this.showAlert(this.alertMessage);\n      }\n    },\n    closeAddLocaleModal() {\n      this.isAddLocaleModalOpen = false;\n      this.selectedPortal = {};\n    },\n    addLocale() {\n      this.isAddLocaleModalOpen = true;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.portal-locales {\n  padding: var(--space-small) var(--space-normal);\n  width: 100%;\n  background: var(--white);\n  height: 100%;\n  padding: 0 0 0 var(--space-normal);\n  .button-container {\n    display: flex;\n    justify-content: flex-end;\n  }\n  .locale-container {\n    margin-top: var(--space-normal);\n  }\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/helpcenter/pages/portals"},"metadata":{},"sourceType":"module"}