{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nexport var getters = {\n  uiFlagsIn: function uiFlagsIn(state) {\n    return function (portalId) {\n      var uiFlags = state.portals.uiFlags.byId[portalId];\n      if (uiFlags) return uiFlags;\n      return {\n        isFetching: false,\n        isUpdating: false,\n        isDeleting: false\n      };\n    };\n  },\n  isFetchingPortals: function isFetchingPortals(state) {\n    return state.uiFlags.isFetching;\n  },\n  portalBySlug: function portalBySlug() {\n    for (var _len = arguments.length, getterArguments = new Array(_len), _key = 0; _key < _len; _key++) {\n      getterArguments[_key] = arguments[_key];\n    }\n\n    return function (portalId) {\n      var state = getterArguments[0];\n      var portal = state.portals.byId[portalId];\n      return portal;\n    };\n  },\n  allPortals: function allPortals() {\n    for (var _len2 = arguments.length, getterArguments = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      getterArguments[_key2] = arguments[_key2];\n    }\n\n    var state = getterArguments[0],\n        _getters = getterArguments[1];\n    var portals = state.portals.allIds.map(function (id) {\n      return _getters.portalBySlug(id);\n    });\n    return portals;\n  },\n  count: function count(state) {\n    return state.portals.allIds.length || 0;\n  },\n  getMeta: function getMeta(state) {\n    return state.meta;\n  }\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/store/modules/helpCenterPortals/getters.js"],"names":["getters","uiFlagsIn","state","portalId","uiFlags","portals","byId","isFetching","isUpdating","isDeleting","isFetchingPortals","portalBySlug","getterArguments","portal","allPortals","_getters","allIds","map","id","count","length","getMeta","meta"],"mappings":";AAAA,OAAO,IAAMA,OAAO,GAAG;AACrBC,EAAAA,SAAS,EAAE,mBAAAC,KAAK;AAAA,WAAI,UAAAC,QAAQ,EAAI;AAC9B,UAAMC,OAAO,GAAGF,KAAK,CAACG,OAAN,CAAcD,OAAd,CAAsBE,IAAtB,CAA2BH,QAA3B,CAAhB;AACA,UAAIC,OAAJ,EAAa,OAAOA,OAAP;AACb,aAAO;AAAEG,QAAAA,UAAU,EAAE,KAAd;AAAqBC,QAAAA,UAAU,EAAE,KAAjC;AAAwCC,QAAAA,UAAU,EAAE;AAApD,OAAP;AACD,KAJe;AAAA,GADK;AAOrBC,EAAAA,iBAAiB,EAAE,2BAAAR,KAAK;AAAA,WAAIA,KAAK,CAACE,OAAN,CAAcG,UAAlB;AAAA,GAPH;AAQrBI,EAAAA,YAAY,EAAE;AAAA,sCAAIC,eAAJ;AAAIA,MAAAA,eAAJ;AAAA;;AAAA,WAAwB,UAAAT,QAAQ,EAAI;AAChD,UAAOD,KAAP,GAAgBU,eAAhB;AACA,UAAMC,MAAM,GAAGX,KAAK,CAACG,OAAN,CAAcC,IAAd,CAAmBH,QAAnB,CAAf;AAEA,aAAOU,MAAP;AACD,KALa;AAAA,GARO;AAcrBC,EAAAA,UAAU,EAAE,sBAAwB;AAAA,uCAApBF,eAAoB;AAApBA,MAAAA,eAAoB;AAAA;;AAClC,QAAOV,KAAP,GAA0BU,eAA1B;AAAA,QAAcG,QAAd,GAA0BH,eAA1B;AACA,QAAMP,OAAO,GAAGH,KAAK,CAACG,OAAN,CAAcW,MAAd,CAAqBC,GAArB,CAAyB,UAAAC,EAAE,EAAI;AAC7C,aAAOH,QAAQ,CAACJ,YAAT,CAAsBO,EAAtB,CAAP;AACD,KAFe,CAAhB;AAGA,WAAOb,OAAP;AACD,GApBoB;AAqBrBc,EAAAA,KAAK,EAAE,eAAAjB,KAAK;AAAA,WAAIA,KAAK,CAACG,OAAN,CAAcW,MAAd,CAAqBI,MAArB,IAA+B,CAAnC;AAAA,GArBS;AAsBrBC,EAAAA,OAAO,EAAE,iBAAAnB,KAAK;AAAA,WAAIA,KAAK,CAACoB,IAAV;AAAA;AAtBO,CAAhB","sourcesContent":["export const getters = {\n  uiFlagsIn: state => portalId => {\n    const uiFlags = state.portals.uiFlags.byId[portalId];\n    if (uiFlags) return uiFlags;\n    return { isFetching: false, isUpdating: false, isDeleting: false };\n  },\n\n  isFetchingPortals: state => state.uiFlags.isFetching,\n  portalBySlug: (...getterArguments) => portalId => {\n    const [state] = getterArguments;\n    const portal = state.portals.byId[portalId];\n\n    return portal;\n  },\n  allPortals: (...getterArguments) => {\n    const [state, _getters] = getterArguments;\n    const portals = state.portals.allIds.map(id => {\n      return _getters.portalBySlug(id);\n    });\n    return portals;\n  },\n  count: state => state.portals.allIds.length || 0,\n  getMeta: state => state.meta,\n};\n"]},"metadata":{},"sourceType":"module"}