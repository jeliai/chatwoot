{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\n/* global axios */\nimport Cookies from 'js-cookie';\nimport endPoints from './endPoints';\nimport { setAuthCredentials, clearCookiesOnLogout } from '../store/utils/api';\nexport default {\n  login: function login(creds) {\n    return new Promise(function (resolve, reject) {\n      axios.post('auth/sign_in', creds).then(function (response) {\n        setAuthCredentials(response);\n        resolve(response.data);\n      }).catch(function (error) {\n        reject(error.response);\n      });\n    });\n  },\n  register: function register(creds) {\n    var urlData = endPoints('register');\n    var fetchPromise = new Promise(function (resolve, reject) {\n      axios.post(urlData.url, {\n        account_name: creds.accountName.trim(),\n        user_full_name: creds.fullName.trim(),\n        email: creds.email,\n        password: creds.password,\n        h_captcha_client_response: creds.hCaptchaClientResponse\n      }).then(function (response) {\n        setAuthCredentials(response);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n    return fetchPromise;\n  },\n  validityCheck: function validityCheck() {\n    var urlData = endPoints('validityCheck');\n    return axios.get(urlData.url);\n  },\n  logout: function logout() {\n    var urlData = endPoints('logout');\n    var fetchPromise = new Promise(function (resolve, reject) {\n      axios.delete(urlData.url).then(function (response) {\n        clearCookiesOnLogout();\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n    return fetchPromise;\n  },\n  hasAuthCookie: function hasAuthCookie() {\n    return !!Cookies.getJSON('cw_d_session_info');\n  },\n  getAuthData: function getAuthData() {\n    if (this.hasAuthCookie()) {\n      return Cookies.getJSON('cw_d_session_info');\n    }\n\n    return false;\n  },\n  verifyPasswordToken: function verifyPasswordToken(_ref) {\n    var confirmationToken = _ref.confirmationToken;\n    return new Promise(function (resolve, reject) {\n      axios.post('auth/confirmation', {\n        confirmation_token: confirmationToken\n      }).then(function (response) {\n        setAuthCredentials(response);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error.response);\n      });\n    });\n  },\n  setNewPassword: function setNewPassword(_ref2) {\n    var resetPasswordToken = _ref2.resetPasswordToken,\n        password = _ref2.password,\n        confirmPassword = _ref2.confirmPassword;\n    return new Promise(function (resolve, reject) {\n      axios.put('auth/password', {\n        reset_password_token: resetPasswordToken,\n        password_confirmation: confirmPassword,\n        password: password\n      }).then(function (response) {\n        setAuthCredentials(response);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error.response);\n      });\n    });\n  },\n  resetPassword: function resetPassword(_ref3) {\n    var email = _ref3.email;\n    var urlData = endPoints('resetPassword');\n    return axios.post(urlData.url, {\n      email: email\n    });\n  },\n  profileUpdate: function profileUpdate(_ref4) {\n    var password = _ref4.password,\n        password_confirmation = _ref4.password_confirmation,\n        displayName = _ref4.displayName,\n        avatar = _ref4.avatar,\n        profileAttributes = _objectWithoutProperties(_ref4, [\"password\", \"password_confirmation\", \"displayName\", \"avatar\"]);\n\n    var formData = new FormData();\n    Object.keys(profileAttributes).forEach(function (key) {\n      var hasValue = profileAttributes[key] === undefined;\n\n      if (!hasValue) {\n        formData.append(\"profile[\".concat(key, \"]\"), profileAttributes[key]);\n      }\n    });\n    formData.append('profile[display_name]', displayName || '');\n\n    if (password && password_confirmation) {\n      formData.append('profile[password]', password);\n      formData.append('profile[password_confirmation]', password_confirmation);\n    }\n\n    if (avatar) {\n      formData.append('profile[avatar]', avatar);\n    }\n\n    return axios.put(endPoints('profileUpdate').url, formData);\n  },\n  updateUISettings: function updateUISettings(_ref5) {\n    var uiSettings = _ref5.uiSettings;\n    return axios.put(endPoints('profileUpdate').url, {\n      profile: {\n        ui_settings: uiSettings\n      }\n    });\n  },\n  updateAvailability: function updateAvailability(availabilityData) {\n    return axios.post(endPoints('availabilityUpdate').url, {\n      profile: _objectSpread({}, availabilityData)\n    });\n  },\n  deleteAvatar: function deleteAvatar() {\n    return axios.delete(endPoints('deleteAvatar').url);\n  },\n  setActiveAccount: function setActiveAccount(_ref6) {\n    var accountId = _ref6.accountId;\n    var urlData = endPoints('setActiveAccount');\n    return axios.put(urlData.url, {\n      profile: {\n        account_id: accountId\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/api/auth.js"],"names":["Cookies","endPoints","setAuthCredentials","clearCookiesOnLogout","login","creds","Promise","resolve","reject","axios","post","then","response","data","catch","error","register","urlData","fetchPromise","url","account_name","accountName","trim","user_full_name","fullName","email","password","h_captcha_client_response","hCaptchaClientResponse","validityCheck","get","logout","delete","hasAuthCookie","getJSON","getAuthData","verifyPasswordToken","confirmationToken","confirmation_token","setNewPassword","resetPasswordToken","confirmPassword","put","reset_password_token","password_confirmation","resetPassword","profileUpdate","displayName","avatar","profileAttributes","formData","FormData","Object","keys","forEach","key","hasValue","undefined","append","updateUISettings","uiSettings","profile","ui_settings","updateAvailability","availabilityData","deleteAvatar","setActiveAccount","accountId","account_id"],"mappings":"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","sourcesContent":["/* global axios */\n\nimport Cookies from 'js-cookie';\nimport endPoints from './endPoints';\nimport { setAuthCredentials, clearCookiesOnLogout } from '../store/utils/api';\n\nexport default {\n  login(creds) {\n    return new Promise((resolve, reject) => {\n      axios\n        .post('auth/sign_in', creds)\n        .then(response => {\n          setAuthCredentials(response);\n          resolve(response.data);\n        })\n        .catch(error => {\n          reject(error.response);\n        });\n    });\n  },\n\n  register(creds) {\n    const urlData = endPoints('register');\n    const fetchPromise = new Promise((resolve, reject) => {\n      axios\n        .post(urlData.url, {\n          account_name: creds.accountName.trim(),\n          user_full_name: creds.fullName.trim(),\n          email: creds.email,\n          password: creds.password,\n          h_captcha_client_response: creds.hCaptchaClientResponse,\n        })\n        .then(response => {\n          setAuthCredentials(response);\n          resolve(response);\n        })\n        .catch(error => {\n          reject(error);\n        });\n    });\n    return fetchPromise;\n  },\n  validityCheck() {\n    const urlData = endPoints('validityCheck');\n    return axios.get(urlData.url);\n  },\n  logout() {\n    const urlData = endPoints('logout');\n    const fetchPromise = new Promise((resolve, reject) => {\n      axios\n        .delete(urlData.url)\n        .then(response => {\n          clearCookiesOnLogout();\n          resolve(response);\n        })\n        .catch(error => {\n          reject(error);\n        });\n    });\n    return fetchPromise;\n  },\n  hasAuthCookie() {\n    return !!Cookies.getJSON('cw_d_session_info');\n  },\n  getAuthData() {\n    if (this.hasAuthCookie()) {\n      return Cookies.getJSON('cw_d_session_info');\n    }\n    return false;\n  },\n  verifyPasswordToken({ confirmationToken }) {\n    return new Promise((resolve, reject) => {\n      axios\n        .post('auth/confirmation', {\n          confirmation_token: confirmationToken,\n        })\n        .then(response => {\n          setAuthCredentials(response);\n          resolve(response);\n        })\n        .catch(error => {\n          reject(error.response);\n        });\n    });\n  },\n\n  setNewPassword({ resetPasswordToken, password, confirmPassword }) {\n    return new Promise((resolve, reject) => {\n      axios\n        .put('auth/password', {\n          reset_password_token: resetPasswordToken,\n          password_confirmation: confirmPassword,\n          password,\n        })\n        .then(response => {\n          setAuthCredentials(response);\n          resolve(response);\n        })\n        .catch(error => {\n          reject(error.response);\n        });\n    });\n  },\n\n  resetPassword({ email }) {\n    const urlData = endPoints('resetPassword');\n    return axios.post(urlData.url, { email });\n  },\n\n  profileUpdate({\n    password,\n    password_confirmation,\n    displayName,\n    avatar,\n    ...profileAttributes\n  }) {\n    const formData = new FormData();\n    Object.keys(profileAttributes).forEach(key => {\n      const hasValue = profileAttributes[key] === undefined;\n      if (!hasValue) {\n        formData.append(`profile[${key}]`, profileAttributes[key]);\n      }\n    });\n    formData.append('profile[display_name]', displayName || '');\n    if (password && password_confirmation) {\n      formData.append('profile[password]', password);\n      formData.append('profile[password_confirmation]', password_confirmation);\n    }\n    if (avatar) {\n      formData.append('profile[avatar]', avatar);\n    }\n    return axios.put(endPoints('profileUpdate').url, formData);\n  },\n\n  updateUISettings({ uiSettings }) {\n    return axios.put(endPoints('profileUpdate').url, {\n      profile: { ui_settings: uiSettings },\n    });\n  },\n\n  updateAvailability(availabilityData) {\n    return axios.post(endPoints('availabilityUpdate').url, {\n      profile: { ...availabilityData },\n    });\n  },\n\n  deleteAvatar() {\n    return axios.delete(endPoints('deleteAvatar').url);\n  },\n\n  setActiveAccount({ accountId }) {\n    const urlData = endPoints('setActiveAccount');\n    return axios.put(urlData.url, {\n      profile: {\n        account_id: accountId,\n      },\n    });\n  },\n};\n"]},"metadata":{},"sourceType":"module"}