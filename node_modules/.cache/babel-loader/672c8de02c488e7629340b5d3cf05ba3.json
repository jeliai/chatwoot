{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { required, minLength, email } from 'vuelidate/lib/validators';\nimport Auth from '../../api/auth';\nexport default {\n  data: function data() {\n    return {\n      // We need to initialize the component with any\n      // properties that will be used in it\n      credentials: {\n        email: ''\n      },\n      resetPassword: {\n        message: '',\n        showLoading: false\n      },\n      error: ''\n    };\n  },\n  validations: {\n    credentials: {\n      email: {\n        required: required,\n        email: email,\n        minLength: minLength(4)\n      }\n    }\n  },\n  methods: {\n    showAlert: function showAlert(message) {\n      // Reset loading, current selected agent\n      this.resetPassword.showLoading = false;\n      bus.$emit('newToastMessage', message);\n    },\n    submit: function submit() {\n      var _this = this;\n\n      this.resetPassword.showLoading = true;\n      Auth.resetPassword(this.credentials).then(function (res) {\n        var successMessage = _this.$t('RESET_PASSWORD.API.SUCCESS_MESSAGE');\n\n        if (res.data && res.data.message) {\n          successMessage = res.data.message;\n        }\n\n        _this.showAlert(successMessage);\n      }).catch(function (error) {\n        var _error$response, _error$response$data;\n\n        var errorMessage = _this.$t('RESET_PASSWORD.API.ERROR_MESSAGE');\n\n        if (error !== null && error !== void 0 && (_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.message) {\n          errorMessage = error.response.data.message;\n        }\n\n        _this.showAlert(errorMessage);\n      });\n    }\n  }\n};","map":{"version":3,"sources":["ResetPassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,SAAA,QAAA,EAAA,SAAA,EAAA,KAAA,QAAA,0BAAA;AACA,OAAA,IAAA,MAAA,gBAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA;AACA;AACA,MAAA,WAAA,EAAA;AACA,QAAA,KAAA,EAAA;AADA,OAHA;AAMA,MAAA,aAAA,EAAA;AACA,QAAA,OAAA,EAAA,EADA;AAEA,QAAA,WAAA,EAAA;AAFA,OANA;AAUA,MAAA,KAAA,EAAA;AAVA,KAAA;AAYA,GAdA;AAeA,EAAA,WAAA,EAAA;AACA,IAAA,WAAA,EAAA;AACA,MAAA,KAAA,EAAA;AACA,QAAA,QAAA,EAAA,QADA;AAEA,QAAA,KAAA,EAAA,KAFA;AAGA,QAAA,SAAA,EAAA,SAAA,CAAA,CAAA;AAHA;AADA;AADA,GAfA;AAwBA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,qBACA,OADA,EACA;AACA;AACA,WAAA,aAAA,CAAA,WAAA,GAAA,KAAA;AACA,MAAA,GAAA,CAAA,KAAA,CAAA,iBAAA,EAAA,OAAA;AACA,KALA;AAMA,IAAA,MANA,oBAMA;AAAA;;AACA,WAAA,aAAA,CAAA,WAAA,GAAA,IAAA;AACA,MAAA,IAAA,CAAA,aAAA,CAAA,KAAA,WAAA,EACA,IADA,CACA,UAAA,GAAA,EAAA;AACA,YAAA,cAAA,GAAA,KAAA,CAAA,EAAA,CAAA,oCAAA,CAAA;;AACA,YAAA,GAAA,CAAA,IAAA,IAAA,GAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AACA,UAAA,cAAA,GAAA,GAAA,CAAA,IAAA,CAAA,OAAA;AACA;;AACA,QAAA,KAAA,CAAA,SAAA,CAAA,cAAA;AACA,OAPA,EAQA,KARA,CAQA,UAAA,KAAA,EAAA;AAAA;;AACA,YAAA,YAAA,GAAA,KAAA,CAAA,EAAA,CAAA,kCAAA,CAAA;;AACA,YAAA,KAAA,aAAA,KAAA,kCAAA,KAAA,CAAA,QAAA,oEAAA,gBAAA,IAAA,iDAAA,qBAAA,OAAA,EAAA;AACA,UAAA,YAAA,GAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,OAAA;AACA;;AACA,QAAA,KAAA,CAAA,SAAA,CAAA,YAAA;AACA,OAdA;AAeA;AAvBA;AAxBA,CAAA","sourcesContent":["<template>\n  <form\n    class=\"login-box medium-4 column align-self-middle\"\n    @submit.prevent=\"submit()\"\n  >\n    <h4>{{ $t('RESET_PASSWORD.TITLE') }}</h4>\n    <div class=\"column log-in-form\">\n      <label :class=\"{ error: $v.credentials.email.$error }\">\n        {{ $t('RESET_PASSWORD.EMAIL.LABEL') }}\n        <input\n          v-model.trim=\"credentials.email\"\n          type=\"text\"\n          :placeholder=\"$t('RESET_PASSWORD.EMAIL.PLACEHOLDER')\"\n          @input=\"$v.credentials.email.$touch\"\n        />\n        <span v-if=\"$v.credentials.email.$error\" class=\"message\">\n          {{ $t('RESET_PASSWORD.EMAIL.ERROR') }}\n        </span>\n      </label>\n      <woot-submit-button\n        :disabled=\"$v.credentials.email.$invalid || resetPassword.showLoading\"\n        :button-text=\"$t('RESET_PASSWORD.SUBMIT')\"\n        :loading=\"resetPassword.showLoading\"\n        button-class=\"expanded\"\n      />\n    </div>\n  </form>\n</template>\n\n<script>\nimport { required, minLength, email } from 'vuelidate/lib/validators';\nimport Auth from '../../api/auth';\n\nexport default {\n  data() {\n    return {\n      // We need to initialize the component with any\n      // properties that will be used in it\n      credentials: {\n        email: '',\n      },\n      resetPassword: {\n        message: '',\n        showLoading: false,\n      },\n      error: '',\n    };\n  },\n  validations: {\n    credentials: {\n      email: {\n        required,\n        email,\n        minLength: minLength(4),\n      },\n    },\n  },\n  methods: {\n    showAlert(message) {\n      // Reset loading, current selected agent\n      this.resetPassword.showLoading = false;\n      bus.$emit('newToastMessage', message);\n    },\n    submit() {\n      this.resetPassword.showLoading = true;\n      Auth.resetPassword(this.credentials)\n        .then(res => {\n          let successMessage = this.$t('RESET_PASSWORD.API.SUCCESS_MESSAGE');\n          if (res.data && res.data.message) {\n            successMessage = res.data.message;\n          }\n          this.showAlert(successMessage);\n        })\n        .catch(error => {\n          let errorMessage = this.$t('RESET_PASSWORD.API.ERROR_MESSAGE');\n          if (error?.response?.data?.message) {\n            errorMessage = error.response.data.message;\n          }\n          this.showAlert(errorMessage);\n        });\n    },\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/dashboard/routes/auth"},"metadata":{},"sourceType":"module"}