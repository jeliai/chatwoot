{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CsatMetrics from './components/CsatMetrics';\nimport CsatTable from './components/CsatTable';\nimport ReportFilterSelector from './components/FilterSelector';\nimport { mapGetters } from 'vuex';\nimport { generateFileName } from '../../../../helper/downloadHelper';\nexport default {\n  name: 'CsatResponses',\n  components: {\n    CsatMetrics: CsatMetrics,\n    CsatTable: CsatTable,\n    ReportFilterSelector: ReportFilterSelector\n  },\n  data: function data() {\n    return {\n      pageIndex: 1,\n      from: 0,\n      to: 0,\n      userIds: []\n    };\n  },\n  computed: _objectSpread({}, mapGetters({\n    agentList: 'agents/getAgents'\n  })),\n  mounted: function mounted() {\n    this.$store.dispatch('agents/get');\n  },\n  methods: {\n    getAllData: function getAllData() {\n      this.$store.dispatch('csat/getMetrics', {\n        from: this.from,\n        to: this.to,\n        user_ids: this.userIds\n      });\n      this.getResponses();\n    },\n    getResponses: function getResponses() {\n      this.$store.dispatch('csat/get', {\n        page: this.pageIndex,\n        from: this.from,\n        to: this.to,\n        user_ids: this.userIds\n      });\n    },\n    onPageNumberChange: function onPageNumberChange(pageIndex) {\n      this.pageIndex = pageIndex;\n      this.getResponses();\n    },\n    onDateRangeChange: function onDateRangeChange(_ref) {\n      var from = _ref.from,\n          to = _ref.to;\n      this.from = from;\n      this.to = to;\n      this.getAllData();\n    },\n    onAgentsFilterChange: function onAgentsFilterChange(agents) {\n      this.userIds = agents.map(function (el) {\n        return el.id;\n      });\n      this.getAllData();\n    },\n    downloadReports: function downloadReports() {\n      var type = 'csat';\n      this.$store.dispatch('csat/downloadCSATReports', {\n        from: this.from,\n        to: this.to,\n        user_ids: this.userIds,\n        fileName: generateFileName({\n          type: type,\n          to: this.to\n        })\n      });\n    }\n  }\n};","map":{"version":3,"sources":["CsatResponses.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,OAAA,WAAA,MAAA,0BAAA;AACA,OAAA,SAAA,MAAA,wBAAA;AACA,OAAA,oBAAA,MAAA,6BAAA;AACA,SAAA,UAAA,QAAA,MAAA;AACA,SAAA,gBAAA,QAAA,mCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA,WADA;AAEA,IAAA,SAAA,EAAA,SAFA;AAGA,IAAA,oBAAA,EAAA;AAHA,GAFA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AAAA,MAAA,SAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EAAA,CAAA;AAAA,MAAA,EAAA,EAAA,CAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KAAA;AACA,GATA;AAUA,EAAA,QAAA,oBACA,UAAA,CAAA;AACA,IAAA,SAAA,EAAA;AADA,GAAA,CADA,CAVA;AAeA,EAAA,OAfA,qBAeA;AACA,SAAA,MAAA,CAAA,QAAA,CAAA,YAAA;AACA,GAjBA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,iBAAA,EAAA;AACA,QAAA,IAAA,EAAA,KAAA,IADA;AAEA,QAAA,EAAA,EAAA,KAAA,EAFA;AAGA,QAAA,QAAA,EAAA,KAAA;AAHA,OAAA;AAKA,WAAA,YAAA;AACA,KARA;AASA,IAAA,YATA,0BASA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,UAAA,EAAA;AACA,QAAA,IAAA,EAAA,KAAA,SADA;AAEA,QAAA,IAAA,EAAA,KAAA,IAFA;AAGA,QAAA,EAAA,EAAA,KAAA,EAHA;AAIA,QAAA,QAAA,EAAA,KAAA;AAJA,OAAA;AAMA,KAhBA;AAiBA,IAAA,kBAjBA,8BAiBA,SAjBA,EAiBA;AACA,WAAA,SAAA,GAAA,SAAA;AACA,WAAA,YAAA;AACA,KApBA;AAqBA,IAAA,iBArBA,mCAqBA;AAAA,UAAA,IAAA,QAAA,IAAA;AAAA,UAAA,EAAA,QAAA,EAAA;AACA,WAAA,IAAA,GAAA,IAAA;AACA,WAAA,EAAA,GAAA,EAAA;AACA,WAAA,UAAA;AACA,KAzBA;AA0BA,IAAA,oBA1BA,gCA0BA,MA1BA,EA0BA;AACA,WAAA,OAAA,GAAA,MAAA,CAAA,GAAA,CAAA,UAAA,EAAA;AAAA,eAAA,EAAA,CAAA,EAAA;AAAA,OAAA,CAAA;AACA,WAAA,UAAA;AACA,KA7BA;AA8BA,IAAA,eA9BA,6BA8BA;AACA,UAAA,IAAA,GAAA,MAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,0BAAA,EAAA;AACA,QAAA,IAAA,EAAA,KAAA,IADA;AAEA,QAAA,EAAA,EAAA,KAAA,EAFA;AAGA,QAAA,QAAA,EAAA,KAAA,OAHA;AAIA,QAAA,QAAA,EAAA,gBAAA,CAAA;AAAA,UAAA,IAAA,EAAA,IAAA;AAAA,UAAA,EAAA,EAAA,KAAA;AAAA,SAAA;AAJA,OAAA;AAMA;AAtCA;AAlBA,CAAA","sourcesContent":["<template>\n  <div class=\"column content-box\">\n    <report-filter-selector\n      agents-filter\n      :agents-filter-items-list=\"agentList\"\n      :show-business-hours-switch=\"false\"\n      @date-range-change=\"onDateRangeChange\"\n      @agents-filter-change=\"onAgentsFilterChange\"\n    />\n    <woot-button\n      color-scheme=\"success\"\n      class-names=\"button--fixed-right-top\"\n      icon=\"arrow-download\"\n      @click=\"downloadReports\"\n    >\n      {{ $t('CSAT_REPORTS.DOWNLOAD') }}\n    </woot-button>\n    <csat-metrics />\n    <csat-table :page-index=\"pageIndex\" @page-change=\"onPageNumberChange\" />\n  </div>\n</template>\n<script>\nimport CsatMetrics from './components/CsatMetrics';\nimport CsatTable from './components/CsatTable';\nimport ReportFilterSelector from './components/FilterSelector';\nimport { mapGetters } from 'vuex';\nimport { generateFileName } from '../../../../helper/downloadHelper';\n\nexport default {\n  name: 'CsatResponses',\n  components: {\n    CsatMetrics,\n    CsatTable,\n    ReportFilterSelector,\n  },\n  data() {\n    return { pageIndex: 1, from: 0, to: 0, userIds: [] };\n  },\n  computed: {\n    ...mapGetters({\n      agentList: 'agents/getAgents',\n    }),\n  },\n  mounted() {\n    this.$store.dispatch('agents/get');\n  },\n  methods: {\n    getAllData() {\n      this.$store.dispatch('csat/getMetrics', {\n        from: this.from,\n        to: this.to,\n        user_ids: this.userIds,\n      });\n      this.getResponses();\n    },\n    getResponses() {\n      this.$store.dispatch('csat/get', {\n        page: this.pageIndex,\n        from: this.from,\n        to: this.to,\n        user_ids: this.userIds,\n      });\n    },\n    onPageNumberChange(pageIndex) {\n      this.pageIndex = pageIndex;\n      this.getResponses();\n    },\n    onDateRangeChange({ from, to }) {\n      this.from = from;\n      this.to = to;\n      this.getAllData();\n    },\n    onAgentsFilterChange(agents) {\n      this.userIds = agents.map(el => el.id);\n      this.getAllData();\n    },\n    downloadReports() {\n      const type = 'csat';\n      this.$store.dispatch('csat/downloadCSATReports', {\n        from: this.from,\n        to: this.to,\n        user_ids: this.userIds,\n        fileName: generateFileName({ type, to: this.to }),\n      });\n    },\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/settings/reports"},"metadata":{},"sourceType":"module"}