{"ast":null,"code":"import \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport alertMixin from 'shared/mixins/alertMixin';\nimport { DuplicateContactException, ExceptionWithMessage } from 'shared/helpers/CustomErrors';\nimport { required, email } from 'vuelidate/lib/validators';\nimport { isPhoneE164OrEmpty } from 'shared/helpers/Validators';\nexport default {\n  mixins: [alertMixin],\n  props: {\n    contact: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    inProgress: {\n      type: Boolean,\n      default: false\n    },\n    onSubmit: {\n      type: Function,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    return {\n      companyName: '',\n      description: '',\n      email: '',\n      name: '',\n      phoneNumber: '',\n      avatarFile: null,\n      avatarUrl: '',\n      socialProfileUserNames: {\n        facebook: '',\n        twitter: '',\n        linkedin: '',\n        github: ''\n      },\n      socialProfileKeys: [{\n        key: 'facebook',\n        prefixURL: 'https://facebook.com/'\n      }, {\n        key: 'twitter',\n        prefixURL: 'https://twitter.com/'\n      }, {\n        key: 'linkedin',\n        prefixURL: 'https://linkedin.com/'\n      }, {\n        key: 'github',\n        prefixURL: 'https://github.com/'\n      }]\n    };\n  },\n  validations: {\n    name: {\n      required: required\n    },\n    description: {},\n    email: {\n      email: email\n    },\n    companyName: {},\n    phoneNumber: {\n      isPhoneE164OrEmpty: isPhoneE164OrEmpty\n    },\n    bio: {}\n  },\n  watch: {\n    contact: function contact() {\n      this.setContactObject();\n    }\n  },\n  mounted: function mounted() {\n    this.setContactObject();\n  },\n  methods: {\n    onCancel: function onCancel() {\n      this.$emit('cancel');\n    },\n    onSuccess: function onSuccess() {\n      this.$emit('success');\n    },\n    setContactObject: function setContactObject() {\n      var _this$contact = this.contact,\n          emailAddress = _this$contact.email,\n          phoneNumber = _this$contact.phone_number,\n          name = _this$contact.name;\n      var additionalAttributes = this.contact.additional_attributes || {};\n      this.name = name || '';\n      this.email = emailAddress || '';\n      this.phoneNumber = phoneNumber || '';\n      this.companyName = additionalAttributes.company_name || '';\n      this.description = additionalAttributes.description || '';\n      this.avatarUrl = this.contact.thumbnail || '';\n      var _additionalAttributes = additionalAttributes.social_profiles,\n          socialProfiles = _additionalAttributes === void 0 ? {} : _additionalAttributes,\n          twitterScreenName = additionalAttributes.screen_name;\n      this.socialProfileUserNames = {\n        twitter: socialProfiles.twitter || twitterScreenName || '',\n        facebook: socialProfiles.facebook || '',\n        linkedin: socialProfiles.linkedin || '',\n        github: socialProfiles.github || ''\n      };\n    },\n    getContactObject: function getContactObject() {\n      var contactObject = {\n        id: this.contact.id,\n        name: this.name,\n        email: this.email,\n        phone_number: this.phoneNumber,\n        additional_attributes: _objectSpread(_objectSpread({}, this.contact.additional_attributes), {}, {\n          description: this.description,\n          company_name: this.companyName,\n          social_profiles: this.socialProfileUserNames\n        })\n      };\n\n      if (this.avatarFile) {\n        contactObject.avatar = this.avatarFile;\n        contactObject.isFormData = true;\n      }\n\n      return contactObject;\n    },\n    handleSubmit: function handleSubmit() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.$v.$touch();\n\n                if (!_this.$v.$invalid) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                _context.prev = 3;\n                _context.next = 6;\n                return _this.onSubmit(_this.getContactObject());\n\n              case 6:\n                _this.onSuccess();\n\n                _this.showAlert(_this.$t('CONTACT_FORM.SUCCESS_MESSAGE'));\n\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](3);\n\n                if (_context.t0 instanceof DuplicateContactException) {\n                  if (_context.t0.data.includes('email')) {\n                    _this.showAlert(_this.$t('CONTACT_FORM.FORM.EMAIL_ADDRESS.DUPLICATE'));\n                  } else if (_context.t0.data.includes('phone_number')) {\n                    _this.showAlert(_this.$t('CONTACT_FORM.FORM.PHONE_NUMBER.DUPLICATE'));\n                  }\n                } else if (_context.t0 instanceof ExceptionWithMessage) {\n                  _this.showAlert(_context.t0.data);\n                } else {\n                  _this.showAlert(_this.$t('CONTACT_FORM.ERROR_MESSAGE'));\n                }\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[3, 10]]);\n      }))();\n    },\n    handleImageUpload: function handleImageUpload(_ref) {\n      var file = _ref.file,\n          url = _ref.url;\n      this.avatarFile = file;\n      this.avatarUrl = url;\n    },\n    handleAvatarDelete: function handleAvatarDelete() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n\n                if (!(_this2.contact && _this2.contact.id)) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                _context2.next = 4;\n                return _this2.$store.dispatch('contacts/deleteAvatar', _this2.contact.id);\n\n              case 4:\n                _this2.showAlert(_this2.$t('CONTACT_FORM.DELETE_AVATAR.API.SUCCESS_MESSAGE'));\n\n              case 5:\n                _this2.avatarFile = null;\n                _this2.avatarUrl = '';\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](0);\n\n                _this2.showAlert(_context2.t0.message ? _context2.t0.message : _this2.$t('CONTACT_FORM.DELETE_AVATAR.API.ERROR_MESSAGE'));\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 9]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"sources":["ContactForm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <form class=\"contact--form\" @submit.prevent=\"handleSubmit\">\n    <div class=\"row\">\n      <div class=\"columns\">\n        <woot-avatar-uploader\n          :label=\"$t('CONTACT_FORM.FORM.AVATAR.LABEL')\"\n          :src=\"avatarUrl\"\n          :username-avatar=\"name\"\n          :delete-avatar=\"!!avatarUrl\"\n          class=\"settings-item\"\n          @change=\"handleImageUpload\"\n          @onAvatarDelete=\"handleAvatarDelete\"\n        />\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"columns\">\n        <label :class=\"{ error: $v.name.$error }\">\n          {{ $t('CONTACT_FORM.FORM.NAME.LABEL') }}\n          <input\n            v-model.trim=\"name\"\n            type=\"text\"\n            :placeholder=\"$t('CONTACT_FORM.FORM.NAME.PLACEHOLDER')\"\n            @input=\"$v.name.$touch\"\n          />\n        </label>\n\n        <label :class=\"{ error: $v.email.$error }\">\n          {{ $t('CONTACT_FORM.FORM.EMAIL_ADDRESS.LABEL') }}\n          <input\n            v-model.trim=\"email\"\n            type=\"text\"\n            :placeholder=\"$t('CONTACT_FORM.FORM.EMAIL_ADDRESS.PLACEHOLDER')\"\n            @input=\"$v.email.$touch\"\n          />\n          <span v-if=\"$v.email.$error\" class=\"message\">\n            {{ $t('CONTACT_FORM.FORM.EMAIL_ADDRESS.ERROR') }}\n          </span>\n        </label>\n      </div>\n    </div>\n    <div class=\"medium-12 columns\">\n      <label :class=\"{ error: $v.description.$error }\">\n        {{ $t('CONTACT_FORM.FORM.BIO.LABEL') }}\n        <textarea\n          v-model.trim=\"description\"\n          type=\"text\"\n          :placeholder=\"$t('CONTACT_FORM.FORM.BIO.PLACEHOLDER')\"\n          @input=\"$v.description.$touch\"\n        />\n      </label>\n    </div>\n    <div class=\"row\">\n      <div class=\"medium-12 columns\">\n        <label :class=\"{ error: $v.phoneNumber.$error }\">\n          {{ $t('CONTACT_FORM.FORM.PHONE_NUMBER.LABEL') }}\n          <input\n            v-model.trim=\"phoneNumber\"\n            type=\"text\"\n            :placeholder=\"$t('CONTACT_FORM.FORM.PHONE_NUMBER.PLACEHOLDER')\"\n            @input=\"$v.phoneNumber.$touch\"\n          />\n          <span v-if=\"$v.phoneNumber.$error\" class=\"message\">\n            {{ $t('CONTACT_FORM.FORM.PHONE_NUMBER.ERROR') }}\n          </span>\n        </label>\n        <div\n          v-if=\"$v.phoneNumber.$error || !phoneNumber\"\n          class=\"callout small warning\"\n        >\n          {{ $t('CONTACT_FORM.FORM.PHONE_NUMBER.HELP') }}\n        </div>\n      </div>\n    </div>\n    <woot-input\n      v-model.trim=\"companyName\"\n      class=\"columns\"\n      :label=\"$t('CONTACT_FORM.FORM.COMPANY_NAME.LABEL')\"\n      :placeholder=\"$t('CONTACT_FORM.FORM.COMPANY_NAME.PLACEHOLDER')\"\n    />\n    <div class=\"medium-12 columns\">\n      <label>\n        Social Profiles\n      </label>\n      <div\n        v-for=\"socialProfile in socialProfileKeys\"\n        :key=\"socialProfile.key\"\n        class=\"input-group\"\n      >\n        <span class=\"input-group-label\">{{ socialProfile.prefixURL }}</span>\n        <input\n          v-model=\"socialProfileUserNames[socialProfile.key]\"\n          class=\"input-group-field\"\n          type=\"text\"\n        />\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <div class=\"medium-12 columns\">\n        <woot-submit-button\n          :loading=\"inProgress\"\n          :button-text=\"$t('CONTACT_FORM.FORM.SUBMIT')\"\n        />\n        <button class=\"button clear\" @click.prevent=\"onCancel\">\n          {{ $t('CONTACT_FORM.FORM.CANCEL') }}\n        </button>\n      </div>\n    </div>\n  </form>\n</template>\n\n<script>\nimport alertMixin from 'shared/mixins/alertMixin';\nimport {\n  DuplicateContactException,\n  ExceptionWithMessage,\n} from 'shared/helpers/CustomErrors';\nimport { required, email } from 'vuelidate/lib/validators';\n\nimport { isPhoneE164OrEmpty } from 'shared/helpers/Validators';\n\nexport default {\n  mixins: [alertMixin],\n  props: {\n    contact: {\n      type: Object,\n      default: () => ({}),\n    },\n    inProgress: {\n      type: Boolean,\n      default: false,\n    },\n    onSubmit: {\n      type: Function,\n      default: () => {},\n    },\n  },\n  data() {\n    return {\n      companyName: '',\n      description: '',\n      email: '',\n      name: '',\n      phoneNumber: '',\n      avatarFile: null,\n      avatarUrl: '',\n      socialProfileUserNames: {\n        facebook: '',\n        twitter: '',\n        linkedin: '',\n        github: '',\n      },\n      socialProfileKeys: [\n        { key: 'facebook', prefixURL: 'https://facebook.com/' },\n        { key: 'twitter', prefixURL: 'https://twitter.com/' },\n        { key: 'linkedin', prefixURL: 'https://linkedin.com/' },\n        { key: 'github', prefixURL: 'https://github.com/' },\n      ],\n    };\n  },\n  validations: {\n    name: {\n      required,\n    },\n    description: {},\n    email: {\n      email,\n    },\n    companyName: {},\n    phoneNumber: {\n      isPhoneE164OrEmpty,\n    },\n    bio: {},\n  },\n\n  watch: {\n    contact() {\n      this.setContactObject();\n    },\n  },\n  mounted() {\n    this.setContactObject();\n  },\n  methods: {\n    onCancel() {\n      this.$emit('cancel');\n    },\n    onSuccess() {\n      this.$emit('success');\n    },\n    setContactObject() {\n      const {\n        email: emailAddress,\n        phone_number: phoneNumber,\n        name,\n      } = this.contact;\n      const additionalAttributes = this.contact.additional_attributes || {};\n\n      this.name = name || '';\n      this.email = emailAddress || '';\n      this.phoneNumber = phoneNumber || '';\n      this.companyName = additionalAttributes.company_name || '';\n      this.description = additionalAttributes.description || '';\n      this.avatarUrl = this.contact.thumbnail || '';\n      const {\n        social_profiles: socialProfiles = {},\n        screen_name: twitterScreenName,\n      } = additionalAttributes;\n      this.socialProfileUserNames = {\n        twitter: socialProfiles.twitter || twitterScreenName || '',\n        facebook: socialProfiles.facebook || '',\n        linkedin: socialProfiles.linkedin || '',\n        github: socialProfiles.github || '',\n      };\n    },\n    getContactObject() {\n      const contactObject = {\n        id: this.contact.id,\n        name: this.name,\n        email: this.email,\n        phone_number: this.phoneNumber,\n        additional_attributes: {\n          ...this.contact.additional_attributes,\n          description: this.description,\n          company_name: this.companyName,\n          social_profiles: this.socialProfileUserNames,\n        },\n      };\n      if (this.avatarFile) {\n        contactObject.avatar = this.avatarFile;\n        contactObject.isFormData = true;\n      }\n      return contactObject;\n    },\n    async handleSubmit() {\n      this.$v.$touch();\n\n      if (this.$v.$invalid) {\n        return;\n      }\n      try {\n        await this.onSubmit(this.getContactObject());\n        this.onSuccess();\n        this.showAlert(this.$t('CONTACT_FORM.SUCCESS_MESSAGE'));\n      } catch (error) {\n        if (error instanceof DuplicateContactException) {\n          if (error.data.includes('email')) {\n            this.showAlert(\n              this.$t('CONTACT_FORM.FORM.EMAIL_ADDRESS.DUPLICATE')\n            );\n          } else if (error.data.includes('phone_number')) {\n            this.showAlert(this.$t('CONTACT_FORM.FORM.PHONE_NUMBER.DUPLICATE'));\n          }\n        } else if (error instanceof ExceptionWithMessage) {\n          this.showAlert(error.data);\n        } else {\n          this.showAlert(this.$t('CONTACT_FORM.ERROR_MESSAGE'));\n        }\n      }\n    },\n    handleImageUpload({ file, url }) {\n      this.avatarFile = file;\n      this.avatarUrl = url;\n    },\n    async handleAvatarDelete() {\n      try {\n        if (this.contact && this.contact.id) {\n          await this.$store.dispatch('contacts/deleteAvatar', this.contact.id);\n          this.showAlert(\n            this.$t('CONTACT_FORM.DELETE_AVATAR.API.SUCCESS_MESSAGE')\n          );\n        }\n        this.avatarFile = null;\n        this.avatarUrl = '';\n      } catch (error) {\n        this.showAlert(\n          error.message\n            ? error.message\n            : this.$t('CONTACT_FORM.DELETE_AVATAR.API.ERROR_MESSAGE')\n        );\n      }\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.contact--form {\n  padding: var(--space-normal) var(--space-large) var(--space-large);\n\n  .columns {\n    padding: 0 var(--space-smaller);\n  }\n}\n\n.input-group-label {\n  font-size: var(--font-size-small);\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/conversation/contact"},"metadata":{},"sourceType":"module"}