{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.concat.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { MESSAGE_TYPE, MESSAGE_STATUS } from 'shared/constants/messages';\nimport { BUS_EVENTS } from 'shared/constants/busEvents';\nimport inboxMixin from 'shared/mixins/inboxMixin';\nexport default {\n  mixins: [inboxMixin],\n  props: {\n    sender: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    readableTime: {\n      type: String,\n      default: ''\n    },\n    storySender: {\n      type: String,\n      default: ''\n    },\n    storyId: {\n      type: String,\n      default: ''\n    },\n    isEmail: {\n      type: Boolean,\n      default: true\n    },\n    isPrivate: {\n      type: Boolean,\n      default: true\n    },\n    isATweet: {\n      type: Boolean,\n      default: true\n    },\n    hasInstagramStory: {\n      type: Boolean,\n      default: true\n    },\n    messageType: {\n      type: Number,\n      default: 1\n    },\n    messageStatus: {\n      type: String,\n      default: ''\n    },\n    sourceId: {\n      type: String,\n      default: ''\n    },\n    id: {\n      type: [String, Number],\n      default: ''\n    },\n    inboxId: {\n      type: [String, Number],\n      default: 0\n    },\n    messageRead: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    inbox: function inbox() {\n      return this.$store.getters['inboxes/getInbox'](this.inboxId);\n    },\n    isIncoming: function isIncoming() {\n      return MESSAGE_TYPE.INCOMING === this.messageType;\n    },\n    isOutgoing: function isOutgoing() {\n      return MESSAGE_TYPE.OUTGOING === this.messageType;\n    },\n    isDelivered: function isDelivered() {\n      return MESSAGE_STATUS.DELIVERED === this.messageStatus;\n    },\n    isRead: function isRead() {\n      return MESSAGE_STATUS.READ === this.messageStatus;\n    },\n    isSent: function isSent() {\n      return MESSAGE_STATUS.SENT === this.messageStatus;\n    },\n    screenName: function screenName() {\n      var _ref = this.sender || {},\n          _ref$additional_attri = _ref.additional_attributes,\n          additionalAttributes = _ref$additional_attri === void 0 ? {} : _ref$additional_attri;\n\n      return (additionalAttributes === null || additionalAttributes === void 0 ? void 0 : additionalAttributes.screen_name) || '';\n    },\n    linkToTweet: function linkToTweet() {\n      if (!this.sourceId || !this.inbox.name) {\n        return '';\n      }\n\n      var screenName = this.screenName,\n          sourceId = this.sourceId;\n      return \"https://twitter.com/\".concat(screenName || this.inbox.name, \"/status/\").concat(sourceId);\n    },\n    linkToStory: function linkToStory() {\n      if (!this.storyId || !this.storySender) {\n        return '';\n      }\n\n      var storySender = this.storySender,\n          storyId = this.storyId;\n      return \"https://www.instagram.com/stories/\".concat(storySender, \"/\").concat(storyId);\n    },\n    showSentIndicator: function showSentIndicator() {\n      return this.isOutgoing && this.sourceId && (this.isAnEmailChannel || this.isAWhatsAppChannel && this.isSent);\n    },\n    showDeliveredIndicator: function showDeliveredIndicator() {\n      return this.isOutgoing && this.sourceId && this.isAWhatsAppChannel && this.isDelivered;\n    },\n    showReadIndicator: function showReadIndicator() {\n      return this.isOutgoing && this.sourceId && this.isAWhatsAppChannel && this.isRead;\n    }\n  },\n  methods: {\n    onTweetReply: function onTweetReply() {\n      bus.$emit(BUS_EVENTS.SET_TWEET_REPLY, this.id);\n    }\n  }\n};","map":{"version":3,"sources":["Actions.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"message-text--metadata\">\n    <span class=\"time\" :class=\"{ delivered: messageRead }\">{{\n      readableTime\n    }}</span>\n    <span v-if=\"showReadIndicator\" class=\"read-indicator-wrap\">\n      <fluent-icon\n        v-tooltip.top-start=\"$t('CHAT_LIST.MESSAGE_READ')\"\n        icon=\"checkmark-double\"\n        class=\"action--icon read-tick read-indicator\"\n        size=\"14\"\n      />\n    </span>\n    <span v-if=\"showDeliveredIndicator\" class=\"read-indicator-wrap\">\n      <fluent-icon\n        v-tooltip.top-start=\"$t('CHAT_LIST.DELIVERED')\"\n        icon=\"checkmark-double\"\n        class=\"action--icon read-tick\"\n        size=\"14\"\n      />\n    </span>\n    <span v-if=\"showSentIndicator\" class=\"read-indicator-wrap\">\n      <fluent-icon\n        v-tooltip.top-start=\"$t('CHAT_LIST.SENT')\"\n        icon=\"checkmark\"\n        class=\"action--icon read-tick\"\n        size=\"14\"\n      />\n    </span>\n    <fluent-icon\n      v-if=\"isEmail\"\n      v-tooltip.top-start=\"$t('CHAT_LIST.RECEIVED_VIA_EMAIL')\"\n      icon=\"mail\"\n      class=\"action--icon\"\n      size=\"16\"\n    />\n    <fluent-icon\n      v-if=\"isPrivate\"\n      v-tooltip.top-start=\"$t('CONVERSATION.VISIBLE_TO_AGENTS')\"\n      icon=\"lock-closed\"\n      class=\"action--icon lock--icon--private\"\n      size=\"16\"\n      @mouseenter=\"isHovered = true\"\n      @mouseleave=\"isHovered = false\"\n    />\n    <button\n      v-if=\"isATweet && (isIncoming || isOutgoing) && sourceId\"\n      @click=\"onTweetReply\"\n    >\n      <fluent-icon\n        v-tooltip.top-start=\"$t('CHAT_LIST.REPLY_TO_TWEET')\"\n        icon=\"arrow-reply\"\n        class=\"action--icon cursor-pointer\"\n        size=\"16\"\n      />\n    </button>\n    <a\n      v-if=\"isATweet && (isOutgoing || isIncoming) && linkToTweet\"\n      :href=\"linkToTweet\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer nofollow\"\n    >\n      <fluent-icon\n        v-tooltip.top-start=\"$t('CHAT_LIST.VIEW_TWEET_IN_TWITTER')\"\n        icon=\"open\"\n        class=\"action--icon cursor-pointer\"\n        size=\"16\"\n      />\n    </a>\n  </div>\n</template>\n\n<script>\nimport { MESSAGE_TYPE, MESSAGE_STATUS } from 'shared/constants/messages';\nimport { BUS_EVENTS } from 'shared/constants/busEvents';\nimport inboxMixin from 'shared/mixins/inboxMixin';\n\nexport default {\n  mixins: [inboxMixin],\n  props: {\n    sender: {\n      type: Object,\n      default: () => ({}),\n    },\n    readableTime: {\n      type: String,\n      default: '',\n    },\n    storySender: {\n      type: String,\n      default: '',\n    },\n    storyId: {\n      type: String,\n      default: '',\n    },\n    isEmail: {\n      type: Boolean,\n      default: true,\n    },\n    isPrivate: {\n      type: Boolean,\n      default: true,\n    },\n    isATweet: {\n      type: Boolean,\n      default: true,\n    },\n    hasInstagramStory: {\n      type: Boolean,\n      default: true,\n    },\n    messageType: {\n      type: Number,\n      default: 1,\n    },\n    messageStatus: {\n      type: String,\n      default: '',\n    },\n    sourceId: {\n      type: String,\n      default: '',\n    },\n    id: {\n      type: [String, Number],\n      default: '',\n    },\n    inboxId: {\n      type: [String, Number],\n      default: 0,\n    },\n    messageRead: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  computed: {\n    inbox() {\n      return this.$store.getters['inboxes/getInbox'](this.inboxId);\n    },\n    isIncoming() {\n      return MESSAGE_TYPE.INCOMING === this.messageType;\n    },\n    isOutgoing() {\n      return MESSAGE_TYPE.OUTGOING === this.messageType;\n    },\n    isDelivered() {\n      return MESSAGE_STATUS.DELIVERED === this.messageStatus;\n    },\n    isRead() {\n      return MESSAGE_STATUS.READ === this.messageStatus;\n    },\n    isSent() {\n      return MESSAGE_STATUS.SENT === this.messageStatus;\n    },\n    screenName() {\n      const { additional_attributes: additionalAttributes = {} } =\n        this.sender || {};\n      return additionalAttributes?.screen_name || '';\n    },\n    linkToTweet() {\n      if (!this.sourceId || !this.inbox.name) {\n        return '';\n      }\n      const { screenName, sourceId } = this;\n      return `https://twitter.com/${screenName ||\n        this.inbox.name}/status/${sourceId}`;\n    },\n    linkToStory() {\n      if (!this.storyId || !this.storySender) {\n        return '';\n      }\n      const { storySender, storyId } = this;\n      return `https://www.instagram.com/stories/${storySender}/${storyId}`;\n    },\n    showSentIndicator() {\n      return (\n        this.isOutgoing &&\n        this.sourceId &&\n        (this.isAnEmailChannel || (this.isAWhatsAppChannel && this.isSent))\n      );\n    },\n    showDeliveredIndicator() {\n      return (\n        this.isOutgoing &&\n        this.sourceId &&\n        this.isAWhatsAppChannel &&\n        this.isDelivered\n      );\n    },\n    showReadIndicator() {\n      return (\n        this.isOutgoing &&\n        this.sourceId &&\n        this.isAWhatsAppChannel &&\n        this.isRead\n      );\n    },\n  },\n  methods: {\n    onTweetReply() {\n      bus.$emit(BUS_EVENTS.SET_TWEET_REPLY, this.id);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import '~dashboard/assets/scss/woot';\n\n.right {\n  .message-text--metadata {\n    align-items: center;\n    .time {\n      color: var(--w-100);\n    }\n\n    .action--icon {\n      color: var(--white);\n      &.read-tick {\n        color: var(--v-100);\n      }\n\n      &.read-indicator {\n        color: var(--g-300);\n      }\n    }\n\n    .lock--icon--private {\n      color: var(--s-400);\n    }\n  }\n}\n\n.left {\n  .message-text--metadata {\n    .time {\n      color: var(--s-400);\n    }\n  }\n}\n\n.message-text--metadata {\n  align-items: flex-start;\n  display: flex;\n\n  .time {\n    margin-right: var(--space-small);\n    display: block;\n    font-size: var(--font-size-micro);\n    line-height: 1.8;\n  }\n\n  .action--icon {\n    margin-right: var(--space-small);\n    margin-left: var(--space-small);\n    color: var(--s-900);\n  }\n\n  a {\n    color: var(--s-900);\n  }\n}\n\n.activity-wrap {\n  .message-text--metadata {\n    .time {\n      color: var(--s-300);\n      display: flex;\n      text-align: center;\n      font-size: var(--font-size-micro);\n      margin-left: 0;\n\n      @include breakpoint(xlarge up) {\n        margin-left: var(--space-small);\n      }\n    }\n  }\n}\n\n.is-image,\n.is-video {\n  .message-text--metadata {\n    .time {\n      bottom: var(--space-smaller);\n      color: var(--white);\n      position: absolute;\n      right: var(--space-small);\n      white-space: nowrap;\n      &.delivered {\n        right: var(--space-medium);\n        line-height: 2;\n      }\n    }\n    .read-tick {\n      position: absolute;\n      bottom: var(--space-small);\n      right: var(--space-small);\n    }\n  }\n}\n\n.is-private {\n  .message-text--metadata {\n    align-items: center;\n\n    .time {\n      color: var(--s-400);\n    }\n\n    .icon {\n      color: var(--s-400);\n    }\n  }\n\n  &.is-image,\n  &.is-video {\n    .time {\n      position: inherit;\n      padding-left: var(--space-one);\n    }\n  }\n}\n\n.delivered-icon {\n  margin-left: -var(--space-normal);\n}\n\n.read-indicator-wrap {\n  line-height: 1;\n  display: flex;\n  align-items: center;\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/components/widgets/conversation/bubble"},"metadata":{},"sourceType":"module"}