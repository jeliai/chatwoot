{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.symbol.to-primitive.js\";\nimport \"core-js/modules/es.date.to-primitive.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport { mixin as clickaway } from 'vue-clickaway';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport CannedResponse from './CannedResponse';\nimport ResizableTextArea from 'shared/components/ResizableTextArea';\nimport AttachmentPreview from 'dashboard/components/widgets/AttachmentsPreview';\nimport ReplyTopPanel from 'dashboard/components/widgets/WootWriter/ReplyTopPanel';\nimport ReplyEmailHead from './ReplyEmailHead';\nimport ReplyBottomPanel from 'dashboard/components/widgets/WootWriter/ReplyBottomPanel';\nimport Banner from 'dashboard/components/ui/Banner.vue';\nimport { REPLY_EDITOR_MODES } from 'dashboard/components/widgets/WootWriter/constants';\nimport WootMessageEditor from 'dashboard/components/widgets/WootWriter/Editor';\nimport WootAudioRecorder from 'dashboard/components/widgets/WootWriter/AudioRecorder';\nimport messageFormatterMixin from 'shared/mixins/messageFormatterMixin';\nimport { checkFileSizeLimit } from 'shared/helpers/FileHelper';\nimport { MAXIMUM_FILE_UPLOAD_SIZE, MAXIMUM_FILE_UPLOAD_SIZE_TWILIO_SMS_CHANNEL } from 'shared/constants/messages';\nimport { BUS_EVENTS } from 'shared/constants/busEvents';\nimport WhatsappTemplates from './WhatsappTemplates/Modal.vue';\nimport { buildHotKeys } from 'shared/helpers/KeyboardHelpers';\nimport { MESSAGE_MAX_LENGTH } from 'shared/helpers/MessageTypeHelper';\nimport inboxMixin from 'shared/mixins/inboxMixin';\nimport uiSettingsMixin from 'dashboard/mixins/uiSettings';\nimport { DirectUpload } from 'activestorage';\nimport { frontendURL } from '../../../helper/URLHelper';\nimport { LocalStorage, LOCAL_STORAGE_KEYS } from '../../../helper/localStorage';\nimport { trimContent, debounce } from '@chatwoot/utils';\nimport wootConstants from 'dashboard/constants';\nimport { isEditorHotKeyEnabled } from 'dashboard/mixins/uiSettings';\nimport AnalyticsHelper, { ANALYTICS_EVENTS } from '../../../helper/AnalyticsHelper';\n\nvar EmojiInput = function EmojiInput() {\n  return import('shared/components/emoji/EmojiInput');\n};\n\nexport default {\n  components: {\n    EmojiInput: EmojiInput,\n    CannedResponse: CannedResponse,\n    ResizableTextArea: ResizableTextArea,\n    AttachmentPreview: AttachmentPreview,\n    ReplyTopPanel: ReplyTopPanel,\n    ReplyEmailHead: ReplyEmailHead,\n    ReplyBottomPanel: ReplyBottomPanel,\n    WootMessageEditor: WootMessageEditor,\n    WootAudioRecorder: WootAudioRecorder,\n    Banner: Banner,\n    WhatsappTemplates: WhatsappTemplates\n  },\n  mixins: [clickaway, inboxMixin, uiSettingsMixin, alertMixin, messageFormatterMixin],\n  props: {\n    selectedTweet: {\n      type: [Object, String],\n      default: function _default() {\n        return {};\n      }\n    },\n    isATweet: {\n      type: Boolean,\n      default: false\n    },\n    popoutReplyBox: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      message: '',\n      isFocused: false,\n      showEmojiPicker: false,\n      showMentions: false,\n      attachedFiles: [],\n      isRecordingAudio: false,\n      recordingAudioState: '',\n      recordingAudioDurationText: '',\n      isUploading: false,\n      replyType: REPLY_EDITOR_MODES.REPLY,\n      mentionSearchKey: '',\n      hasUserMention: false,\n      hasSlashCommand: false,\n      bccEmails: '',\n      ccEmails: '',\n      doAutoSaveDraft: function doAutoSaveDraft() {},\n      showWhatsAppTemplatesModal: false,\n      updateEditorSelectionWith: ''\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    currentChat: 'getSelectedChat',\n    messageSignature: 'getMessageSignature',\n    currentUser: 'getCurrentUser',\n    lastEmail: 'getLastEmailInSelectedChat',\n    globalConfig: 'globalConfig/get',\n    accountId: 'getCurrentAccountId'\n  })), {}, {\n    showRichContentEditor: function showRichContentEditor() {\n      if (this.isOnPrivateNote || this.isRichEditorEnabled) {\n        return true;\n      }\n\n      if (this.isAPIInbox) {\n        var _this$uiSettings$disp = this.uiSettings.display_rich_content_editor,\n            displayRichContentEditor = _this$uiSettings$disp === void 0 ? false : _this$uiSettings$disp;\n        return displayRichContentEditor;\n      }\n\n      return false;\n    },\n    assignedAgent: {\n      get: function get() {\n        return this.currentChat.meta.assignee;\n      },\n      set: function set(agent) {\n        var _this = this;\n\n        var agentId = agent ? agent.id : 0;\n        this.$store.dispatch('setCurrentChatAssignee', agent);\n        this.$store.dispatch('assignAgent', {\n          conversationId: this.currentChat.id,\n          agentId: agentId\n        }).then(function () {\n          _this.showAlert(_this.$t('CONVERSATION.CHANGE_AGENT'));\n        });\n      }\n    },\n    showSelfAssignBanner: function showSelfAssignBanner() {\n      if (this.message !== '' && !this.isOnPrivateNote) {\n        if (!this.assignedAgent) {\n          return true;\n        }\n\n        if (this.assignedAgent.id !== this.currentUser.id) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n    hasWhatsappTemplates: function hasWhatsappTemplates() {\n      return !!this.$store.getters['inboxes/getWhatsAppTemplates'](this.inboxId).length;\n    },\n    isPrivate: function isPrivate() {\n      if (this.currentChat.can_reply || this.isAWhatsAppChannel) {\n        return this.isOnPrivateNote;\n      }\n\n      return true;\n    },\n    inboxId: function inboxId() {\n      return this.currentChat.inbox_id;\n    },\n    inbox: function inbox() {\n      return this.$store.getters['inboxes/getInbox'](this.inboxId);\n    },\n    messagePlaceHolder: function messagePlaceHolder() {\n      return this.isPrivate ? this.$t('CONVERSATION.FOOTER.PRIVATE_MSG_INPUT') : this.$t('CONVERSATION.FOOTER.MSG_INPUT');\n    },\n    isMessageLengthReachingThreshold: function isMessageLengthReachingThreshold() {\n      return this.message.length > this.maxLength - 50;\n    },\n    charactersRemaining: function charactersRemaining() {\n      return this.maxLength - this.message.length;\n    },\n    isReplyButtonDisabled: function isReplyButtonDisabled() {\n      if (this.isATweet && !this.inReplyTo && !this.isOnPrivateNote) {\n        return true;\n      }\n\n      if (this.hasAttachments || this.hasRecordedAudio) return false;\n      return this.isMessageEmpty || this.message.length === 0 || this.message.length > this.maxLength;\n    },\n    conversationType: function conversationType() {\n      var additionalAttributes = this.currentChat.additional_attributes;\n      var type = additionalAttributes ? additionalAttributes.type : '';\n      return type || '';\n    },\n    maxLength: function maxLength() {\n      if (this.isPrivate) {\n        return MESSAGE_MAX_LENGTH.GENERAL;\n      }\n\n      if (this.isAFacebookInbox) {\n        return MESSAGE_MAX_LENGTH.FACEBOOK;\n      }\n\n      if (this.isAWhatsAppChannel) {\n        return MESSAGE_MAX_LENGTH.TWILIO_WHATSAPP;\n      }\n\n      if (this.isASmsInbox) {\n        return MESSAGE_MAX_LENGTH.TWILIO_SMS;\n      }\n\n      if (this.isATwitterInbox) {\n        if (this.conversationType === 'tweet') {\n          return MESSAGE_MAX_LENGTH.TWEET - this.replyToUserLength - 2;\n        }\n      }\n\n      return MESSAGE_MAX_LENGTH.GENERAL;\n    },\n    showFileUpload: function showFileUpload() {\n      return this.isAWebWidgetInbox || this.isAFacebookInbox || this.isAWhatsAppChannel || this.isAPIInbox || this.isAnEmailChannel || this.isASmsInbox || this.isATelegramChannel;\n    },\n    replyButtonLabel: function replyButtonLabel() {\n      var sendMessageText = this.$t('CONVERSATION.REPLYBOX.SEND');\n\n      if (this.isPrivate) {\n        sendMessageText = this.$t('CONVERSATION.REPLYBOX.CREATE');\n      } else if (this.conversationType === 'tweet') {\n        sendMessageText = this.$t('CONVERSATION.REPLYBOX.TWEET');\n      }\n\n      var keyLabel = isEditorHotKeyEnabled(this.uiSettings, 'cmd_enter') ? '(⌘ + ↵)' : '(↵)';\n      return \"\".concat(sendMessageText, \" \").concat(keyLabel);\n    },\n    replyBoxClass: function replyBoxClass() {\n      return {\n        'is-private': this.isPrivate,\n        'is-focused': this.isFocused || this.hasAttachments\n      };\n    },\n    hasAttachments: function hasAttachments() {\n      return this.attachedFiles.length;\n    },\n    hasRecordedAudio: function hasRecordedAudio() {\n      return this.$refs.audioRecorderInput && this.$refs.audioRecorderInput.hasAudio();\n    },\n    isRichEditorEnabled: function isRichEditorEnabled() {\n      return this.isAWebWidgetInbox || this.isAnEmailChannel;\n    },\n    showAudioRecorder: function showAudioRecorder() {\n      return !this.isOnPrivateNote && this.showFileUpload;\n    },\n    showAudioRecorderEditor: function showAudioRecorderEditor() {\n      return this.showAudioRecorder && this.isRecordingAudio;\n    },\n    isOnPrivateNote: function isOnPrivateNote() {\n      return this.replyType === REPLY_EDITOR_MODES.NOTE;\n    },\n    inReplyTo: function inReplyTo() {\n      var selectedTweet = this.selectedTweet || {};\n      return selectedTweet.id;\n    },\n    isOnExpandedLayout: function isOnExpandedLayout() {\n      var CONDENSED = wootConstants.LAYOUT_TYPES.CONDENSED;\n      var _this$uiSettings$conv = this.uiSettings.conversation_display_type,\n          conversationDisplayType = _this$uiSettings$conv === void 0 ? CONDENSED : _this$uiSettings$conv;\n      return conversationDisplayType !== CONDENSED;\n    },\n    emojiDialogClassOnExpanedLayout: function emojiDialogClassOnExpanedLayout() {\n      return this.isOnExpandedLayout || this.popoutReplyBox ? 'emoji-dialog--expanded' : '';\n    },\n    replyToUserLength: function replyToUserLength() {\n      var selectedTweet = this.selectedTweet || {};\n      var _selectedTweet$sender = selectedTweet.sender;\n      _selectedTweet$sender = _selectedTweet$sender === void 0 ? {} : _selectedTweet$sender;\n      var _selectedTweet$sender2 = _selectedTweet$sender.additional_attributes;\n      _selectedTweet$sender2 = _selectedTweet$sender2 === void 0 ? {} : _selectedTweet$sender2;\n      var _selectedTweet$sender3 = _selectedTweet$sender2.screen_name,\n          screenName = _selectedTweet$sender3 === void 0 ? '' : _selectedTweet$sender3;\n      return screenName ? screenName.length : 0;\n    },\n    isMessageEmpty: function isMessageEmpty() {\n      if (!this.message) {\n        return true;\n      }\n\n      return !this.message.trim().replace(/\\n/g, '').length;\n    },\n    showReplyHead: function showReplyHead() {\n      return !this.isOnPrivateNote && this.isAnEmailChannel;\n    },\n    enableMultipleFileUpload: function enableMultipleFileUpload() {\n      return this.isAnEmailChannel || this.isAWebWidgetInbox || this.isAPIInbox;\n    },\n    isSignatureEnabledForInbox: function isSignatureEnabledForInbox() {\n      return !this.isPrivate && this.isAnEmailChannel && this.sendWithSignature;\n    },\n    isSignatureAvailable: function isSignatureAvailable() {\n      return !!this.messageSignature;\n    },\n    sendWithSignature: function sendWithSignature() {\n      var isEnabled = this.uiSettings.send_with_signature;\n      return isEnabled;\n    },\n    profilePath: function profilePath() {\n      return frontendURL(\"accounts/\".concat(this.accountId, \"/profile/settings\"));\n    },\n    editorMessageKey: function editorMessageKey() {\n      var isEnabled = this.uiSettings.editor_message_key;\n      return isEnabled;\n    },\n    commandPlusEnterToSendEnabled: function commandPlusEnterToSendEnabled() {\n      return this.editorMessageKey === 'cmd_enter';\n    },\n    enterToSendEnabled: function enterToSendEnabled() {\n      return this.editorMessageKey === 'enter';\n    },\n    conversationId: function conversationId() {\n      return this.currentChat.id;\n    },\n    conversationIdByRoute: function conversationIdByRoute() {\n      return this.conversationId;\n    },\n    editorStateId: function editorStateId() {\n      return \"draft-\".concat(this.conversationIdByRoute, \"-\").concat(this.replyType);\n    }\n  }),\n  watch: {\n    currentChat: function currentChat(conversation) {\n      var canReply = conversation.can_reply;\n\n      if (this.isOnPrivateNote) {\n        return;\n      }\n\n      if (canReply || this.isAWhatsAppChannel) {\n        this.replyType = REPLY_EDITOR_MODES.REPLY;\n      } else {\n        this.replyType = REPLY_EDITOR_MODES.NOTE;\n      }\n\n      this.setCCEmailFromLastChat();\n    },\n    conversationIdByRoute: function conversationIdByRoute(conversationId, oldConversationId) {\n      if (conversationId !== oldConversationId) {\n        this.setToDraft(oldConversationId, this.replyType);\n        this.getFromDraft();\n      }\n    },\n    message: function message(updatedMessage) {\n      this.hasSlashCommand = updatedMessage[0] === '/' && !this.showRichContentEditor;\n      var hasNextWord = updatedMessage.includes(' ');\n      var isShortCodeActive = this.hasSlashCommand && !hasNextWord;\n\n      if (isShortCodeActive) {\n        this.mentionSearchKey = updatedMessage.substring(1);\n        this.showMentions = true;\n      } else {\n        this.mentionSearchKey = '';\n        this.showMentions = false;\n      }\n\n      this.doAutoSaveDraft();\n    },\n    replyType: function replyType(updatedReplyType, oldReplyType) {\n      this.setToDraft(this.conversationIdByRoute, oldReplyType);\n      this.getFromDraft();\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.getFromDraft(); // Donot use the keyboard listener mixin here as the events here are supposed to be\n    // working even if input/textarea is focussed.\n\n    document.addEventListener('paste', this.onPaste);\n    document.addEventListener('keydown', this.handleKeyEvents);\n    this.setCCEmailFromLastChat();\n    this.doAutoSaveDraft = debounce(function () {\n      _this2.saveDraft(_this2.conversationIdByRoute, _this2.replyType);\n    }, 500, true);\n  },\n  destroyed: function destroyed() {\n    document.removeEventListener('paste', this.onPaste);\n    document.removeEventListener('keydown', this.handleKeyEvents);\n  },\n  methods: {\n    toggleRichContentEditor: function toggleRichContentEditor() {\n      this.updateUISettings({\n        display_rich_content_editor: !this.showRichContentEditor\n      });\n    },\n    getSavedDraftMessages: function getSavedDraftMessages() {\n      return LocalStorage.get(LOCAL_STORAGE_KEYS.DRAFT_MESSAGES) || {};\n    },\n    saveDraft: function saveDraft(conversationId, replyType) {\n      if (this.message || this.message === '') {\n        var savedDraftMessages = this.getSavedDraftMessages();\n        var key = \"draft-\".concat(conversationId, \"-\").concat(replyType);\n        var draftToSave = trimContent(this.message || '');\n\n        var currentDraft = savedDraftMessages[key],\n            restOfDraftMessages = _objectWithoutProperties(savedDraftMessages, [key].map(_toPropertyKey));\n\n        var updatedDraftMessages = draftToSave ? _objectSpread(_objectSpread({}, restOfDraftMessages), {}, _defineProperty({}, key, draftToSave)) : restOfDraftMessages;\n        LocalStorage.set(LOCAL_STORAGE_KEYS.DRAFT_MESSAGES, updatedDraftMessages);\n      }\n    },\n    setToDraft: function setToDraft(conversationId, replyType) {\n      this.saveDraft(conversationId, replyType);\n      this.message = '';\n    },\n    getFromDraft: function getFromDraft() {\n      if (this.conversationIdByRoute) {\n        try {\n          var key = \"draft-\".concat(this.conversationIdByRoute, \"-\").concat(this.replyType);\n          var savedDraftMessages = this.getSavedDraftMessages();\n          this.message = \"\".concat(savedDraftMessages[key] || '');\n        } catch (error) {\n          this.message = '';\n        }\n      }\n    },\n    removeFromDraft: function removeFromDraft() {\n      if (this.conversationIdByRoute) {\n        var key = \"draft-\".concat(this.conversationIdByRoute, \"-\").concat(this.replyType);\n        var draftMessages = this.getSavedDraftMessages();\n\n        var toBeRemoved = draftMessages[key],\n            updatedDraftMessages = _objectWithoutProperties(draftMessages, [key].map(_toPropertyKey));\n\n        LocalStorage.set(LOCAL_STORAGE_KEYS.DRAFT_MESSAGES, updatedDraftMessages);\n      }\n    },\n    handleKeyEvents: function handleKeyEvents(e) {\n      var keyCode = buildHotKeys(e);\n\n      if (keyCode === 'escape') {\n        this.hideEmojiPicker();\n        this.hideMentions();\n      } else if (keyCode === 'meta+k') {\n        var ninja = document.querySelector('ninja-keys');\n        ninja.open();\n        e.preventDefault();\n      } else if (keyCode === 'enter' && this.isAValidEvent('enter')) {\n        this.onSendReply();\n        e.preventDefault();\n      } else if (['meta+enter', 'ctrl+enter'].includes(keyCode) && this.isAValidEvent('cmd_enter')) {\n        this.onSendReply();\n      }\n    },\n    isAValidEvent: function isAValidEvent(selectedKey) {\n      return !this.hasUserMention && !this.showCannedMenu && this.isFocused && isEditorHotKeyEnabled(this.uiSettings, selectedKey);\n    },\n    onPaste: function onPaste(e) {\n      var _this3 = this;\n\n      var data = e.clipboardData.files;\n\n      if (!this.showRichContentEditor && data.length !== 0) {\n        this.$refs.messageInput.$el.blur();\n      }\n\n      if (!data.length || !data[0]) {\n        return;\n      }\n\n      data.forEach(function (file) {\n        var name = file.name,\n            type = file.type,\n            size = file.size;\n\n        _this3.onFileUpload({\n          name: name,\n          type: type,\n          size: size,\n          file: file\n        });\n      });\n    },\n    toggleUserMention: function toggleUserMention(currentMentionState) {\n      this.hasUserMention = currentMentionState;\n    },\n    toggleCannedMenu: function toggleCannedMenu(value) {\n      this.showCannedMenu = value;\n    },\n    openWhatsappTemplateModal: function openWhatsappTemplateModal() {\n      this.showWhatsAppTemplatesModal = true;\n    },\n    hideWhatsappTemplatesModal: function hideWhatsappTemplatesModal() {\n      this.showWhatsAppTemplatesModal = false;\n    },\n    onClickSelfAssign: function onClickSelfAssign() {\n      var _this$currentUser = this.currentUser,\n          account_id = _this$currentUser.account_id,\n          availability_status = _this$currentUser.availability_status,\n          available_name = _this$currentUser.available_name,\n          email = _this$currentUser.email,\n          id = _this$currentUser.id,\n          name = _this$currentUser.name,\n          role = _this$currentUser.role,\n          avatar_url = _this$currentUser.avatar_url;\n      var selfAssign = {\n        account_id: account_id,\n        availability_status: availability_status,\n        available_name: available_name,\n        email: email,\n        id: id,\n        name: name,\n        role: role,\n        thumbnail: avatar_url\n      };\n      this.assignedAgent = selfAssign;\n    },\n    onSendReply: function onSendReply() {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var newMessage, messagePayload;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!_this4.isReplyButtonDisabled) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                if (!_this4.showMentions) {\n                  newMessage = _this4.message;\n\n                  if (_this4.isSignatureEnabledForInbox && _this4.messageSignature) {\n                    newMessage += '\\n\\n' + _this4.messageSignature;\n                  }\n\n                  messagePayload = _this4.getMessagePayload(newMessage);\n\n                  _this4.clearMessage();\n\n                  if (!_this4.isPrivate) {\n                    _this4.clearEmailField();\n                  }\n\n                  _this4.sendMessage(messagePayload);\n\n                  _this4.clearMessage();\n\n                  _this4.hideEmojiPicker();\n\n                  _this4.$emit('update:popoutReplyBox', false);\n                }\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    sendMessage: function sendMessage(messagePayload) {\n      var _this5 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _error$response, _error$response$data, errorMessage;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return _this5.$store.dispatch('createPendingMessageAndSend', messagePayload);\n\n              case 3:\n                bus.$emit(BUS_EVENTS.SCROLL_TO_MESSAGE);\n\n                _this5.removeFromDraft();\n\n                _context2.next = 11;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                errorMessage = (_context2.t0 === null || _context2.t0 === void 0 ? void 0 : (_error$response = _context2.t0.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || _this5.$t('CONVERSATION.MESSAGE_ERROR');\n\n                _this5.showAlert(errorMessage);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 7]]);\n      }))();\n    },\n    onSendWhatsAppReply: function onSendWhatsAppReply(messagePayload) {\n      var _this6 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _this6.sendMessage(_objectSpread({\n                  conversationId: _this6.currentChat.id\n                }, messagePayload));\n\n                _this6.hideWhatsappTemplatesModal();\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    replaceText: function replaceText(message) {\n      var _this7 = this;\n\n      setTimeout(function () {\n        AnalyticsHelper.track(ANALYTICS_EVENTS.INSERTED_A_CANNED_RESPONSE);\n        _this7.message = message;\n      }, 100);\n    },\n    setReplyMode: function setReplyMode() {\n      var _this8 = this;\n\n      var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : REPLY_EDITOR_MODES.REPLY;\n      var canReply = this.currentChat.can_reply;\n      if (canReply || this.isAWhatsAppChannel) this.replyType = mode;\n\n      if (this.showRichContentEditor) {\n        if (this.isRecordingAudio) {\n          this.toggleAudioRecorder();\n        }\n\n        return;\n      }\n\n      this.$nextTick(function () {\n        return _this8.$refs.messageInput.focus();\n      });\n    },\n    clearEditorSelection: function clearEditorSelection() {\n      this.updateEditorSelectionWith = '';\n    },\n    insertEmoji: function insertEmoji(emoji, selectionStart, selectionEnd) {\n      var message = this.message;\n      var newMessage = message.slice(0, selectionStart) + emoji + message.slice(selectionEnd, message.length);\n      this.message = newMessage;\n    },\n    emojiOnClick: function emojiOnClick(emoji) {\n      if (this.showRichContentEditor) {\n        this.updateEditorSelectionWith = emoji;\n        this.onFocus();\n      }\n\n      if (!this.showRichContentEditor) {\n        var _this$$refs$messageIn = this.$refs.messageInput.$el,\n            selectionStart = _this$$refs$messageIn.selectionStart,\n            selectionEnd = _this$$refs$messageIn.selectionEnd;\n        this.insertEmoji(emoji, selectionStart, selectionEnd);\n      }\n    },\n    clearMessage: function clearMessage() {\n      this.message = '';\n      this.attachedFiles = [];\n      this.isRecordingAudio = false;\n    },\n    clearEmailField: function clearEmailField() {\n      this.ccEmails = '';\n      this.bccEmails = '';\n    },\n    toggleEmojiPicker: function toggleEmojiPicker() {\n      this.showEmojiPicker = !this.showEmojiPicker;\n    },\n    toggleAudioRecorder: function toggleAudioRecorder() {\n      this.isRecordingAudio = !this.isRecordingAudio;\n      this.isRecorderAudioStopped = !this.isRecordingAudio;\n\n      if (!this.isRecordingAudio) {\n        this.clearMessage();\n        this.clearEmailField();\n      }\n    },\n    toggleAudioRecorderPlayPause: function toggleAudioRecorderPlayPause() {\n      if (this.isRecordingAudio) {\n        if (!this.isRecorderAudioStopped) {\n          this.isRecorderAudioStopped = true;\n          this.$refs.audioRecorderInput.stopAudioRecording();\n        } else if (this.isRecorderAudioStopped) {\n          this.$refs.audioRecorderInput.playPause();\n        }\n      }\n    },\n    hideEmojiPicker: function hideEmojiPicker() {\n      if (this.showEmojiPicker) {\n        this.toggleEmojiPicker();\n      }\n    },\n    hideMentions: function hideMentions() {\n      this.showMentions = false;\n    },\n    onTypingOn: function onTypingOn() {\n      this.toggleTyping('on');\n    },\n    onTypingOff: function onTypingOff() {\n      this.toggleTyping('off');\n    },\n    onBlur: function onBlur() {\n      this.isFocused = false;\n      this.saveDraft(this.conversationIdByRoute, this.replyType);\n    },\n    onFocus: function onFocus() {\n      this.isFocused = true;\n    },\n    onStateProgressRecorderChanged: function onStateProgressRecorderChanged(duration) {\n      this.recordingAudioDurationText = duration;\n    },\n    onStateRecorderChanged: function onStateRecorderChanged(state) {\n      this.recordingAudioState = state;\n\n      if (state && 'notallowederror'.includes(state)) {\n        this.toggleAudioRecorder();\n      }\n    },\n    onFinishRecorder: function onFinishRecorder(file) {\n      return file && this.onFileUpload(file);\n    },\n    toggleTyping: function toggleTyping(status) {\n      var conversationId = this.currentChat.id;\n      var isPrivate = this.isPrivate;\n      this.$store.dispatch('conversationTypingStatus/toggleTyping', {\n        status: status,\n        conversationId: conversationId,\n        isPrivate: isPrivate\n      });\n    },\n    onFileUpload: function onFileUpload(file) {\n      if (this.globalConfig.directUploadsEnabled) {\n        this.onDirectFileUpload(file);\n      } else {\n        this.onIndirectFileUpload(file);\n      }\n    },\n    onDirectFileUpload: function onDirectFileUpload(file) {\n      var _this9 = this;\n\n      var MAXIMUM_SUPPORTED_FILE_UPLOAD_SIZE = this.isATwilioSMSChannel ? MAXIMUM_FILE_UPLOAD_SIZE_TWILIO_SMS_CHANNEL : MAXIMUM_FILE_UPLOAD_SIZE;\n\n      if (!file) {\n        return;\n      }\n\n      if (checkFileSizeLimit(file, MAXIMUM_SUPPORTED_FILE_UPLOAD_SIZE)) {\n        var upload = new DirectUpload(file.file, \"/api/v1/accounts/\".concat(this.accountId, \"/conversations/\").concat(this.currentChat.id, \"/direct_uploads\"), {\n          directUploadWillCreateBlobWithXHR: function directUploadWillCreateBlobWithXHR(xhr) {\n            xhr.setRequestHeader('api_access_token', _this9.currentUser.access_token);\n          }\n        });\n        upload.create(function (error, blob) {\n          if (error) {\n            _this9.showAlert(error);\n          } else {\n            _this9.attachFile({\n              file: file,\n              blob: blob\n            });\n          }\n        });\n      } else {\n        this.showAlert(this.$t('CONVERSATION.FILE_SIZE_LIMIT', {\n          MAXIMUM_SUPPORTED_FILE_UPLOAD_SIZE: MAXIMUM_SUPPORTED_FILE_UPLOAD_SIZE\n        }));\n      }\n    },\n    onIndirectFileUpload: function onIndirectFileUpload(file) {\n      var MAXIMUM_SUPPORTED_FILE_UPLOAD_SIZE = this.isATwilioSMSChannel ? MAXIMUM_FILE_UPLOAD_SIZE_TWILIO_SMS_CHANNEL : MAXIMUM_FILE_UPLOAD_SIZE;\n\n      if (!file) {\n        return;\n      }\n\n      if (checkFileSizeLimit(file, MAXIMUM_SUPPORTED_FILE_UPLOAD_SIZE)) {\n        this.attachFile({\n          file: file\n        });\n      } else {\n        this.showAlert(this.$t('CONVERSATION.FILE_SIZE_LIMIT', {\n          MAXIMUM_SUPPORTED_FILE_UPLOAD_SIZE: MAXIMUM_SUPPORTED_FILE_UPLOAD_SIZE\n        }));\n      }\n    },\n    attachFile: function attachFile(_ref) {\n      var _this10 = this;\n\n      var blob = _ref.blob,\n          file = _ref.file;\n      var reader = new FileReader();\n      reader.readAsDataURL(file.file);\n\n      reader.onloadend = function () {\n        _this10.attachedFiles.push({\n          currentChatId: _this10.currentChat.id,\n          resource: blob || file,\n          isPrivate: _this10.isPrivate,\n          thumb: reader.result,\n          blobSignedId: blob ? blob.signed_id : undefined\n        });\n      };\n    },\n    removeAttachment: function removeAttachment(itemIndex) {\n      this.attachedFiles = this.attachedFiles.filter(function (item, index) {\n        return itemIndex !== index;\n      });\n    },\n    getMessagePayload: function getMessagePayload(message) {\n      var _this11 = this;\n\n      var messagePayload = {\n        conversationId: this.currentChat.id,\n        message: message,\n        private: this.isPrivate\n      };\n\n      if (this.inReplyTo) {\n        messagePayload.contentAttributes = {\n          in_reply_to: this.inReplyTo\n        };\n      }\n\n      if (this.attachedFiles && this.attachedFiles.length) {\n        messagePayload.files = [];\n        this.attachedFiles.forEach(function (attachment) {\n          if (_this11.globalConfig.directUploadsEnabled) {\n            messagePayload.files.push(attachment.blobSignedId);\n          } else {\n            messagePayload.files.push(attachment.resource.file);\n          }\n        });\n      }\n\n      if (this.ccEmails && !this.isOnPrivateNote) {\n        messagePayload.ccEmails = this.ccEmails;\n      }\n\n      if (this.bccEmails && !this.isOnPrivateNote) {\n        messagePayload.bccEmails = this.bccEmails;\n      }\n\n      return messagePayload;\n    },\n    setCcEmails: function setCcEmails(value) {\n      this.bccEmails = value.bccEmails;\n      this.ccEmails = value.ccEmails;\n    },\n    setCCEmailFromLastChat: function setCCEmailFromLastChat() {\n      if (this.lastEmail) {\n        var _this$lastEmail$conte = this.lastEmail.content_attributes.email,\n            emailAttributes = _this$lastEmail$conte === void 0 ? {} : _this$lastEmail$conte;\n        var cc = emailAttributes.cc || [];\n        var bcc = emailAttributes.bcc || [];\n        this.ccEmails = cc.join(', ');\n        this.bccEmails = bcc.join(', ');\n      }\n    }\n  }\n};","map":{"version":3,"sources":["ReplyBox.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"reply-box\" :class=\"replyBoxClass\">\n    <banner\n      v-if=\"showSelfAssignBanner\"\n      color-scheme=\"secondary\"\n      :banner-message=\"$t('CONVERSATION.NOT_ASSIGNED_TO_YOU')\"\n      :has-action-button=\"true\"\n      :action-button-label=\"$t('CONVERSATION.ASSIGN_TO_ME')\"\n      @click=\"onClickSelfAssign\"\n    />\n    <reply-top-panel\n      :mode=\"replyType\"\n      :set-reply-mode=\"setReplyMode\"\n      :is-message-length-reaching-threshold=\"isMessageLengthReachingThreshold\"\n      :characters-remaining=\"charactersRemaining\"\n      :popout-reply-box=\"popoutReplyBox\"\n      @click=\"$emit('click')\"\n    />\n    <div class=\"reply-box__top\">\n      <canned-response\n        v-if=\"showMentions && hasSlashCommand\"\n        v-on-clickaway=\"hideMentions\"\n        :search-key=\"mentionSearchKey\"\n        @click=\"replaceText\"\n      />\n      <emoji-input\n        v-if=\"showEmojiPicker\"\n        v-on-clickaway=\"hideEmojiPicker\"\n        :class=\"emojiDialogClassOnExpanedLayout\"\n        :on-click=\"emojiOnClick\"\n      />\n      <reply-email-head\n        v-if=\"showReplyHead\"\n        :cc-emails.sync=\"ccEmails\"\n        :bcc-emails.sync=\"bccEmails\"\n      />\n      <woot-audio-recorder\n        v-if=\"showAudioRecorderEditor\"\n        ref=\"audioRecorderInput\"\n        @state-recorder-progress-changed=\"onStateProgressRecorderChanged\"\n        @state-recorder-changed=\"onStateRecorderChanged\"\n        @finish-record=\"onFinishRecorder\"\n      />\n      <resizable-text-area\n        v-else-if=\"!showRichContentEditor\"\n        ref=\"messageInput\"\n        v-model=\"message\"\n        class=\"input\"\n        :placeholder=\"messagePlaceHolder\"\n        :min-height=\"4\"\n        @typing-off=\"onTypingOff\"\n        @typing-on=\"onTypingOn\"\n        @focus=\"onFocus\"\n        @blur=\"onBlur\"\n      />\n      <woot-message-editor\n        v-else\n        v-model=\"message\"\n        :editor-id=\"editorStateId\"\n        class=\"input\"\n        :is-private=\"isOnPrivateNote\"\n        :placeholder=\"messagePlaceHolder\"\n        :update-selection-with=\"updateEditorSelectionWith\"\n        :min-height=\"4\"\n        @typing-off=\"onTypingOff\"\n        @typing-on=\"onTypingOn\"\n        @focus=\"onFocus\"\n        @blur=\"onBlur\"\n        @toggle-user-mention=\"toggleUserMention\"\n        @toggle-canned-menu=\"toggleCannedMenu\"\n        @clear-selection=\"clearEditorSelection\"\n      />\n    </div>\n    <div v-if=\"hasAttachments\" class=\"attachment-preview-box\" @paste=\"onPaste\">\n      <attachment-preview\n        :attachments=\"attachedFiles\"\n        :remove-attachment=\"removeAttachment\"\n      />\n    </div>\n    <div\n      v-if=\"isSignatureEnabledForInbox\"\n      v-tooltip=\"$t('CONVERSATION.FOOTER.MESSAGE_SIGN_TOOLTIP')\"\n      class=\"message-signature-wrap\"\n    >\n      <p\n        v-if=\"isSignatureAvailable\"\n        v-dompurify-html=\"formatMessage(messageSignature)\"\n        class=\"message-signature\"\n      />\n      <p v-else class=\"message-signature\">\n        {{ $t('CONVERSATION.FOOTER.MESSAGE_SIGNATURE_NOT_CONFIGURED') }}\n        <router-link :to=\"profilePath\">\n          {{ $t('CONVERSATION.FOOTER.CLICK_HERE') }}\n        </router-link>\n      </p>\n    </div>\n    <reply-bottom-panel\n      :mode=\"replyType\"\n      :inbox=\"inbox\"\n      :send-button-text=\"replyButtonLabel\"\n      :on-file-upload=\"onFileUpload\"\n      :show-file-upload=\"showFileUpload\"\n      :show-audio-recorder=\"showAudioRecorder\"\n      :toggle-emoji-picker=\"toggleEmojiPicker\"\n      :toggle-audio-recorder=\"toggleAudioRecorder\"\n      :toggle-audio-recorder-play-pause=\"toggleAudioRecorderPlayPause\"\n      :show-emoji-picker=\"showEmojiPicker\"\n      :on-send=\"onSendReply\"\n      :is-send-disabled=\"isReplyButtonDisabled\"\n      :recording-audio-duration-text=\"recordingAudioDurationText\"\n      :recording-audio-state=\"recordingAudioState\"\n      :is-recording-audio=\"isRecordingAudio\"\n      :is-on-private-note=\"isOnPrivateNote\"\n      :show-editor-toggle=\"isAPIInbox && !isOnPrivateNote\"\n      :enable-multiple-file-upload=\"enableMultipleFileUpload\"\n      :has-whatsapp-templates=\"hasWhatsappTemplates\"\n      @selectWhatsappTemplate=\"openWhatsappTemplateModal\"\n      @toggle-editor=\"toggleRichContentEditor\"\n    />\n    <whatsapp-templates\n      :inbox-id=\"inbox.id\"\n      :show=\"showWhatsAppTemplatesModal\"\n      @close=\"hideWhatsappTemplatesModal\"\n      @on-send=\"onSendWhatsAppReply\"\n      @cancel=\"hideWhatsappTemplatesModal\"\n    />\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport { mixin as clickaway } from 'vue-clickaway';\nimport alertMixin from 'shared/mixins/alertMixin';\n\nimport CannedResponse from './CannedResponse';\nimport ResizableTextArea from 'shared/components/ResizableTextArea';\nimport AttachmentPreview from 'dashboard/components/widgets/AttachmentsPreview';\nimport ReplyTopPanel from 'dashboard/components/widgets/WootWriter/ReplyTopPanel';\nimport ReplyEmailHead from './ReplyEmailHead';\nimport ReplyBottomPanel from 'dashboard/components/widgets/WootWriter/ReplyBottomPanel';\nimport Banner from 'dashboard/components/ui/Banner.vue';\nimport { REPLY_EDITOR_MODES } from 'dashboard/components/widgets/WootWriter/constants';\nimport WootMessageEditor from 'dashboard/components/widgets/WootWriter/Editor';\nimport WootAudioRecorder from 'dashboard/components/widgets/WootWriter/AudioRecorder';\nimport messageFormatterMixin from 'shared/mixins/messageFormatterMixin';\nimport { checkFileSizeLimit } from 'shared/helpers/FileHelper';\nimport {\n  MAXIMUM_FILE_UPLOAD_SIZE,\n  MAXIMUM_FILE_UPLOAD_SIZE_TWILIO_SMS_CHANNEL,\n} from 'shared/constants/messages';\nimport { BUS_EVENTS } from 'shared/constants/busEvents';\n\nimport WhatsappTemplates from './WhatsappTemplates/Modal.vue';\nimport { buildHotKeys } from 'shared/helpers/KeyboardHelpers';\nimport { MESSAGE_MAX_LENGTH } from 'shared/helpers/MessageTypeHelper';\nimport inboxMixin from 'shared/mixins/inboxMixin';\nimport uiSettingsMixin from 'dashboard/mixins/uiSettings';\nimport { DirectUpload } from 'activestorage';\nimport { frontendURL } from '../../../helper/URLHelper';\nimport { LocalStorage, LOCAL_STORAGE_KEYS } from '../../../helper/localStorage';\nimport { trimContent, debounce } from '@chatwoot/utils';\nimport wootConstants from 'dashboard/constants';\nimport { isEditorHotKeyEnabled } from 'dashboard/mixins/uiSettings';\nimport AnalyticsHelper, {\n  ANALYTICS_EVENTS,\n} from '../../../helper/AnalyticsHelper';\n\nconst EmojiInput = () => import('shared/components/emoji/EmojiInput');\n\nexport default {\n  components: {\n    EmojiInput,\n    CannedResponse,\n    ResizableTextArea,\n    AttachmentPreview,\n    ReplyTopPanel,\n    ReplyEmailHead,\n    ReplyBottomPanel,\n    WootMessageEditor,\n    WootAudioRecorder,\n    Banner,\n    WhatsappTemplates,\n  },\n  mixins: [\n    clickaway,\n    inboxMixin,\n    uiSettingsMixin,\n    alertMixin,\n    messageFormatterMixin,\n  ],\n  props: {\n    selectedTweet: {\n      type: [Object, String],\n      default: () => ({}),\n    },\n    isATweet: {\n      type: Boolean,\n      default: false,\n    },\n    popoutReplyBox: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      message: '',\n      isFocused: false,\n      showEmojiPicker: false,\n      showMentions: false,\n      attachedFiles: [],\n      isRecordingAudio: false,\n      recordingAudioState: '',\n      recordingAudioDurationText: '',\n      isUploading: false,\n      replyType: REPLY_EDITOR_MODES.REPLY,\n      mentionSearchKey: '',\n      hasUserMention: false,\n      hasSlashCommand: false,\n      bccEmails: '',\n      ccEmails: '',\n      doAutoSaveDraft: () => {},\n      showWhatsAppTemplatesModal: false,\n      updateEditorSelectionWith: '',\n    };\n  },\n  computed: {\n    ...mapGetters({\n      currentChat: 'getSelectedChat',\n      messageSignature: 'getMessageSignature',\n      currentUser: 'getCurrentUser',\n      lastEmail: 'getLastEmailInSelectedChat',\n      globalConfig: 'globalConfig/get',\n      accountId: 'getCurrentAccountId',\n    }),\n    showRichContentEditor() {\n      if (this.isOnPrivateNote || this.isRichEditorEnabled) {\n        return true;\n      }\n\n      if (this.isAPIInbox) {\n        const {\n          display_rich_content_editor: displayRichContentEditor = false,\n        } = this.uiSettings;\n        return displayRichContentEditor;\n      }\n\n      return false;\n    },\n    assignedAgent: {\n      get() {\n        return this.currentChat.meta.assignee;\n      },\n      set(agent) {\n        const agentId = agent ? agent.id : 0;\n        this.$store.dispatch('setCurrentChatAssignee', agent);\n        this.$store\n          .dispatch('assignAgent', {\n            conversationId: this.currentChat.id,\n            agentId,\n          })\n          .then(() => {\n            this.showAlert(this.$t('CONVERSATION.CHANGE_AGENT'));\n          });\n      },\n    },\n    showSelfAssignBanner() {\n      if (this.message !== '' && !this.isOnPrivateNote) {\n        if (!this.assignedAgent) {\n          return true;\n        }\n        if (this.assignedAgent.id !== this.currentUser.id) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n    hasWhatsappTemplates() {\n      return !!this.$store.getters['inboxes/getWhatsAppTemplates'](this.inboxId)\n        .length;\n    },\n    isPrivate() {\n      if (this.currentChat.can_reply || this.isAWhatsAppChannel) {\n        return this.isOnPrivateNote;\n      }\n      return true;\n    },\n    inboxId() {\n      return this.currentChat.inbox_id;\n    },\n    inbox() {\n      return this.$store.getters['inboxes/getInbox'](this.inboxId);\n    },\n    messagePlaceHolder() {\n      return this.isPrivate\n        ? this.$t('CONVERSATION.FOOTER.PRIVATE_MSG_INPUT')\n        : this.$t('CONVERSATION.FOOTER.MSG_INPUT');\n    },\n    isMessageLengthReachingThreshold() {\n      return this.message.length > this.maxLength - 50;\n    },\n    charactersRemaining() {\n      return this.maxLength - this.message.length;\n    },\n    isReplyButtonDisabled() {\n      if (this.isATweet && !this.inReplyTo && !this.isOnPrivateNote) {\n        return true;\n      }\n\n      if (this.hasAttachments || this.hasRecordedAudio) return false;\n\n      return (\n        this.isMessageEmpty ||\n        this.message.length === 0 ||\n        this.message.length > this.maxLength\n      );\n    },\n    conversationType() {\n      const { additional_attributes: additionalAttributes } = this.currentChat;\n      const type = additionalAttributes ? additionalAttributes.type : '';\n      return type || '';\n    },\n    maxLength() {\n      if (this.isPrivate) {\n        return MESSAGE_MAX_LENGTH.GENERAL;\n      }\n      if (this.isAFacebookInbox) {\n        return MESSAGE_MAX_LENGTH.FACEBOOK;\n      }\n      if (this.isAWhatsAppChannel) {\n        return MESSAGE_MAX_LENGTH.TWILIO_WHATSAPP;\n      }\n      if (this.isASmsInbox) {\n        return MESSAGE_MAX_LENGTH.TWILIO_SMS;\n      }\n      if (this.isATwitterInbox) {\n        if (this.conversationType === 'tweet') {\n          return MESSAGE_MAX_LENGTH.TWEET - this.replyToUserLength - 2;\n        }\n      }\n      return MESSAGE_MAX_LENGTH.GENERAL;\n    },\n    showFileUpload() {\n      return (\n        this.isAWebWidgetInbox ||\n        this.isAFacebookInbox ||\n        this.isAWhatsAppChannel ||\n        this.isAPIInbox ||\n        this.isAnEmailChannel ||\n        this.isASmsInbox ||\n        this.isATelegramChannel\n      );\n    },\n    replyButtonLabel() {\n      let sendMessageText = this.$t('CONVERSATION.REPLYBOX.SEND');\n      if (this.isPrivate) {\n        sendMessageText = this.$t('CONVERSATION.REPLYBOX.CREATE');\n      } else if (this.conversationType === 'tweet') {\n        sendMessageText = this.$t('CONVERSATION.REPLYBOX.TWEET');\n      }\n      const keyLabel = isEditorHotKeyEnabled(this.uiSettings, 'cmd_enter')\n        ? '(⌘ + ↵)'\n        : '(↵)';\n      return `${sendMessageText} ${keyLabel}`;\n    },\n    replyBoxClass() {\n      return {\n        'is-private': this.isPrivate,\n        'is-focused': this.isFocused || this.hasAttachments,\n      };\n    },\n    hasAttachments() {\n      return this.attachedFiles.length;\n    },\n    hasRecordedAudio() {\n      return (\n        this.$refs.audioRecorderInput &&\n        this.$refs.audioRecorderInput.hasAudio()\n      );\n    },\n    isRichEditorEnabled() {\n      return this.isAWebWidgetInbox || this.isAnEmailChannel;\n    },\n    showAudioRecorder() {\n      return !this.isOnPrivateNote && this.showFileUpload;\n    },\n    showAudioRecorderEditor() {\n      return this.showAudioRecorder && this.isRecordingAudio;\n    },\n    isOnPrivateNote() {\n      return this.replyType === REPLY_EDITOR_MODES.NOTE;\n    },\n    inReplyTo() {\n      const selectedTweet = this.selectedTweet || {};\n      return selectedTweet.id;\n    },\n    isOnExpandedLayout() {\n      const {\n        LAYOUT_TYPES: { CONDENSED },\n      } = wootConstants;\n      const {\n        conversation_display_type: conversationDisplayType = CONDENSED,\n      } = this.uiSettings;\n      return conversationDisplayType !== CONDENSED;\n    },\n    emojiDialogClassOnExpanedLayout() {\n      return this.isOnExpandedLayout || this.popoutReplyBox\n        ? 'emoji-dialog--expanded'\n        : '';\n    },\n    replyToUserLength() {\n      const selectedTweet = this.selectedTweet || {};\n      const {\n        sender: {\n          additional_attributes: { screen_name: screenName = '' } = {},\n        } = {},\n      } = selectedTweet;\n      return screenName ? screenName.length : 0;\n    },\n    isMessageEmpty() {\n      if (!this.message) {\n        return true;\n      }\n      return !this.message.trim().replace(/\\n/g, '').length;\n    },\n    showReplyHead() {\n      return !this.isOnPrivateNote && this.isAnEmailChannel;\n    },\n    enableMultipleFileUpload() {\n      return this.isAnEmailChannel || this.isAWebWidgetInbox || this.isAPIInbox;\n    },\n    isSignatureEnabledForInbox() {\n      return !this.isPrivate && this.isAnEmailChannel && this.sendWithSignature;\n    },\n    isSignatureAvailable() {\n      return !!this.messageSignature;\n    },\n    sendWithSignature() {\n      const { send_with_signature: isEnabled } = this.uiSettings;\n      return isEnabled;\n    },\n    profilePath() {\n      return frontendURL(`accounts/${this.accountId}/profile/settings`);\n    },\n    editorMessageKey() {\n      const { editor_message_key: isEnabled } = this.uiSettings;\n      return isEnabled;\n    },\n    commandPlusEnterToSendEnabled() {\n      return this.editorMessageKey === 'cmd_enter';\n    },\n    enterToSendEnabled() {\n      return this.editorMessageKey === 'enter';\n    },\n    conversationId() {\n      return this.currentChat.id;\n    },\n    conversationIdByRoute() {\n      return this.conversationId;\n    },\n    editorStateId() {\n      return `draft-${this.conversationIdByRoute}-${this.replyType}`;\n    },\n  },\n  watch: {\n    currentChat(conversation) {\n      const { can_reply: canReply } = conversation;\n\n      if (this.isOnPrivateNote) {\n        return;\n      }\n\n      if (canReply || this.isAWhatsAppChannel) {\n        this.replyType = REPLY_EDITOR_MODES.REPLY;\n      } else {\n        this.replyType = REPLY_EDITOR_MODES.NOTE;\n      }\n\n      this.setCCEmailFromLastChat();\n    },\n    conversationIdByRoute(conversationId, oldConversationId) {\n      if (conversationId !== oldConversationId) {\n        this.setToDraft(oldConversationId, this.replyType);\n        this.getFromDraft();\n      }\n    },\n    message(updatedMessage) {\n      this.hasSlashCommand =\n        updatedMessage[0] === '/' && !this.showRichContentEditor;\n      const hasNextWord = updatedMessage.includes(' ');\n      const isShortCodeActive = this.hasSlashCommand && !hasNextWord;\n      if (isShortCodeActive) {\n        this.mentionSearchKey = updatedMessage.substring(1);\n        this.showMentions = true;\n      } else {\n        this.mentionSearchKey = '';\n        this.showMentions = false;\n      }\n      this.doAutoSaveDraft();\n    },\n    replyType(updatedReplyType, oldReplyType) {\n      this.setToDraft(this.conversationIdByRoute, oldReplyType);\n      this.getFromDraft();\n    },\n  },\n\n  mounted() {\n    this.getFromDraft();\n    // Donot use the keyboard listener mixin here as the events here are supposed to be\n    // working even if input/textarea is focussed.\n    document.addEventListener('paste', this.onPaste);\n    document.addEventListener('keydown', this.handleKeyEvents);\n    this.setCCEmailFromLastChat();\n    this.doAutoSaveDraft = debounce(\n      () => {\n        this.saveDraft(this.conversationIdByRoute, this.replyType);\n      },\n      500,\n      true\n    );\n  },\n  destroyed() {\n    document.removeEventListener('paste', this.onPaste);\n    document.removeEventListener('keydown', this.handleKeyEvents);\n  },\n  methods: {\n    toggleRichContentEditor() {\n      this.updateUISettings({\n        display_rich_content_editor: !this.showRichContentEditor,\n      });\n    },\n    getSavedDraftMessages() {\n      return LocalStorage.get(LOCAL_STORAGE_KEYS.DRAFT_MESSAGES) || {};\n    },\n    saveDraft(conversationId, replyType) {\n      if (this.message || this.message === '') {\n        const savedDraftMessages = this.getSavedDraftMessages();\n        const key = `draft-${conversationId}-${replyType}`;\n        const draftToSave = trimContent(this.message || '');\n        const {\n          [key]: currentDraft,\n          ...restOfDraftMessages\n        } = savedDraftMessages;\n\n        const updatedDraftMessages = draftToSave\n          ? {\n              ...restOfDraftMessages,\n              [key]: draftToSave,\n            }\n          : restOfDraftMessages;\n\n        LocalStorage.set(\n          LOCAL_STORAGE_KEYS.DRAFT_MESSAGES,\n          updatedDraftMessages\n        );\n      }\n    },\n    setToDraft(conversationId, replyType) {\n      this.saveDraft(conversationId, replyType);\n      this.message = '';\n    },\n    getFromDraft() {\n      if (this.conversationIdByRoute) {\n        try {\n          const key = `draft-${this.conversationIdByRoute}-${this.replyType}`;\n          const savedDraftMessages = this.getSavedDraftMessages();\n          this.message = `${savedDraftMessages[key] || ''}`;\n        } catch (error) {\n          this.message = '';\n        }\n      }\n    },\n    removeFromDraft() {\n      if (this.conversationIdByRoute) {\n        const key = `draft-${this.conversationIdByRoute}-${this.replyType}`;\n        const draftMessages = this.getSavedDraftMessages();\n        const { [key]: toBeRemoved, ...updatedDraftMessages } = draftMessages;\n        LocalStorage.set(\n          LOCAL_STORAGE_KEYS.DRAFT_MESSAGES,\n          updatedDraftMessages\n        );\n      }\n    },\n    handleKeyEvents(e) {\n      const keyCode = buildHotKeys(e);\n      if (keyCode === 'escape') {\n        this.hideEmojiPicker();\n        this.hideMentions();\n      } else if (keyCode === 'meta+k') {\n        const ninja = document.querySelector('ninja-keys');\n        ninja.open();\n        e.preventDefault();\n      } else if (keyCode === 'enter' && this.isAValidEvent('enter')) {\n        this.onSendReply();\n        e.preventDefault();\n      } else if (\n        ['meta+enter', 'ctrl+enter'].includes(keyCode) &&\n        this.isAValidEvent('cmd_enter')\n      ) {\n        this.onSendReply();\n      }\n    },\n    isAValidEvent(selectedKey) {\n      return (\n        !this.hasUserMention &&\n        !this.showCannedMenu &&\n        this.isFocused &&\n        isEditorHotKeyEnabled(this.uiSettings, selectedKey)\n      );\n    },\n    onPaste(e) {\n      const data = e.clipboardData.files;\n      if (!this.showRichContentEditor && data.length !== 0) {\n        this.$refs.messageInput.$el.blur();\n      }\n      if (!data.length || !data[0]) {\n        return;\n      }\n      data.forEach(file => {\n        const { name, type, size } = file;\n        this.onFileUpload({ name, type, size, file: file });\n      });\n    },\n    toggleUserMention(currentMentionState) {\n      this.hasUserMention = currentMentionState;\n    },\n    toggleCannedMenu(value) {\n      this.showCannedMenu = value;\n    },\n    openWhatsappTemplateModal() {\n      this.showWhatsAppTemplatesModal = true;\n    },\n    hideWhatsappTemplatesModal() {\n      this.showWhatsAppTemplatesModal = false;\n    },\n    onClickSelfAssign() {\n      const {\n        account_id,\n        availability_status,\n        available_name,\n        email,\n        id,\n        name,\n        role,\n        avatar_url,\n      } = this.currentUser;\n      const selfAssign = {\n        account_id,\n        availability_status,\n        available_name,\n        email,\n        id,\n        name,\n        role,\n        thumbnail: avatar_url,\n      };\n      this.assignedAgent = selfAssign;\n    },\n    async onSendReply() {\n      if (this.isReplyButtonDisabled) {\n        return;\n      }\n      if (!this.showMentions) {\n        let newMessage = this.message;\n        if (this.isSignatureEnabledForInbox && this.messageSignature) {\n          newMessage += '\\n\\n' + this.messageSignature;\n        }\n        const messagePayload = this.getMessagePayload(newMessage);\n\n        this.clearMessage();\n        if (!this.isPrivate) {\n          this.clearEmailField();\n        }\n        this.sendMessage(messagePayload);\n        this.clearMessage();\n        this.hideEmojiPicker();\n        this.$emit('update:popoutReplyBox', false);\n      }\n    },\n    async sendMessage(messagePayload) {\n      try {\n        await this.$store.dispatch(\n          'createPendingMessageAndSend',\n          messagePayload\n        );\n        bus.$emit(BUS_EVENTS.SCROLL_TO_MESSAGE);\n        this.removeFromDraft();\n      } catch (error) {\n        const errorMessage =\n          error?.response?.data?.error || this.$t('CONVERSATION.MESSAGE_ERROR');\n        this.showAlert(errorMessage);\n      }\n    },\n    async onSendWhatsAppReply(messagePayload) {\n      this.sendMessage({\n        conversationId: this.currentChat.id,\n        ...messagePayload,\n      });\n      this.hideWhatsappTemplatesModal();\n    },\n    replaceText(message) {\n      setTimeout(() => {\n        AnalyticsHelper.track(ANALYTICS_EVENTS.INSERTED_A_CANNED_RESPONSE);\n        this.message = message;\n      }, 100);\n    },\n    setReplyMode(mode = REPLY_EDITOR_MODES.REPLY) {\n      const { can_reply: canReply } = this.currentChat;\n      if (canReply || this.isAWhatsAppChannel) this.replyType = mode;\n      if (this.showRichContentEditor) {\n        if (this.isRecordingAudio) {\n          this.toggleAudioRecorder();\n        }\n        return;\n      }\n      this.$nextTick(() => this.$refs.messageInput.focus());\n    },\n    clearEditorSelection() {\n      this.updateEditorSelectionWith = '';\n    },\n    insertEmoji(emoji, selectionStart, selectionEnd) {\n      const { message } = this;\n      const newMessage =\n        message.slice(0, selectionStart) +\n        emoji +\n        message.slice(selectionEnd, message.length);\n      this.message = newMessage;\n    },\n    emojiOnClick(emoji) {\n      if (this.showRichContentEditor) {\n        this.updateEditorSelectionWith = emoji;\n        this.onFocus();\n      }\n      if (!this.showRichContentEditor) {\n        const { selectionStart, selectionEnd } = this.$refs.messageInput.$el;\n        this.insertEmoji(emoji, selectionStart, selectionEnd);\n      }\n    },\n    clearMessage() {\n      this.message = '';\n      this.attachedFiles = [];\n      this.isRecordingAudio = false;\n    },\n    clearEmailField() {\n      this.ccEmails = '';\n      this.bccEmails = '';\n    },\n    toggleEmojiPicker() {\n      this.showEmojiPicker = !this.showEmojiPicker;\n    },\n    toggleAudioRecorder() {\n      this.isRecordingAudio = !this.isRecordingAudio;\n      this.isRecorderAudioStopped = !this.isRecordingAudio;\n      if (!this.isRecordingAudio) {\n        this.clearMessage();\n        this.clearEmailField();\n      }\n    },\n    toggleAudioRecorderPlayPause() {\n      if (this.isRecordingAudio) {\n        if (!this.isRecorderAudioStopped) {\n          this.isRecorderAudioStopped = true;\n          this.$refs.audioRecorderInput.stopAudioRecording();\n        } else if (this.isRecorderAudioStopped) {\n          this.$refs.audioRecorderInput.playPause();\n        }\n      }\n    },\n    hideEmojiPicker() {\n      if (this.showEmojiPicker) {\n        this.toggleEmojiPicker();\n      }\n    },\n    hideMentions() {\n      this.showMentions = false;\n    },\n    onTypingOn() {\n      this.toggleTyping('on');\n    },\n    onTypingOff() {\n      this.toggleTyping('off');\n    },\n    onBlur() {\n      this.isFocused = false;\n      this.saveDraft(this.conversationIdByRoute, this.replyType);\n    },\n    onFocus() {\n      this.isFocused = true;\n    },\n    onStateProgressRecorderChanged(duration) {\n      this.recordingAudioDurationText = duration;\n    },\n    onStateRecorderChanged(state) {\n      this.recordingAudioState = state;\n      if (state && 'notallowederror'.includes(state)) {\n        this.toggleAudioRecorder();\n      }\n    },\n    onFinishRecorder(file) {\n      return file && this.onFileUpload(file);\n    },\n    toggleTyping(status) {\n      const conversationId = this.currentChat.id;\n      const isPrivate = this.isPrivate;\n      this.$store.dispatch('conversationTypingStatus/toggleTyping', {\n        status,\n        conversationId,\n        isPrivate,\n      });\n    },\n    onFileUpload(file) {\n      if (this.globalConfig.directUploadsEnabled) {\n        this.onDirectFileUpload(file);\n      } else {\n        this.onIndirectFileUpload(file);\n      }\n    },\n    onDirectFileUpload(file) {\n      const MAXIMUM_SUPPORTED_FILE_UPLOAD_SIZE = this.isATwilioSMSChannel\n        ? MAXIMUM_FILE_UPLOAD_SIZE_TWILIO_SMS_CHANNEL\n        : MAXIMUM_FILE_UPLOAD_SIZE;\n\n      if (!file) {\n        return;\n      }\n      if (checkFileSizeLimit(file, MAXIMUM_SUPPORTED_FILE_UPLOAD_SIZE)) {\n        const upload = new DirectUpload(\n          file.file,\n          `/api/v1/accounts/${this.accountId}/conversations/${this.currentChat.id}/direct_uploads`,\n          {\n            directUploadWillCreateBlobWithXHR: xhr => {\n              xhr.setRequestHeader(\n                'api_access_token',\n                this.currentUser.access_token\n              );\n            },\n          }\n        );\n\n        upload.create((error, blob) => {\n          if (error) {\n            this.showAlert(error);\n          } else {\n            this.attachFile({ file, blob });\n          }\n        });\n      } else {\n        this.showAlert(\n          this.$t('CONVERSATION.FILE_SIZE_LIMIT', {\n            MAXIMUM_SUPPORTED_FILE_UPLOAD_SIZE,\n          })\n        );\n      }\n    },\n    onIndirectFileUpload(file) {\n      const MAXIMUM_SUPPORTED_FILE_UPLOAD_SIZE = this.isATwilioSMSChannel\n        ? MAXIMUM_FILE_UPLOAD_SIZE_TWILIO_SMS_CHANNEL\n        : MAXIMUM_FILE_UPLOAD_SIZE;\n      if (!file) {\n        return;\n      }\n      if (checkFileSizeLimit(file, MAXIMUM_SUPPORTED_FILE_UPLOAD_SIZE)) {\n        this.attachFile({ file });\n      } else {\n        this.showAlert(\n          this.$t('CONVERSATION.FILE_SIZE_LIMIT', {\n            MAXIMUM_SUPPORTED_FILE_UPLOAD_SIZE,\n          })\n        );\n      }\n    },\n    attachFile({ blob, file }) {\n      const reader = new FileReader();\n      reader.readAsDataURL(file.file);\n      reader.onloadend = () => {\n        this.attachedFiles.push({\n          currentChatId: this.currentChat.id,\n          resource: blob || file,\n          isPrivate: this.isPrivate,\n          thumb: reader.result,\n          blobSignedId: blob ? blob.signed_id : undefined,\n        });\n      };\n    },\n    removeAttachment(itemIndex) {\n      this.attachedFiles = this.attachedFiles.filter(\n        (item, index) => itemIndex !== index\n      );\n    },\n    getMessagePayload(message) {\n      const messagePayload = {\n        conversationId: this.currentChat.id,\n        message,\n        private: this.isPrivate,\n      };\n\n      if (this.inReplyTo) {\n        messagePayload.contentAttributes = { in_reply_to: this.inReplyTo };\n      }\n\n      if (this.attachedFiles && this.attachedFiles.length) {\n        messagePayload.files = [];\n        this.attachedFiles.forEach(attachment => {\n          if (this.globalConfig.directUploadsEnabled) {\n            messagePayload.files.push(attachment.blobSignedId);\n          } else {\n            messagePayload.files.push(attachment.resource.file);\n          }\n        });\n      }\n\n      if (this.ccEmails && !this.isOnPrivateNote) {\n        messagePayload.ccEmails = this.ccEmails;\n      }\n\n      if (this.bccEmails && !this.isOnPrivateNote) {\n        messagePayload.bccEmails = this.bccEmails;\n      }\n\n      return messagePayload;\n    },\n    setCcEmails(value) {\n      this.bccEmails = value.bccEmails;\n      this.ccEmails = value.ccEmails;\n    },\n    setCCEmailFromLastChat() {\n      if (this.lastEmail) {\n        const {\n          content_attributes: { email: emailAttributes = {} },\n        } = this.lastEmail;\n        const cc = emailAttributes.cc || [];\n        const bcc = emailAttributes.bcc || [];\n        this.ccEmails = cc.join(', ');\n        this.bccEmails = bcc.join(', ');\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.send-button {\n  margin-bottom: 0;\n}\n\n.message-signature-wrap {\n  margin: 0 var(--space-normal);\n  padding: var(--space-small);\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  border: 1px dashed var(--s-100);\n  border-radius: var(--border-radius-small);\n  max-height: 8vh;\n  overflow: auto;\n\n  &:hover {\n    background: var(--s-25);\n  }\n}\n\n.message-signature {\n  width: fit-content;\n  margin: 0;\n}\n\n.attachment-preview-box {\n  padding: 0 var(--space-normal);\n  background: transparent;\n}\n\n.reply-box {\n  border-top: 1px solid var(--color-border);\n  background: white;\n\n  &.is-private {\n    background: var(--y-50);\n  }\n}\n.send-button {\n  margin-bottom: 0;\n}\n\n.reply-box__top {\n  padding: 0 var(--space-normal);\n  border-top: 1px solid var(--color-border);\n  margin-top: -1px;\n}\n\n.emoji-dialog {\n  top: unset;\n  bottom: var(--space-normal);\n  left: -320px;\n  right: unset;\n\n  &::before {\n    right: var(--space-minus-normal);\n    bottom: var(--space-small);\n    transform: rotate(270deg);\n    filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.08));\n  }\n}\n.emoji-dialog--expanded {\n  left: unset;\n  bottom: var(--space-jumbo);\n  position: absolute;\n  z-index: var(--z-index-normal);\n\n  &::before {\n    transform: rotate(0deg);\n    left: var(--space-smaller);\n    bottom: var(--space-minus-small);\n  }\n}\n.message-signature {\n  margin-bottom: 0;\n\n  ::v-deep p:last-child {\n    margin-bottom: 0;\n  }\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/components/widgets/conversation"},"metadata":{},"sourceType":"module"}