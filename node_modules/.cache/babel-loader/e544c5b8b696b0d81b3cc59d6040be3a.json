{"ast":null,"code":"import \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nexport default {\n  methods: {\n    replaceRoute: function replaceRoute(name) {\n      var _arguments = arguments,\n          _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var params;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                params = _arguments.length > 1 && _arguments[1] !== undefined ? _arguments[1] : {};\n\n                if (!(_this.$route.name !== name)) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", _this.$router.replace({\n                  name: name,\n                  params: params\n                }));\n\n              case 3:\n                return _context.abrupt(\"return\", undefined);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/widget/mixins/routerMixin.js"],"names":["methods","replaceRoute","name","params","$route","$router","replace","undefined"],"mappings":";;;;;;;;;;;AAAA,eAAe;AACbA,EAAAA,OAAO,EAAE;AACDC,IAAAA,YADC,wBACYC,IADZ,EAC+B;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAbC,gBAAAA,MAAa,0EAAJ,EAAI;;AAAA,sBAChC,KAAI,CAACC,MAAL,CAAYF,IAAZ,KAAqBA,IADW;AAAA;AAAA;AAAA;;AAAA,iDAE3B,KAAI,CAACG,OAAL,CAAaC,OAAb,CAAqB;AAAEJ,kBAAAA,IAAI,EAAJA,IAAF;AAAQC,kBAAAA,MAAM,EAANA;AAAR,iBAArB,CAF2B;;AAAA;AAAA,iDAI7BI,SAJ6B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKrC;AANM;AADI,CAAf","sourcesContent":["export default {\n  methods: {\n    async replaceRoute(name, params = {}) {\n      if (this.$route.name !== name) {\n        return this.$router.replace({ name, params });\n      }\n      return undefined;\n    },\n  },\n};\n"]},"metadata":{},"sourceType":"module"}