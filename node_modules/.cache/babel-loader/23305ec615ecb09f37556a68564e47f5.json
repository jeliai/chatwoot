{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nexport default {\n  props: {\n    showAccountModal: {\n      type: Boolean,\n      default: true\n    }\n  },\n  computed: _objectSpread({}, mapGetters({\n    accountId: 'getCurrentAccountId',\n    currentUser: 'getCurrentUser',\n    globalConfig: 'globalConfig/get'\n  })),\n  methods: {\n    onChangeAccount: function onChangeAccount(accountId) {\n      var accountUrl = \"/app/accounts/\".concat(accountId, \"/dashboard\");\n      window.location.href = accountUrl;\n    }\n  }\n};","map":{"version":3,"sources":["AccountSelector.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA,SAAA,UAAA,QAAA,MAAA;AACA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,gBAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AADA,GADA;AAQA,EAAA,QAAA,oBACA,UAAA,CAAA;AACA,IAAA,SAAA,EAAA,qBADA;AAEA,IAAA,WAAA,EAAA,gBAFA;AAGA,IAAA,YAAA,EAAA;AAHA,GAAA,CADA,CARA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,eADA,2BACA,SADA,EACA;AACA,UAAA,UAAA,2BAAA,SAAA,eAAA;AACA,MAAA,MAAA,CAAA,QAAA,CAAA,IAAA,GAAA,UAAA;AACA;AAJA;AAfA,CAAA","sourcesContent":["<template>\n  <woot-modal\n    :show=\"showAccountModal\"\n    :on-close=\"() => $emit('close-account-modal')\"\n    class=\"account-selector--modal\"\n  >\n    <woot-modal-header\n      :header-title=\"$t('SIDEBAR_ITEMS.CHANGE_ACCOUNTS')\"\n      :header-content=\"$t('SIDEBAR_ITEMS.SELECTOR_SUBTITLE')\"\n    />\n    <div class=\"account-selector--wrap\">\n      <div\n        v-for=\"account in currentUser.accounts\"\n        :key=\"account.id\"\n        class=\"account-selector\"\n      >\n        <button\n          class=\"button expanded clear link\"\n          @click=\"onChangeAccount(account.id)\"\n        >\n          <span class=\"button__content\">\n            <label :for=\"account.name\" class=\"account-details--wrap\">\n              <div class=\"account--name\">{{ account.name }}</div>\n              <div class=\"account--role\">{{ account.role }}</div>\n            </label>\n          </span>\n          <fluent-icon\n            v-show=\"account.id === accountId\"\n            class=\"selected--account\"\n            icon=\"checkmark-circle\"\n            type=\"solid\"\n            size=\"24\"\n          />\n        </button>\n      </div>\n    </div>\n\n    <div\n      v-if=\"globalConfig.createNewAccountFromDashboard\"\n      class=\"modal-footer delete-item\"\n    >\n      <button\n        class=\"button success large expanded nice\"\n        @click=\"$emit('show-create-account-modal')\"\n      >\n        {{ $t('CREATE_ACCOUNT.NEW_ACCOUNT') }}\n      </button>\n    </div>\n  </woot-modal>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nexport default {\n  props: {\n    showAccountModal: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  computed: {\n    ...mapGetters({\n      accountId: 'getCurrentAccountId',\n      currentUser: 'getCurrentUser',\n      globalConfig: 'globalConfig/get',\n    }),\n  },\n  methods: {\n    onChangeAccount(accountId) {\n      const accountUrl = `/app/accounts/${accountId}/dashboard`;\n      window.location.href = accountUrl;\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n.account-selector--wrap {\n  margin-top: var(--space-normal);\n}\n.account-selector {\n  padding-top: 0;\n  padding-bottom: 0;\n  .button {\n    display: flex;\n    justify-content: space-between;\n    padding: var(--space-one) var(--space-normal);\n    .account-details--wrap {\n      text-align: left;\n      .account--name {\n        cursor: pointer;\n        font-size: var(--font-size-medium);\n        font-weight: var(--font-weight-medium);\n        line-height: 1;\n      }\n\n      .account--role {\n        cursor: pointer;\n        font-size: var(--font-size-mini);\n        text-transform: capitalize;\n      }\n    }\n  }\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/components/layout/sidebarComponents"},"metadata":{},"sourceType":"module"}