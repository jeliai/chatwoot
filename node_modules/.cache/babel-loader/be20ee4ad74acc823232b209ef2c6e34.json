{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport Spinner from 'shared/components/Spinner';\nimport LabelDropdown from 'shared/components/ui/label/LabelDropdown';\nimport AddLabel from 'shared/components/ui/dropdown/AddLabel';\nimport { mixin as clickaway } from 'vue-clickaway';\nimport conversationLabelMixin from 'dashboard/mixins/conversation/labelMixin';\nexport default {\n  components: {\n    Spinner: Spinner,\n    LabelDropdown: LabelDropdown,\n    AddLabel: AddLabel\n  },\n  mixins: [clickaway, conversationLabelMixin],\n  props: {\n    conversationId: {\n      type: Number,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      selectedLabels: [],\n      showSearchDropdownLabel: false\n    };\n  },\n  computed: _objectSpread({}, mapGetters({\n    conversationUiFlags: 'conversationLabels/getUIFlags',\n    labelUiFlags: 'conversationLabels/getUIFlags'\n  })),\n  methods: {\n    toggleLabels: function toggleLabels() {\n      this.showSearchDropdownLabel = !this.showSearchDropdownLabel;\n    },\n    closeDropdownLabel: function closeDropdownLabel() {\n      this.showSearchDropdownLabel = false;\n    }\n  }\n};","map":{"version":3,"sources":["LabelBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,OAAA,MAAA,2BAAA;AACA,OAAA,aAAA,MAAA,0CAAA;AACA,OAAA,QAAA,MAAA,wCAAA;AACA,SAAA,KAAA,IAAA,SAAA,QAAA,eAAA;AACA,OAAA,sBAAA,MAAA,0CAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,OAAA,EAAA,OADA;AAEA,IAAA,aAAA,EAAA,aAFA;AAGA,IAAA,QAAA,EAAA;AAHA,GADA;AAOA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,sBAAA,CAPA;AAQA,EAAA,KAAA,EAAA;AACA,IAAA,cAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AADA,GARA;AAeA,EAAA,IAfA,kBAeA;AACA,WAAA;AACA,MAAA,cAAA,EAAA,EADA;AAEA,MAAA,uBAAA,EAAA;AAFA,KAAA;AAIA,GApBA;AAsBA,EAAA,QAAA,oBACA,UAAA,CAAA;AACA,IAAA,mBAAA,EAAA,+BADA;AAEA,IAAA,YAAA,EAAA;AAFA,GAAA,CADA,CAtBA;AA4BA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA,WAAA,uBAAA,GAAA,CAAA,KAAA,uBAAA;AACA,KAHA;AAIA,IAAA,kBAJA,gCAIA;AACA,WAAA,uBAAA,GAAA,KAAA;AACA;AANA;AA5BA,CAAA","sourcesContent":["<template>\n  <div class=\"sidebar-labels-wrap\">\n    <div\n      v-if=\"!conversationUiFlags.isFetching\"\n      class=\"contact-conversation--list\"\n    >\n      <div\n        v-on-clickaway=\"closeDropdownLabel\"\n        class=\"label-wrap\"\n        @keyup.esc=\"closeDropdownLabel\"\n      >\n        <add-label @add=\"toggleLabels\" />\n        <woot-label\n          v-for=\"label in activeLabels\"\n          :key=\"label.id\"\n          :title=\"label.title\"\n          :description=\"label.description\"\n          :show-close=\"true\"\n          :color=\"label.color\"\n          variant=\"smooth\"\n          @click=\"removeLabelFromConversation\"\n        />\n\n        <div class=\"dropdown-wrap\">\n          <div\n            :class=\"{ 'dropdown-pane--open': showSearchDropdownLabel }\"\n            class=\"dropdown-pane\"\n          >\n            <label-dropdown\n              v-if=\"showSearchDropdownLabel\"\n              :account-labels=\"accountLabels\"\n              :selected-labels=\"savedLabels\"\n              @add=\"addLabelToConversation\"\n              @remove=\"removeLabelFromConversation\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <spinner v-else />\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport Spinner from 'shared/components/Spinner';\nimport LabelDropdown from 'shared/components/ui/label/LabelDropdown';\nimport AddLabel from 'shared/components/ui/dropdown/AddLabel';\nimport { mixin as clickaway } from 'vue-clickaway';\nimport conversationLabelMixin from 'dashboard/mixins/conversation/labelMixin';\n\nexport default {\n  components: {\n    Spinner,\n    LabelDropdown,\n    AddLabel,\n  },\n\n  mixins: [clickaway, conversationLabelMixin],\n  props: {\n    conversationId: {\n      type: Number,\n      required: true,\n    },\n  },\n\n  data() {\n    return {\n      selectedLabels: [],\n      showSearchDropdownLabel: false,\n    };\n  },\n\n  computed: {\n    ...mapGetters({\n      conversationUiFlags: 'conversationLabels/getUIFlags',\n      labelUiFlags: 'conversationLabels/getUIFlags',\n    }),\n  },\n  methods: {\n    toggleLabels() {\n      this.showSearchDropdownLabel = !this.showSearchDropdownLabel;\n    },\n    closeDropdownLabel() {\n      this.showSearchDropdownLabel = false;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.sidebar-labels-wrap {\n  margin-bottom: var(--space-normal);\n}\n.contact-conversation--list {\n  width: 100%;\n\n  .label-wrap {\n    line-height: var(--space-medium);\n    position: relative;\n\n    .dropdown-wrap {\n      display: flex;\n      left: -1px;\n      margin-right: var(--space-medium);\n      position: absolute;\n      top: var(--space-medium);\n      width: 100%;\n\n      .dropdown-pane {\n        width: 100%;\n        box-sizing: border-box;\n      }\n    }\n  }\n}\n\n.error {\n  color: var(--r-500);\n  font-size: var(--font-size-mini);\n  font-weight: var(--font-weight-medium);\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/conversation/labels"},"metadata":{},"sourceType":"module"}