{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nexport function dset(obj, keys, val) {\n  keys.split && (keys = keys.split('.'));\n  var i = 0,\n      l = keys.length,\n      t = obj,\n      x,\n      k;\n\n  while (i < l) {\n    k = keys[i++];\n    if (k === '__proto__' || k === 'constructor' || k === 'prototype') break;\n    t = t[k] = i === l ? val : _typeof(x = t[k]) === _typeof(keys) ? x : keys[i] * 0 !== 0 || !!~('' + keys[i]).indexOf('.') ? {} : [];\n  }\n}","map":null,"metadata":{},"sourceType":"module"}