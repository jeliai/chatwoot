{"ast":null,"code":"import \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport Thumbnail from 'dashboard/components/widgets/Thumbnail';\nimport WootMessageEditor from 'dashboard/components/widgets/WootWriter/Editor';\nimport ReplyEmailHead from 'dashboard/components/widgets/conversation/ReplyEmailHead';\nimport CannedResponse from 'dashboard/components/widgets/conversation/CannedResponse.vue';\nimport WhatsappTemplates from './WhatsappTemplates.vue';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport { INBOX_TYPES } from 'shared/mixins/inboxMixin';\nimport { ExceptionWithMessage } from 'shared/helpers/CustomErrors';\nimport { required, requiredIf } from 'vuelidate/lib/validators';\nexport default {\n  components: {\n    Thumbnail: Thumbnail,\n    WootMessageEditor: WootMessageEditor,\n    ReplyEmailHead: ReplyEmailHead,\n    CannedResponse: CannedResponse,\n    WhatsappTemplates: WhatsappTemplates\n  },\n  mixins: [alertMixin],\n  props: {\n    contact: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    onSubmit: {\n      type: Function,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    return {\n      name: '',\n      subject: '',\n      message: '',\n      showCannedResponseMenu: false,\n      cannedResponseSearchKey: '',\n      selectedInbox: '',\n      bccEmails: '',\n      ccEmails: '',\n      whatsappTemplateSelected: false\n    };\n  },\n  validations: {\n    subject: {\n      required: requiredIf('isAnEmailInbox')\n    },\n    message: {\n      required: required\n    },\n    targetInbox: {\n      required: required\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    uiFlags: 'contacts/getUIFlags',\n    conversationsUiFlags: 'contactConversations/getUIFlags',\n    currentUser: 'getCurrentUser'\n  })), {}, {\n    emailMessagePayload: function emailMessagePayload() {\n      var payload = {\n        inboxId: this.targetInbox.inbox.id,\n        sourceId: this.targetInbox.source_id,\n        contactId: this.contact.id,\n        message: {\n          content: this.message\n        },\n        mailSubject: this.subject,\n        assigneeId: this.currentUser.id\n      };\n\n      if (this.ccEmails) {\n        payload.message.cc_emails = this.ccEmails;\n      }\n\n      if (this.bccEmails) {\n        payload.message.bcc_emails = this.bccEmails;\n      }\n\n      return payload;\n    },\n    targetInbox: {\n      get: function get() {\n        return this.selectedInbox || {};\n      },\n      set: function set(value) {\n        this.selectedInbox = value;\n      }\n    },\n    showNoInboxAlert: function showNoInboxAlert() {\n      if (!this.contact.contactableInboxes) {\n        return false;\n      }\n\n      return this.inboxes.length === 0 && !this.uiFlags.isFetchingInboxes;\n    },\n    inboxes: function inboxes() {\n      return this.contact.contactableInboxes || [];\n    },\n    isAnEmailInbox: function isAnEmailInbox() {\n      return this.selectedInbox && this.selectedInbox.inbox.channel_type === INBOX_TYPES.EMAIL;\n    },\n    isAnWebWidgetInbox: function isAnWebWidgetInbox() {\n      return this.selectedInbox && this.selectedInbox.inbox.channel_type === INBOX_TYPES.WEB;\n    },\n    hasWhatsappTemplates: function hasWhatsappTemplates() {\n      var _this$selectedInbox$i;\n\n      return !!((_this$selectedInbox$i = this.selectedInbox.inbox) !== null && _this$selectedInbox$i !== void 0 && _this$selectedInbox$i.message_templates);\n    }\n  }),\n  watch: {\n    message: function message(value) {\n      this.hasSlashCommand = value[0] === '/';\n      var hasNextWord = value.includes(' ');\n      var isShortCodeActive = this.hasSlashCommand && !hasNextWord;\n\n      if (isShortCodeActive) {\n        this.cannedResponseSearchKey = value.substring(1);\n        this.showCannedResponseMenu = true;\n      } else {\n        this.cannedResponseSearchKey = '';\n        this.showCannedResponseMenu = false;\n      }\n    }\n  },\n  methods: {\n    onCancel: function onCancel() {\n      this.$emit('cancel');\n    },\n    onSuccess: function onSuccess() {\n      this.$emit('success');\n    },\n    replaceTextWithCannedResponse: function replaceTextWithCannedResponse(message) {\n      var _this = this;\n\n      setTimeout(function () {\n        _this.message = message;\n      }, 50);\n    },\n    prepareWhatsAppMessagePayload: function prepareWhatsAppMessagePayload(_ref) {\n      var content = _ref.message,\n          templateParams = _ref.templateParams;\n      var payload = {\n        inboxId: this.targetInbox.inbox.id,\n        sourceId: this.targetInbox.source_id,\n        contactId: this.contact.id,\n        message: {\n          content: content,\n          template_params: templateParams\n        },\n        assigneeId: this.currentUser.id\n      };\n      return payload;\n    },\n    onFormSubmit: function onFormSubmit() {\n      this.$v.$touch();\n\n      if (this.$v.$invalid) {\n        return;\n      }\n\n      this.createConversation(this.emailMessagePayload);\n    },\n    createConversation: function createConversation(payload) {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var data, action;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _this2.onSubmit(payload);\n\n              case 3:\n                data = _context.sent;\n                action = {\n                  type: 'link',\n                  to: \"/app/accounts/\".concat(data.account_id, \"/conversations/\").concat(data.id),\n                  message: _this2.$t('NEW_CONVERSATION.FORM.GO_TO_CONVERSATION')\n                };\n\n                _this2.onSuccess();\n\n                _this2.showAlert(_this2.$t('NEW_CONVERSATION.FORM.SUCCESS_MESSAGE'), action);\n\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n\n                if (_context.t0 instanceof ExceptionWithMessage) {\n                  _this2.showAlert(_context.t0.data);\n                } else {\n                  _this2.showAlert(_this2.$t('NEW_CONVERSATION.FORM.ERROR_MESSAGE'));\n                }\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 9]]);\n      }))();\n    },\n    toggleWaTemplate: function toggleWaTemplate(val) {\n      this.whatsappTemplateSelected = val;\n    },\n    onSendWhatsAppReply: function onSendWhatsAppReply(messagePayload) {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var payload;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                payload = _this3.prepareWhatsAppMessagePayload(messagePayload);\n                _context2.next = 3;\n                return _this3.createConversation(payload);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    }\n  }\n};","map":{"version":3,"sources":["ConversationForm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <form class=\"conversation--form\" @submit.prevent=\"onFormSubmit\">\n    <div v-if=\"showNoInboxAlert\" class=\"callout warning\">\n      <p>\n        {{ $t('NEW_CONVERSATION.NO_INBOX') }}\n      </p>\n    </div>\n    <div v-else>\n      <div class=\"row gutter-small\">\n        <div class=\"columns\">\n          <label :class=\"{ error: $v.targetInbox.$error }\">\n            {{ $t('NEW_CONVERSATION.FORM.INBOX.LABEL') }}\n            <select v-model=\"targetInbox\">\n              <option\n                v-for=\"contactableInbox in inboxes\"\n                :key=\"contactableInbox.inbox.id\"\n                :value=\"contactableInbox\"\n              >\n                {{ contactableInbox.inbox.name }}\n              </option>\n            </select>\n            <span v-if=\"$v.targetInbox.$error\" class=\"message\">\n              {{ $t('NEW_CONVERSATION.FORM.INBOX.ERROR') }}\n            </span>\n          </label>\n        </div>\n        <div class=\"columns\">\n          <label>\n            {{ $t('NEW_CONVERSATION.FORM.TO.LABEL') }}\n            <div class=\"contact-input\">\n              <thumbnail\n                :src=\"contact.thumbnail\"\n                size=\"24px\"\n                :username=\"contact.name\"\n                :status=\"contact.availability_status\"\n              />\n              <h4 class=\"text-block-title contact-name\">\n                {{ contact.name }}\n              </h4>\n            </div>\n          </label>\n        </div>\n      </div>\n      <div v-if=\"isAnEmailInbox\" class=\"row\">\n        <div class=\"columns\">\n          <label :class=\"{ error: $v.subject.$error }\">\n            {{ $t('NEW_CONVERSATION.FORM.SUBJECT.LABEL') }}\n            <input\n              v-model=\"subject\"\n              type=\"text\"\n              :placeholder=\"$t('NEW_CONVERSATION.FORM.SUBJECT.PLACEHOLDER')\"\n              @input=\"$v.subject.$touch\"\n            />\n            <span v-if=\"$v.subject.$error\" class=\"message\">\n              {{ $t('NEW_CONVERSATION.FORM.SUBJECT.ERROR') }}\n            </span>\n          </label>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"columns\">\n          <div class=\"canned-response\">\n            <canned-response\n              v-if=\"showCannedResponseMenu && hasSlashCommand\"\n              :search-key=\"cannedResponseSearchKey\"\n              @click=\"replaceTextWithCannedResponse\"\n            />\n          </div>\n          <div v-if=\"isAnEmailInbox || isAnWebWidgetInbox\">\n            <label>\n              {{ $t('NEW_CONVERSATION.FORM.MESSAGE.LABEL') }}\n              <reply-email-head\n                v-if=\"isAnEmailInbox\"\n                :cc-emails.sync=\"ccEmails\"\n                :bcc-emails.sync=\"bccEmails\"\n              />\n              <label class=\"editor-wrap\">\n                <woot-message-editor\n                  v-model=\"message\"\n                  class=\"message-editor\"\n                  :class=\"{ editor_warning: $v.message.$error }\"\n                  :placeholder=\"$t('NEW_CONVERSATION.FORM.MESSAGE.PLACEHOLDER')\"\n                  @blur=\"$v.message.$touch\"\n                />\n                <span v-if=\"$v.message.$error\" class=\"editor-warning__message\">\n                  {{ $t('NEW_CONVERSATION.FORM.MESSAGE.ERROR') }}\n                </span>\n              </label>\n            </label>\n          </div>\n          <whatsapp-templates\n            v-else-if=\"hasWhatsappTemplates\"\n            :inbox-id=\"selectedInbox.inbox.id\"\n            @on-select-template=\"toggleWaTemplate\"\n            @on-send=\"onSendWhatsAppReply\"\n          />\n          <label v-else :class=\"{ error: $v.message.$error }\">\n            {{ $t('NEW_CONVERSATION.FORM.MESSAGE.LABEL') }}\n            <textarea\n              v-model=\"message\"\n              class=\"message-input\"\n              type=\"text\"\n              :placeholder=\"$t('NEW_CONVERSATION.FORM.MESSAGE.PLACEHOLDER')\"\n              @input=\"$v.message.$touch\"\n            />\n            <span v-if=\"$v.message.$error\" class=\"message\">\n              {{ $t('NEW_CONVERSATION.FORM.MESSAGE.ERROR') }}\n            </span>\n          </label>\n        </div>\n      </div>\n    </div>\n    <div v-if=\"!hasWhatsappTemplates\" class=\"modal-footer\">\n      <button class=\"button clear\" @click.prevent=\"onCancel\">\n        {{ $t('NEW_CONVERSATION.FORM.CANCEL') }}\n      </button>\n      <woot-button type=\"submit\" :is-loading=\"conversationsUiFlags.isCreating\">\n        {{ $t('NEW_CONVERSATION.FORM.SUBMIT') }}\n      </woot-button>\n    </div>\n  </form>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport Thumbnail from 'dashboard/components/widgets/Thumbnail';\nimport WootMessageEditor from 'dashboard/components/widgets/WootWriter/Editor';\nimport ReplyEmailHead from 'dashboard/components/widgets/conversation/ReplyEmailHead';\nimport CannedResponse from 'dashboard/components/widgets/conversation/CannedResponse.vue';\nimport WhatsappTemplates from './WhatsappTemplates.vue';\nimport alertMixin from 'shared/mixins/alertMixin';\nimport { INBOX_TYPES } from 'shared/mixins/inboxMixin';\nimport { ExceptionWithMessage } from 'shared/helpers/CustomErrors';\nimport { required, requiredIf } from 'vuelidate/lib/validators';\n\nexport default {\n  components: {\n    Thumbnail,\n    WootMessageEditor,\n    ReplyEmailHead,\n    CannedResponse,\n    WhatsappTemplates,\n  },\n  mixins: [alertMixin],\n  props: {\n    contact: {\n      type: Object,\n      default: () => ({}),\n    },\n    onSubmit: {\n      type: Function,\n      default: () => {},\n    },\n  },\n  data() {\n    return {\n      name: '',\n      subject: '',\n      message: '',\n      showCannedResponseMenu: false,\n      cannedResponseSearchKey: '',\n      selectedInbox: '',\n      bccEmails: '',\n      ccEmails: '',\n      whatsappTemplateSelected: false,\n    };\n  },\n  validations: {\n    subject: {\n      required: requiredIf('isAnEmailInbox'),\n    },\n    message: {\n      required,\n    },\n    targetInbox: {\n      required,\n    },\n  },\n  computed: {\n    ...mapGetters({\n      uiFlags: 'contacts/getUIFlags',\n      conversationsUiFlags: 'contactConversations/getUIFlags',\n      currentUser: 'getCurrentUser',\n    }),\n    emailMessagePayload() {\n      const payload = {\n        inboxId: this.targetInbox.inbox.id,\n        sourceId: this.targetInbox.source_id,\n        contactId: this.contact.id,\n        message: { content: this.message },\n        mailSubject: this.subject,\n        assigneeId: this.currentUser.id,\n      };\n      if (this.ccEmails) {\n        payload.message.cc_emails = this.ccEmails;\n      }\n\n      if (this.bccEmails) {\n        payload.message.bcc_emails = this.bccEmails;\n      }\n      return payload;\n    },\n    targetInbox: {\n      get() {\n        return this.selectedInbox || {};\n      },\n      set(value) {\n        this.selectedInbox = value;\n      },\n    },\n    showNoInboxAlert() {\n      if (!this.contact.contactableInboxes) {\n        return false;\n      }\n      return this.inboxes.length === 0 && !this.uiFlags.isFetchingInboxes;\n    },\n    inboxes() {\n      return this.contact.contactableInboxes || [];\n    },\n    isAnEmailInbox() {\n      return (\n        this.selectedInbox &&\n        this.selectedInbox.inbox.channel_type === INBOX_TYPES.EMAIL\n      );\n    },\n    isAnWebWidgetInbox() {\n      return (\n        this.selectedInbox &&\n        this.selectedInbox.inbox.channel_type === INBOX_TYPES.WEB\n      );\n    },\n    hasWhatsappTemplates() {\n      return !!this.selectedInbox.inbox?.message_templates;\n    },\n  },\n  watch: {\n    message(value) {\n      this.hasSlashCommand = value[0] === '/';\n      const hasNextWord = value.includes(' ');\n      const isShortCodeActive = this.hasSlashCommand && !hasNextWord;\n      if (isShortCodeActive) {\n        this.cannedResponseSearchKey = value.substring(1);\n        this.showCannedResponseMenu = true;\n      } else {\n        this.cannedResponseSearchKey = '';\n        this.showCannedResponseMenu = false;\n      }\n    },\n  },\n  methods: {\n    onCancel() {\n      this.$emit('cancel');\n    },\n    onSuccess() {\n      this.$emit('success');\n    },\n    replaceTextWithCannedResponse(message) {\n      setTimeout(() => {\n        this.message = message;\n      }, 50);\n    },\n    prepareWhatsAppMessagePayload({ message: content, templateParams }) {\n      const payload = {\n        inboxId: this.targetInbox.inbox.id,\n        sourceId: this.targetInbox.source_id,\n        contactId: this.contact.id,\n        message: { content, template_params: templateParams },\n        assigneeId: this.currentUser.id,\n      };\n      return payload;\n    },\n    onFormSubmit() {\n      this.$v.$touch();\n      if (this.$v.$invalid) {\n        return;\n      }\n      this.createConversation(this.emailMessagePayload);\n    },\n    async createConversation(payload) {\n      try {\n        const data = await this.onSubmit(payload);\n        const action = {\n          type: 'link',\n          to: `/app/accounts/${data.account_id}/conversations/${data.id}`,\n          message: this.$t('NEW_CONVERSATION.FORM.GO_TO_CONVERSATION'),\n        };\n        this.onSuccess();\n        this.showAlert(\n          this.$t('NEW_CONVERSATION.FORM.SUCCESS_MESSAGE'),\n          action\n        );\n      } catch (error) {\n        if (error instanceof ExceptionWithMessage) {\n          this.showAlert(error.data);\n        } else {\n          this.showAlert(this.$t('NEW_CONVERSATION.FORM.ERROR_MESSAGE'));\n        }\n      }\n    },\n\n    toggleWaTemplate(val) {\n      this.whatsappTemplateSelected = val;\n    },\n    async onSendWhatsAppReply(messagePayload) {\n      const payload = this.prepareWhatsAppMessagePayload(messagePayload);\n      await this.createConversation(payload);\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.conversation--form {\n  padding: var(--space-normal) var(--space-large) var(--space-large);\n}\n\n.canned-response {\n  position: relative;\n  top: var(--space-medium);\n\n  ::v-deep .mention--box {\n    border-left: 1px solid var(--color-border);\n    border-right: 1px solid var(--color-border);\n  }\n}\n\n.input-group-label {\n  font-size: var(--font-size-small);\n}\n\n.contact-input {\n  display: flex;\n  align-items: center;\n  height: 3.9rem;\n  background: var(--color-background-light);\n\n  border: 1px solid var(--color-border);\n  padding: var(--space-smaller) var(--space-small);\n  border-radius: var(--border-radius-small);\n\n  .contact-name {\n    margin: 0;\n    margin-left: var(--space-small);\n  }\n}\n\n.message-input {\n  min-height: 8rem;\n}\n\n.modal-footer {\n  display: flex;\n  justify-content: flex-end;\n}\n.row.gutter-small {\n  gap: var(--space-small);\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/conversation/contact"},"metadata":{},"sourceType":"module"}