{"ast":null,"code":"/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n'use strict'; // MODULES //\n\nvar isUint8Array = require('@stdlib/assert-is-uint8array');\n\nvar UINT8_MAX = require('@stdlib/constants-uint8-max');\n\nvar GlobalUint8Array = require('./uint8array.js'); // MAIN //\n\n/**\n* Tests for native `Uint8Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint8Array` support\n*\n* @example\n* var bool = hasUint8ArraySupport();\n* // returns <boolean>\n*/\n\n\nfunction hasUint8ArraySupport() {\n  var bool;\n  var arr;\n\n  if (typeof GlobalUint8Array !== 'function') {\n    return false;\n  } // Test basic support...\n\n\n  try {\n    arr = [1, 3.14, -3.14, UINT8_MAX + 1, UINT8_MAX + 2];\n    arr = new GlobalUint8Array(arr);\n    bool = isUint8Array(arr) && arr[0] === 1 && arr[1] === 3 && // truncation\n    arr[2] === UINT8_MAX - 2 && // truncation and wrap around\n    arr[3] === 0 && // wrap around\n    arr[4] === 1 // wrap around\n    ;\n  } catch (err) {\n    // eslint-disable-line no-unused-vars\n    bool = false;\n  }\n\n  return bool;\n} // EXPORTS //\n\n\nmodule.exports = hasUint8ArraySupport;","map":null,"metadata":{},"sourceType":"module"}