{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { required, url, minLength } from 'vuelidate/lib/validators';\nimport webhookMixin from './webhookMixin';\nvar SUPPORTED_WEBHOOK_EVENTS = ['conversation_created', 'conversation_status_changed', 'conversation_updated', 'message_created', 'message_updated', 'webwidget_triggered'];\nexport default {\n  mixins: [webhookMixin],\n  props: {\n    value: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    isSubmitting: {\n      type: Boolean,\n      default: false\n    },\n    submitLabel: {\n      type: String,\n      required: true\n    }\n  },\n  validations: {\n    url: {\n      required: required,\n      minLength: minLength(7),\n      url: url\n    },\n    subscriptions: {\n      required: required\n    }\n  },\n  data: function data() {\n    return {\n      url: this.value.url || '',\n      subscriptions: this.value.subscriptions || [],\n      supportedWebhookEvents: SUPPORTED_WEBHOOK_EVENTS\n    };\n  },\n  methods: {\n    onSubmit: function onSubmit() {\n      this.$emit('submit', {\n        url: this.url,\n        subscriptions: this.subscriptions\n      });\n    }\n  }\n};","map":{"version":3,"sources":["WebhookForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA,SAAA,QAAA,EAAA,GAAA,EAAA,SAAA,QAAA,0BAAA;AACA,OAAA,YAAA,MAAA,gBAAA;AAEA,IAAA,wBAAA,GAAA,CACA,sBADA,EAEA,6BAFA,EAGA,sBAHA,EAIA,iBAJA,EAKA,iBALA,EAMA,qBANA,CAAA;AASA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,YAAA,CADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA,KADA;AAKA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AATA,GAFA;AAgBA,EAAA,WAAA,EAAA;AACA,IAAA,GAAA,EAAA;AACA,MAAA,QAAA,EAAA,QADA;AAEA,MAAA,SAAA,EAAA,SAAA,CAAA,CAAA,CAFA;AAGA,MAAA,GAAA,EAAA;AAHA,KADA;AAMA,IAAA,aAAA,EAAA;AACA,MAAA,QAAA,EAAA;AADA;AANA,GAhBA;AA0BA,EAAA,IA1BA,kBA0BA;AACA,WAAA;AACA,MAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,IAAA,EADA;AAEA,MAAA,aAAA,EAAA,KAAA,KAAA,CAAA,aAAA,IAAA,EAFA;AAGA,MAAA,sBAAA,EAAA;AAHA,KAAA;AAKA,GAhCA;AAiCA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA;AACA,QAAA,GAAA,EAAA,KAAA,GADA;AAEA,QAAA,aAAA,EAAA,KAAA;AAFA,OAAA;AAIA;AANA;AAjCA,CAAA","sourcesContent":["<template>\n  <form class=\"row\" @submit.prevent=\"onSubmit\">\n    <div class=\"medium-12 columns\">\n      <label :class=\"{ error: $v.url.$error }\">\n        {{ $t('INTEGRATION_SETTINGS.WEBHOOK.FORM.END_POINT.LABEL') }}\n        <input\n          v-model.trim=\"url\"\n          type=\"text\"\n          name=\"url\"\n          :placeholder=\"\n            $t('INTEGRATION_SETTINGS.WEBHOOK.FORM.END_POINT.PLACEHOLDER')\n          \"\n          @input=\"$v.url.$touch\"\n        />\n        <span v-if=\"$v.url.$error\" class=\"message\">\n          {{ $t('INTEGRATION_SETTINGS.WEBHOOK.FORM.END_POINT.ERROR') }}\n        </span>\n      </label>\n      <label :class=\"{ error: $v.url.$error }\" class=\"margin-bottom-small\">\n        {{ $t('INTEGRATION_SETTINGS.WEBHOOK.FORM.SUBSCRIPTIONS.LABEL') }}\n      </label>\n      <div v-for=\"event in supportedWebhookEvents\" :key=\"event\">\n        <input\n          :id=\"event\"\n          v-model=\"subscriptions\"\n          type=\"checkbox\"\n          :value=\"event\"\n          name=\"subscriptions\"\n          class=\"margin-right-small\"\n        />\n        <span class=\"fs-small\">\n          {{ `${getEventLabel(event)} (${event})` }}\n        </span>\n      </div>\n    </div>\n\n    <div class=\"modal-footer\">\n      <div class=\"medium-12 columns\">\n        <woot-button\n          :disabled=\"$v.$invalid || isSubmitting\"\n          :is-loading=\"isSubmitting\"\n        >\n          {{ submitLabel }}\n        </woot-button>\n        <woot-button class=\"button clear\" @click.prevent=\"$emit('cancel')\">\n          {{ $t('INTEGRATION_SETTINGS.WEBHOOK.FORM.CANCEL') }}\n        </woot-button>\n      </div>\n    </div>\n  </form>\n</template>\n\n<script>\nimport { required, url, minLength } from 'vuelidate/lib/validators';\nimport webhookMixin from './webhookMixin';\n\nconst SUPPORTED_WEBHOOK_EVENTS = [\n  'conversation_created',\n  'conversation_status_changed',\n  'conversation_updated',\n  'message_created',\n  'message_updated',\n  'webwidget_triggered',\n];\n\nexport default {\n  mixins: [webhookMixin],\n  props: {\n    value: {\n      type: Object,\n      default: () => ({}),\n    },\n    isSubmitting: {\n      type: Boolean,\n      default: false,\n    },\n    submitLabel: {\n      type: String,\n      required: true,\n    },\n  },\n  validations: {\n    url: {\n      required,\n      minLength: minLength(7),\n      url,\n    },\n    subscriptions: {\n      required,\n    },\n  },\n  data() {\n    return {\n      url: this.value.url || '',\n      subscriptions: this.value.subscriptions || [],\n      supportedWebhookEvents: SUPPORTED_WEBHOOK_EVENTS,\n    };\n  },\n  methods: {\n    onSubmit() {\n      this.$emit('submit', {\n        url: this.url,\n        subscriptions: this.subscriptions,\n      });\n    },\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/settings/integrations/Webhooks"},"metadata":{},"sourceType":"module"}