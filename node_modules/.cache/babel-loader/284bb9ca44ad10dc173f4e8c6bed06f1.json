{"ast":null,"code":"var _mutations;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport ConversationAPI from '../../api/inbox/conversation';\nimport types from '../mutation-types';\nexport var initialState = {\n  records: [],\n  uiFlags: {\n    isFetching: false\n  }\n};\nexport var getters = {\n  getConversations: function getConversations(state) {\n    return state.records;\n  },\n  getUIFlags: function getUIFlags(state) {\n    return state.uiFlags;\n  }\n};\nexport var actions = {\n  get: function get(_ref, _ref2) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, q, _yield$ConversationAP, payload;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              q = _ref2.q;\n              commit(types.SEARCH_CONVERSATIONS_SET, []);\n\n              if (q) {\n                _context.next = 5;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 5:\n              commit(types.SEARCH_CONVERSATIONS_SET_UI_FLAG, {\n                isFetching: true\n              });\n              _context.prev = 6;\n              _context.next = 9;\n              return ConversationAPI.search({\n                q: q\n              });\n\n            case 9:\n              _yield$ConversationAP = _context.sent;\n              payload = _yield$ConversationAP.data.payload;\n              commit(types.SEARCH_CONVERSATIONS_SET, payload);\n              _context.next = 16;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](6);\n\n            case 16:\n              _context.prev = 16;\n              commit(types.SEARCH_CONVERSATIONS_SET_UI_FLAG, {\n                isFetching: false\n              });\n              return _context.finish(16);\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[6, 14, 16, 19]]);\n    }))();\n  }\n};\nexport var mutations = (_mutations = {}, _defineProperty(_mutations, types.SEARCH_CONVERSATIONS_SET, function (state, records) {\n  state.records = records;\n}), _defineProperty(_mutations, types.SEARCH_CONVERSATIONS_SET_UI_FLAG, function (state, uiFlags) {\n  state.uiFlags = _objectSpread(_objectSpread({}, state.uiFlags), uiFlags);\n}), _mutations);\nexport default {\n  namespaced: true,\n  state: initialState,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/store/modules/conversationSearch.js"],"names":["ConversationAPI","types","initialState","records","uiFlags","isFetching","getters","getConversations","state","getUIFlags","actions","get","commit","q","SEARCH_CONVERSATIONS_SET","SEARCH_CONVERSATIONS_SET_UI_FLAG","search","payload","data","mutations","namespaced"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,eAAP,MAA4B,8BAA5B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAO,IAAMC,YAAY,GAAG;AAC1BC,EAAAA,OAAO,EAAE,EADiB;AAE1BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAE;AADL;AAFiB,CAArB;AAOP,OAAO,IAAMC,OAAO,GAAG;AACrBC,EAAAA,gBADqB,4BACJC,KADI,EACG;AACtB,WAAOA,KAAK,CAACL,OAAb;AACD,GAHoB;AAIrBM,EAAAA,UAJqB,sBAIVD,KAJU,EAIH;AAChB,WAAOA,KAAK,CAACJ,OAAb;AACD;AANoB,CAAhB;AASP,OAAO,IAAMM,OAAO,GAAG;AACfC,EAAAA,GADe,4BACQ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAjBC,cAAAA,MAAiB,QAAjBA,MAAiB;AAALC,cAAAA,CAAK,SAALA,CAAK;AAC3BD,cAAAA,MAAM,CAACX,KAAK,CAACa,wBAAP,EAAiC,EAAjC,CAAN;;AAD2B,kBAEtBD,CAFsB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAK3BD,cAAAA,MAAM,CAACX,KAAK,CAACc,gCAAP,EAAyC;AAAEV,gBAAAA,UAAU,EAAE;AAAd,eAAzC,CAAN;AAL2B;AAAA;AAAA,qBASfL,eAAe,CAACgB,MAAhB,CAAuB;AAAEH,gBAAAA,CAAC,EAADA;AAAF,eAAvB,CATe;;AAAA;AAAA;AAQfI,cAAAA,OARe,yBAQvBC,IARuB,CAQfD,OARe;AAUzBL,cAAAA,MAAM,CAACX,KAAK,CAACa,wBAAP,EAAiCG,OAAjC,CAAN;AAVyB;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAczBL,cAAAA,MAAM,CAACX,KAAK,CAACc,gCAAP,EAAyC;AAAEV,gBAAAA,UAAU,EAAE;AAAd,eAAzC,CAAN;AAdyB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgB5B;AAjBoB,CAAhB;AAoBP,OAAO,IAAMc,SAAS,iDACnBlB,KAAK,CAACa,wBADa,YACaN,KADb,EACoBL,OADpB,EAC6B;AAC/CK,EAAAA,KAAK,CAACL,OAAN,GAAgBA,OAAhB;AACD,CAHmB,+BAInBF,KAAK,CAACc,gCAJa,YAIqBP,KAJrB,EAI4BJ,OAJ5B,EAIqC;AACvDI,EAAAA,KAAK,CAACJ,OAAN,mCAAqBI,KAAK,CAACJ,OAA3B,GAAuCA,OAAvC;AACD,CANmB,cAAf;AASP,eAAe;AACbgB,EAAAA,UAAU,EAAE,IADC;AAEbZ,EAAAA,KAAK,EAAEN,YAFM;AAGbI,EAAAA,OAAO,EAAPA,OAHa;AAIbI,EAAAA,OAAO,EAAPA,OAJa;AAKbS,EAAAA,SAAS,EAATA;AALa,CAAf","sourcesContent":["import ConversationAPI from '../../api/inbox/conversation';\nimport types from '../mutation-types';\nexport const initialState = {\n  records: [],\n  uiFlags: {\n    isFetching: false,\n  },\n};\n\nexport const getters = {\n  getConversations(state) {\n    return state.records;\n  },\n  getUIFlags(state) {\n    return state.uiFlags;\n  },\n};\n\nexport const actions = {\n  async get({ commit }, { q }) {\n    commit(types.SEARCH_CONVERSATIONS_SET, []);\n    if (!q) {\n      return;\n    }\n    commit(types.SEARCH_CONVERSATIONS_SET_UI_FLAG, { isFetching: true });\n    try {\n      const {\n        data: { payload },\n      } = await ConversationAPI.search({ q });\n      commit(types.SEARCH_CONVERSATIONS_SET, payload);\n    } catch (error) {\n      // Ignore error\n    } finally {\n      commit(types.SEARCH_CONVERSATIONS_SET_UI_FLAG, { isFetching: false });\n    }\n  },\n};\n\nexport const mutations = {\n  [types.SEARCH_CONVERSATIONS_SET](state, records) {\n    state.records = records;\n  },\n  [types.SEARCH_CONVERSATIONS_SET_UI_FLAG](state, uiFlags) {\n    state.uiFlags = { ...state.uiFlags, ...uiFlags };\n  },\n};\n\nexport default {\n  namespaced: true,\n  state: initialState,\n  getters,\n  actions,\n  mutations,\n};\n"]},"metadata":{},"sourceType":"module"}