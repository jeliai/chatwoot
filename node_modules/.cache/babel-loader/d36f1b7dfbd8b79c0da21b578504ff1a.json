{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"regenerator-runtime/runtime.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport alertMixin from 'shared/mixins/alertMixin';\nimport globalConfigMixin from 'shared/mixins/globalConfigMixin';\nimport { mapGetters } from 'vuex';\nimport WebhookForm from './WebhookForm.vue';\nexport default {\n  components: {\n    WebhookForm: WebhookForm\n  },\n  mixins: [alertMixin, globalConfigMixin],\n  props: {\n    onClose: {\n      type: Function,\n      required: true\n    }\n  },\n  computed: _objectSpread({}, mapGetters({\n    globalConfig: 'globalConfig/get',\n    uiFlags: 'webhooks/getUIFlags'\n  })),\n  methods: {\n    onSubmit: function onSubmit(webhook) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var message;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _this.$store.dispatch('webhooks/create', {\n                  webhook: webhook\n                });\n\n              case 3:\n                _this.showAlert(_this.$t('INTEGRATION_SETTINGS.WEBHOOK.ADD.API.SUCCESS_MESSAGE'));\n\n                _this.onClose();\n\n                _context.next = 11;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                message = _context.t0.response.data.message || _this.$t('INTEGRATION_SETTINGS.WEBHOOK.EDIT.API.ERROR_MESSAGE');\n\n                _this.showAlert(message);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"sources":["NewWebHook.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,OAAA,UAAA,MAAA,0BAAA;AACA,OAAA,iBAAA,MAAA,iCAAA;AACA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,WAAA,MAAA,mBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,WAAA,EAAA;AAAA,GADA;AAEA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,iBAAA,CAFA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,QADA;AAEA,MAAA,QAAA,EAAA;AAFA;AADA,GAHA;AASA,EAAA,QAAA,oBACA,UAAA,CAAA;AACA,IAAA,YAAA,EAAA,kBADA;AAEA,IAAA,OAAA,EAAA;AAFA,GAAA,CADA,CATA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,oBACA,OADA,EACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,iBAAA,EAAA;AAAA,kBAAA,OAAA,EAAA;AAAA,iBAAA,CAFA;;AAAA;AAGA,gBAAA,KAAA,CAAA,SAAA,CACA,KAAA,CAAA,EAAA,CAAA,sDAAA,CADA;;AAGA,gBAAA,KAAA,CAAA,OAAA;;AANA;AAAA;;AAAA;AAAA;AAAA;AAQA,gBAAA,OARA,GASA,YAAA,QAAA,CAAA,IAAA,CAAA,OAAA,IACA,KAAA,CAAA,EAAA,CAAA,qDAAA,CAVA;;AAWA,gBAAA,KAAA,CAAA,SAAA,CAAA,OAAA;;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAdA;AAfA,CAAA","sourcesContent":["<template>\n  <div class=\"column content-box\">\n    <woot-modal-header\n      :header-title=\"$t('INTEGRATION_SETTINGS.WEBHOOK.ADD.TITLE')\"\n      :header-content=\"\n        useInstallationName(\n          $t('INTEGRATION_SETTINGS.WEBHOOK.FORM.DESC'),\n          globalConfig.installationName\n        )\n      \"\n    />\n    <webhook-form\n      :is-submitting=\"uiFlags.creatingItem\"\n      :submit-label=\"$t('INTEGRATION_SETTINGS.WEBHOOK.FORM.ADD_SUBMIT')\"\n      @submit=\"onSubmit\"\n      @cancel=\"onClose\"\n    />\n  </div>\n</template>\n\n<script>\nimport alertMixin from 'shared/mixins/alertMixin';\nimport globalConfigMixin from 'shared/mixins/globalConfigMixin';\nimport { mapGetters } from 'vuex';\nimport WebhookForm from './WebhookForm.vue';\n\nexport default {\n  components: { WebhookForm },\n  mixins: [alertMixin, globalConfigMixin],\n  props: {\n    onClose: {\n      type: Function,\n      required: true,\n    },\n  },\n  computed: {\n    ...mapGetters({\n      globalConfig: 'globalConfig/get',\n      uiFlags: 'webhooks/getUIFlags',\n    }),\n  },\n  methods: {\n    async onSubmit(webhook) {\n      try {\n        await this.$store.dispatch('webhooks/create', { webhook });\n        this.showAlert(\n          this.$t('INTEGRATION_SETTINGS.WEBHOOK.ADD.API.SUCCESS_MESSAGE')\n        );\n        this.onClose();\n      } catch (error) {\n        const message =\n          error.response.data.message ||\n          this.$t('INTEGRATION_SETTINGS.WEBHOOK.EDIT.API.ERROR_MESSAGE');\n        this.showAlert(message);\n      }\n    },\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/settings/integrations/Webhooks"},"metadata":{},"sourceType":"module"}