{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { buildHotKeys } from 'shared/helpers/KeyboardHelpers';\nexport default {\n  mounted: function mounted() {\n    document.addEventListener('keydown', this.handleKeyboardEvent);\n  },\n  beforeDestroy: function beforeDestroy() {\n    document.removeEventListener('keydown', this.handleKeyboardEvent);\n  },\n  methods: {\n    moveSelectionUp: function moveSelectionUp() {\n      if (!this.selectedIndex) {\n        this.selectedIndex = this.items.length - 1;\n      } else {\n        this.selectedIndex -= 1;\n      }\n    },\n    moveSelectionDown: function moveSelectionDown() {\n      if (this.selectedIndex === this.items.length - 1) {\n        this.selectedIndex = 0;\n      } else {\n        this.selectedIndex += 1;\n      }\n    },\n    processKeyDownEvent: function processKeyDownEvent(e) {\n      var keyPattern = buildHotKeys(e);\n\n      if (['arrowup', 'ctrl+p'].includes(keyPattern)) {\n        this.moveSelectionUp();\n        e.preventDefault();\n      } else if (['arrowdown', 'ctrl+n'].includes(keyPattern)) {\n        this.moveSelectionDown();\n        e.preventDefault();\n      } else if (keyPattern === 'enter') {\n        this.onSelect();\n        e.preventDefault();\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/Users/s.dastan/Desktop/chatwoot/chatwoot/app/javascript/dashboard/components/widgets/mentions/mentionSelectionKeyboardMixin.js"],"names":["buildHotKeys","mounted","document","addEventListener","handleKeyboardEvent","beforeDestroy","removeEventListener","methods","moveSelectionUp","selectedIndex","items","length","moveSelectionDown","processKeyDownEvent","e","keyPattern","includes","preventDefault","onSelect"],"mappings":";AAAA,SAASA,YAAT,QAA6B,gCAA7B;AAEA,eAAe;AACbC,EAAAA,OADa,qBACH;AACRC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqC,KAAKC,mBAA1C;AACD,GAHY;AAIbC,EAAAA,aAJa,2BAIG;AACdH,IAAAA,QAAQ,CAACI,mBAAT,CAA6B,SAA7B,EAAwC,KAAKF,mBAA7C;AACD,GANY;AAObG,EAAAA,OAAO,EAAE;AACPC,IAAAA,eADO,6BACW;AAChB,UAAI,CAAC,KAAKC,aAAV,EAAyB;AACvB,aAAKA,aAAL,GAAqB,KAAKC,KAAL,CAAWC,MAAX,GAAoB,CAAzC;AACD,OAFD,MAEO;AACL,aAAKF,aAAL,IAAsB,CAAtB;AACD;AACF,KAPM;AAQPG,IAAAA,iBARO,+BAQa;AAClB,UAAI,KAAKH,aAAL,KAAuB,KAAKC,KAAL,CAAWC,MAAX,GAAoB,CAA/C,EAAkD;AAChD,aAAKF,aAAL,GAAqB,CAArB;AACD,OAFD,MAEO;AACL,aAAKA,aAAL,IAAsB,CAAtB;AACD;AACF,KAdM;AAePI,IAAAA,mBAfO,+BAeaC,CAfb,EAegB;AACrB,UAAMC,UAAU,GAAGf,YAAY,CAACc,CAAD,CAA/B;;AACA,UAAI,CAAC,SAAD,EAAY,QAAZ,EAAsBE,QAAtB,CAA+BD,UAA/B,CAAJ,EAAgD;AAC9C,aAAKP,eAAL;AACAM,QAAAA,CAAC,CAACG,cAAF;AACD,OAHD,MAGO,IAAI,CAAC,WAAD,EAAc,QAAd,EAAwBD,QAAxB,CAAiCD,UAAjC,CAAJ,EAAkD;AACvD,aAAKH,iBAAL;AACAE,QAAAA,CAAC,CAACG,cAAF;AACD,OAHM,MAGA,IAAIF,UAAU,KAAK,OAAnB,EAA4B;AACjC,aAAKG,QAAL;AACAJ,QAAAA,CAAC,CAACG,cAAF;AACD;AACF;AA3BM;AAPI,CAAf","sourcesContent":["import { buildHotKeys } from 'shared/helpers/KeyboardHelpers';\n\nexport default {\n  mounted() {\n    document.addEventListener('keydown', this.handleKeyboardEvent);\n  },\n  beforeDestroy() {\n    document.removeEventListener('keydown', this.handleKeyboardEvent);\n  },\n  methods: {\n    moveSelectionUp() {\n      if (!this.selectedIndex) {\n        this.selectedIndex = this.items.length - 1;\n      } else {\n        this.selectedIndex -= 1;\n      }\n    },\n    moveSelectionDown() {\n      if (this.selectedIndex === this.items.length - 1) {\n        this.selectedIndex = 0;\n      } else {\n        this.selectedIndex += 1;\n      }\n    },\n    processKeyDownEvent(e) {\n      const keyPattern = buildHotKeys(e);\n      if (['arrowup', 'ctrl+p'].includes(keyPattern)) {\n        this.moveSelectionUp();\n        e.preventDefault();\n      } else if (['arrowdown', 'ctrl+n'].includes(keyPattern)) {\n        this.moveSelectionDown();\n        e.preventDefault();\n      } else if (keyPattern === 'enter') {\n        this.onSelect();\n        e.preventDefault();\n      }\n    },\n  },\n};\n"]},"metadata":{},"sourceType":"module"}