{"ast":null,"code":"import \"core-js/modules/es.array.find-index.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport wootConstants from '../../constants';\nimport eventListenerMixins from 'shared/mixins/eventListenerMixins';\nimport { hasPressedAltAndNKey } from 'shared/helpers/KeyboardHelpers';\nexport default {\n  mixins: [eventListenerMixins],\n  props: {\n    items: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    activeTab: {\n      type: String,\n      default: wootConstants.ASSIGNEE_TYPE.ME\n    }\n  },\n  computed: {\n    activeTabIndex: function activeTabIndex() {\n      var _this = this;\n\n      return this.items.findIndex(function (item) {\n        return item.key === _this.activeTab;\n      });\n    }\n  },\n  methods: {\n    handleKeyEvents: function handleKeyEvents(e) {\n      if (hasPressedAltAndNKey(e)) {\n        if (this.activeTab === wootConstants.ASSIGNEE_TYPE.ALL) {\n          this.onTabChange(0);\n        } else {\n          this.onTabChange(this.activeTabIndex + 1);\n        }\n      }\n    },\n    onTabChange: function onTabChange(selectedTabIndex) {\n      if (this.items[selectedTabIndex].key !== this.activeTab) {\n        this.$emit('chatTabChange', this.items[selectedTabIndex].key);\n      }\n    }\n  }\n};","map":{"version":3,"sources":["ChatTypeTabs.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA,OAAA,aAAA,MAAA,iBAAA;AACA,OAAA,mBAAA,MAAA,mCAAA;AACA,SAAA,oBAAA,QAAA,gCAAA;AAEA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,mBAAA,CADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA,KADA;AAKA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,aAAA,CAAA,aAAA,CAAA;AAFA;AALA,GAFA;AAYA,EAAA,QAAA,EAAA;AACA,IAAA,cADA,4BACA;AAAA;;AACA,aAAA,KAAA,KAAA,CAAA,SAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,GAAA,KAAA,KAAA,CAAA,SAAA;AAAA,OAAA,CAAA;AACA;AAHA,GAZA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,eADA,2BACA,CADA,EACA;AACA,UAAA,oBAAA,CAAA,CAAA,CAAA,EAAA;AACA,YAAA,KAAA,SAAA,KAAA,aAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AACA,eAAA,WAAA,CAAA,CAAA;AACA,SAFA,MAEA;AACA,eAAA,WAAA,CAAA,KAAA,cAAA,GAAA,CAAA;AACA;AACA;AACA,KATA;AAUA,IAAA,WAVA,uBAUA,gBAVA,EAUA;AACA,UAAA,KAAA,KAAA,CAAA,gBAAA,EAAA,GAAA,KAAA,KAAA,SAAA,EAAA;AACA,aAAA,KAAA,CAAA,eAAA,EAAA,KAAA,KAAA,CAAA,gBAAA,EAAA,GAAA;AACA;AACA;AAdA;AAjBA,CAAA","sourcesContent":["<template>\n  <woot-tabs :index=\"activeTabIndex\" @change=\"onTabChange\">\n    <woot-tabs-item\n      v-for=\"item in items\"\n      :key=\"item.key\"\n      :name=\"item.name\"\n      :count=\"item.count\"\n    />\n  </woot-tabs>\n</template>\n<script>\nimport wootConstants from '../../constants';\nimport eventListenerMixins from 'shared/mixins/eventListenerMixins';\nimport { hasPressedAltAndNKey } from 'shared/helpers/KeyboardHelpers';\n\nexport default {\n  mixins: [eventListenerMixins],\n  props: {\n    items: {\n      type: Array,\n      default: () => [],\n    },\n    activeTab: {\n      type: String,\n      default: wootConstants.ASSIGNEE_TYPE.ME,\n    },\n  },\n  computed: {\n    activeTabIndex() {\n      return this.items.findIndex(item => item.key === this.activeTab);\n    },\n  },\n  methods: {\n    handleKeyEvents(e) {\n      if (hasPressedAltAndNKey(e)) {\n        if (this.activeTab === wootConstants.ASSIGNEE_TYPE.ALL) {\n          this.onTabChange(0);\n        } else {\n          this.onTabChange(this.activeTabIndex + 1);\n        }\n      }\n    },\n    onTabChange(selectedTabIndex) {\n      if (this.items[selectedTabIndex].key !== this.activeTab) {\n        this.$emit('chatTabChange', this.items[selectedTabIndex].key);\n      }\n    },\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/dashboard/components/widgets"},"metadata":{},"sourceType":"module"}