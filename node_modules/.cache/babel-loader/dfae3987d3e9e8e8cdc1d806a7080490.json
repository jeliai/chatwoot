{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport { decorateProperty as e } from \"./base.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nfunction t(t, o, n) {\n  var l,\n      r = t;\n  return \"object\" == _typeof(t) ? (r = t.slot, l = t) : l = {\n    flatten: o\n  }, null != n || (n = \"\"), e({\n    descriptor: function descriptor(e) {\n      return {\n        get: function get() {\n          var e, t;\n          var o = \"slot\" + (r ? \"[name=\".concat(r, \"]\") : \":not([name])\"),\n              i = null === (e = this.renderRoot) || void 0 === e ? void 0 : e.querySelector(o);\n          var u = null !== (t = null == i ? void 0 : i.assignedNodes(l)) && void 0 !== t ? t : [];\n          return n && (u = u.filter(function (e) {\n            return e.nodeType === Node.ELEMENT_NODE && e.matches(n);\n          })), u;\n        },\n        enumerable: !0,\n        configurable: !0\n      };\n    }\n  });\n}\n\nexport { t as queryAssignedNodes };","map":null,"metadata":{},"sourceType":"module"}