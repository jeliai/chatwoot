{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar TYPING_INDICATOR_IDLE_TIME = 4000;\nexport default {\n  props: {\n    placeholder: {\n      type: String,\n      default: ''\n    },\n    value: {\n      type: String,\n      default: ''\n    },\n    minHeight: {\n      type: Number,\n      default: 2\n    }\n  },\n  data: function data() {\n    return {\n      idleTimer: null\n    };\n  },\n  watch: {\n    value: function value() {\n      this.resizeTextarea();\n    }\n  },\n  methods: {\n    resizeTextarea: function resizeTextarea() {\n      if (!this.value) {\n        this.$el.style.height = \"\".concat(this.minHeight, \"rem\");\n      } else {\n        this.$el.style.height = \"\".concat(this.$el.scrollHeight, \"px\");\n      }\n    },\n    onInput: function onInput(event) {\n      this.$emit('input', event.target.value);\n      this.resizeTextarea();\n    },\n    resetTyping: function resetTyping() {\n      this.$emit('typing-off');\n      this.idleTimer = null;\n    },\n    turnOffIdleTimer: function turnOffIdleTimer() {\n      if (this.idleTimer) {\n        clearTimeout(this.idleTimer);\n      }\n    },\n    onKeyup: function onKeyup() {\n      var _this = this;\n\n      if (!this.idleTimer) {\n        this.$emit('typing-on');\n      }\n\n      this.turnOffIdleTimer();\n      this.idleTimer = setTimeout(function () {\n        return _this.resetTyping();\n      }, TYPING_INDICATOR_IDLE_TIME);\n    },\n    onBlur: function onBlur() {\n      this.turnOffIdleTimer();\n      this.resetTyping();\n      this.$emit('blur');\n    },\n    onFocus: function onFocus() {\n      this.$emit('focus');\n    },\n    focus: function focus() {\n      this.$refs.textarea.focus();\n    }\n  }\n};","map":{"version":3,"sources":["ResizableTextArea.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA,IAAA,0BAAA,GAAA,IAAA;AACA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AATA,GADA;AAeA,EAAA,IAfA,kBAeA;AACA,WAAA;AACA,MAAA,SAAA,EAAA;AADA,KAAA;AAGA,GAnBA;AAoBA,EAAA,KAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,WAAA,cAAA;AACA;AAHA,GApBA;AAyBA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,4BACA;AACA,UAAA,CAAA,KAAA,KAAA,EAAA;AACA,aAAA,GAAA,CAAA,KAAA,CAAA,MAAA,aAAA,KAAA,SAAA;AACA,OAFA,MAEA;AACA,aAAA,GAAA,CAAA,KAAA,CAAA,MAAA,aAAA,KAAA,GAAA,CAAA,YAAA;AACA;AACA,KAPA;AAQA,IAAA,OARA,mBAQA,KARA,EAQA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA,CAAA,MAAA,CAAA,KAAA;AACA,WAAA,cAAA;AACA,KAXA;AAYA,IAAA,WAZA,yBAYA;AACA,WAAA,KAAA,CAAA,YAAA;AACA,WAAA,SAAA,GAAA,IAAA;AACA,KAfA;AAgBA,IAAA,gBAhBA,8BAgBA;AACA,UAAA,KAAA,SAAA,EAAA;AACA,QAAA,YAAA,CAAA,KAAA,SAAA,CAAA;AACA;AACA,KApBA;AAqBA,IAAA,OArBA,qBAqBA;AAAA;;AACA,UAAA,CAAA,KAAA,SAAA,EAAA;AACA,aAAA,KAAA,CAAA,WAAA;AACA;;AACA,WAAA,gBAAA;AACA,WAAA,SAAA,GAAA,UAAA,CACA;AAAA,eAAA,KAAA,CAAA,WAAA,EAAA;AAAA,OADA,EAEA,0BAFA,CAAA;AAIA,KA9BA;AA+BA,IAAA,MA/BA,oBA+BA;AACA,WAAA,gBAAA;AACA,WAAA,WAAA;AACA,WAAA,KAAA,CAAA,MAAA;AACA,KAnCA;AAoCA,IAAA,OApCA,qBAoCA;AACA,WAAA,KAAA,CAAA,OAAA;AACA,KAtCA;AAuCA,IAAA,KAvCA,mBAuCA;AACA,WAAA,KAAA,CAAA,QAAA,CAAA,KAAA;AACA;AAzCA;AAzBA,CAAA","sourcesContent":["<template>\n  <textarea\n    ref=\"textarea\"\n    :placeholder=\"placeholder\"\n    :value=\"value\"\n    @input=\"onInput\"\n    @focus=\"onFocus\"\n    @keyup=\"onKeyup\"\n    @blur=\"onBlur\"\n  />\n</template>\n\n<script>\nconst TYPING_INDICATOR_IDLE_TIME = 4000;\nexport default {\n  props: {\n    placeholder: {\n      type: String,\n      default: '',\n    },\n    value: {\n      type: String,\n      default: '',\n    },\n    minHeight: {\n      type: Number,\n      default: 2,\n    },\n  },\n  data() {\n    return {\n      idleTimer: null,\n    };\n  },\n  watch: {\n    value() {\n      this.resizeTextarea();\n    },\n  },\n  methods: {\n    resizeTextarea() {\n      if (!this.value) {\n        this.$el.style.height = `${this.minHeight}rem`;\n      } else {\n        this.$el.style.height = `${this.$el.scrollHeight}px`;\n      }\n    },\n    onInput(event) {\n      this.$emit('input', event.target.value);\n      this.resizeTextarea();\n    },\n    resetTyping() {\n      this.$emit('typing-off');\n      this.idleTimer = null;\n    },\n    turnOffIdleTimer() {\n      if (this.idleTimer) {\n        clearTimeout(this.idleTimer);\n      }\n    },\n    onKeyup() {\n      if (!this.idleTimer) {\n        this.$emit('typing-on');\n      }\n      this.turnOffIdleTimer();\n      this.idleTimer = setTimeout(\n        () => this.resetTyping(),\n        TYPING_INDICATOR_IDLE_TIME\n      );\n    },\n    onBlur() {\n      this.turnOffIdleTimer();\n      this.resetTyping();\n      this.$emit('blur');\n    },\n    onFocus() {\n      this.$emit('focus');\n    },\n    focus() {\n      this.$refs.textarea.focus();\n    },\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/shared/components"},"metadata":{},"sourceType":"module"}