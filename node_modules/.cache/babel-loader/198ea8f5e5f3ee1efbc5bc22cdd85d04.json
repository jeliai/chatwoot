{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport draggable from 'vuedraggable';\nimport { standardFieldKeys } from 'dashboard/helper/preChat';\nexport default {\n  components: {\n    draggable: draggable\n  },\n  props: {\n    preChatFields: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      preChatFieldOptions: this.preChatFields\n    };\n  },\n  watch: {\n    preChatFields: function preChatFields() {\n      this.preChatFieldOptions = this.preChatFields;\n    }\n  },\n  methods: {\n    isFieldEditable: function isFieldEditable(item) {\n      return !!standardFieldKeys[item.name] || !item.enabled;\n    },\n    handlePreChatFieldOptions: function handlePreChatFieldOptions(event, type, item) {\n      this.$emit('update', event, type, item);\n    },\n    onDragEnd: function onDragEnd() {\n      this.$emit('drag-end', this.preChatFieldOptions);\n    }\n  }\n};","map":{"version":3,"sources":["PreChatFields.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA,OAAA,SAAA,MAAA,cAAA;AACA,SAAA,iBAAA,QAAA,0BAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,SAAA,EAAA;AAAA,GADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA;AADA,GAFA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,mBAAA,EAAA,KAAA;AADA,KAAA;AAGA,GAZA;AAaA,EAAA,KAAA,EAAA;AACA,IAAA,aADA,2BACA;AACA,WAAA,mBAAA,GAAA,KAAA,aAAA;AACA;AAHA,GAbA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,eADA,2BACA,IADA,EACA;AACA,aAAA,CAAA,CAAA,iBAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,OAAA;AACA,KAHA;AAIA,IAAA,yBAJA,qCAIA,KAJA,EAIA,IAJA,EAIA,IAJA,EAIA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA;AACA,KANA;AAOA,IAAA,SAPA,uBAOA;AACA,WAAA,KAAA,CAAA,UAAA,EAAA,KAAA,mBAAA;AACA;AATA;AAlBA,CAAA","sourcesContent":["<template>\n  <draggable v-model=\"preChatFieldOptions\" tag=\"tbody\" @end=\"onDragEnd\">\n    <tr v-for=\"(item, index) in preChatFieldOptions\" :key=\"index\">\n      <td class=\"pre-chat-field\"><fluent-icon icon=\"drag\" /></td>\n      <td class=\"pre-chat-field\">\n        <woot-switch\n          :value=\"item['enabled']\"\n          @input=\"handlePreChatFieldOptions($event, 'enabled', item)\"\n        />\n      </td>\n      <td class=\"pre-chat-field\" :class=\"{ 'disabled-text': !item['enabled'] }\">\n        {{ item.name }}\n      </td>\n      <td class=\"pre-chat-field\" :class=\"{ 'disabled-text': !item['enabled'] }\">\n        {{ item.type }}\n      </td>\n      <td class=\"pre-chat-field\">\n        <input\n          v-model=\"item['required']\"\n          type=\"checkbox\"\n          :value=\"`${item.name}-required`\"\n          :disabled=\"!item['enabled']\"\n          @click=\"handlePreChatFieldOptions($event, 'required', item)\"\n        />\n      </td>\n      <td class=\"pre-chat-field\" :class=\"{ 'disabled-text': !item['enabled'] }\">\n        <input\n          v-model.trim=\"item.label\"\n          type=\"text\"\n          :disabled=\"isFieldEditable(item)\"\n        />\n      </td>\n      <td class=\"pre-chat-field\" :class=\"{ 'disabled-text': !item['enabled'] }\">\n        <input\n          v-model.trim=\"item.placeholder\"\n          type=\"text\"\n          :disabled=\"isFieldEditable(item)\"\n        />\n      </td>\n    </tr>\n  </draggable>\n</template>\n\n<script>\nimport draggable from 'vuedraggable';\nimport { standardFieldKeys } from 'dashboard/helper/preChat';\nexport default {\n  components: { draggable },\n  props: {\n    preChatFields: {\n      type: Array,\n      default: () => [],\n    },\n  },\n  data() {\n    return {\n      preChatFieldOptions: this.preChatFields,\n    };\n  },\n  watch: {\n    preChatFields() {\n      this.preChatFieldOptions = this.preChatFields;\n    },\n  },\n  methods: {\n    isFieldEditable(item) {\n      return !!standardFieldKeys[item.name] || !item.enabled;\n    },\n    handlePreChatFieldOptions(event, type, item) {\n      this.$emit('update', event, type, item);\n    },\n    onDragEnd() {\n      this.$emit('drag-end', this.preChatFieldOptions);\n    },\n  },\n};\n</script>\n<style scoped lang=\"scss\">\n.pre-chat-field {\n  padding: var(--space-normal) var(--space-small);\n\n  svg {\n    display: flex;\n    align-items: center;\n  }\n}\n.disabled-text {\n  color: var(--s-500);\n}\n\ntable {\n  thead th {\n    text-transform: none;\n  }\n  input {\n    font-size: var(--font-size-small);\n    margin-bottom: 0;\n  }\n}\ncheckbox {\n  margin: 0;\n}\n</style>\n"],"sourceRoot":"app/javascript/dashboard/routes/dashboard/settings/inbox/PreChatForm"},"metadata":{},"sourceType":"module"}