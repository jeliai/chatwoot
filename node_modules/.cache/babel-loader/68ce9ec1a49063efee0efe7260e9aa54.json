{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport UnreadMessageList from '../components/UnreadMessageList.vue';\nexport default {\n  name: 'Campaigns',\n  components: {\n    UnreadMessageList: UnreadMessageList\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    campaign: 'campaign/getActiveCampaign'\n  })), {}, {\n    messages: function messages() {\n      var _this$campaign = this.campaign,\n          sender = _this$campaign.sender,\n          campaignId = _this$campaign.id,\n          content = _this$campaign.message;\n      return [{\n        content: content,\n        sender: sender,\n        campaignId: campaignId\n      }];\n    }\n  })\n};","map":{"version":3,"sources":["Campaigns.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAKA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,iBAAA,MAAA,qCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,iBAAA,EAAA;AADA,GAFA;AAKA,EAAA,QAAA,kCACA,UAAA,CAAA;AAAA,IAAA,QAAA,EAAA;AAAA,GAAA,CADA;AAEA,IAAA,QAFA,sBAEA;AACA,2BAAA,KAAA,QAAA;AAAA,UAAA,MAAA,kBAAA,MAAA;AAAA,UAAA,UAAA,kBAAA,EAAA;AAAA,UAAA,OAAA,kBAAA,OAAA;AACA,aAAA,CACA;AACA,QAAA,OAAA,EAAA,OADA;AAEA,QAAA,MAAA,EAAA,MAFA;AAGA,QAAA,UAAA,EAAA;AAHA,OADA,CAAA;AAOA;AAXA;AALA,CAAA","sourcesContent":["<template>\n  <unread-message-list :messages=\"messages\" />\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\nimport UnreadMessageList from '../components/UnreadMessageList.vue';\n\nexport default {\n  name: 'Campaigns',\n  components: {\n    UnreadMessageList,\n  },\n  computed: {\n    ...mapGetters({ campaign: 'campaign/getActiveCampaign' }),\n    messages() {\n      const { sender, id: campaignId, message: content } = this.campaign;\n      return [\n        {\n          content,\n          sender,\n          campaignId,\n        },\n      ];\n    },\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/widget/views"},"metadata":{},"sourceType":"module"}