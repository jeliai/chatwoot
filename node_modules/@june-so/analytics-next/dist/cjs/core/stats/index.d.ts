import { RemoteMetrics } from './remote-metrics';
declare type MetricType = 'gauge' | 'counter';
declare type CompactMetricType = 'g' | 'c';
export interface Metric {
    metric: string;
    value: number;
    type: MetricType;
    tags: string[];
    timestamp: number;
}
export interface CompactMetric {
    m: string;
    v: number;
    k: CompactMetricType;
    t: string[];
    e: number;
}
export default class Stats {
    metrics: Metric[];
    private remoteMetrics?;
    constructor(remoteMetrics?: RemoteMetrics);
    increment(metric: string, by?: number, tags?: string[]): void;
    gauge(metric: string, value: number, tags?: string[]): void;
    flush(): void;
    /**
     * compact keys for smaller payload
     */
    serialize(): CompactMetric[];
}
export {};
