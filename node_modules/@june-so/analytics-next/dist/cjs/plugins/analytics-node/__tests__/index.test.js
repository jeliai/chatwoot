"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var fetcher = jest.fn();
jest.mock('node-fetch', function () { return fetcher; });
var node_1 = require("../../../node");
var myDate = new Date('2016');
var _Date = Date;
describe('Analytics Node', function () {
    var ajs;
    beforeEach(function () { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
        var analytics;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    jest.resetAllMocks();
                    return [4 /*yield*/, node_1.AnalyticsNode.load({
                            writeKey: 'abc123',
                        })];
                case 1:
                    analytics = (_a.sent())[0];
                    ajs = analytics;
                    // @ts-ignore
                    global.Date = jest.fn(function () { return myDate; });
                    /* eslint-disable @typescript-eslint/unbound-method */
                    global.Date.UTC = _Date.UTC;
                    global.Date.parse = _Date.parse;
                    global.Date.now = _Date.now;
                    return [2 /*return*/];
            }
        });
    }); });
    describe('AJS', function () {
        test('fireEvent instantiates the right event types', function () { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, ajs.track('track')];
                    case 1:
                        _a.sent();
                        expect(fetcher).toHaveBeenCalledWith('https://api.june.so/sdk/track', expect.anything());
                        return [4 /*yield*/, ajs.identify('identify')];
                    case 2:
                        _a.sent();
                        expect(fetcher).toHaveBeenCalledWith('https://api.june.so/sdk/identify', expect.anything());
                        return [4 /*yield*/, ajs.page('page')];
                    case 3:
                        _a.sent();
                        expect(fetcher).toHaveBeenCalledWith('https://api.june.so/sdk/page', expect.anything());
                        return [4 /*yield*/, ajs.group('group')];
                    case 4:
                        _a.sent();
                        expect(fetcher).toHaveBeenCalledWith('https://api.june.so/sdk/group', expect.anything());
                        return [4 /*yield*/, ajs.alias('alias')];
                    case 5:
                        _a.sent();
                        expect(fetcher).toHaveBeenCalledWith('https://api.june.so/sdk/alias', expect.anything());
                        return [4 /*yield*/, ajs.screen('screen')];
                    case 6:
                        _a.sent();
                        expect(fetcher).toHaveBeenCalledWith('https://api.june.so/sdk/screen', expect.anything());
                        return [2 /*return*/];
                }
            });
        }); });
    });
});
//# sourceMappingURL=index.test.js.map