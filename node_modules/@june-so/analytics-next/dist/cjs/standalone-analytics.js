"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.install = void 0;
var browser_1 = require("./browser");
var embedded_write_key_1 = require("./lib/embedded-write-key");
function getWriteKey() {
    var _a;
    if (embedded_write_key_1.embeddedWriteKey()) {
        return embedded_write_key_1.embeddedWriteKey();
    }
    if (window.analytics._writeKey) {
        return window.analytics._writeKey;
    }
    var regex = /http.*\/analytics\.js\/v1\/([^/]*)(\/platform)?\/analytics.*/;
    var scripts = Array.prototype.slice.call(document.querySelectorAll('script'));
    var writeKey = undefined;
    for (var _i = 0, scripts_1 = scripts; _i < scripts_1.length; _i++) {
        var s = scripts_1[_i];
        var src = (_a = s.getAttribute('src')) !== null && _a !== void 0 ? _a : '';
        var result = regex.exec(src);
        if (result && result[1]) {
            writeKey = result[1];
            break;
        }
    }
    if (!writeKey && document.currentScript) {
        var script = document.currentScript;
        var src = script.src;
        var result = regex.exec(src);
        if (result && result[1]) {
            writeKey = result[1];
        }
    }
    return writeKey;
}
function install() {
    var _a, _b;
    var writeKey = getWriteKey();
    if (!writeKey) {
        console.error('Failed to load Write Key. Make sure to use the latest version of the Segment snippet, which can be found in your source settings.');
        return Promise.resolve();
    }
    return browser_1.AnalyticsBrowser.standalone(writeKey, (_b = (_a = window.analytics) === null || _a === void 0 ? void 0 : _a._loadOptions) !== null && _b !== void 0 ? _b : {}).then(function (an) {
        window.analytics = an;
    });
}
exports.install = install;
//# sourceMappingURL=standalone-analytics.js.map