{"version":3,"file":"ajs-destination.bundle.6aae057c068eea9d5067.js","mappings":"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","sources":["webpack://@june-so/analytics-next/./src/plugins/ajs-destination/index.ts","webpack://@june-so/analytics-next/./src/plugins/ajs-destination/loader.ts","webpack://@june-so/analytics-next/./src/plugins/middleware/index.ts","webpack://@june-so/analytics-next/./src/plugins/routing-middleware/index.ts"],"sourcesContent":["import {\n  Integrations,\n  JSONObject,\n  JSONValue,\n  SegmentEvent,\n} from '@/core/events'\nimport { Alias, Facade, Group, Identify, Page, Track } from '@segment/facade'\nimport { Analytics, InitOptions } from '../../analytics'\nimport { LegacySettings } from '../../browser'\nimport { isOffline, isOnline } from '../../core/connection'\nimport { Context, ContextCancelation } from '../../core/context'\nimport { isServer } from '../../core/environment'\nimport { Plugin } from '../../core/plugin'\nimport { attempt } from '../../core/queue/delivery'\nimport { asPromise } from '../../lib/as-promise'\nimport { mergedOptions } from '../../lib/merged-options'\nimport { pWhile } from '../../lib/p-while'\nimport { PriorityQueue } from '../../lib/priority-queue'\nimport { PersistedPriorityQueue } from '../../lib/priority-queue/persisted'\nimport {\n  applyDestinationMiddleware,\n  DestinationMiddlewareFunction,\n} from '../middleware'\nimport { tsubMiddleware } from '../routing-middleware'\nimport { loadIntegration, resolveVersion, unloadIntegration } from './loader'\nimport { LegacyIntegration } from './types'\n\nconst klona = (evt: SegmentEvent): SegmentEvent =>\n  JSON.parse(JSON.stringify(evt))\n\nexport type ClassType<T> = new (...args: unknown[]) => T\n\nasync function flushQueue(\n  xt: Plugin,\n  queue: PriorityQueue<Context>\n): Promise<PriorityQueue<Context>> {\n  const failedQueue: Context[] = []\n\n  if (isOffline()) {\n    return queue\n  }\n\n  await pWhile(\n    () => queue.length > 0 && isOnline(),\n    async () => {\n      const ctx = queue.pop()\n      if (!ctx) {\n        return\n      }\n\n      const result = await attempt(ctx, xt)\n      const success = result instanceof Context\n      if (!success) {\n        failedQueue.push(ctx)\n      }\n    }\n  )\n\n  // re-add failed tasks\n  failedQueue.map((failed) => queue.pushWithBackoff(failed))\n  return queue\n}\n\nexport class LegacyDestination implements Plugin {\n  name: string\n  version: string\n  settings: Record<string, JSONValue>\n  options: InitOptions = {}\n  type: Plugin['type'] = 'destination'\n  middleware: DestinationMiddlewareFunction[] = []\n\n  private _ready = false\n  private _initialized = false\n  private onReady: Promise<unknown> | undefined\n  private onInitialize: Promise<unknown> | undefined\n\n  integration: LegacyIntegration | undefined\n\n  buffer: PriorityQueue<Context>\n  flushing = false\n\n  constructor(\n    name: string,\n    version: string,\n    settings: Record<string, JSONValue> = {},\n    options: InitOptions\n  ) {\n    this.name = name\n    this.version = version\n    this.settings = { ...settings }\n\n    // AJS-Renderer sets an extraneous `type` setting that clobbers\n    // existing type defaults. We need to remove it if it's present\n    if (this.settings['type'] && this.settings['type'] === 'browser') {\n      delete this.settings['type']\n    }\n\n    this.options = options\n    this.buffer = new PersistedPriorityQueue(4, `dest-${name}`)\n\n    this.scheduleFlush()\n  }\n\n  isLoaded(): boolean {\n    return this._ready\n  }\n\n  ready(): Promise<unknown> {\n    return this.onReady ?? Promise.resolve()\n  }\n\n  async load(ctx: Context, analyticsInstance: Analytics): Promise<void> {\n    if (this._ready || this.onReady !== undefined) {\n      return\n    }\n\n    this.integration = await loadIntegration(\n      ctx,\n      analyticsInstance,\n      this.name,\n      this.version,\n      this.settings\n    )\n\n    this.onReady = new Promise((resolve) => {\n      const onReadyFn = (): void => {\n        this._ready = true\n        resolve(true)\n      }\n\n      this.integration!.once('ready', onReadyFn)\n    })\n\n    this.onInitialize = new Promise((resolve) => {\n      const onInit = (): void => {\n        this._initialized = true\n        resolve(true)\n      }\n\n      this.integration!.on('initialize', onInit)\n    })\n\n    try {\n      ctx.stats.increment('analytics_js.integration.invoke', 1, [\n        `method:initialize`,\n        `integration_name:${this.name}`,\n      ])\n\n      this.integration.initialize()\n    } catch (error) {\n      ctx.stats.increment('analytics_js.integration.invoke.error', 1, [\n        `method:initialize`,\n        `integration_name:${this.name}`,\n      ])\n\n      throw error\n    }\n  }\n\n  unload(_ctx: Context, _analyticsInstance: Analytics): Promise<void> {\n    return unloadIntegration(this.name, this.version)\n  }\n\n  addMiddleware(...fn: DestinationMiddlewareFunction[]): void {\n    this.middleware = this.middleware.concat(...fn)\n  }\n\n  shouldBuffer(ctx: Context): boolean {\n    return (\n      // page events can't be buffered because of destinations that automatically add page views\n      ctx.event.type !== 'page' &&\n      (isOffline() || this._ready === false || this._initialized === false)\n    )\n  }\n\n  private async send<T extends Facade>(\n    ctx: Context,\n    clz: ClassType<T>,\n    eventType: 'track' | 'identify' | 'page' | 'alias' | 'group'\n  ): Promise<Context> {\n    if (this.shouldBuffer(ctx)) {\n      this.buffer.push(ctx)\n      this.scheduleFlush()\n      return ctx\n    }\n\n    const plan = this.options?.plan?.track\n    const ev = ctx.event.event\n\n    if (plan && ev && this.name !== 'Segment.io') {\n      // events are always sent to segment (legacy behavior)\n      const planEvent = plan[ev]\n      if (planEvent?.enabled === false) {\n        ctx.updateEvent('integrations', {\n          ...ctx.event.integrations,\n          All: false,\n          'Segment.io': true,\n        })\n        ctx.cancel(\n          new ContextCancelation({\n            retry: false,\n            reason: `Event ${ev} disabled for integration ${this.name} in tracking plan`,\n            type: 'Dropped by plan',\n          })\n        )\n        return ctx\n      } else {\n        ctx.updateEvent('integrations', {\n          ...ctx.event.integrations,\n          ...planEvent?.integrations,\n        })\n      }\n\n      if (planEvent?.enabled && planEvent?.integrations[this.name] === false) {\n        ctx.cancel(\n          new ContextCancelation({\n            retry: false,\n            reason: `Event ${ev} disabled for integration ${this.name} in tracking plan`,\n            type: 'Dropped by plan',\n          })\n        )\n        return ctx\n      }\n    }\n\n    const afterMiddleware = await applyDestinationMiddleware(\n      this.name,\n      klona(ctx.event),\n      this.middleware\n    )\n\n    if (afterMiddleware === null) {\n      return ctx\n    }\n\n    const event = new clz(afterMiddleware, {})\n\n    ctx.stats.increment('analytics_js.integration.invoke', 1, [\n      `method:${eventType}`,\n      `integration_name:${this.name}`,\n    ])\n\n    try {\n      if (this.integration) {\n        await asPromise(\n          this.integration.invoke.call(this.integration, eventType, event)\n        )\n      }\n    } catch (err) {\n      ctx.stats.increment('analytics_js.integration.invoke.error', 1, [\n        `method:${eventType}`,\n        `integration_name:${this.name}`,\n      ])\n      throw err\n    }\n\n    return ctx\n  }\n\n  async track(ctx: Context): Promise<Context> {\n    return this.send(ctx, Track as ClassType<Track>, 'track')\n  }\n\n  async page(ctx: Context): Promise<Context> {\n    if (this.integration?._assumesPageview && !this._initialized) {\n      this.integration.initialize()\n    }\n\n    return this.onInitialize!.then(() => {\n      return this.send(ctx, Page as ClassType<Page>, 'page')\n    })\n  }\n\n  async identify(ctx: Context): Promise<Context> {\n    return this.send(ctx, Identify as ClassType<Identify>, 'identify')\n  }\n\n  async alias(ctx: Context): Promise<Context> {\n    return this.send(ctx, Alias as ClassType<Alias>, 'alias')\n  }\n\n  async group(ctx: Context): Promise<Context> {\n    return this.send(ctx, Group as ClassType<Group>, 'group')\n  }\n\n  private scheduleFlush(): void {\n    if (this.flushing) {\n      return\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    setTimeout(async () => {\n      this.flushing = true\n      this.buffer = await flushQueue(this, this.buffer)\n      this.flushing = false\n\n      if (this.buffer.todo > 0) {\n        this.scheduleFlush()\n      }\n    }, Math.random() * 5000)\n  }\n}\n\nexport async function ajsDestinations(\n  settings: LegacySettings,\n  globalIntegrations: Integrations = {},\n  options?: InitOptions\n): Promise<LegacyDestination[]> {\n  if (isServer()) {\n    return []\n  }\n\n  if (settings.plan) {\n    options = options ?? {}\n    options.plan = settings.plan\n  }\n\n  const routingRules = settings.middlewareSettings?.routingRules ?? []\n  const routingMiddleware = tsubMiddleware(routingRules)\n\n  // merged remote CDN settings with user provided options\n  const integrationOptions = mergedOptions(settings, options ?? {}) as Record<\n    string,\n    JSONObject\n  >\n\n  return Object.entries(settings.integrations)\n    .map(([name, integrationSettings]) => {\n      if (name.startsWith('Segment')) {\n        return\n      }\n\n      const allDisableAndNotDefined =\n        globalIntegrations.All === false &&\n        globalIntegrations[name] === undefined\n\n      if (globalIntegrations[name] === false || allDisableAndNotDefined) {\n        return\n      }\n\n      const { type, bundlingStatus, versionSettings } = integrationSettings\n      // We use `!== 'unbundled'` (versus `=== 'bundled'`) to be inclusive of\n      // destinations without a defined value for `bundlingStatus`\n      const deviceMode =\n        bundlingStatus !== 'unbundled' &&\n        (type === 'browser' ||\n          versionSettings?.componentTypes?.includes('browser'))\n\n      // checking for iterable is a quick fix we need in place to prevent\n      // errors showing Iterable as a failed destiantion. Ideally, we should\n      // fix the Iterable metadata instead, but that's a longer process.\n      if ((!deviceMode && name !== 'Segment.io') || name === 'Iterable') {\n        return\n      }\n\n      const version = resolveVersion(integrationSettings)\n      const destination = new LegacyDestination(\n        name,\n        version,\n        integrationOptions[name],\n        options as object\n      )\n\n      const routing = routingRules.filter(\n        (rule) => rule.destinationName === name\n      )\n      if (routing.length > 0) {\n        destination.addMiddleware(routingMiddleware)\n      }\n\n      return destination\n    })\n    .filter((xt) => xt !== undefined) as LegacyDestination[]\n}\n","import { Analytics } from '../../analytics'\nimport { LegacyIntegrationConfiguration } from '../../browser'\nimport { getCDN } from '../../lib/parse-cdn'\nimport { Context } from '../../core/context'\nimport { User } from '../../core/user'\nimport { loadScript, unloadScript } from '../../lib/load-script'\nimport { LegacyIntegration } from './types'\n\nconst cdn = window.analytics?._cdn ?? getCDN()\nconst path = cdn + '/next-integrations'\n\nfunction normalizeName(name: string): string {\n  return name.toLowerCase().replace('.', '').replace(/\\s+/g, '-')\n}\n\nfunction recordLoadMetrics(fullPath: string, ctx: Context, name: string): void {\n  try {\n    const [metric] =\n      global.window?.performance?.getEntriesByName(fullPath, 'resource') ?? []\n    // we assume everything that took under 100ms is cached\n    metric &&\n      ctx.stats.gauge('legacy_destination_time', Math.round(metric.duration), [\n        name,\n        ...(metric.duration < 100 ? ['cached'] : []),\n      ])\n  } catch (_) {\n    // not available\n  }\n}\n\nexport async function loadIntegration(\n  ctx: Context,\n  analyticsInstance: Analytics,\n  name: string,\n  version: string,\n  settings?: object\n): Promise<LegacyIntegration> {\n  const pathName = normalizeName(name)\n  const fullPath = `${path}/integrations/${pathName}/${version}/${pathName}.dynamic.js.gz`\n\n  try {\n    await loadScript(fullPath)\n    recordLoadMetrics(fullPath, ctx, name)\n  } catch (err) {\n    ctx.stats.gauge('legacy_destination_time', -1, [`plugin:${name}`, `failed`])\n    throw err\n  }\n\n  // @ts-ignore\n  const deps: string[] = window[`${pathName}Deps`]\n  await Promise.all(deps.map((dep) => loadScript(path + dep + '.gz')))\n\n  // @ts-ignore\n  window[`${pathName}Loader`]()\n\n  // @ts-ignore\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let integrationBuilder = window[`${pathName}Integration`] as any\n\n  // GA and Appcues use a different interface to instantiating integrations\n  if (integrationBuilder.Integration) {\n    const analyticsStub = {\n      user: (): User => analyticsInstance.user(),\n      addIntegration: (): void => {},\n    }\n\n    integrationBuilder(analyticsStub)\n    integrationBuilder = integrationBuilder.Integration\n  }\n\n  const integration = new integrationBuilder(settings) as LegacyIntegration\n  integration.analytics = analyticsInstance\n\n  return integration\n}\n\nexport async function unloadIntegration(\n  name: string,\n  version: string\n): Promise<void> {\n  const pathName = normalizeName(name)\n  return unloadScript(\n    `${path}/integrations/${pathName}/${version}/${pathName}.dynamic.js.gz`\n  )\n}\n\nexport function resolveVersion(\n  settings: LegacyIntegrationConfiguration\n): string {\n  return (\n    settings.versionSettings?.override ??\n    settings.versionSettings?.version ??\n    'latest'\n  )\n}\n","import { Context, ContextCancelation } from '../../core/context'\nimport { SegmentEvent } from '../../core/events'\nimport { Plugin } from '../../core/plugin'\nimport { asPromise } from '../../lib/as-promise'\nimport { SegmentFacade, toFacade } from '../../lib/to-facade'\n\nexport interface MiddlewareParams {\n  payload: SegmentFacade\n\n  integrations?: SegmentEvent['integrations']\n  next: (payload: MiddlewareParams['payload'] | null) => void\n}\n\nexport interface DestinationMiddlewareParams {\n  payload: SegmentFacade\n  integration: string\n  next: (payload: MiddlewareParams['payload'] | null) => void\n}\n\nexport type MiddlewareFunction = (middleware: MiddlewareParams) => void\nexport type DestinationMiddlewareFunction = (\n  middleware: DestinationMiddlewareParams\n) => void\n\nexport async function applyDestinationMiddleware(\n  destination: string,\n  evt: SegmentEvent,\n  middleware: DestinationMiddlewareFunction[]\n): Promise<SegmentEvent | null> {\n  async function applyMiddleware(\n    event: SegmentEvent,\n    fn: DestinationMiddlewareFunction\n  ): Promise<SegmentEvent | null> {\n    let nextCalled = false\n    let returnedEvent: SegmentEvent | null = null\n\n    await asPromise(\n      fn({\n        payload: toFacade(event, {\n          clone: true,\n          traverse: false,\n        }),\n        integration: destination,\n        next(evt) {\n          nextCalled = true\n\n          if (evt === null) {\n            returnedEvent = null\n          }\n\n          if (evt) {\n            returnedEvent = evt.obj\n          }\n        },\n      })\n    )\n\n    if (!nextCalled && returnedEvent !== null) {\n      returnedEvent = returnedEvent as SegmentEvent\n      returnedEvent.integrations = {\n        ...event.integrations,\n        [destination]: false,\n      }\n    }\n\n    return returnedEvent\n  }\n\n  for (const md of middleware) {\n    const result = await applyMiddleware(evt, md)\n    if (result === null) {\n      return null\n    }\n    evt = result\n  }\n\n  return evt\n}\n\nexport function sourceMiddlewarePlugin(\n  fn: MiddlewareFunction,\n  integrations: SegmentEvent['integrations']\n): Plugin {\n  async function apply(ctx: Context): Promise<Context> {\n    let nextCalled = false\n\n    await asPromise(\n      fn({\n        payload: toFacade(ctx.event, {\n          clone: true,\n          traverse: false,\n        }),\n        integrations: integrations ?? {},\n        next(evt) {\n          nextCalled = true\n          if (evt) {\n            ctx.event = evt.obj\n          }\n        },\n      })\n    )\n\n    if (!nextCalled) {\n      throw new ContextCancelation({\n        retry: false,\n        type: 'middleware_cancellation',\n        reason: 'Middleware `next` function skipped',\n      })\n    }\n\n    return ctx\n  }\n\n  return {\n    name: `Source Middleware ${fn.name}`,\n    type: 'before',\n    version: '0.1.0',\n\n    isLoaded: (): boolean => true,\n    load: (ctx): Promise<Context> => Promise.resolve(ctx),\n\n    track: apply,\n    page: apply,\n    identify: apply,\n    alias: apply,\n    group: apply,\n  }\n}\n","import * as tsub from '@segment/tsub'\nimport { Rule } from '@segment/tsub/dist/store'\nimport { DestinationMiddlewareFunction } from '../middleware'\n\nexport type RoutingRule = Rule\n\nexport const tsubMiddleware = (\n  rules: RoutingRule[]\n): DestinationMiddlewareFunction => ({ payload, integration, next }): void => {\n  const store = new tsub.Store(rules)\n  const rulesToApply = store.getRulesByDestinationName(integration)\n\n  rulesToApply.forEach((rule) => {\n    const { matchers, transformers } = rule\n\n    for (let i = 0; i < matchers.length; i++) {\n      if (tsub.matches(payload.obj, matchers[i])) {\n        payload.obj = tsub.transform(payload.obj, transformers[i])\n\n        if (payload.obj === null) {\n          return next(null)\n        }\n      }\n    }\n  })\n\n  next(payload)\n}\n"],"names":[],"sourceRoot":""}