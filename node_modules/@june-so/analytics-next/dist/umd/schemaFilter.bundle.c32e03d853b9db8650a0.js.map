{"version":3,"file":"schemaFilter.bundle.c32e03d853b9db8650a0.js","mappings":";;;;;;;;;;;;;;;AAMA,SAAS,0BAA0B,CACjC,IAAe,EACf,QAAwB;;IAExB,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;QAC/B,OAAO,EAAE;KACV;IAED,IAAM,oBAAoB,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,CAChE,UAAC,CAAC,IAAK,WAAI,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,KAAK,EAA9B,CAA8B,CACtC;IAED,0EAA0E;IAC1E,0FAA0F;IAC1F,IAAM,qBAAqB,GAAa,EAAE,CACzC;IAAA,OAAC,QAAQ,CAAC,aAAa,mCAAI,EAAE,CAAC,CAAC,OAAO,CAAC,UAAC,CAAe;QACtD,oBAAoB,CAAC,OAAO,CAAC,UAAC,GAAG;YAC/B,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;gBAChD,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;aACnC;QACH,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,OAAO,OAAC,QAAQ,CAAC,aAAa,mCAAI,EAAE,CAAC,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,CAAC;QAClD,0FAA0F;QAC1F,IAAI,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE;YAC/B,IAAI,qBAAqB,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;gBAC1C,0FAA0F;gBAC1F,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,OAAO;gBACjC,gEAAgE;gBAChE,UAAC,GAAG,IAAK,QAAC,GAAG,CAAI,CAAC,CAAC,IAAI,SAAI,GAAG,CAAC,aAAe,CAAC,GAAG,KAAK,CAAC,EAA/C,CAA+C,CACzD;aACF;SACF;QACD,OAAO,GAAG;IACZ,CAAC,EAAE,EAAE,CAAC;AACR,CAAC;AAEM,SAAS,YAAY,CAC1B,KAA+C,EAC/C,QAAwB;IAExB,SAAS,MAAM,CAAC,GAAY;QAC1B,IAAM,IAAI,GAAG,KAAK;QAClB,IAAM,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK;QAE1B,IAAI,IAAI,IAAI,EAAE,EAAE;YACd,IAAM,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC;YAC1B,IAAI,UAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,OAAO,MAAK,KAAK,EAAE;gBAChC,GAAG,CAAC,WAAW,CAAC,cAAc,EAAE,oGAC3B,GAAG,CAAC,KAAK,CAAC,YAAY,KACzB,GAAG,EAAE,KAAK,EACV,YAAY,EAAE,IAAI,IAClB;gBACF,OAAO,GAAG;aACX;iBAAM;gBACL,IAAM,eAAe,GAAG,0BAA0B,CAAC,SAAS,EAAE,QAAQ,CAAC;gBAEvE,GAAG,CAAC,WAAW,CAAC,cAAc,EAAE,oJAC3B,GAAG,CAAC,KAAK,CAAC,YAAY,GACtB,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,YAAY,GACvB,eAAe,EAClB;aACH;SACF;QAED,OAAO,GAAG;IACZ,CAAC;IAED,OAAO;QACL,IAAI,EAAE,eAAe;QACrB,OAAO,EAAE,OAAO;QAChB,QAAQ,EAAE,cAAM,WAAI,EAAJ,CAAI;QACpB,IAAI,EAAE,cAAM,cAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB;QAC7B,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE,MAAM;QACb,KAAK,EAAE,MAAM;QACb,QAAQ,EAAE,MAAM;QAChB,KAAK,EAAE,MAAM;KACd;AACH,CAAC","sources":["webpack://@june-so/analytics-next/./src/plugins/schema-filter/index.ts"],"sourcesContent":["import { LegacySettings } from '../../browser'\nimport { Context } from '../../core/context'\nimport { PlanEvent } from '../../core/events/interfaces'\nimport { Plugin } from '../../core/plugin'\nimport { RemotePlugin } from '../remote-loader'\n\nfunction disabledActionDestinations(\n  plan: PlanEvent,\n  settings: LegacySettings\n): { [destination: string]: string[] } {\n  if (!plan || !Object.keys(plan)) {\n    return {}\n  }\n\n  const disabledIntegrations = Object.keys(plan.integrations).filter(\n    (i) => plan.integrations[i] === false\n  )\n\n  // This accounts for cases like Fullstory, where the settings.integrations\n  // contains a \"Fullstory\" object but settings.remotePlugins contains \"Fullstory (Actions)\"\n  const disabledRemotePlugins: string[] = []\n  ;(settings.remotePlugins ?? []).forEach((p: RemotePlugin) => {\n    disabledIntegrations.forEach((int) => {\n      if (p.name.includes(int) || int.includes(p.name)) {\n        disabledRemotePlugins.push(p.name)\n      }\n    })\n  })\n\n  return (settings.remotePlugins ?? []).reduce((acc, p) => {\n    // @ts-expect-error element implicitly has an 'any' type because p.settings is a JSONValue\n    if (p.settings['subscriptions']) {\n      if (disabledRemotePlugins.includes(p.name)) {\n        // @ts-expect-error element implicitly has an 'any' type because p.settings is a JSONValue\n        p.settings['subscriptions'].forEach(\n          // @ts-expect-error parameter 'sub' implicitly has an 'any' type\n          (sub) => (acc[`${p.name} ${sub.partnerAction}`] = false)\n        )\n      }\n    }\n    return acc\n  }, {})\n}\n\nexport function schemaFilter(\n  track: { [key: string]: PlanEvent } | undefined,\n  settings: LegacySettings\n): Plugin {\n  function filter(ctx: Context): Context {\n    const plan = track\n    const ev = ctx.event.event\n\n    if (plan && ev) {\n      const planEvent = plan[ev]\n      if (planEvent?.enabled === false) {\n        ctx.updateEvent('integrations', {\n          ...ctx.event.integrations,\n          All: false,\n          'Segment.io': true,\n        })\n        return ctx\n      } else {\n        const disabledActions = disabledActionDestinations(planEvent, settings)\n\n        ctx.updateEvent('integrations', {\n          ...ctx.event.integrations,\n          ...planEvent?.integrations,\n          ...disabledActions,\n        })\n      }\n    }\n\n    return ctx\n  }\n\n  return {\n    name: 'Schema Filter',\n    version: '0.1.0',\n    isLoaded: () => true,\n    load: () => Promise.resolve(),\n    type: 'before',\n    page: filter,\n    alias: filter,\n    track: filter,\n    identify: filter,\n    group: filter,\n  }\n}\n"],"names":[],"sourceRoot":""}