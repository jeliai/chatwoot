import { Analytics, InitOptions } from './analytics';
declare type FunctionsOf<T> = {
    [k in keyof T]: T[k] extends Function ? T[k] : never;
};
declare type AnalyticsMethods = Pick<Analytics, keyof FunctionsOf<Analytics>>;
declare type StandaloneAnalytics = Analytics & {
    _loadOptions?: InitOptions;
    _writeKey?: string;
    _cdn?: string;
    [Symbol.iterator](): Iterator<[keyof AnalyticsMethods, ...unknown[]]>;
};
declare global {
    interface Window {
        analytics: StandaloneAnalytics;
    }
}
export declare function install(): Promise<void>;
export {};
