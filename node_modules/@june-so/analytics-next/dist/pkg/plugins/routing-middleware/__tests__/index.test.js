/* eslint-disable @typescript-eslint/camelcase */
import { tsubMiddleware } from '..';
import { toFacade } from '../../../lib/to-facade';
describe('tsub middleware', function () {
    var rules = [
        {
            matchers: [
                {
                    ir: '["=","event",{"value":"Item Impression"}]',
                    type: 'fql',
                },
            ],
            scope: 'destinations',
            target_type: 'workspace::project::destination',
            transformers: [[{ type: 'drop' }]],
            destinationName: 'Google Tag Manager',
        },
    ];
    var middleware = tsubMiddleware(rules);
    it('can apply tsub operations', function () {
        var payload;
        var next = jest.fn().mockImplementation(function (transformed) {
            payload = transformed === null || transformed === void 0 ? void 0 : transformed.obj;
        });
        middleware({
            integration: 'Google Tag Manager',
            next: next,
            payload: toFacade({
                type: 'track',
                event: 'Item Impression',
            }),
        });
        expect(next).toHaveBeenCalled();
        expect(payload).toMatchInlineSnapshot("null");
    });
    it("won't match different destinations", function () {
        var payload;
        var next = jest.fn().mockImplementation(function (transformed) {
            payload = transformed === null || transformed === void 0 ? void 0 : transformed.obj;
        });
        middleware({
            integration: 'Google Analytics',
            next: next,
            payload: toFacade({
                type: 'track',
                event: 'Item Impression',
            }),
        });
        expect(next).toHaveBeenCalled();
        expect(payload).toMatchInlineSnapshot("\n      Object {\n        \"event\": \"Item Impression\",\n        \"type\": \"track\",\n      }\n    ");
    });
});
//# sourceMappingURL=index.test.js.map