import cookie from 'js-cookie';
import { tld } from '../tld';
import assert from 'assert';
describe('topDomain', function () {
    beforeEach(function () {
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        var cookies = {};
        // @ts-ignore
        jest.spyOn(cookie, 'set').mockImplementation(function (key, val, opts) {
            var _a, _b;
            var parts = (_b = (_a = opts === null || opts === void 0 ? void 0 : opts.domain) === null || _a === void 0 ? void 0 : _a.split('.')) !== null && _b !== void 0 ? _b : [];
            if (parts[1] === 'co')
                return;
            cookies[key] = val;
            return val;
        });
        // @ts-ignore
        jest.spyOn(cookie, 'get').mockImplementation(function (key) {
            return cookies[key];
        });
    });
    it('should match the following urls', function () {
        assert.strictEqual(tld(new URL('http://www.google.com')), 'google.com');
        assert.strictEqual(tld(new URL('http://gist.github.com/calvinfo/some_file')), 'github.com');
        assert.strictEqual(tld(new URL('http://localhost:3000')), undefined);
        assert.strictEqual(tld(new URL('https://google.com:443/stuff')), 'google.com');
        assert.strictEqual(tld(new URL('http://dev:3000')), undefined);
        assert.strictEqual(tld(new URL('http://app.jut.io')), 'jut.io');
        assert.strictEqual(tld(new URL('http://app.segment.io')), 'segment.io');
    });
});
//# sourceMappingURL=tld.test.js.map